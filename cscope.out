cscope 15 $HOME/Studio/kernel/haproxy-1.4.9 -q 0000010957 0001617693
	@contrib/base64/base64rev-gen.c

13 
	~<°dio.h
>

15 c⁄° 
	gba£64èb
[65]="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";

16 
	gba£64ªv
[128];

18 
	#ba£
 '#'

	)

19 
	#B64MAX
 64

	)

20 
	#B64PADV
 
B64MAX


	)

22 
	$maö
() {

23 *
p
, 
c
;

24 
i
, 
mö
 = 255, 
max
 = 0;

26 
i
 = 0; i < (
ba£64ªv
); i++)

27 
ba£64ªv
[
i
] = 
ba£
;

29 
i
 = 0; i < 
B64MAX
; i++) {

30 
c
 = 
ba£64èb
[
i
];

32 i‡(
mö
 > 
c
)

33 
mö
 = 
c
;

35 i‡(
max
 < 
c
)

36 
max
 = 
c
;

39 
i
 = 0; i < 
B64MAX
; i++) {

40 
c
 = 
ba£64èb
[
i
];

42 i‡(
ba£
+
i
+1 > 127) {

43 
	`¥ötf
("Wr⁄g ba£ vÆuê@%d\n", 
i
);

47 
ba£64ªv
[
c
 - 
mö
] = 
ba£
+
i
+1;

50 
ba£64ªv
['=' - 
mö
] = 
ba£
 + 
B64PADV
;

52 
ba£64ªv
[
max
 - 
mö
 + 1] = '\0';

54 
	`¥ötf
("#deföêB64BASE '%c'\n", 
ba£
);

55 
	`¥ötf
("#deföêB64CMIN '%c'\n", 
mö
);

56 
	`¥ötf
("#deföêB64CMAX '%c'\n", 
max
);

57 
	`¥ötf
("#deföêB64PADV %u\n", 
B64PADV
);

59 
p
 = 
ba£64ªv
;

60 
	`¥ötf
("const char base64rev[]=\"");

61 
p
 = 
ba£64ªv
; *p;Ö++) {

62 i‡(*
p
 == '\\')

63 
	`¥ötf
("\\%c", *
p
);

65 
	`¥ötf
("%c", *
p
);

67 
	`¥ötf
("\"\n");

70 
	}
}

	@contrib/halog/fgets2-64.c

19 
	~<°dlib.h
>

20 
	~<°rög.h
>

21 
	~<°dio.h
>

22 
	~<uni°d.h
>

25 
ölöe
 
	$has_zîo
(
x
)

27 
y
;

40 
y
 = 
x
;

41 
x
 = ~x & 0x80808080;

42 
y
 &= 0x7F7F7F7F;

43 
y
 -= 0x01010101;

44 
y
 &
x
;

45  !!
y
;

46 
	}
}

50 
ölöe
 
	$has_zîo64
(
x
)

52 
y
;

54 
y
 = 
x
;

55 
x
 = ~x & 0x8080808080808080ULL;

56 
y
 &= 0x7F7F7F7F7F7F7F7FULL;

57 
y
 -= 0x0101010101010101ULL;

58 
y
 &
x
;

59  !!
y
;

60 
	}
}

62 
	#FGETS2_BUFSIZE
 (256*1024)

	)

63 c⁄° *
	$fgës2
(
FILE
 *
°ªam
)

65 
buf„r
[
FGETS2_BUFSIZE
 + 9];

66 *
íd
 = 
buf„r
;

67 *
löe
 = 
buf„r
;

69 *
√xt
;

70 
ªt
;

72 
√xt
 = 
löe
;

80 i‡(
√xt
 <(
íd
-12)) {

82 ((()
√xt
) & 3) && *next != '\n')

83 
√xt
++;

86 i‡(((()
√xt
Ë& 4Ë&& !
	`has_zîo
(*(*)next ^ 0x0A0A0A0AU))

87 
√xt
 += 4;

91 
√xt
 <(
íd
-68)) {

92 i‡(
	`has_zîo64
(*(*)
√xt
 ^ 0x0A0A0A0A0A0A0A0AULL))

94 
√xt
 += 8;

95 i‡(
	`has_zîo64
(*(*)
√xt
 ^ 0x0A0A0A0A0A0A0A0AULL))

97 
√xt
 += 8;

98 i‡(
	`has_zîo64
(*(*)
√xt
 ^ 0x0A0A0A0A0A0A0A0AULL))

100 
√xt
 += 8;

101 i‡(
	`has_zîo64
(*(*)
√xt
 ^ 0x0A0A0A0A0A0A0A0AULL))

103 
√xt
 += 8;

104 i‡(
	`has_zîo64
(*(*)
√xt
 ^ 0x0A0A0A0A0A0A0A0AULL))

106 
√xt
 += 8;

107 i‡(
	`has_zîo64
(*(*)
√xt
 ^ 0x0A0A0A0A0A0A0A0AULL))

109 
√xt
 += 8;

110 i‡(
	`has_zîo64
(*(*)
√xt
 ^ 0x0A0A0A0A0A0A0A0AULL))

112 
√xt
 += 8;

113 i‡(
	`has_zîo64
(*(*)
√xt
 ^ 0x0A0A0A0A0A0A0A0AULL))

115 
√xt
 += 8;

119 i‡(!
	`has_zîo
(*(*)
√xt
 ^ 0x0A0A0A0AU))

120 
√xt
 += 4;

125 
√xt
 < 
íd
) {

126 i‡(*
√xt
 == '\n') {

127 c⁄° *
°¨t
 = 
löe
;

129 *
√xt
 = '\0';

130 
löe
 = 
√xt
 + 1;

131  
°¨t
;

133 
√xt
++;

140 i‡(
löe
 > 
buf„r
) {

141 i‡(
íd
 !
löe
)

142 
	`memmove
(
buf„r
, 
löe
, 
íd
 -Üine);

143 
íd
 = 
buf„r
 + (íd - 
löe
);

144 
√xt
 = 
íd
;

145 
löe
 = 
buf„r
;

147 i‡(
íd
 =
buf„r
 + 
FGETS2_BUFSIZE
)

148  
NULL
;

151 
ªt
 = 
	`ªad
(
	`fûío
(
°ªam
), 
íd
, 
buf„r
 + 
FGETS2_BUFSIZE
 -Énd);

153 i‡(
ªt
 <= 0) {

154 i‡(
íd
 =
löe
)

155  
NULL
;

157 *
íd
 = '\0';

158  
löe
;

161 
íd
 +
ªt
;

164 
	}
}

166 #ifde‡
BENCHMARK


167 
	$maö
() {

168 c⁄° *
p
;

169 
löes
 = 0;

171 (
p
=
	`fgës2
(
°dö
)))

172 
löes
++;

173 
	`¥ötf
("löes=%d\n", 
löes
);

175 
	}
}

	@contrib/halog/fgets2.c

19 
	~<°dlib.h
>

20 
	~<°rög.h
>

21 
	~<°dio.h
>

22 
	~<uni°d.h
>

25 
ölöe
 
	$has_zîo
(
x
)

27 
y
;

40 
y
 = 
x
;

41 
x
 = ~x & 0x80808080;

42 
y
 &= 0x7F7F7F7F;

43 
y
 -= 0x01010101;

44 
y
 &
x
;

45  !!
y
;

46 
	}
}

49 
	#FGETS2_BUFSIZE
 (256*1024)

	)

50 c⁄° *
	$fgës2
(
FILE
 *
°ªam
)

52 
buf„r
[
FGETS2_BUFSIZE
 + 5];

53 *
íd
 = 
buf„r
;

54 *
löe
 = 
buf„r
;

56 *
√xt
;

57 
ªt
;

59 
√xt
 = 
löe
;

66 
√xt
 < 
íd
 && ((()next) & 3) && *next != '\n')

67 
√xt
++;

70 
√xt
 <(
íd
-32)) {

71 i‡(
	`has_zîo
(*(*)
√xt
 ^ 0x0A0A0A0A))

73 
√xt
 += 4;

74 i‡(
	`has_zîo
(*(*)
√xt
 ^ 0x0A0A0A0A))

76 
√xt
 += 4;

77 i‡(
	`has_zîo
(*(*)
√xt
 ^ 0x0A0A0A0A))

79 
√xt
 += 4;

80 i‡(
	`has_zîo
(*(*)
√xt
 ^ 0x0A0A0A0A))

82 
√xt
 += 4;

83 i‡(
	`has_zîo
(*(*)
√xt
 ^ 0x0A0A0A0A))

85 
√xt
 += 4;

86 i‡(
	`has_zîo
(*(*)
√xt
 ^ 0x0A0A0A0A))

88 
√xt
 += 4;

89 i‡(
	`has_zîo
(*(*)
√xt
 ^ 0x0A0A0A0A))

91 
√xt
 += 4;

92 i‡(
	`has_zîo
(*(*)
√xt
 ^ 0x0A0A0A0A))

94 
√xt
 += 4;

100 
√xt
 < 
íd
) {

101 i‡(*
√xt
 == '\n') {

102 c⁄° *
°¨t
 = 
löe
;

104 *
√xt
 = '\0';

105 
löe
 = 
√xt
 + 1;

106  
°¨t
;

108 
√xt
++;

115 i‡(
löe
 > 
buf„r
) {

116 i‡(
íd
 !
löe
)

117 
	`memmove
(
buf„r
, 
löe
, 
íd
 -Üine);

118 
íd
 = 
buf„r
 + (íd - 
löe
);

119 
√xt
 = 
íd
;

120 
löe
 = 
buf„r
;

122 i‡(
íd
 =
buf„r
 + 
FGETS2_BUFSIZE
)

123  
NULL
;

126 
ªt
 = 
	`ªad
(
	`fûío
(
°ªam
), 
íd
, 
buf„r
 + 
FGETS2_BUFSIZE
 -Énd);

128 i‡(
ªt
 <= 0) {

129 i‡(
íd
 =
löe
)

130  
NULL
;

132 *
íd
 = '\0';

133  
löe
;

136 
íd
 +
ªt
;

139 
	}
}

141 #ifde‡
BENCHMARK


142 
	$maö
() {

143 c⁄° *
p
;

144 
löes
 = 0;

146 (
p
=
	`fgës2
(
°dö
)))

147 
löes
++;

148 
	`¥ötf
("löes=%d\n", 
löes
);

150 
	}
}

	@contrib/halog/halog.c

13 
	~<î∫o.h
>

14 
	~<f˙é.h
>

15 
	~<°dio.h
>

16 
	~<°dlib.h
>

17 
	~<sy¶og.h
>

18 
	~<°rög.h
>

19 
	~<uni°d.h
>

20 
	~<˘y≥.h
>

22 
	~<eb32åì.h
>

23 
	~<eb64åì.h
>

24 
	~<ebi°ªe.h
>

25 
	~<eb°åì.h
>

27 
	#SOURCE_FIELD
 5

	)

28 
	#ACCEPT_FIELD
 6

	)

29 
	#SERVER_FIELD
 8

	)

30 
	#TIME_FIELD
 9

	)

31 
	#STATUS_FIELD
 10

	)

32 
	#TERM_CODES_FIELD
 14

	)

33 
	#CONN_FIELD
 15

	)

34 
	#METH_FIELD
 17

	)

35 
	#URL_FIELD
 18

	)

36 
	#MAXLINE
 16384

	)

37 
	#QBITS
 4

	)

39 
	#SKIP_CHAR
(
p
,
c
Ëdÿ{ 1Ëi‡(!*pË; i‡(*’++Ë=cË; } 0)

	)

42 
eb_roŸ
 
	gtimîs
[5] = {

43 
EB_ROOT_UNIQUE
, EB_ROOT_UNIQUE, EB_ROOT_UNIQUE,

44 
EB_ROOT_UNIQUE
, EB_ROOT_UNIQUE,

47 
	stimî
 {

48 
eb32_node
 
	mnode
;

49 
	mcou¡
;

52 
	s§v_°
 {

53 
	m°_˙t
[6];

54 
	mnb_˘
, 
	mnb_π
, 
	mnb_ok
;

55 
	mcum_˘
, 
	mcum_π
;

56 
ebmb_node
 
	mnode
;

60 
	suæ_°©
 {

62 
eb±_node
 
	muæ
;

63 
eb64_node
 
	mvÆ
;

64 } 
	mnode
;

65 *
	muæ
;

66 
	mtŸÆ_time
;

67 
	mtŸÆ_time_ok
;

68 
	mnb_îr
, 
	mnb_ªq
;

71 
	#FILT_COUNT_ONLY
 0x01

	)

72 
	#FILT_INVERT
 0x02

	)

73 
	#FILT_QUIET
 0x04

	)

74 
	#FILT_ERRORS_ONLY
 0x08

	)

75 
	#FILT_ACC_DELAY
 0x10

	)

76 
	#FILT_ACC_COUNT
 0x20

	)

77 
	#FILT_GRAPH_TIMERS
 0x40

	)

78 
	#FILT_PERCENTILE
 0x80

	)

79 
	#FILT_TIME_RESP
 0x100

	)

81 
	#FILT_INVERT_ERRORS
 0x200

	)

82 
	#FILT_INVERT_TIME_RESP
 0x400

	)

84 
	#FILT_COUNT_STATUS
 0x800

	)

85 
	#FILT_COUNT_SRV_STATUS
 0x1000

	)

86 
	#FILT_COUNT_TERM_CODES
 0x2000

	)

88 
	#FILT_COUNT_URL_ONLY
 0x004000

	)

89 
	#FILT_COUNT_URL_COUNT
 0x008000

	)

90 
	#FILT_COUNT_URL_ERR
 0x010000

	)

91 
	#FILT_COUNT_URL_TTOT
 0x020000

	)

92 
	#FILT_COUNT_URL_TAVG
 0x040000

	)

93 
	#FILT_COUNT_URL_TTOTO
 0x080000

	)

94 
	#FILT_COUNT_URL_TAVGO
 0x100000

	)

95 
	#FILT_COUNT_URL_ANY
 (
FILT_COUNT_URL_ONLY
|
FILT_COUNT_URL_COUNT
|
FILT_COUNT_URL_ERR
| \

96 
FILT_COUNT_URL_TTOT
|
FILT_COUNT_URL_TAVG
|
FILT_COUNT_URL_TTOTO
|
FILT_COUNT_URL_TAVGO
)

	)

98 
	gfûãr
 = 0;

99 
	gfûãr_övît
 = 0;

100 c⁄° *
	glöe
;

102 c⁄° *
fgës2
(
FILE
 *
°ªam
);

104 
	$dõ
(c⁄° *
msg
)

106 
	`Ârötf
(
°dîr
,

111 
msg
 ? msg : ""

113 
	`exô
(1);

114 
	}
}

118 c⁄° *
	$fõld_°›
(c⁄° *
p
)

120 
c
;

123 
c
 = *(
p
++);

124 i‡(
c
 > ' ')

126 i‡(
c
 == ' ' || c == '\t' || c == 0)

129  
p
 - 1;

130 
	}
}

136 c⁄° *
	$fõld_°¨t
(c⁄° *
p
, 
fõld
)

138 
c
;

142 
c
 = *
p
;

143 i‡(
c
 > ' ')

145 i‡(
c
 == ' ' || c == '\t')

146 
√xt
;

147 i‡(!
c
)

148  
p
;

151 
√xt
:

152 
p
++;

156 
fõld
--;

157 i‡(!
fõld
)

158  
p
;

162 
c
 = *(
p
++);

163 i‡(
c
 > ' ')

165 i‡(
c
 == ' ' || c == '\t')

167 i‡(
c
 == '\0')

168  
p
;

171 
	}
}

174 
ölöe
 
	$qu™tify_u32
(
i
, 
bôs
)

176 
high
;

178 i‡(!
bôs
)

181 i‡(
i
)

182 
high
 = 
	`Ês_auto
(
i
);

184 
high
 = 0;

186 i‡(
high
 <
bôs
)

187  
i
;

189  
i
 & ~((1 << (
high
 - 
bôs
)) - 1);

190 
	}
}

194 
ölöe
 
	$qu™tify
(
i
, 
bôs
)

196 i‡(
i
 >= 0)

197  
	`qu™tify_u32
(
i
, 
bôs
);

199  -
	`qu™tify_u32
(-
i
, 
bôs
);

200 
	}
}

208 
timî
 *
	$ö£π_timî
(
eb_roŸ
 *
r
, 
timî
 **
Æloc
, 
v
)

210 
timî
 *
t
 = *
Æloc
;

211 
eb32_node
 *
n
;

213 i‡(!
t
) {

214 
t
 = 
	`ˇŒoc
((*t), 1);

215 i‡(
	`u∆ikñy
(!
t
)) {

216 
	`Ârötf
(
°dîr
, "%s:ÇŸÉnough mem‹y\n", 
__FUNCTION__
);

217 
	`exô
(1);

220 
t
->
node
.
key
 = 
	`qu™tify
(
v
, 
QBITS
);

222 
n
 = 
	`eb32i_ö£π
(
r
, &
t
->
node
);

223 i‡(
n
 =&
t
->
node
)

224 
t
 = 
NULL
;

226 *
Æloc
 = 
t
;

227  
	`c⁄èöî_of
(
n
, 
timî
, 
node
);

228 
	}
}

236 
timî
 *
	$ö£π_vÆue
(
eb_roŸ
 *
r
, 
timî
 **
Æloc
, 
v
)

238 
timî
 *
t
 = *
Æloc
;

239 
eb32_node
 *
n
;

241 i‡(!
t
) {

242 
t
 = 
	`ˇŒoc
((*t), 1);

243 i‡(
	`u∆ikñy
(!
t
)) {

244 
	`Ârötf
(
°dîr
, "%s:ÇŸÉnough mem‹y\n", 
__FUNCTION__
);

245 
	`exô
(1);

248 
t
->
node
.
key
 = 
v
;

250 
n
 = 
	`eb32i_ö£π
(
r
, &
t
->
node
);

251 i‡(
n
 =&
t
->
node
)

252 
t
 = 
NULL
;

254 *
Æloc
 = 
t
;

255  
	`c⁄èöî_of
(
n
, 
timî
, 
node
);

256 
	}
}

258 
	$°r2ic
(c⁄° *
s
)

260 
i
 = 0;

261 
j
, 
k
;

263 i‡(*
s
 != '-') {

266 
j
 = (*
s
++) - '0';

267 
k
 = 
i
 * 10;

268 i‡(()
j
 > 9)

270 
i
 = 
k
 + 
j
;

274 
s
++;

276 
j
 = (*
s
++) - '0';

277 
k
 = 
i
 * 10;

278 i‡(()
j
 > 9)

280 
i
 = 
k
 - 
j
;

284  
i
;

285 
	}
}

289 
ölöe
 
	$__°æ2ui
(c⁄° *
s
, 
Àn
)

291 
i
 = 0;

292 
Àn
-- > 0) {

293 
i
 = i * 10 - '0';

294 
i
 +()*
s
++;

296  
i
;

297 
	}
}

299 
	$°æ2ui
(c⁄° *
s
, 
Àn
)

301  
	`__°æ2ui
(
s
, 
Àn
);

302 
	}
}

308 
	$c⁄vît_d©e
(c⁄° *
fõld
)

310 
h
, 
m
, 
s
, 
ms
;

311 
c
;

312 c⁄° *
b
, *
e
;

314 
h
 = 
m
 = 
s
 = 
ms
 = 0;

315 
e
 = 
fõld
;

319 
c
 = *(
e
++);

320 i‡(
c
 == ':')

322 i‡(!
c
)

323 
out_îr
;

327 
b
 = 
e
;

329 
c
 = *(
e
++) - '0';

330 i‡(
c
 > 9)

332 
h
 = h * 10 + 
c
;

334 i‡(
c
 == ()(0 - '0'))

335 
out_îr
;

338 
b
 = 
e
;

340 
c
 = *(
e
++) - '0';

341 i‡(
c
 > 9)

343 
m
 = m * 10 + 
c
;

345 i‡(
c
 == ()(0 - '0'))

346 
out_îr
;

349 
b
 = 
e
;

351 
c
 = *(
e
++) - '0';

352 i‡(
c
 > 9)

354 
s
 = s * 10 + 
c
;

356 i‡(
c
 == ()(0 - '0'))

357 
out_îr
;

360 i‡(
c
 == ()('.' - '0')) {

362 
b
 = 
e
;

364 
c
 = *(
e
++) - '0';

365 i‡(
c
 > 9)

367 
ms
 = m†* 10 + 
c
;

369 i‡(
c
 == ()(0 - '0'))

370 
out_îr
;

372  (((
h
 * 60Ë+ 
m
Ë* 60 + 
s
Ë* 1000 + 
ms
;

373 
out_îr
:

375 
	}
}

377 
	$åunˇãd_löe
(
löíum
, c⁄° *
löe
)

379 i‡(!(
fûãr
 & 
FILT_QUIET
))

380 
	`Ârötf
(
°dîr
, "TrunˇãdÜöê%d: %s\n", 
löíum
, 
löe
);

381 
	}
}

383 
	$maö
(
¨gc
, **
¨gv
)

385 c⁄° *
b
, *
e
, *
p
;

386 c⁄° *
ouçut_fûe
 = 
NULL
;

387 
f
, 
tŸ
, 
œ°
, 
löíum
, 
îr
, 
∑r£_îr
;

388 
timî
 *
t
 = 
NULL
, *
t2
;

389 
eb32_node
 *
n
;

390 
uæ_°©
 *
u°©
 = 
NULL
;

391 
eb±_node
 *
eb±_ﬁd
;

392 
vÆ
, 
ã°
;

393 
¨øy
[5];

394 
fûãr_acc_dñay
 = 0, 
fûãr_acc_cou¡
 = 0;

395 
fûãr_time_ª•
 = 0;

396 
skù_fõlds
 = 1;

398 
¨gc
--; 
¨gv
++;

399 
¨gc
 > 0) {

400 i‡(*
¨gv
[0] != '-')

403 i‡(
	`°rcmp
(
¨gv
[0], "-ad") == 0) {

404 i‡(
¨gc
 < 2Ë
	`dõ
("missing option for -ad");

405 
¨gc
--; 
¨gv
++;

406 
fûãr
 |
FILT_ACC_DELAY
;

407 
fûãr_acc_dñay
 = 
	`©ﬁ
(*
¨gv
);

409 i‡(
	`°rcmp
(
¨gv
[0], "-ac") == 0) {

410 i‡(
¨gc
 < 2Ë
	`dõ
("missing option for -ac");

411 
¨gc
--; 
¨gv
++;

412 
fûãr
 |
FILT_ACC_COUNT
;

413 
fûãr_acc_cou¡
 = 
	`©ﬁ
(*
¨gv
);

415 i‡(
	`°rcmp
(
¨gv
[0], "-rt") == 0) {

416 i‡(
¨gc
 < 2Ë
	`dõ
("missing option for -rt");

417 
¨gc
--; 
¨gv
++;

418 
fûãr
 |
FILT_TIME_RESP
;

419 
fûãr_time_ª•
 = 
	`©ﬁ
(*
¨gv
);

421 i‡(
	`°rcmp
(
¨gv
[0], "-RT") == 0) {

422 i‡(
¨gc
 < 2Ë
	`dõ
("missing option for -RT");

423 
¨gc
--; 
¨gv
++;

424 
fûãr
 |
FILT_TIME_RESP
 | 
FILT_INVERT_TIME_RESP
;

425 
fûãr_time_ª•
 = 
	`©ﬁ
(*
¨gv
);

427 i‡(
	`°rcmp
(
¨gv
[0], "-s") == 0) {

428 i‡(
¨gc
 < 2Ë
	`dõ
("missing option for -s");

429 
¨gc
--; 
¨gv
++;

430 
skù_fõlds
 = 
	`©ﬁ
(*
¨gv
);

432 i‡(
	`°rcmp
(
¨gv
[0], "-e") == 0)

433 
fûãr
 |
FILT_ERRORS_ONLY
;

434 i‡(
	`°rcmp
(
¨gv
[0], "-E") == 0)

435 
fûãr
 |
FILT_ERRORS_ONLY
 | 
FILT_INVERT_ERRORS
;

436 i‡(
	`°rcmp
(
¨gv
[0], "-c") == 0)

437 
fûãr
 |
FILT_COUNT_ONLY
;

438 i‡(
	`°rcmp
(
¨gv
[0], "-q") == 0)

439 
fûãr
 |
FILT_QUIET
;

440 i‡(
	`°rcmp
(
¨gv
[0], "-v") == 0)

441 
fûãr_övît
 = !filter_invert;

442 i‡(
	`°rcmp
(
¨gv
[0], "-gt") == 0)

443 
fûãr
 |
FILT_GRAPH_TIMERS
;

444 i‡(
	`°rcmp
(
¨gv
[0], "-pct") == 0)

445 
fûãr
 |
FILT_PERCENTILE
;

446 i‡(
	`°rcmp
(
¨gv
[0], "-st") == 0)

447 
fûãr
 |
FILT_COUNT_STATUS
;

448 i‡(
	`°rcmp
(
¨gv
[0], "-srv") == 0)

449 
fûãr
 |
FILT_COUNT_SRV_STATUS
;

450 i‡(
	`°rcmp
(
¨gv
[0], "-tc") == 0)

451 
fûãr
 |
FILT_COUNT_TERM_CODES
;

452 i‡(
	`°rcmp
(
¨gv
[0], "-u") == 0)

453 
fûãr
 |
FILT_COUNT_URL_ONLY
;

454 i‡(
	`°rcmp
(
¨gv
[0], "-uc") == 0)

455 
fûãr
 |
FILT_COUNT_URL_COUNT
;

456 i‡(
	`°rcmp
(
¨gv
[0], "-ue") == 0)

457 
fûãr
 |
FILT_COUNT_URL_ERR
;

458 i‡(
	`°rcmp
(
¨gv
[0], "-ua") == 0)

459 
fûãr
 |
FILT_COUNT_URL_TAVG
;

460 i‡(
	`°rcmp
(
¨gv
[0], "-ut") == 0)

461 
fûãr
 |
FILT_COUNT_URL_TTOT
;

462 i‡(
	`°rcmp
(
¨gv
[0], "-uao") == 0)

463 
fûãr
 |
FILT_COUNT_URL_TAVGO
;

464 i‡(
	`°rcmp
(
¨gv
[0], "-uto") == 0)

465 
fûãr
 |
FILT_COUNT_URL_TTOTO
;

466 i‡(
	`°rcmp
(
¨gv
[0], "-o") == 0) {

467 i‡(
ouçut_fûe
)

468 
	`dõ
("Fatal: output fileÇameálready specified.\n");

469 i‡(
¨gc
 < 2)

470 
	`dõ
("Fatal: missing output fileÇame.\n");

471 
ouçut_fûe
 = 
¨gv
[1];

473 
¨gc
--;

474 
¨gv
++;

477 i‡(!
fûãr
)

478 
	`dõ
("Noáction specified.\n");

480 i‡(
fûãr
 & 
FILT_ACC_COUNT
 && !
fûãr_acc_cou¡
)

481 
fûãr_acc_cou¡
=1;

483 i‡(
fûãr
 & 
FILT_ACC_DELAY
 && !
fûãr_acc_dñay
)

484 
fûãr_acc_dñay
 = 1;

486 
löíum
 = 0;

487 
tŸ
 = 0;

488 
∑r£_îr
 = 0;

490 (
löe
 = 
	`fgës2
(
°dö
)Ë!
NULL
) {

491 
löíum
++;

493 
ã°
 = 1;

494 i‡(
	`u∆ikñy
(
fûãr
 & 
FILT_TIME_RESP
)) {

495 
çs
;

498 
b
 = 
	`fõld_°¨t
(
löe
, 
TIME_FIELD
 + 
skù_fõlds
);

499 i‡(!*
b
) {

500 
	`åunˇãd_löe
(
löíum
, 
löe
);

504 
e
 = 
	`fõld_°›
(
b
 + 1);

507 
p
 = 
b
;

508 
îr
 = 0;

509 
f
 = 0;

510 *
p
) {

511 
çs
 = 
	`°r2ic
(
p
);

512 i‡(
çs
 < 0) {

513 
çs
 = -1;

514 
îr
 = 1;

516 i‡(++
f
 == 4)

518 
	`SKIP_CHAR
(
p
, '/');

521 i‡(
f
 < 4) {

522 
∑r£_îr
++;

526 
ã°
 &(
çs
 >
fûãr_time_ª•
Ë^ !!(
fûãr
 & 
FILT_INVERT_TIME_RESP
);

529 i‡(
	`u∆ikñy
(
fûãr
 & 
FILT_ERRORS_ONLY
)) {

531 
b
 = 
	`fõld_°¨t
(
löe
, 
STATUS_FIELD
 + 
skù_fõlds
);

532 i‡(!*
b
) {

533 
	`åunˇãd_löe
(
löíum
, 
löe
);

536 i‡(*
b
 == '-') {

537 
ã°
 &!!(
fûãr
 & 
FILT_INVERT_ERRORS
);

539 
vÆ
 = 
	`°æ2ui
(
b
, 3);

540 
ã°
 &(
vÆ
 >500 && vÆ <599Ë^ !!(
fûãr
 & 
FILT_INVERT_ERRORS
);

544 
ã°
 ^
fûãr_övît
;

545 i‡(!
ã°
)

548 i‡(
	`u∆ikñy
(
fûãr
 & (
FILT_ACC_COUNT
|
FILT_ACC_DELAY
))) {

549 
b
 = 
	`fõld_°¨t
(
löe
, 
ACCEPT_FIELD
 + 
skù_fõlds
);

550 i‡(!*
b
) {

551 
	`åunˇãd_löe
(
löíum
, 
löe
);

555 
tŸ
++;

556 
vÆ
 = 
	`c⁄vît_d©e
(
b
);

558 i‡(
vÆ
 < 0) {

559 
∑r£_îr
++;

563 
t2
 = 
	`ö£π_vÆue
(&
timîs
[0], &
t
, 
vÆ
);

564 
t2
->
cou¡
++;

568 i‡(
	`u∆ikñy
(
fûãr
 & (
FILT_GRAPH_TIMERS
|
FILT_PERCENTILE
))) {

569 
f
;

571 
b
 = 
	`fõld_°¨t
(
löe
, 
TIME_FIELD
 + 
skù_fõlds
);

572 i‡(!*
b
) {

573 
	`åunˇãd_löe
(
löíum
, 
löe
);

577 
e
 = 
	`fõld_°›
(
b
 + 1);

580 
p
 = 
b
;

581 
îr
 = 0;

582 
f
 = 0;

583 *
p
) {

584 
¨øy
[
f
] = 
	`°r2ic
(
p
);

585 i‡(
¨øy
[
f
] < 0) {

586 
¨øy
[
f
] = -1;

587 
îr
 = 1;

589 i‡(++
f
 == 5)

591 
	`SKIP_CHAR
(
p
, '/');

594 i‡(
f
 < 5) {

595 
∑r£_îr
++;

607 i‡(
fûãr
 & 
FILT_GRAPH_TIMERS
) {

608 i‡(
îr
) {

609 i‡(
¨øy
[4] < 0)

610 
¨øy
[4] = -1;

611 
t2
 = 
	`ö£π_timî
(&
timîs
[0], &
t
, 
¨øy
[4]);

612 
t2
->
cou¡
++;

614 
v
;

616 
t2
 = 
	`ö£π_timî
(&
timîs
[1], &
t
, 
¨øy
[0]);Å2->
cou¡
++;

617 
t2
 = 
	`ö£π_timî
(&
timîs
[2], &
t
, 
¨øy
[2]);Å2->
cou¡
++;

618 
t2
 = 
	`ö£π_timî
(&
timîs
[3], &
t
, 
¨øy
[3]);Å2->
cou¡
++;

620 
v
 = 
¨øy
[4] -árray[0] -árray[1] -árray[2] -árray[3];

621 i‡(
v
 < 0 && !(
fûãr
 & 
FILT_QUIET
))

622 
	`Ârötf
(
°dîr
, "ERR: %s (%d %d %d %d %d => %d)\n",

623 
löe
, 
¨øy
[0],áºay[1],áºay[2],áºay[3],áºay[4], 
v
);

624 
t2
 = 
	`ö£π_timî
(&
timîs
[4], &
t
, 
v
);Å2->
cou¡
++;

625 
tŸ
++;

628 i‡(
îr
) {

629 i‡(
¨øy
[4] < 0)

630 
¨øy
[4] = -1;

631 
t2
 = 
	`ö£π_vÆue
(&
timîs
[0], &
t
, 
¨øy
[4]);

632 
t2
->
cou¡
++;

634 
v
;

636 
t2
 = 
	`ö£π_vÆue
(&
timîs
[1], &
t
, 
¨øy
[0]);Å2->
cou¡
++;

637 
t2
 = 
	`ö£π_vÆue
(&
timîs
[2], &
t
, 
¨øy
[2]);Å2->
cou¡
++;

638 
t2
 = 
	`ö£π_vÆue
(&
timîs
[3], &
t
, 
¨øy
[3]);Å2->
cou¡
++;

640 
v
 = 
¨øy
[4] -árray[0] -árray[1] -árray[2] -árray[3];

641 i‡(
v
 < 0 && !(
fûãr
 & 
FILT_QUIET
))

642 
	`Ârötf
(
°dîr
, "ERR: %s (%d %d %d %d %d => %d)\n",

643 
löe
, 
¨øy
[0],áºay[1],áºay[2],áºay[3],áºay[4], 
v
);

644 
t2
 = 
	`ö£π_vÆue
(&
timîs
[4], &
t
, 
v
);Å2->
cou¡
++;

645 
tŸ
++;

651 i‡(
	`u∆ikñy
(
fûãr
 & 
FILT_COUNT_STATUS
)) {

655 
b
 = 
	`fõld_°¨t
(
löe
, 
SOURCE_FIELD
 + 
skù_fõlds
);

656 i‡(*
b
 < '0' || *b > '9') {

657 
∑r£_îr
++;

661 
b
 = 
	`fõld_°¨t
(b, 
STATUS_FIELD
 - 
SOURCE_FIELD
 + 1);

662 i‡(!*
b
) {

663 
	`åunˇãd_löe
(
löíum
, 
löe
);

666 
vÆ
 = 
	`°r2ic
(
b
);

668 
t2
 = 
	`ö£π_vÆue
(&
timîs
[0], &
t
, 
vÆ
);

669 
t2
->
cou¡
++;

673 i‡(
	`u∆ikñy
(
fûãr
 & 
FILT_COUNT_TERM_CODES
)) {

677 
b
 = 
	`fõld_°¨t
(
löe
, 
SOURCE_FIELD
 + 
skù_fõlds
);

678 i‡(*
b
 < '0' || *b > '9') {

679 
∑r£_îr
++;

683 
b
 = 
	`fõld_°¨t
(b, 
TERM_CODES_FIELD
 - 
SOURCE_FIELD
 + 1);

684 i‡(!*
b
) {

685 
	`åunˇãd_löe
(
löíum
, 
löe
);

688 
vÆ
 = 256 * 
b
[0] + b[1];

690 
t2
 = 
	`ö£π_vÆue
(&
timîs
[0], &
t
, 
vÆ
);

691 
t2
->
cou¡
++;

695 i‡(
	`u∆ikñy
(
fûãr
 & 
FILT_COUNT_SRV_STATUS
)) {

696 *
§v_«me
;

697 
ebmb_node
 *
§v_node
;

698 
§v_°
 *
§v
;

703 
b
 = 
	`fõld_°¨t
(
löe
, 
SOURCE_FIELD
 + 
skù_fõlds
);

704 i‡(*
b
 < '0' || *b > '9') {

705 
∑r£_îr
++;

712 
b
 = 
	`fõld_°¨t
(b, 
SERVER_FIELD
 - 
SOURCE_FIELD
 + 1);

713 i‡(!*
b
) {

714 
	`åunˇãd_löe
(
löíum
, 
löe
);

718 
e
 = 
	`fõld_°›
(
b
 + 1);

723 
§v_node
 = 
	`eb°_lookup_Àn
(&
timîs
[0], 
b
, 
e
 - b);

724 
§v
 = 
	`c⁄èöî_of
(
§v_node
, 
§v_°
, 
node
);

726 i‡(!
§v_node
) {

728 
§v
 = (*)
	`ˇŒoc
(1, (
§v_°
Ë+ 
e
 - 
b
 + 1);

729 
§v_node
 = &
§v
->
node
;

730 
	`mem˝y
(&
§v_node
->
key
, 
b
, 
e
 - b);

731 
§v_node
->
key
[
e
 - 
b
] = '\0';

732 
	`eb°_ö£π
(&
timîs
[0], 
§v_node
);

736 
b
 = 
	`fõld_°¨t
(
e
, 
TIME_FIELD
 - 
SERVER_FIELD
);

737 i‡(!*
b
) {

738 
	`åunˇãd_löe
(
löíum
, 
löe
);

742 
e
 = 
	`fõld_°›
(
b
 + 1);

745 
p
 = 
b
;

746 
îr
 = 0;

747 
f
 = 0;

748 *
p
) {

749 
¨øy
[
f
] = 
	`°r2ic
(
p
);

750 i‡(
¨øy
[
f
] < 0) {

751 
¨øy
[
f
] = -1;

752 
îr
 = 1;

754 i‡(++
f
 == 5)

756 
	`SKIP_CHAR
(
p
, '/');

759 i‡(
f
 < 5) {

760 
∑r£_îr
++;

765 i‡(!
îr
)

766 
§v
->
nb_ok
++;

768 i‡(
¨øy
[2] >= 0) {

769 
§v
->
cum_˘
 +
¨øy
[2];

770 
§v
->
nb_˘
++;

773 i‡(
¨øy
[3] >= 0) {

774 
§v
->
cum_π
 +
¨øy
[3];

775 
§v
->
nb_π
++;

781 
b
 = 
	`fõld_°¨t
(
e
, 
STATUS_FIELD
 - 
TIME_FIELD
);

782 i‡(!*
b
) {

783 
	`åunˇãd_löe
(
löíum
, 
löe
);

787 
vÆ
 = 0;

788 i‡(*
b
 >= '1' && *b <= '5')

789 
vÆ
 = *
b
 - '0';

791 
§v
->
°_˙t
[
vÆ
]++;

795 i‡(
	`u∆ikñy
(
fûãr
 & 
FILT_COUNT_URL_ANY
)) {

799 
b
 = 
	`fõld_°¨t
(
löe
, 
SOURCE_FIELD
 + 
skù_fõlds
);

800 i‡(*
b
 < '0' || *b > '9') {

801 
∑r£_îr
++;

806 
b
 = 
	`fõld_°¨t
(
	`fõld_°›
(b + 1), 
TIME_FIELD
 - 
SOURCE_FIELD
);

807 i‡(!*
b
) {

808 
	`åunˇãd_löe
(
löíum
, 
löe
);

815 
e
 = 
b
; 
îr
 = 0; 
f
 = 0;

816 *
e
) {

817 
¨øy
[
f
] = 
	`°r2ic
(
e
);

818 i‡(
¨øy
[
f
] < 0) {

819 
¨øy
[
f
] = -1;

820 
îr
 = 1;

822 i‡(++
f
 == 5)

824 
	`SKIP_CHAR
(
e
, '/');

826 i‡(
f
 < 5) {

827 
∑r£_îr
++;

835 i‡(
	`u∆ikñy
(!
u°©
))

836 
u°©
 = 
	`ˇŒoc
(1, (*ustat));

838 
u°©
->
nb_îr
 = 
îr
;

839 
u°©
->
nb_ªq
 = 1;

842 
u°©
->
tŸÆ_time
 = (
¨øy
[3] >= 0) ?árray[3] :árray[4];

843 
u°©
->
tŸÆ_time_ok
 = (
¨øy
[3] >= 0) ?árray[3] : 0;

850 
e
 = 
	`fõld_°¨t
”, 
METH_FIELD
 - 
TIME_FIELD
 + 1);

851 *
e
 != '"' && *e)

852 
e
 = 
	`fõld_°¨t
(e, 2);

854 i‡(!*
e
) {

855 
	`åunˇãd_löe
(
löíum
, 
löe
);

859 
b
 = 
	`fõld_°¨t
(
e
, 
URL_FIELD
 - 
METH_FIELD
 + 1);

860 i‡(!*
b
)

861 
b
 = 
e
;

864 
e
 = 
b
;

866 i‡(*
e
 == ' ' || *e == '?' || *e == ';' || *e == '\t') {

867 *(*)
e
 = 0;

870 
e
++;

871 } *
e
);

878 
u°©
->
node
.
uæ
.
key
 = (*)
b
;

879 
eb±_ﬁd
 = 
	`ebis_ö£π
(&
timîs
[0], &
u°©
->
node
.
uæ
);

881 i‡(
eb±_ﬁd
 !&
u°©
->
node
.
uæ
) {

882 
uæ_°©
 *
u°©_ﬁd
;

884 
u°©_ﬁd
 = 
	`c⁄èöî_of
(
eb±_ﬁd
, 
uæ_°©
, 
node
.
uæ
);

885 
u°©_ﬁd
->
nb_ªq
 ++;

886 
u°©_ﬁd
->
nb_îr
 +
u°©
->nb_err;

887 
u°©_ﬁd
->
tŸÆ_time
 +
u°©
->total_time;

888 
u°©_ﬁd
->
tŸÆ_time_ok
 +
u°©
->total_time_ok;

890 
u°©
->
uæ
 = u°©->
node
.uæ.
key
 = 
	`°rdup
(ustat->node.url.key);

891 
u°©
 = 
NULL
;

898 
tŸ
++;

899 i‡(
	`u∆ikñy
(!(
fûãr
 & 
FILT_COUNT_ONLY
)))

900 
	`puts
(
löe
);

903 i‡(
t
)

904 
	`‰ì
(
t
);

906 i‡(
fûãr
 & 
FILT_COUNT_ONLY
) {

907 
	`¥ötf
("%d\n", 
tŸ
);

908 
	`exô
(0);

911 i‡(
fûãr
 & (
FILT_ACC_COUNT
|
FILT_ACC_DELAY
)) {

915 
n
 = 
	`eb32_fú°
(&
timîs
[0]);

917 i‡(
n
)

918 
œ°
 = 
n
->
key
;

919 
n
) {

920 
d
, 
h
, 
m
, 
s
, 
ms
;

922 
t
 = 
	`c⁄èöî_of
(
n
, 
timî
, 
node
);

923 
h
 = 
n
->
key
;

924 
d
 = 
h
 - 
œ°
;

925 
œ°
 = 
h
;

927 i‡(
d
 >
fûãr_acc_dñay
 && 
t
->
cou¡
 >
fûãr_acc_cou¡
) {

928 
ms
 = 
h
 % 1000; h = h / 1000;

929 
s
 = 
h
 % 60; h = h / 60;

930 
m
 = 
h
 % 60; h = h / 60;

931 
tŸ
++;

932 
	`¥ötf
("%02d:%02d:%02d.%03d %d %d %d\n", 
h
, 
m
, 
s
, 
ms
, 
œ°
, 
d
, 
t
->
cou¡
);

934 
n
 = 
	`eb32_√xt
(n);

937 i‡(
fûãr
 & 
FILT_GRAPH_TIMERS
) {

939 
f
 = 0; f < 5; f++) {

940 
eb32_node
 *
n
;

941 
vÆ
;

943 
vÆ
 = 0;

944 
n
 = 
	`eb32_fú°
(&
timîs
[
f
]);

945 
n
) {

946 
i
;

947 
d
;

949 
t
 = 
	`c⁄èöî_of
(
n
, 
timî
, 
node
);

950 
œ°
 = 
n
->
key
;

951 
vÆ
 = 
t
->
cou¡
;

953 
i
 = (
œ°
 < 0) ? -last :Üast;

954 
i
 = 
	`Ês_auto
(iË- 
QBITS
;

956 i‡(
i
 > 0)

957 
d
 = 
vÆ
 / ()(1 << 
i
);

959 
d
 = 
vÆ
;

961 i‡(
d
 > 0.0) {

962 
	`¥ötf
("%d %d %f\n", 
f
, 
œ°
, 
d
+1.0);

963 
tŸ
++;

966 
n
 = 
	`eb32_√xt
(n);

970 i‡(
fûãr
 & 
FILT_PERCENTILE
) {

975 
eb32_node
 *
n
[5];

976 
cum
[5];

977 
°ï
;

979 i‡(!
tŸ
)

980 
em±y
;

982 
f
 = 1; f < 5; f++) {

983 
n
[
f
] = 
	`eb32_fú°
(&
timîs
[f]);

984 
cum
[
f
] = 
	`c⁄èöî_of
(
n
[f], 
timî
, 
node
)->
cou¡
;

987 
°ï
 = 1; step <= 1000;) {

988 
thªs
 = 
tŸ
 * (
°ï
 / 1000.0);

990 
	`¥ötf
("%3.1‡%d ", 
°ï
/10.0, 
thªs
);

991 
f
 = 1; f < 5; f++) {

992 
eb32_node
 *
√xt
;

993 
cum
[
f
] < 
thªs
) {

995 
√xt
 = 
	`eb32_√xt
(
n
[
f
]);

996 i‡(!
√xt
)

998 
n
[
f
] = 
√xt
;

999 
cum
[
f
] +
	`c⁄èöî_of
(
√xt
, 
timî
, 
node
)->
cou¡
;

1003 
	`¥ötf
("%d ", 
n
[
f
]->
key
);

1005 
	`putch¨
('\n');

1006 i‡(
°ï
 >= 100 && step < 900)

1007 
°ï
 += 50;

1008 i‡(
°ï
 >= 20 && step < 980)

1009 
°ï
 += 10;

1011 
°ï
 += 1;

1014 i‡(
fûãr
 & 
FILT_COUNT_STATUS
) {

1016 
n
 = 
	`eb32_fú°
(&
timîs
[0]);

1017 
n
) {

1018 
t
 = 
	`c⁄èöî_of
(
n
, 
timî
, 
node
);

1019 
	`¥ötf
("%d %d\n", 
n
->
key
, 
t
->
cou¡
);

1020 
n
 = 
	`eb32_√xt
(n);

1023 i‡(
	`u∆ikñy
(
fûãr
 & 
FILT_COUNT_SRV_STATUS
)) {

1024 *
§v_«me
;

1025 
ebmb_node
 *
§v_node
;

1026 
§v_°
 *
§v
;

1028 
	`¥ötf
("#srv_name 1xx 2xx 3xx 4xx 5xx otherÅot_reqÑeq_okÖct_okávg_ctávg_rt\n");

1030 
§v_node
 = 
	`ebmb_fú°
(&
timîs
[0]);

1031 
§v_node
) {

1032 
tŸ_rq
;

1034 
§v
 = 
	`c⁄èöî_of
(
§v_node
, 
§v_°
, 
node
);

1036 
tŸ_rq
 = 0;

1037 
f
 = 0; f <= 5; f++)

1038 
tŸ_rq
 +
§v
->
°_˙t
[
f
];

1040 
	`¥ötf
("%s %d %d %d %d %d %d %d %d %.1f %d %d\n",

1041 
§v_node
->
key
, 
§v
->
°_˙t
[1], srv->st_cnt[2],

1042 
§v
->
°_˙t
[3], srv->st_cnt[4], srv->st_cnt[5], srv->st_cnt[0],

1043 
tŸ_rq
,

1044 
§v
->
nb_ok
, ()§v->nb_ok * 100.0 / (
tŸ_rq
?tot_rq:1),

1045 ()(
§v
->
cum_˘
 / (§v->
nb_˘
?§v->nb_˘:1)), ()(§v->
cum_π
 / (§v->
nb_π
?srv->nb_rt:1)));

1046 
§v_node
 = 
	`ebmb_√xt
(srv_node);

1047 
tŸ
++;

1050 i‡(
fûãr
 & 
FILT_COUNT_TERM_CODES
) {

1052 
n
 = 
	`eb32_fú°
(&
timîs
[0]);

1053 
n
) {

1054 
t
 = 
	`c⁄èöî_of
(
n
, 
timî
, 
node
);

1055 
	`¥ötf
("%c%¯%d\n", (
n
->
key
 >> 8), (n->keyË& 255, 
t
->
cou¡
);

1056 
n
 = 
	`eb32_√xt
(n);

1059 i‡(
	`u∆ikñy
(
fûãr
 & 
FILT_COUNT_URL_ANY
)) {

1060 *
§v_«me
;

1061 
eb_node
 *
node
, *
√xt
;

1063 i‡(!(
fûãr
 & 
FILT_COUNT_URL_ONLY
)) {

1068 
timîs
[1] = 
EB_ROOT
;

1069 
node
 = 
	`eb_fú°
(&
timîs
[0]);Çode;Çodê
√xt
) {

1070 
√xt
 = 
	`eb_√xt
(
node
);

1071 
	`eb_dñëe
(
node
);

1073 
u°©
 = 
	`c⁄èöî_of
(
node
, 
uæ_°©
,Çode.
uæ
.node);

1075 i‡(
fûãr
 & 
FILT_COUNT_URL_COUNT
)

1076 
u°©
->
node
.
vÆ
.
key
 = u°©->
nb_ªq
;

1077 i‡(
fûãr
 & 
FILT_COUNT_URL_ERR
)

1078 
u°©
->
node
.
vÆ
.
key
 = u°©->
nb_îr
;

1079 i‡(
fûãr
 & 
FILT_COUNT_URL_TTOT
)

1080 
u°©
->
node
.
vÆ
.
key
 = u°©->
tŸÆ_time
;

1081 i‡(
fûãr
 & 
FILT_COUNT_URL_TAVG
)

1082 
u°©
->
node
.
vÆ
.
key
 = u°©->
nb_ªq
 ? u°©->
tŸÆ_time
 / ustat->nb_req : 0;

1083 i‡(
fûãr
 & 
FILT_COUNT_URL_TTOTO
)

1084 
u°©
->
node
.
vÆ
.
key
 = u°©->
tŸÆ_time_ok
;

1085 i‡(
fûãr
 & 
FILT_COUNT_URL_TAVGO
)

1086 
u°©
->
node
.
vÆ
.
key
 = (u°©->
nb_ªq
 - u°©->
nb_îr
Ë? u°©->
tŸÆ_time_ok
 / (ustat->nb_req - ustat->nb_err) : 0;

1088 
u°©
->
node
.
vÆ
.
key
 = 0;

1090 
	`eb64_ö£π
(&
timîs
[1], &
u°©
->
node
.
vÆ
);

1093 
timîs
[0] =Åimers[1];

1096 
	`¥ötf
("#reqÉrrÅtotÅavg oktot okavg url\n");

1099 
node
 = 
	`eb_œ°
(&
timîs
[0]);

1100 
node
) {

1101 
u°©
 = 
	`c⁄èöî_of
(
node
, 
uæ_°©
,Çode.
uæ
.node);

1102 
	`¥ötf
("%d %d %Ld %Ld %Ld %Ld %s\n",

1103 
u°©
->
nb_ªq
,

1104 
u°©
->
nb_îr
,

1105 
u°©
->
tŸÆ_time
,

1106 
u°©
->
nb_ªq
 ? u°©->
tŸÆ_time
 / ustat->nb_req : 0,

1107 
u°©
->
tŸÆ_time_ok
,

1108 (
u°©
->
nb_ªq
 - u°©->
nb_îr
Ë? u°©->
tŸÆ_time_ok
 / (ustat->nb_req - ustat->nb_err) : 0,

1109 
u°©
->
uæ
);

1111 
node
 = 
	`eb_¥ev
(node);

1112 
tŸ
++;

1116 
em±y
:

1117 i‡(!(
fûãr
 & 
FILT_QUIET
))

1118 
	`Ârötf
(
°dîr
, "%dÜines in, %dÜines out, %dÖarsingÉrrors\n",

1119 
löíum
, 
tŸ
, 
∑r£_îr
);

1120 
	`exô
(0);

1121 
	}
}

	@ebtree/compiler.h

22 
	~<comm⁄/compûî.h
>

	@ebtree/eb32tree.c

23 
	~"eb32åì.h
"

25 
REGPRM2
 
eb32_node
 *
	$eb32_ö£π
(
eb_roŸ
 *
roŸ
, 
eb32_node
 *
√w
)

27  
	`__eb32_ö£π
(
roŸ
, 
√w
);

28 
	}
}

30 
REGPRM2
 
eb32_node
 *
	$eb32i_ö£π
(
eb_roŸ
 *
roŸ
, 
eb32_node
 *
√w
)

32  
	`__eb32i_ö£π
(
roŸ
, 
√w
);

33 
	}
}

35 
REGPRM2
 
eb32_node
 *
	$eb32_lookup
(
eb_roŸ
 *
roŸ
, 
u32
 
x
)

37  
	`__eb32_lookup
(
roŸ
, 
x
);

38 
	}
}

40 
REGPRM2
 
eb32_node
 *
	$eb32i_lookup
(
eb_roŸ
 *
roŸ
, 
s32
 
x
)

42  
	`__eb32i_lookup
(
roŸ
, 
x
);

43 
	}
}

49 
REGPRM2
 
eb32_node
 *
	$eb32_lookup_À
(
eb_roŸ
 *
roŸ
, 
u32
 
x
)

51 
eb32_node
 *
node
;

52 
eb_åoŸ_t
 *
åoŸ
;

54 
åoŸ
 = 
roŸ
->
b
[
EB_LEFT
];

55 i‡(
	`u∆ikñy
(
åoŸ
 =
NULL
))

56  
NULL
;

59 i‡((
	`eb_gëèg
(
åoŸ
Ë=
EB_LEAF
)) {

64 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

65 
eb32_node
, 
node
.
bønches
);

66 i‡(
node
->
key
 <
x
)

67  
node
;

69 
åoŸ
 = 
node
->node.
Àaf_p
;

72 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_NODE
),

73 
eb32_node
, 
node
.
bønches
);

75 i‡(
node
->node.
bô
 < 0) {

84 i‡(
node
->
key
 <
x
) {

85 
åoŸ
 = 
node
->node.
bønches
.
b
[
EB_RGHT
];

86 
	`eb_gëèg
(
åoŸ
Ë!
EB_LEAF
)

87 
åoŸ
 = (
	`eb_u¡ag
—roŸ, 
EB_NODE
))->
b
[
EB_RGHT
];

88  
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

89 
eb32_node
, 
node
.
bønches
);

92 
åoŸ
 = 
node
->node.
node_p
;

96 i‡(((
x
 ^ 
node
->
key
Ë>>Çode->node.
bô
Ë>
EB_NODE_BRANCHES
) {

101 i‡((
node
->
key
 >>Çode->node.
bô
Ë< (
x
 >>Çode->node.bit)) {

102 
åoŸ
 = 
node
->node.
bønches
.
b
[
EB_RGHT
];

103  
	`eb32_íåy
(
	`eb_wÆk_down
(
åoŸ
, 
EB_RGHT
), 
eb32_node
, 
node
);

109 
åoŸ
 = 
node
->node.
node_p
;

112 
åoŸ
 = 
node
->node.
bønches
.
b
[(
x
 >>Çode->node.
bô
Ë& 
EB_NODE_BRANCH_MASK
];

119 
	`eb_gëèg
(
åoŸ
Ë=
EB_LEFT
) {

123 i‡(
	`u∆ikñy
(
	`eb_˛πag
((
	`eb_u¡ag
(
åoŸ
, 
EB_LEFT
))->
b
[
EB_RGHT
]Ë=
NULL
))

124  
NULL
;

125 
åoŸ
 = (
	`eb_roŸ_to_node
(
	`eb_u¡ag
—roŸ, 
EB_LEFT
)))->
node_p
;

128 
åoŸ
 = (
	`eb_u¡ag
—roŸ, 
EB_RGHT
))->
b
[
EB_LEFT
];

129 
node
 = 
	`eb32_íåy
(
	`eb_wÆk_down
(
åoŸ
, 
EB_RGHT
), 
eb32_node
,Çode);

130  
node
;

131 
	}
}

137 
REGPRM2
 
eb32_node
 *
	$eb32_lookup_ge
(
eb_roŸ
 *
roŸ
, 
u32
 
x
)

139 
eb32_node
 *
node
;

140 
eb_åoŸ_t
 *
åoŸ
;

142 
åoŸ
 = 
roŸ
->
b
[
EB_LEFT
];

143 i‡(
	`u∆ikñy
(
åoŸ
 =
NULL
))

144  
NULL
;

147 i‡((
	`eb_gëèg
(
åoŸ
Ë=
EB_LEAF
)) {

152 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

153 
eb32_node
, 
node
.
bønches
);

154 i‡(
node
->
key
 >
x
)

155  
node
;

157 
åoŸ
 = 
node
->node.
Àaf_p
;

160 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_NODE
),

161 
eb32_node
, 
node
.
bønches
);

163 i‡(
node
->node.
bô
 < 0) {

172 i‡(
node
->
key
 >
x
) {

173 
åoŸ
 = 
node
->node.
bønches
.
b
[
EB_LEFT
];

174 
	`eb_gëèg
(
åoŸ
Ë!
EB_LEAF
)

175 
åoŸ
 = (
	`eb_u¡ag
—roŸ, 
EB_NODE
))->
b
[
EB_LEFT
];

176  
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

177 
eb32_node
, 
node
.
bønches
);

180 
åoŸ
 = 
node
->node.
node_p
;

184 i‡(((
x
 ^ 
node
->
key
Ë>>Çode->node.
bô
Ë>
EB_NODE_BRANCHES
) {

189 i‡((
node
->
key
 >>Çode->node.
bô
Ë> (
x
 >>Çode->node.bit)) {

190 
åoŸ
 = 
node
->node.
bønches
.
b
[
EB_LEFT
];

191  
	`eb32_íåy
(
	`eb_wÆk_down
(
åoŸ
, 
EB_LEFT
), 
eb32_node
, 
node
);

197 
åoŸ
 = 
node
->node.
node_p
;

200 
åoŸ
 = 
node
->node.
bønches
.
b
[(
x
 >>Çode->node.
bô
Ë& 
EB_NODE_BRANCH_MASK
];

207 
	`eb_gëèg
(
åoŸ
Ë!
EB_LEFT
)

209 
åoŸ
 = (
	`eb_roŸ_to_node
(
	`eb_u¡ag
—roŸ, 
EB_RGHT
)))->
node_p
;

212 
åoŸ
 = (
	`eb_u¡ag
—roŸ, 
EB_LEFT
))->
b
[
EB_RGHT
];

213 i‡(
	`eb_˛πag
(
åoŸ
Ë=
NULL
)

214  
NULL
;

216 
node
 = 
	`eb32_íåy
(
	`eb_wÆk_down
(
åoŸ
, 
EB_LEFT
), 
eb32_node
,Çode);

217  
node
;

218 
	}
}

	@ebtree/eb32tree.h

21 #i‚de‡
_EB32TREE_H


22 
	#_EB32TREE_H


	)

24 
	~"ebåì.h
"

28 
	#eb32_íåy
(
±r
, 
ty≥
, 
membî
Ë
	`c⁄èöî_of
’å,Åy≥, membî)

	)

30 
	#EB32_ROOT
 
EB_ROOT


	)

31 
	#EB32_TREE_HEAD
 
EB_TREE_HEAD


	)

34 
	tu32
;

35 sig√d 
	ts32
;

42 
	seb32_node
 {

43 
eb_node
 
	mnode
;

44 
u32
 
	mkey
;

54 
ölöe
 
eb32_node
 *
	$eb32_fú°
(
eb_roŸ
 *
roŸ
)

56  
	`eb32_íåy
(
	`eb_fú°
(
roŸ
), 
eb32_node
, 
node
);

57 
	}
}

60 
ölöe
 
eb32_node
 *
	$eb32_œ°
(
eb_roŸ
 *
roŸ
)

62  
	`eb32_íåy
(
	`eb_œ°
(
roŸ
), 
eb32_node
, 
node
);

63 
	}
}

66 
ölöe
 
eb32_node
 *
	$eb32_√xt
(
eb32_node
 *
eb32
)

68  
	`eb32_íåy
(
	`eb_√xt
(&
eb32
->
node
), 
eb32_node
,Çode);

69 
	}
}

72 
ölöe
 
eb32_node
 *
	$eb32_¥ev
(
eb32_node
 *
eb32
)

74  
	`eb32_íåy
(
	`eb_¥ev
(&
eb32
->
node
), 
eb32_node
,Çode);

75 
	}
}

78 
ölöe
 
eb32_node
 *
	$eb32_√xt_unique
(
eb32_node
 *
eb32
)

80  
	`eb32_íåy
(
	`eb_√xt_unique
(&
eb32
->
node
), 
eb32_node
,Çode);

81 
	}
}

84 
ölöe
 
eb32_node
 *
	$eb32_¥ev_unique
(
eb32_node
 *
eb32
)

86  
	`eb32_íåy
(
	`eb_¥ev_unique
(&
eb32
->
node
), 
eb32_node
,Çode);

87 
	}
}

92 
ölöe
 
	$eb32_dñëe
(
eb32_node
 *
eb32
)

94 
	`eb_dñëe
(&
eb32
->
node
);

95 
	}
}

101 
REGPRM2
 
eb32_node
 *
eb32_lookup
(
eb_roŸ
 *
roŸ
, 
u32
 
x
);

102 
REGPRM2
 
eb32_node
 *
eb32i_lookup
(
eb_roŸ
 *
roŸ
, 
s32
 
x
);

103 
REGPRM2
 
eb32_node
 *
eb32_lookup_À
(
eb_roŸ
 *
roŸ
, 
u32
 
x
);

104 
REGPRM2
 
eb32_node
 *
eb32_lookup_ge
(
eb_roŸ
 *
roŸ
, 
u32
 
x
);

105 
REGPRM2
 
eb32_node
 *
eb32_ö£π
(
eb_roŸ
 *
roŸ
, eb32_nodê*
√w
);

106 
REGPRM2
 
eb32_node
 *
eb32i_ö£π
(
eb_roŸ
 *
roŸ
, eb32_nodê*
√w
);

114 
f‹˚ölöe
 
	$__eb32_dñëe
(
eb32_node
 *
eb32
)

116 
	`__eb_dñëe
(&
eb32
->
node
);

117 
	}
}

123 
f‹˚ölöe
 
eb32_node
 *
	$__eb32_lookup
(
eb_roŸ
 *
roŸ
, 
u32
 
x
)

125 
eb32_node
 *
node
;

126 
eb_åoŸ_t
 *
åoŸ
;

127 
u32
 
y
;

128 
node_bô
;

130 
åoŸ
 = 
roŸ
->
b
[
EB_LEFT
];

131 i‡(
	`u∆ikñy
(
åoŸ
 =
NULL
))

132  
NULL
;

135 i‡((
	`eb_gëèg
(
åoŸ
Ë=
EB_LEAF
)) {

136 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

137 
eb32_node
, 
node
.
bønches
);

138 i‡(
node
->
key
 =
x
)

139  
node
;

141  
NULL
;

143 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_NODE
),

144 
eb32_node
, 
node
.
bønches
);

145 
node_bô
 = 
node
->node.
bô
;

147 
y
 = 
node
->
key
 ^ 
x
;

148 i‡(!
y
) {

153 i‡(
node_bô
 < 0) {

154 
åoŸ
 = 
node
->node.
bønches
.
b
[
EB_LEFT
];

155 
	`eb_gëèg
(
åoŸ
Ë!
EB_LEAF
)

156 
åoŸ
 = (
	`eb_u¡ag
—roŸ, 
EB_NODE
))->
b
[
EB_LEFT
];

157 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

158 
eb32_node
, 
node
.
bønches
);

160  
node
;

163 i‡((
y
 >> 
node_bô
Ë>
EB_NODE_BRANCHES
)

164  
NULL
;

166 
åoŸ
 = 
node
->node.
bønches
.
b
[(
x
 >> 
node_bô
Ë& 
EB_NODE_BRANCH_MASK
];

168 
	}
}

174 
f‹˚ölöe
 
eb32_node
 *
	$__eb32i_lookup
(
eb_roŸ
 *
roŸ
, 
s32
 
x
)

176 
eb32_node
 *
node
;

177 
eb_åoŸ_t
 *
åoŸ
;

178 
u32
 
key
 = 
x
 ^ 0x80000000;

179 
u32
 
y
;

180 
node_bô
;

182 
åoŸ
 = 
roŸ
->
b
[
EB_LEFT
];

183 i‡(
	`u∆ikñy
(
åoŸ
 =
NULL
))

184  
NULL
;

187 i‡((
	`eb_gëèg
(
åoŸ
Ë=
EB_LEAF
)) {

188 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

189 
eb32_node
, 
node
.
bønches
);

190 i‡(
node
->
key
 =(
u32
)
x
)

191  
node
;

193  
NULL
;

195 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_NODE
),

196 
eb32_node
, 
node
.
bønches
);

197 
node_bô
 = 
node
->node.
bô
;

199 
y
 = 
node
->
key
 ^ 
x
;

200 i‡(!
y
) {

205 i‡(
node_bô
 < 0) {

206 
åoŸ
 = 
node
->node.
bønches
.
b
[
EB_LEFT
];

207 
	`eb_gëèg
(
åoŸ
Ë!
EB_LEAF
)

208 
åoŸ
 = (
	`eb_u¡ag
—roŸ, 
EB_NODE
))->
b
[
EB_LEFT
];

209 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

210 
eb32_node
, 
node
.
bønches
);

212  
node
;

215 i‡((
y
 >> 
node_bô
Ë>
EB_NODE_BRANCHES
)

216  
NULL
;

218 
åoŸ
 = 
node
->node.
bønches
.
b
[(
key
 >> 
node_bô
Ë& 
EB_NODE_BRANCH_MASK
];

220 
	}
}

226 
f‹˚ölöe
 
eb32_node
 *

227 
	$__eb32_ö£π
(
eb_roŸ
 *
roŸ
, 
eb32_node
 *
√w
) {

228 
eb32_node
 *
ﬁd
;

229 
side
;

230 
eb_åoŸ_t
 *
åoŸ
, **
up_±r
;

231 
u32
 
√wkey
;

232 
eb_åoŸ_t
 *
roŸ_right
 = 
roŸ
;

233 
eb_åoŸ_t
 *
√w_À·
, *
√w_rght
;

234 
eb_åoŸ_t
 *
√w_Àaf
;

235 
ﬁd_node_bô
;

237 
side
 = 
EB_LEFT
;

238 
åoŸ
 = 
roŸ
->
b
[
EB_LEFT
];

239 
roŸ_right
 = 
roŸ
->
b
[
EB_RGHT
];

240 i‡(
	`u∆ikñy
(
åoŸ
 =
NULL
)) {

242 
roŸ
->
b
[
EB_LEFT
] = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEAF
);

243 
√w
->
node
.
Àaf_p
 = 
	`eb_dŸag
(
roŸ
, 
EB_LEFT
);

244 
√w
->
node
.
node_p
 = 
NULL
;

245  
√w
;

259 
√wkey
 = 
√w
->
key
;

262 i‡(
	`eb_gëèg
(
åoŸ
Ë=
EB_LEAF
) {

264 
ﬁd
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

265 
eb32_node
, 
node
.
bønches
);

266 
√w
->
node
.
node_p
 = 
ﬁd
->node.
Àaf_p
;

267 
up_±r
 = &
ﬁd
->
node
.
Àaf_p
;

272 
ﬁd
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_NODE
),

273 
eb32_node
, 
node
.
bønches
);

274 
ﬁd_node_bô
 = 
ﬁd
->
node
.
bô
;

281 i‡((
ﬁd_node_bô
 < 0) ||

282 (((
√w
->
key
 ^ 
ﬁd
->keyË>> 
ﬁd_node_bô
Ë>
EB_NODE_BRANCHES
)) {

287 
√w
->
node
.
node_p
 = 
ﬁd
->node.node_p;

288 
up_±r
 = &
ﬁd
->
node
.
node_p
;

293 
roŸ
 = &
ﬁd
->
node
.
bønches
;

294 
side
 = (
√wkey
 >> 
ﬁd_node_bô
Ë& 
EB_NODE_BRANCH_MASK
;

295 
åoŸ
 = 
roŸ
->
b
[
side
];

298 
√w_À·
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEFT
);

299 
√w_rght
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_RGHT
);

300 
√w_Àaf
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEAF
);

310 
√w
->
node
.
bô
 = 
	`Ê¢z
“ew->
key
 ^ 
ﬁd
->keyË- 
EB_NODE_BITS
;

312 i‡(
√w
->
key
 =
ﬁd
->key) {

313 
√w
->
node
.
bô
 = -1;

315 i‡(
	`likñy
(
	`eb_gëèg
(
roŸ_right
))) {

319  
ﬁd
;

322 i‡(
	`eb_gëèg
(
åoŸ
Ë!
EB_LEAF
) {

324 
eb_node
 *
ªt
;

325 
ªt
 = 
	`eb_ö£π_dup
(&
ﬁd
->
node
, &
√w
->node);

326  
	`c⁄èöî_of
(
ªt
, 
eb32_node
, 
node
);

331 i‡(
√w
->
key
 >
ﬁd
->key) {

332 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
åoŸ
;

333 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
√w_Àaf
;

334 
√w
->
node
.
Àaf_p
 = 
√w_rght
;

335 *
up_±r
 = 
√w_À·
;

338 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
√w_Àaf
;

339 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
åoŸ
;

340 
√w
->
node
.
Àaf_p
 = 
√w_À·
;

341 *
up_±r
 = 
√w_rght
;

350 
roŸ
->
b
[
side
] = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_NODE
);

351  
√w
;

352 
	}
}

358 
f‹˚ölöe
 
eb32_node
 *

359 
	$__eb32i_ö£π
(
eb_roŸ
 *
roŸ
, 
eb32_node
 *
√w
) {

360 
eb32_node
 *
ﬁd
;

361 
side
;

362 
eb_åoŸ_t
 *
åoŸ
, **
up_±r
;

363 
√wkey
;

364 
eb_åoŸ_t
 *
roŸ_right
 = 
roŸ
;

365 
eb_åoŸ_t
 *
√w_À·
, *
√w_rght
;

366 
eb_åoŸ_t
 *
√w_Àaf
;

367 
ﬁd_node_bô
;

369 
side
 = 
EB_LEFT
;

370 
åoŸ
 = 
roŸ
->
b
[
EB_LEFT
];

371 
roŸ_right
 = 
roŸ
->
b
[
EB_RGHT
];

372 i‡(
	`u∆ikñy
(
åoŸ
 =
NULL
)) {

374 
roŸ
->
b
[
EB_LEFT
] = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEAF
);

375 
√w
->
node
.
Àaf_p
 = 
	`eb_dŸag
(
roŸ
, 
EB_LEFT
);

376 
√w
->
node
.
node_p
 = 
NULL
;

377  
√w
;

393 
√wkey
 = 
√w
->
key
 + 0x80000000;

396 i‡(
	`eb_gëèg
(
åoŸ
Ë=
EB_LEAF
) {

397 
ﬁd
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

398 
eb32_node
, 
node
.
bønches
);

399 
√w
->
node
.
node_p
 = 
ﬁd
->node.
Àaf_p
;

400 
up_±r
 = &
ﬁd
->
node
.
Àaf_p
;

405 
ﬁd
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_NODE
),

406 
eb32_node
, 
node
.
bønches
);

407 
ﬁd_node_bô
 = 
ﬁd
->
node
.
bô
;

414 i‡((
ﬁd_node_bô
 < 0) ||

415 (((
√w
->
key
 ^ 
ﬁd
->keyË>> 
ﬁd_node_bô
Ë>
EB_NODE_BRANCHES
)) {

420 
√w
->
node
.
node_p
 = 
ﬁd
->node.node_p;

421 
up_±r
 = &
ﬁd
->
node
.
node_p
;

426 
roŸ
 = &
ﬁd
->
node
.
bønches
;

427 
side
 = (
√wkey
 >> 
ﬁd_node_bô
Ë& 
EB_NODE_BRANCH_MASK
;

428 
åoŸ
 = 
roŸ
->
b
[
side
];

431 
√w_À·
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEFT
);

432 
√w_rght
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_RGHT
);

433 
√w_Àaf
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEAF
);

443 
√w
->
node
.
bô
 = 
	`Ê¢z
“ew->
key
 ^ 
ﬁd
->keyË- 
EB_NODE_BITS
;

445 i‡(
√w
->
key
 =
ﬁd
->key) {

446 
√w
->
node
.
bô
 = -1;

448 i‡(
	`likñy
(
	`eb_gëèg
(
roŸ_right
))) {

452  
ﬁd
;

455 i‡(
	`eb_gëèg
(
åoŸ
Ë!
EB_LEAF
) {

457 
eb_node
 *
ªt
;

458 
ªt
 = 
	`eb_ö£π_dup
(&
ﬁd
->
node
, &
√w
->node);

459  
	`c⁄èöî_of
(
ªt
, 
eb32_node
, 
node
);

464 i‡((
s32
)
√w
->
key
 >(s32)
ﬁd
->key) {

465 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
åoŸ
;

466 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
√w_Àaf
;

467 
√w
->
node
.
Àaf_p
 = 
√w_rght
;

468 *
up_±r
 = 
√w_À·
;

471 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
√w_Àaf
;

472 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
åoŸ
;

473 
√w
->
node
.
Àaf_p
 = 
√w_À·
;

474 *
up_±r
 = 
√w_rght
;

483 
roŸ
->
b
[
side
] = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_NODE
);

484  
√w
;

485 
	}
}

	@ebtree/eb64tree.c

23 
	~"eb64åì.h
"

25 
REGPRM2
 
eb64_node
 *
	$eb64_ö£π
(
eb_roŸ
 *
roŸ
, 
eb64_node
 *
√w
)

27  
	`__eb64_ö£π
(
roŸ
, 
√w
);

28 
	}
}

30 
REGPRM2
 
eb64_node
 *
	$eb64i_ö£π
(
eb_roŸ
 *
roŸ
, 
eb64_node
 *
√w
)

32  
	`__eb64i_ö£π
(
roŸ
, 
√w
);

33 
	}
}

35 
REGPRM2
 
eb64_node
 *
	$eb64_lookup
(
eb_roŸ
 *
roŸ
, 
u64
 
x
)

37  
	`__eb64_lookup
(
roŸ
, 
x
);

38 
	}
}

40 
REGPRM2
 
eb64_node
 *
	$eb64i_lookup
(
eb_roŸ
 *
roŸ
, 
s64
 
x
)

42  
	`__eb64i_lookup
(
roŸ
, 
x
);

43 
	}
}

49 
REGPRM2
 
eb64_node
 *
	$eb64_lookup_À
(
eb_roŸ
 *
roŸ
, 
u64
 
x
)

51 
eb64_node
 *
node
;

52 
eb_åoŸ_t
 *
åoŸ
;

54 
åoŸ
 = 
roŸ
->
b
[
EB_LEFT
];

55 i‡(
	`u∆ikñy
(
åoŸ
 =
NULL
))

56  
NULL
;

59 i‡((
	`eb_gëèg
(
åoŸ
Ë=
EB_LEAF
)) {

64 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

65 
eb64_node
, 
node
.
bønches
);

66 i‡(
node
->
key
 <
x
)

67  
node
;

69 
åoŸ
 = 
node
->node.
Àaf_p
;

72 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_NODE
),

73 
eb64_node
, 
node
.
bønches
);

75 i‡(
node
->node.
bô
 < 0) {

84 i‡(
node
->
key
 <
x
) {

85 
åoŸ
 = 
node
->node.
bønches
.
b
[
EB_RGHT
];

86 
	`eb_gëèg
(
åoŸ
Ë!
EB_LEAF
)

87 
åoŸ
 = (
	`eb_u¡ag
—roŸ, 
EB_NODE
))->
b
[
EB_RGHT
];

88  
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

89 
eb64_node
, 
node
.
bønches
);

92 
åoŸ
 = 
node
->node.
node_p
;

96 i‡(((
x
 ^ 
node
->
key
Ë>>Çode->node.
bô
Ë>
EB_NODE_BRANCHES
) {

101 i‡((
node
->
key
 >>Çode->node.
bô
Ë< (
x
 >>Çode->node.bit)) {

102 
åoŸ
 = 
node
->node.
bønches
.
b
[
EB_RGHT
];

103  
	`eb64_íåy
(
	`eb_wÆk_down
(
åoŸ
, 
EB_RGHT
), 
eb64_node
, 
node
);

109 
åoŸ
 = 
node
->node.
node_p
;

112 
åoŸ
 = 
node
->node.
bønches
.
b
[(
x
 >>Çode->node.
bô
Ë& 
EB_NODE_BRANCH_MASK
];

119 
	`eb_gëèg
(
åoŸ
Ë=
EB_LEFT
) {

123 i‡(
	`u∆ikñy
(
	`eb_˛πag
((
	`eb_u¡ag
(
åoŸ
, 
EB_LEFT
))->
b
[
EB_RGHT
]Ë=
NULL
))

124  
NULL
;

125 
åoŸ
 = (
	`eb_roŸ_to_node
(
	`eb_u¡ag
—roŸ, 
EB_LEFT
)))->
node_p
;

128 
åoŸ
 = (
	`eb_u¡ag
—roŸ, 
EB_RGHT
))->
b
[
EB_LEFT
];

129 
node
 = 
	`eb64_íåy
(
	`eb_wÆk_down
(
åoŸ
, 
EB_RGHT
), 
eb64_node
,Çode);

130  
node
;

131 
	}
}

137 
REGPRM2
 
eb64_node
 *
	$eb64_lookup_ge
(
eb_roŸ
 *
roŸ
, 
u64
 
x
)

139 
eb64_node
 *
node
;

140 
eb_åoŸ_t
 *
åoŸ
;

142 
åoŸ
 = 
roŸ
->
b
[
EB_LEFT
];

143 i‡(
	`u∆ikñy
(
åoŸ
 =
NULL
))

144  
NULL
;

147 i‡((
	`eb_gëèg
(
åoŸ
Ë=
EB_LEAF
)) {

152 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

153 
eb64_node
, 
node
.
bønches
);

154 i‡(
node
->
key
 >
x
)

155  
node
;

157 
åoŸ
 = 
node
->node.
Àaf_p
;

160 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_NODE
),

161 
eb64_node
, 
node
.
bønches
);

163 i‡(
node
->node.
bô
 < 0) {

172 i‡(
node
->
key
 >
x
) {

173 
åoŸ
 = 
node
->node.
bønches
.
b
[
EB_LEFT
];

174 
	`eb_gëèg
(
åoŸ
Ë!
EB_LEAF
)

175 
åoŸ
 = (
	`eb_u¡ag
—roŸ, 
EB_NODE
))->
b
[
EB_LEFT
];

176  
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

177 
eb64_node
, 
node
.
bønches
);

180 
åoŸ
 = 
node
->node.
node_p
;

184 i‡(((
x
 ^ 
node
->
key
Ë>>Çode->node.
bô
Ë>
EB_NODE_BRANCHES
) {

189 i‡((
node
->
key
 >>Çode->node.
bô
Ë> (
x
 >>Çode->node.bit)) {

190 
åoŸ
 = 
node
->node.
bønches
.
b
[
EB_LEFT
];

191  
	`eb64_íåy
(
	`eb_wÆk_down
(
åoŸ
, 
EB_LEFT
), 
eb64_node
, 
node
);

197 
åoŸ
 = 
node
->node.
node_p
;

200 
åoŸ
 = 
node
->node.
bønches
.
b
[(
x
 >>Çode->node.
bô
Ë& 
EB_NODE_BRANCH_MASK
];

207 
	`eb_gëèg
(
åoŸ
Ë!
EB_LEFT
)

209 
åoŸ
 = (
	`eb_roŸ_to_node
(
	`eb_u¡ag
—roŸ, 
EB_RGHT
)))->
node_p
;

212 
åoŸ
 = (
	`eb_u¡ag
—roŸ, 
EB_LEFT
))->
b
[
EB_RGHT
];

213 i‡(
	`eb_˛πag
(
åoŸ
Ë=
NULL
)

214  
NULL
;

216 
node
 = 
	`eb64_íåy
(
	`eb_wÆk_down
(
åoŸ
, 
EB_LEFT
), 
eb64_node
,Çode);

217  
node
;

218 
	}
}

	@ebtree/eb64tree.h

21 #i‚de‡
_EB64TREE_H


22 
	#_EB64TREE_H


	)

24 
	~"ebåì.h
"

28 
	#eb64_íåy
(
±r
, 
ty≥
, 
membî
Ë
	`c⁄èöî_of
’å,Åy≥, membî)

	)

30 
	#EB64_ROOT
 
EB_ROOT


	)

31 
	#EB64_TREE_HEAD
 
EB_TREE_HEAD


	)

34 
	tu64
;

35 sig√d 
	ts64
;

42 
	seb64_node
 {

43 
eb_node
 
	mnode
;

44 
u64
 
	mkey
;

54 
ölöe
 
eb64_node
 *
	$eb64_fú°
(
eb_roŸ
 *
roŸ
)

56  
	`eb64_íåy
(
	`eb_fú°
(
roŸ
), 
eb64_node
, 
node
);

57 
	}
}

60 
ölöe
 
eb64_node
 *
	$eb64_œ°
(
eb_roŸ
 *
roŸ
)

62  
	`eb64_íåy
(
	`eb_œ°
(
roŸ
), 
eb64_node
, 
node
);

63 
	}
}

66 
ölöe
 
eb64_node
 *
	$eb64_√xt
(
eb64_node
 *
eb64
)

68  
	`eb64_íåy
(
	`eb_√xt
(&
eb64
->
node
), 
eb64_node
,Çode);

69 
	}
}

72 
ölöe
 
eb64_node
 *
	$eb64_¥ev
(
eb64_node
 *
eb64
)

74  
	`eb64_íåy
(
	`eb_¥ev
(&
eb64
->
node
), 
eb64_node
,Çode);

75 
	}
}

78 
ölöe
 
eb64_node
 *
	$eb64_√xt_unique
(
eb64_node
 *
eb64
)

80  
	`eb64_íåy
(
	`eb_√xt_unique
(&
eb64
->
node
), 
eb64_node
,Çode);

81 
	}
}

84 
ölöe
 
eb64_node
 *
	$eb64_¥ev_unique
(
eb64_node
 *
eb64
)

86  
	`eb64_íåy
(
	`eb_¥ev_unique
(&
eb64
->
node
), 
eb64_node
,Çode);

87 
	}
}

92 
ölöe
 
	$eb64_dñëe
(
eb64_node
 *
eb64
)

94 
	`eb_dñëe
(&
eb64
->
node
);

95 
	}
}

101 
REGPRM2
 
eb64_node
 *
eb64_lookup
(
eb_roŸ
 *
roŸ
, 
u64
 
x
);

102 
REGPRM2
 
eb64_node
 *
eb64i_lookup
(
eb_roŸ
 *
roŸ
, 
s64
 
x
);

103 
REGPRM2
 
eb64_node
 *
eb64_lookup_À
(
eb_roŸ
 *
roŸ
, 
u64
 
x
);

104 
REGPRM2
 
eb64_node
 *
eb64_lookup_ge
(
eb_roŸ
 *
roŸ
, 
u64
 
x
);

105 
REGPRM2
 
eb64_node
 *
eb64_ö£π
(
eb_roŸ
 *
roŸ
, eb64_nodê*
√w
);

106 
REGPRM2
 
eb64_node
 *
eb64i_ö£π
(
eb_roŸ
 *
roŸ
, eb64_nodê*
√w
);

114 
f‹˚ölöe
 
	$__eb64_dñëe
(
eb64_node
 *
eb64
)

116 
	`__eb_dñëe
(&
eb64
->
node
);

117 
	}
}

123 
f‹˚ölöe
 
eb64_node
 *
	$__eb64_lookup
(
eb_roŸ
 *
roŸ
, 
u64
 
x
)

125 
eb64_node
 *
node
;

126 
eb_åoŸ_t
 *
åoŸ
;

127 
u64
 
y
;

128 
node_bô
;

130 
åoŸ
 = 
roŸ
->
b
[
EB_LEFT
];

131 i‡(
	`u∆ikñy
(
åoŸ
 =
NULL
))

132  
NULL
;

135 i‡((
	`eb_gëèg
(
åoŸ
Ë=
EB_LEAF
)) {

136 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

137 
eb64_node
, 
node
.
bønches
);

138 i‡(
node
->
key
 =
x
)

139  
node
;

141  
NULL
;

143 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_NODE
),

144 
eb64_node
, 
node
.
bønches
);

145 
node_bô
 = 
node
->node.
bô
;

147 
y
 = 
node
->
key
 ^ 
x
;

148 i‡(!
y
) {

153 i‡(
node
->node.
bô
 < 0) {

154 
åoŸ
 = 
node
->node.
bønches
.
b
[
EB_LEFT
];

155 
	`eb_gëèg
(
åoŸ
Ë!
EB_LEAF
)

156 
åoŸ
 = (
	`eb_u¡ag
—roŸ, 
EB_NODE
))->
b
[
EB_LEFT
];

157 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

158 
eb64_node
, 
node
.
bønches
);

160  
node
;

163 i‡((
y
 >> 
node
->node.
bô
Ë>
EB_NODE_BRANCHES
)

164  
NULL
;

166 
åoŸ
 = 
node
->node.
bønches
.
b
[(
x
 >>Çode->node.
bô
Ë& 
EB_NODE_BRANCH_MASK
];

168 
	}
}

174 
f‹˚ölöe
 
eb64_node
 *
	$__eb64i_lookup
(
eb_roŸ
 *
roŸ
, 
s64
 
x
)

176 
eb64_node
 *
node
;

177 
eb_åoŸ_t
 *
åoŸ
;

178 
u64
 
key
 = 
x
 ^ (1ULL << 63);

179 
u64
 
y
;

180 
node_bô
;

182 
åoŸ
 = 
roŸ
->
b
[
EB_LEFT
];

183 i‡(
	`u∆ikñy
(
åoŸ
 =
NULL
))

184  
NULL
;

187 i‡((
	`eb_gëèg
(
åoŸ
Ë=
EB_LEAF
)) {

188 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

189 
eb64_node
, 
node
.
bønches
);

190 i‡(
node
->
key
 =(
u64
)
x
)

191  
node
;

193  
NULL
;

195 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_NODE
),

196 
eb64_node
, 
node
.
bønches
);

197 
node_bô
 = 
node
->node.
bô
;

199 
y
 = 
node
->
key
 ^ 
x
;

200 i‡(!
y
) {

205 i‡(
node
->node.
bô
 < 0) {

206 
åoŸ
 = 
node
->node.
bønches
.
b
[
EB_LEFT
];

207 
	`eb_gëèg
(
åoŸ
Ë!
EB_LEAF
)

208 
åoŸ
 = (
	`eb_u¡ag
—roŸ, 
EB_NODE
))->
b
[
EB_LEFT
];

209 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

210 
eb64_node
, 
node
.
bønches
);

212  
node
;

215 i‡((
y
 >> 
node
->node.
bô
Ë>
EB_NODE_BRANCHES
)

216  
NULL
;

218 
åoŸ
 = 
node
->node.
bønches
.
b
[(
key
 >>Çode->node.
bô
Ë& 
EB_NODE_BRANCH_MASK
];

220 
	}
}

226 
f‹˚ölöe
 
eb64_node
 *

227 
	$__eb64_ö£π
(
eb_roŸ
 *
roŸ
, 
eb64_node
 *
√w
) {

228 
eb64_node
 *
ﬁd
;

229 
side
;

230 
eb_åoŸ_t
 *
åoŸ
;

231 
u64
 
√wkey
;

232 
eb_åoŸ_t
 *
roŸ_right
 = 
roŸ
;

233 
ﬁd_node_bô
;

235 
side
 = 
EB_LEFT
;

236 
åoŸ
 = 
roŸ
->
b
[
EB_LEFT
];

237 
roŸ_right
 = 
roŸ
->
b
[
EB_RGHT
];

238 i‡(
	`u∆ikñy
(
åoŸ
 =
NULL
)) {

240 
roŸ
->
b
[
EB_LEFT
] = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEAF
);

241 
√w
->
node
.
Àaf_p
 = 
	`eb_dŸag
(
roŸ
, 
EB_LEFT
);

242 
√w
->
node
.
node_p
 = 
NULL
;

243  
√w
;

257 
√wkey
 = 
√w
->
key
;

260 i‡(
	`u∆ikñy
(
	`eb_gëèg
(
åoŸ
Ë=
EB_LEAF
)) {

261 
eb_åoŸ_t
 *
√w_À·
, *
√w_rght
;

262 
eb_åoŸ_t
 *
√w_Àaf
, *
ﬁd_Àaf
;

264 
ﬁd
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

265 
eb64_node
, 
node
.
bønches
);

267 
√w_À·
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEFT
);

268 
√w_rght
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_RGHT
);

269 
√w_Àaf
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEAF
);

270 
ﬁd_Àaf
 = 
	`eb_dŸag
(&
ﬁd
->
node
.
bønches
, 
EB_LEAF
);

272 
√w
->
node
.
node_p
 = 
ﬁd
->node.
Àaf_p
;

290 i‡(
√w
->
key
 < 
ﬁd
->key) {

291 
√w
->
node
.
Àaf_p
 = 
√w_À·
;

292 
ﬁd
->
node
.
Àaf_p
 = 
√w_rght
;

293 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
√w_Àaf
;

294 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
ﬁd_Àaf
;

299 i‡((
√w
->
key
 =
ﬁd
->keyË&& 
	`eb_gëèg
(
roŸ_right
))

300  
ﬁd
;

303 
ﬁd
->
node
.
Àaf_p
 = 
√w_À·
;

304 
√w
->
node
.
Àaf_p
 = 
√w_rght
;

305 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
ﬁd_Àaf
;

306 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
√w_Àaf
;

308 i‡(
√w
->
key
 =
ﬁd
->key) {

309 
√w
->
node
.
bô
 = -1;

310 
roŸ
->
b
[
side
] = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_NODE
);

311  
√w
;

318 
ﬁd
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_NODE
),

319 
eb64_node
, 
node
.
bønches
);

320 
ﬁd_node_bô
 = 
ﬁd
->
node
.
bô
;

327 i‡((
ﬁd_node_bô
 < 0) ||

328 (((
√w
->
key
 ^ 
ﬁd
->keyË>> 
ﬁd_node_bô
Ë>
EB_NODE_BRANCHES
)) {

333 
eb_åoŸ_t
 *
√w_À·
, *
√w_rght
;

334 
eb_åoŸ_t
 *
√w_Àaf
, *
ﬁd_node
;

336 
√w_À·
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEFT
);

337 
√w_rght
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_RGHT
);

338 
√w_Àaf
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEAF
);

339 
ﬁd_node
 = 
	`eb_dŸag
(&
ﬁd
->
node
.
bønches
, 
EB_NODE
);

341 
√w
->
node
.
node_p
 = 
ﬁd
->node.node_p;

343 i‡(
√w
->
key
 < 
ﬁd
->key) {

344 
√w
->
node
.
Àaf_p
 = 
√w_À·
;

345 
ﬁd
->
node
.
node_p
 = 
√w_rght
;

346 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
√w_Àaf
;

347 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
ﬁd_node
;

349 i‡(
√w
->
key
 > 
ﬁd
->key) {

350 
ﬁd
->
node
.
node_p
 = 
√w_À·
;

351 
√w
->
node
.
Àaf_p
 = 
√w_rght
;

352 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
ﬁd_node
;

353 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
√w_Àaf
;

356 
eb_node
 *
ªt
;

357 
ªt
 = 
	`eb_ö£π_dup
(&
ﬁd
->
node
, &
√w
->node);

358  
	`c⁄èöî_of
(
ªt
, 
eb64_node
, 
node
);

364 
roŸ
 = &
ﬁd
->
node
.
bønches
;

365 #i‡
BITS_PER_LONG
 >= 64

366 
side
 = (
√wkey
 >> 
ﬁd_node_bô
Ë& 
EB_NODE_BRANCH_MASK
;

368 
side
 = 
√wkey
;

369 
side
 >>
ﬁd_node_bô
;

370 i‡(
ﬁd_node_bô
 >= 32) {

371 
side
 = 
√wkey
 >> 32;

372 
side
 >>
ﬁd_node_bô
 & 0x1F;

374 
side
 &
EB_NODE_BRANCH_MASK
;

376 
åoŸ
 = 
roŸ
->
b
[
side
];

392 
√w
->
node
.
bô
 = 
	`Ês64
“ew->
key
 ^ 
ﬁd
->keyË- 
EB_NODE_BITS
;

393 
roŸ
->
b
[
side
] = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_NODE
);

395  
√w
;

396 
	}
}

402 
f‹˚ölöe
 
eb64_node
 *

403 
	$__eb64i_ö£π
(
eb_roŸ
 *
roŸ
, 
eb64_node
 *
√w
) {

404 
eb64_node
 *
ﬁd
;

405 
side
;

406 
eb_åoŸ_t
 *
åoŸ
;

407 
u64
 
√wkey
;

408 
eb_åoŸ_t
 *
roŸ_right
 = 
roŸ
;

409 
ﬁd_node_bô
;

411 
side
 = 
EB_LEFT
;

412 
åoŸ
 = 
roŸ
->
b
[
EB_LEFT
];

413 
roŸ_right
 = 
roŸ
->
b
[
EB_RGHT
];

414 i‡(
	`u∆ikñy
(
åoŸ
 =
NULL
)) {

416 
roŸ
->
b
[
EB_LEFT
] = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEAF
);

417 
√w
->
node
.
Àaf_p
 = 
	`eb_dŸag
(
roŸ
, 
EB_LEFT
);

418 
√w
->
node
.
node_p
 = 
NULL
;

419  
√w
;

435 
√wkey
 = 
√w
->
key
 ^ (1ULL << 63);

438 i‡(
	`u∆ikñy
(
	`eb_gëèg
(
åoŸ
Ë=
EB_LEAF
)) {

439 
eb_åoŸ_t
 *
√w_À·
, *
√w_rght
;

440 
eb_åoŸ_t
 *
√w_Àaf
, *
ﬁd_Àaf
;

442 
ﬁd
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

443 
eb64_node
, 
node
.
bønches
);

445 
√w_À·
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEFT
);

446 
√w_rght
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_RGHT
);

447 
√w_Àaf
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEAF
);

448 
ﬁd_Àaf
 = 
	`eb_dŸag
(&
ﬁd
->
node
.
bønches
, 
EB_LEAF
);

450 
√w
->
node
.
node_p
 = 
ﬁd
->node.
Àaf_p
;

468 i‡((
s64
)
√w
->
key
 < (s64)
ﬁd
->key) {

469 
√w
->
node
.
Àaf_p
 = 
√w_À·
;

470 
ﬁd
->
node
.
Àaf_p
 = 
√w_rght
;

471 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
√w_Àaf
;

472 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
ﬁd_Àaf
;

477 i‡((
√w
->
key
 =
ﬁd
->keyË&& 
	`eb_gëèg
(
roŸ_right
))

478  
ﬁd
;

481 
ﬁd
->
node
.
Àaf_p
 = 
√w_À·
;

482 
√w
->
node
.
Àaf_p
 = 
√w_rght
;

483 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
ﬁd_Àaf
;

484 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
√w_Àaf
;

486 i‡(
√w
->
key
 =
ﬁd
->key) {

487 
√w
->
node
.
bô
 = -1;

488 
roŸ
->
b
[
side
] = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_NODE
);

489  
√w
;

496 
ﬁd
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_NODE
),

497 
eb64_node
, 
node
.
bønches
);

498 
ﬁd_node_bô
 = 
ﬁd
->
node
.
bô
;

505 i‡((
ﬁd_node_bô
 < 0) ||

506 (((
√w
->
key
 ^ 
ﬁd
->keyË>> 
ﬁd_node_bô
Ë>
EB_NODE_BRANCHES
)) {

511 
eb_åoŸ_t
 *
√w_À·
, *
√w_rght
;

512 
eb_åoŸ_t
 *
√w_Àaf
, *
ﬁd_node
;

514 
√w_À·
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEFT
);

515 
√w_rght
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_RGHT
);

516 
√w_Àaf
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEAF
);

517 
ﬁd_node
 = 
	`eb_dŸag
(&
ﬁd
->
node
.
bønches
, 
EB_NODE
);

519 
√w
->
node
.
node_p
 = 
ﬁd
->node.node_p;

521 i‡((
s64
)
√w
->
key
 < (s64)
ﬁd
->key) {

522 
√w
->
node
.
Àaf_p
 = 
√w_À·
;

523 
ﬁd
->
node
.
node_p
 = 
√w_rght
;

524 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
√w_Àaf
;

525 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
ﬁd_node
;

527 i‡((
s64
)
√w
->
key
 > (s64)
ﬁd
->key) {

528 
ﬁd
->
node
.
node_p
 = 
√w_À·
;

529 
√w
->
node
.
Àaf_p
 = 
√w_rght
;

530 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
ﬁd_node
;

531 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
√w_Àaf
;

534 
eb_node
 *
ªt
;

535 
ªt
 = 
	`eb_ö£π_dup
(&
ﬁd
->
node
, &
√w
->node);

536  
	`c⁄èöî_of
(
ªt
, 
eb64_node
, 
node
);

542 
roŸ
 = &
ﬁd
->
node
.
bønches
;

543 #i‡
BITS_PER_LONG
 >= 64

544 
side
 = (
√wkey
 >> 
ﬁd_node_bô
Ë& 
EB_NODE_BRANCH_MASK
;

546 
side
 = 
√wkey
;

547 
side
 >>
ﬁd_node_bô
;

548 i‡(
ﬁd_node_bô
 >= 32) {

549 
side
 = 
√wkey
 >> 32;

550 
side
 >>
ﬁd_node_bô
 & 0x1F;

552 
side
 &
EB_NODE_BRANCH_MASK
;

554 
åoŸ
 = 
roŸ
->
b
[
side
];

570 
√w
->
node
.
bô
 = 
	`Ês64
“ew->
key
 ^ 
ﬁd
->keyË- 
EB_NODE_BITS
;

571 
roŸ
->
b
[
side
] = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_NODE
);

573  
√w
;

574 
	}
}

	@ebtree/ebimtree.c

23 
	~"eb±åì.h
"

24 
	~"ebimåì.h
"

29 
REGPRM3
 
eb±_node
 *

30 
	$ebim_lookup
(
eb_roŸ
 *
roŸ
, c⁄° *
x
, 
Àn
)

32  
	`__ebim_lookup
(
roŸ
, 
x
, 
Àn
);

33 
	}
}

40 
REGPRM3
 
eb±_node
 *

41 
	$ebim_ö£π
(
eb_roŸ
 *
roŸ
, 
eb±_node
 *
√w
, 
Àn
)

43  
	`__ebim_ö£π
(
roŸ
, 
√w
, 
Àn
);

44 
	}
}

	@ebtree/ebimtree.h

21 
	~<°rög.h
>

22 
	~"ebåì.h
"

23 
	~"eb±åì.h
"

32 
REGPRM3
 
eb±_node
 *
ebim_lookup
(
eb_roŸ
 *
roŸ
, c⁄° *
x
, 
Àn
);

33 
REGPRM3
 
eb±_node
 *
ebim_ö£π
(
eb_roŸ
 *
roŸ
, eb±_nodê*
√w
, 
Àn
);

38 
f‹˚ölöe
 
eb±_node
 *

39 
	$__ebim_lookup
(
eb_roŸ
 *
roŸ
, c⁄° *
x
, 
Àn
)

41 
eb±_node
 *
node
;

42 
eb_åoŸ_t
 *
åoŸ
;

43 
bô
;

44 
node_bô
;

46 
åoŸ
 = 
roŸ
->
b
[
EB_LEFT
];

47 i‡(
	`u∆ikñy
(
åoŸ
 =
NULL
))

48  
NULL
;

50 
bô
 = 0;

52 i‡((
	`eb_gëèg
(
åoŸ
Ë=
EB_LEAF
)) {

53 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

54 
eb±_node
, 
node
.
bønches
);

55 i‡(
	`memcmp
(
node
->
key
, 
x
, 
Àn
) == 0)

56  
node
;

58  
NULL
;

60 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_NODE
),

61 
eb±_node
, 
node
.
bønches
);

63 
node_bô
 = 
node
->node.
bô
;

64 i‡(
node_bô
 < 0) {

69 i‡(
	`memcmp
(
node
->
key
, 
x
, 
Àn
) != 0)

70  
NULL
;

72 
åoŸ
 = 
node
->node.
bønches
.
b
[
EB_LEFT
];

73 
	`eb_gëèg
(
åoŸ
Ë!
EB_LEAF
)

74 
åoŸ
 = (
	`eb_u¡ag
—roŸ, 
EB_NODE
))->
b
[
EB_LEFT
];

75 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

76 
eb±_node
, 
node
.
bønches
);

77  
node
;

81 
bô
 = 
	`equÆ_bôs
(
x
, 
node
->
key
, bô, 
node_bô
);

82 i‡(
bô
 < 
node_bô
)

83  
NULL
;

85 
åoŸ
 = 
node
->node.
bønches
.
b
[(((*)
x
)[
node_bô
 >> 3] >>

86 (~
node_bô
 & 7)) & 1];

88 
	}
}

95 
f‹˚ölöe
 
eb±_node
 *

96 
	$__ebim_ö£π
(
eb_roŸ
 *
roŸ
, 
eb±_node
 *
√w
, 
Àn
)

98 
eb±_node
 *
ﬁd
;

99 
side
;

100 
eb_åoŸ_t
 *
åoŸ
;

101 
eb_åoŸ_t
 *
roŸ_right
 = 
roŸ
;

102 
diff
;

103 
bô
;

104 
ﬁd_node_bô
;

106 
side
 = 
EB_LEFT
;

107 
åoŸ
 = 
roŸ
->
b
[
EB_LEFT
];

108 
roŸ_right
 = 
roŸ
->
b
[
EB_RGHT
];

109 i‡(
	`u∆ikñy
(
åoŸ
 =
NULL
)) {

111 
roŸ
->
b
[
EB_LEFT
] = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEAF
);

112 
√w
->
node
.
Àaf_p
 = 
	`eb_dŸag
(
roŸ
, 
EB_LEFT
);

113 
√w
->
node
.
node_p
 = 
NULL
;

114  
√w
;

117 
Àn
 <<= 3;

131 
bô
 = 0;

133 i‡(
	`u∆ikñy
(
	`eb_gëèg
(
åoŸ
Ë=
EB_LEAF
)) {

134 
eb_åoŸ_t
 *
√w_À·
, *
√w_rght
;

135 
eb_åoŸ_t
 *
√w_Àaf
, *
ﬁd_Àaf
;

137 
ﬁd
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

138 
eb±_node
, 
node
.
bønches
);

140 
√w_À·
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEFT
);

141 
√w_rght
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_RGHT
);

142 
√w_Àaf
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEAF
);

143 
ﬁd_Àaf
 = 
	`eb_dŸag
(&
ﬁd
->
node
.
bønches
, 
EB_LEAF
);

145 
√w
->
node
.
node_p
 = 
ﬁd
->node.
Àaf_p
;

162 
bô
 = 
	`equÆ_bôs
(
√w
->
key
, 
ﬁd
->key, bô, 
Àn
);

163 
diff
 = 
	`cmp_bôs
(
√w
->
key
, 
ﬁd
->key, 
bô
);

165 i‡(
diff
 < 0) {

166 
√w
->
node
.
Àaf_p
 = 
√w_À·
;

167 
ﬁd
->
node
.
Àaf_p
 = 
√w_rght
;

168 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
√w_Àaf
;

169 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
ﬁd_Àaf
;

174 i‡(
diff
 =0 && 
	`eb_gëèg
(
roŸ_right
))

175  
ﬁd
;

178 
ﬁd
->
node
.
Àaf_p
 = 
√w_À·
;

179 
√w
->
node
.
Àaf_p
 = 
√w_rght
;

180 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
ﬁd_Àaf
;

181 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
√w_Àaf
;

183 i‡(
diff
 == 0) {

184 
√w
->
node
.
bô
 = -1;

185 
roŸ
->
b
[
side
] = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_NODE
);

186  
√w
;

193 
ﬁd
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_NODE
),

194 
eb±_node
, 
node
.
bønches
);

195 
ﬁd_node_bô
 = 
ﬁd
->
node
.
bô
;

203 i‡(
ﬁd_node_bô
 < 0) {

205 
bô
 = 
	`equÆ_bôs
(
√w
->
key
, 
ﬁd
->key, bô, 
Àn
);

206 
dup_åì
;

208 i‡(
bô
 < 
ﬁd_node_bô
) {

209 
bô
 = 
	`equÆ_bôs
(
√w
->
key
, 
ﬁd
->key, bô, 
ﬁd_node_bô
);

212 i‡(
bô
 < 
ﬁd_node_bô
) {

217 
eb_åoŸ_t
 *
√w_À·
, *
√w_rght
;

218 
eb_åoŸ_t
 *
√w_Àaf
, *
ﬁd_node
;

220 
dup_åì
:

221 
√w_À·
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEFT
);

222 
√w_rght
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_RGHT
);

223 
√w_Àaf
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEAF
);

224 
ﬁd_node
 = 
	`eb_dŸag
(&
ﬁd
->
node
.
bønches
, 
EB_NODE
);

226 
√w
->
node
.
node_p
 = 
ﬁd
->node.node_p;

228 
diff
 = 
	`cmp_bôs
(
√w
->
key
, 
ﬁd
->key, 
bô
);

229 i‡(
diff
 < 0) {

230 
√w
->
node
.
Àaf_p
 = 
√w_À·
;

231 
ﬁd
->
node
.
node_p
 = 
√w_rght
;

232 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
√w_Àaf
;

233 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
ﬁd_node
;

235 i‡(
diff
 > 0) {

236 
ﬁd
->
node
.
node_p
 = 
√w_À·
;

237 
√w
->
node
.
Àaf_p
 = 
√w_rght
;

238 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
ﬁd_node
;

239 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
√w_Àaf
;

242 
eb_node
 *
ªt
;

243 
ªt
 = 
	`eb_ö£π_dup
(&
ﬁd
->
node
, &
√w
->node);

244  
	`c⁄èöî_of
(
ªt
, 
eb±_node
, 
node
);

250 
roŸ
 = &
ﬁd
->
node
.
bønches
;

251 
side
 = (((*)
√w
->
key
)[
ﬁd_node_bô
 >> 3] >> (~old_node_bit & 7)) & 1;

252 
åoŸ
 = 
roŸ
->
b
[
side
];

264 
√w
->
node
.
bô
 = bit;

265 
roŸ
->
b
[
side
] = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_NODE
);

266  
√w
;

267 
	}
}

	@ebtree/ebistree.c

23 
	~"ebi°ªe.h
"

24 
	~"ebimåì.h
"

30 
REGPRM2
 
eb±_node
 *
	$ebis_lookup
(
eb_roŸ
 *
roŸ
, c⁄° *
x
)

32  
	`__ebis_lookup
(
roŸ
, 
x
);

33 
	}
}

40 
REGPRM3
 
eb±_node
 *
	$ebis_lookup_Àn
(
eb_roŸ
 *
roŸ
, c⁄° *
x
, 
Àn
)

42 
eb±_node
 *
node
;

44 
node
 = 
	`ebim_lookup
(
roŸ
, 
x
, 
Àn
);

45 i‡(!
node
 || ((c⁄° *Íode->
key
)[
Àn
] != 0)

46  
NULL
;

47  
node
;

48 
	}
}

55 
REGPRM2
 
eb±_node
 *
	$ebis_ö£π
(
eb_roŸ
 *
roŸ
, 
eb±_node
 *
√w
)

57  
	`__ebis_ö£π
(
roŸ
, 
√w
);

58 
	}
}

	@ebtree/ebistree.h

23 
	~<°rög.h
>

24 
	~"ebåì.h
"

25 
	~"eb±åì.h
"

34 
REGPRM2
 
eb±_node
 *
ebis_lookup
(
eb_roŸ
 *
roŸ
, c⁄° *
x
);

35 
REGPRM3
 
eb±_node
 *
ebis_lookup_Àn
(
eb_roŸ
 *
roŸ
, c⁄° *
x
, 
Àn
);

36 
REGPRM2
 
eb±_node
 *
ebis_ö£π
(
eb_roŸ
 *
roŸ
, eb±_nodê*
√w
);

42 
f‹˚ölöe
 
eb±_node
 *
	$__ebis_lookup
(
eb_roŸ
 *
roŸ
, c⁄° *
x
)

44 
eb±_node
 *
node
;

45 
eb_åoŸ_t
 *
åoŸ
;

46 
bô
;

47 
node_bô
;

49 
åoŸ
 = 
roŸ
->
b
[
EB_LEFT
];

50 i‡(
	`u∆ikñy
(
åoŸ
 =
NULL
))

51  
NULL
;

53 
bô
 = 0;

55 i‡((
	`eb_gëèg
(
åoŸ
Ë=
EB_LEAF
)) {

56 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

57 
eb±_node
, 
node
.
bønches
);

58 i‡(
	`°rcmp
(
node
->
key
, 
x
) == 0)

59  
node
;

61  
NULL
;

63 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_NODE
),

64 
eb±_node
, 
node
.
bønches
);

65 
node_bô
 = 
node
->node.
bô
;

67 i‡(
node_bô
 < 0) {

72 i‡(
	`°rcmp
(
node
->
key
, 
x
) != 0)

73  
NULL
;

75 
åoŸ
 = 
node
->node.
bønches
.
b
[
EB_LEFT
];

76 
	`eb_gëèg
(
åoŸ
Ë!
EB_LEAF
)

77 
åoŸ
 = (
	`eb_u¡ag
—roŸ, 
EB_NODE
))->
b
[
EB_LEFT
];

78 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

79 
eb±_node
, 
node
.
bønches
);

80  
node
;

86 i‡(
	`likñy
(
bô
 >= 0)) {

87 
bô
 = 
	`°rög_equÆ_bôs
(
x
, 
node
->
key
, bit);

88 i‡(
	`likñy
(
bô
 < 
node_bô
)) {

89 i‡(
bô
 >= 0)

90  
NULL
;

97 i‡(
	`eb_gëèg
(
roŸ
->
b
[
EB_RGHT
]))

98  
node
;

102 
åoŸ
 = 
node
->node.
bønches
.
b
[(((*)
x
)[
node_bô
 >> 3] >>

103 (~
node_bô
 & 7)) & 1];

105 
	}
}

112 
f‹˚ölöe
 
eb±_node
 *

113 
	$__ebis_ö£π
(
eb_roŸ
 *
roŸ
, 
eb±_node
 *
√w
)

115 
eb±_node
 *
ﬁd
;

116 
side
;

117 
eb_åoŸ_t
 *
åoŸ
;

118 
eb_åoŸ_t
 *
roŸ_right
 = 
roŸ
;

119 
diff
;

120 
bô
;

121 
ﬁd_node_bô
;

123 
side
 = 
EB_LEFT
;

124 
åoŸ
 = 
roŸ
->
b
[
EB_LEFT
];

125 
roŸ_right
 = 
roŸ
->
b
[
EB_RGHT
];

126 i‡(
	`u∆ikñy
(
åoŸ
 =
NULL
)) {

128 
roŸ
->
b
[
EB_LEFT
] = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEAF
);

129 
√w
->
node
.
Àaf_p
 = 
	`eb_dŸag
(
roŸ
, 
EB_LEFT
);

130 
√w
->
node
.
node_p
 = 
NULL
;

131  
√w
;

146 
bô
 = 0;

148 i‡(
	`u∆ikñy
(
	`eb_gëèg
(
åoŸ
Ë=
EB_LEAF
)) {

149 
eb_åoŸ_t
 *
√w_À·
, *
√w_rght
;

150 
eb_åoŸ_t
 *
√w_Àaf
, *
ﬁd_Àaf
;

152 
ﬁd
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

153 
eb±_node
, 
node
.
bønches
);

155 
√w_À·
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEFT
);

156 
√w_rght
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_RGHT
);

157 
√w_Àaf
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEAF
);

158 
ﬁd_Àaf
 = 
	`eb_dŸag
(&
ﬁd
->
node
.
bønches
, 
EB_LEAF
);

160 
√w
->
node
.
node_p
 = 
ﬁd
->node.
Àaf_p
;

177 i‡(
bô
 >= 0)

178 
bô
 = 
	`°rög_equÆ_bôs
(
√w
->
key
, 
ﬁd
->key, bit);

180 i‡(
bô
 < 0) {

186 i‡(
	`eb_gëèg
(
roŸ_right
))

187  
ﬁd
;

190 
ﬁd
->
node
.
Àaf_p
 = 
√w_À·
;

191 
√w
->
node
.
Àaf_p
 = 
√w_rght
;

192 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
ﬁd_Àaf
;

193 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
√w_Àaf
;

194 
√w
->
node
.
bô
 = -1;

195 
roŸ
->
b
[
side
] = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_NODE
);

196  
√w
;

199 
diff
 = 
	`cmp_bôs
(
√w
->
key
, 
ﬁd
->key, 
bô
);

200 i‡(
diff
 < 0) {

202 
√w
->
node
.
Àaf_p
 = 
√w_À·
;

203 
ﬁd
->
node
.
Àaf_p
 = 
√w_rght
;

204 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
√w_Àaf
;

205 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
ﬁd_Àaf
;

208 
ﬁd
->
node
.
Àaf_p
 = 
√w_À·
;

209 
√w
->
node
.
Àaf_p
 = 
√w_rght
;

210 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
ﬁd_Àaf
;

211 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
√w_Àaf
;

217 
ﬁd
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_NODE
),

218 
eb±_node
, 
node
.
bønches
);

219 
ﬁd_node_bô
 = 
ﬁd
->
node
.
bô
;

227 i‡(
bô
 >0 && (bô < 
ﬁd_node_bô
 || old_node_bit < 0))

228 
bô
 = 
	`°rög_equÆ_bôs
(
√w
->
key
, 
ﬁd
->key, bit);

230 i‡(
	`u∆ikñy
(
bô
 < 0)) {

234 i‡(
ﬁd_node_bô
 < 0) {

239 
eb_node
 *
ªt
;

240 
ªt
 = 
	`eb_ö£π_dup
(&
ﬁd
->
node
, &
√w
->node);

241  
	`c⁄èöî_of
(
ªt
, 
eb±_node
, 
node
);

245 i‡(
bô
 < 
ﬁd_node_bô
 || old_node_bit < 0) {

254 
eb_åoŸ_t
 *
√w_À·
, *
√w_rght
;

255 
eb_åoŸ_t
 *
√w_Àaf
, *
ﬁd_node
;

257 
√w_À·
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEFT
);

258 
√w_rght
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_RGHT
);

259 
√w_Àaf
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEAF
);

260 
ﬁd_node
 = 
	`eb_dŸag
(&
ﬁd
->
node
.
bønches
, 
EB_NODE
);

262 
√w
->
node
.
node_p
 = 
ﬁd
->node.node_p;

265 
diff
 = 
	`cmp_bôs
(
√w
->
key
, 
ﬁd
->key, 
bô
);

266 i‡(
diff
 < 0) {

267 
√w
->
node
.
Àaf_p
 = 
√w_À·
;

268 
ﬁd
->
node
.
node_p
 = 
√w_rght
;

269 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
√w_Àaf
;

270 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
ﬁd_node
;

273 
ﬁd
->
node
.
node_p
 = 
√w_À·
;

274 
√w
->
node
.
Àaf_p
 = 
√w_rght
;

275 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
ﬁd_node
;

276 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
√w_Àaf
;

282 
roŸ
 = &
ﬁd
->
node
.
bønches
;

283 
side
 = (((*)
√w
->
key
)[
ﬁd_node_bô
 >> 3] >> (~old_node_bit & 7)) & 1;

284 
åoŸ
 = 
roŸ
->
b
[
side
];

297 
√w
->
node
.
bô
 = bit;

298 
roŸ
->
b
[
side
] = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_NODE
);

299  
√w
;

300 
	}
}

	@ebtree/ebmbtree.c

23 
	~"ebmbåì.h
"

28 
REGPRM3
 
ebmb_node
 *

29 
	$ebmb_lookup
(
eb_roŸ
 *
roŸ
, c⁄° *
x
, 
Àn
)

31  
	`__ebmb_lookup
(
roŸ
, 
x
, 
Àn
);

32 
	}
}

39 
REGPRM3
 
ebmb_node
 *

40 
	$ebmb_ö£π
(
eb_roŸ
 *
roŸ
, 
ebmb_node
 *
√w
, 
Àn
)

42  
	`__ebmb_ö£π
(
roŸ
, 
√w
, 
Àn
);

43 
	}
}

49 
REGPRM2
 
ebmb_node
 *

50 
	$ebmb_lookup_l⁄ge°
(
eb_roŸ
 *
roŸ
, c⁄° *
x
)

52  
	`__ebmb_lookup_l⁄ge°
(
roŸ
, 
x
);

53 
	}
}

58 
REGPRM3
 
ebmb_node
 *

59 
	$ebmb_lookup_¥efix
(
eb_roŸ
 *
roŸ
, c⁄° *
x
, 
pfx
)

61  
	`__ebmb_lookup_¥efix
(
roŸ
, 
x
, 
pfx
);

62 
	}
}

73 
REGPRM3
 
ebmb_node
 *

74 
	$ebmb_ö£π_¥efix
(
eb_roŸ
 *
roŸ
, 
ebmb_node
 *
√w
, 
Àn
)

76  
	`__ebmb_ö£π_¥efix
(
roŸ
, 
√w
, 
Àn
);

77 
	}
}

	@ebtree/ebmbtree.h

21 #i‚de‡
_EBMBTREE_H


22 
	#_EBMBTREE_H


	)

24 
	~<°rög.h
>

25 
	~"ebåì.h
"

28 
	#ebmb_íåy
(
±r
, 
ty≥
, 
membî
Ë
	`c⁄èöî_of
’å,Åy≥, membî)

	)

30 
	#EBMB_ROOT
 
EB_ROOT


	)

31 
	#EBMB_TREE_HEAD
 
EB_TREE_HEAD


	)

40 
	sebmb_node
 {

41 
eb_node
 
	mnode
;

42 
	mkey
[0];

52 
f‹˚ölöe
 
ebmb_node
 *
	$ebmb_fú°
(
eb_roŸ
 *
roŸ
)

54  
	`ebmb_íåy
(
	`eb_fú°
(
roŸ
), 
ebmb_node
, 
node
);

55 
	}
}

58 
f‹˚ölöe
 
ebmb_node
 *
	$ebmb_œ°
(
eb_roŸ
 *
roŸ
)

60  
	`ebmb_íåy
(
	`eb_œ°
(
roŸ
), 
ebmb_node
, 
node
);

61 
	}
}

64 
f‹˚ölöe
 
ebmb_node
 *
	$ebmb_√xt
(
ebmb_node
 *
ebmb
)

66  
	`ebmb_íåy
(
	`eb_√xt
(&
ebmb
->
node
), 
ebmb_node
,Çode);

67 
	}
}

70 
f‹˚ölöe
 
ebmb_node
 *
	$ebmb_¥ev
(
ebmb_node
 *
ebmb
)

72  
	`ebmb_íåy
(
	`eb_¥ev
(&
ebmb
->
node
), 
ebmb_node
,Çode);

73 
	}
}

76 
f‹˚ölöe
 
ebmb_node
 *
	$ebmb_√xt_unique
(
ebmb_node
 *
ebmb
)

78  
	`ebmb_íåy
(
	`eb_√xt_unique
(&
ebmb
->
node
), 
ebmb_node
,Çode);

79 
	}
}

82 
f‹˚ölöe
 
ebmb_node
 *
	$ebmb_¥ev_unique
(
ebmb_node
 *
ebmb
)

84  
	`ebmb_íåy
(
	`eb_¥ev_unique
(&
ebmb
->
node
), 
ebmb_node
,Çode);

85 
	}
}

90 
f‹˚ölöe
 
	$ebmb_dñëe
(
ebmb_node
 *
ebmb
)

92 
	`eb_dñëe
(&
ebmb
->
node
);

93 
	}
}

98 
REGPRM3
 
ebmb_node
 *
ebmb_lookup
(
eb_roŸ
 *
roŸ
, c⁄° *
x
, 
Àn
);

99 
REGPRM3
 
ebmb_node
 *
ebmb_ö£π
(
eb_roŸ
 *
roŸ
, ebmb_nodê*
√w
, 
Àn
);

100 
REGPRM2
 
ebmb_node
 *
ebmb_lookup_l⁄ge°
(
eb_roŸ
 *
roŸ
, c⁄° *
x
);

101 
REGPRM3
 
ebmb_node
 *
ebmb_lookup_¥efix
(
eb_roŸ
 *
roŸ
, c⁄° *
x
, 
pfx
);

102 
REGPRM3
 
ebmb_node
 *
ebmb_ö£π_¥efix
(
eb_roŸ
 *
roŸ
, ebmb_nodê*
√w
, 
Àn
);

109 
f‹˚ölöe
 
	$__ebmb_dñëe
(
ebmb_node
 *
ebmb
)

111 
	`__eb_dñëe
(&
ebmb
->
node
);

112 
	}
}

117 
f‹˚ölöe
 
ebmb_node
 *
	$__ebmb_lookup
(
eb_roŸ
 *
roŸ
, c⁄° *
x
, 
Àn
)

119 
ebmb_node
 *
node
;

120 
eb_åoŸ_t
 *
åoŸ
;

121 
pos
, 
side
;

122 
node_bô
;

124 
åoŸ
 = 
roŸ
->
b
[
EB_LEFT
];

125 i‡(
	`u∆ikñy
(
åoŸ
 =
NULL
))

126  
NULL
;

128 
pos
 = 0;

130 i‡(
	`eb_gëèg
(
åoŸ
Ë=
EB_LEAF
) {

131 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

132 
ebmb_node
, 
node
.
bønches
);

133 i‡(
	`memcmp
(
node
->
key
 + 
pos
, 
x
, 
Àn
 -Öos) != 0)

134  
NULL
;

136  
node
;

138 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_NODE
),

139 
ebmb_node
, 
node
.
bønches
);

141 
node_bô
 = 
node
->node.
bô
;

142 i‡(
node_bô
 < 0) {

147 i‡(
	`memcmp
(
node
->
key
 + 
pos
, 
x
, 
Àn
 -Öos) != 0)

148  
NULL
;

150 
åoŸ
 = 
node
->node.
bønches
.
b
[
EB_LEFT
];

151 
	`eb_gëèg
(
åoŸ
Ë!
EB_LEAF
)

152 
åoŸ
 = (
	`eb_u¡ag
—roŸ, 
EB_NODE
))->
b
[
EB_LEFT
];

153 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

154 
ebmb_node
, 
node
.
bønches
);

155  
node
;

163 
node_bô
 = ~node_bô + (
pos
 << 3) + 8;

164 i‡(
node_bô
 < 0) {

170 
x
++; 
pos
++;

171 i‡(
node
->
key
[
pos
-1] ^ *(*)(
x
-1))

172  
NULL
;

173 
node_bô
 += 8;

174 i‡(
node_bô
 >= 0)

184 
side
 = *(*)
x
 >> 
node_bô
;

185 i‡(((
node
->
key
[
pos
] >> 
node_bô
Ë^ 
side
) > 1)

186  
NULL
;

187 
side
 &= 1;

188 
åoŸ
 = 
node
->node.
bønches
.
b
[
side
];

190 
	}
}

197 
f‹˚ölöe
 
ebmb_node
 *

198 
	$__ebmb_ö£π
(
eb_roŸ
 *
roŸ
, 
ebmb_node
 *
√w
, 
Àn
)

200 
ebmb_node
 *
ﬁd
;

201 
side
;

202 
eb_åoŸ_t
 *
åoŸ
, **
up_±r
;

203 
eb_åoŸ_t
 *
roŸ_right
 = 
roŸ
;

204 
diff
;

205 
bô
;

206 
eb_åoŸ_t
 *
√w_À·
, *
√w_rght
;

207 
eb_åoŸ_t
 *
√w_Àaf
;

208 
ﬁd_node_bô
;

210 
side
 = 
EB_LEFT
;

211 
åoŸ
 = 
roŸ
->
b
[
EB_LEFT
];

212 
roŸ_right
 = 
roŸ
->
b
[
EB_RGHT
];

213 i‡(
	`u∆ikñy
(
åoŸ
 =
NULL
)) {

215 
roŸ
->
b
[
EB_LEFT
] = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEAF
);

216 
√w
->
node
.
Àaf_p
 = 
	`eb_dŸag
(
roŸ
, 
EB_LEFT
);

217 
√w
->
node
.
node_p
 = 
NULL
;

218  
√w
;

233 
bô
 = 0;

235 i‡(
	`u∆ikñy
(
	`eb_gëèg
(
åoŸ
Ë=
EB_LEAF
)) {

237 
ﬁd
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

238 
ebmb_node
, 
node
.
bønches
);

239 
√w
->
node
.
node_p
 = 
ﬁd
->node.
Àaf_p
;

240 
up_±r
 = &
ﬁd
->
node
.
Àaf_p
;

241 
check_bô_™d_bªak
;

245 
ﬁd
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_NODE
),

246 
ebmb_node
, 
node
.
bønches
);

247 
ﬁd_node_bô
 = 
ﬁd
->
node
.
bô
;

249 i‡(
	`u∆ikñy
(
ﬁd
->
node
.
bô
 < 0)) {

251 
√w
->
node
.
node_p
 = 
ﬁd
->node.node_p;

252 
up_±r
 = &
ﬁd
->
node
.
node_p
;

253 
check_bô_™d_bªak
:

254 
bô
 = 
	`equÆ_bôs
(
√w
->
key
, 
ﬁd
->key, bô, 
Àn
 << 3);

265 
bô
 = 
	`equÆ_bôs
(
√w
->
key
, 
ﬁd
->key, bô, 
ﬁd_node_bô
);

266 i‡(
	`u∆ikñy
(
bô
 < 
ﬁd_node_bô
)) {

271 
√w
->
node
.
node_p
 = 
ﬁd
->node.node_p;

272 
up_±r
 = &
ﬁd
->
node
.
node_p
;

279 
bô
 = 
ﬁd_node_bô
 + 1;

282 
roŸ
 = &
ﬁd
->
node
.
bønches
;

283 
side
 = 
ﬁd_node_bô
 & 7;

284 
side
 ^= 7;

285 
side
 = (
√w
->
key
[
ﬁd_node_bô
 >> 3] >> side) & 1;

286 
åoŸ
 = 
roŸ
->
b
[
side
];

289 
√w_À·
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEFT
);

290 
√w_rght
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_RGHT
);

291 
√w_Àaf
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEAF
);

297 
√w
->
node
.
bô
 = bit;

298 
diff
 = 
	`cmp_bôs
(
√w
->
key
, 
ﬁd
->key, 
bô
);

299 i‡(
diff
 == 0) {

300 
√w
->
node
.
bô
 = -1;

302 i‡(
	`likñy
(
	`eb_gëèg
(
roŸ_right
))) {

306  
ﬁd
;

309 i‡(
	`eb_gëèg
(
åoŸ
Ë!
EB_LEAF
) {

311 
eb_node
 *
ªt
;

312 
ªt
 = 
	`eb_ö£π_dup
(&
ﬁd
->
node
, &
√w
->node);

313  
	`c⁄èöî_of
(
ªt
, 
ebmb_node
, 
node
);

318 i‡(
diff
 >= 0) {

319 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
åoŸ
;

320 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
√w_Àaf
;

321 
√w
->
node
.
Àaf_p
 = 
√w_rght
;

322 *
up_±r
 = 
√w_À·
;

324 i‡(
diff
 < 0) {

325 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
√w_Àaf
;

326 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
åoŸ
;

327 
√w
->
node
.
Àaf_p
 = 
√w_À·
;

328 *
up_±r
 = 
√w_rght
;

337 
roŸ
->
b
[
side
] = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_NODE
);

338  
√w
;

339 
	}
}

346 
f‹˚ölöe
 
ebmb_node
 *
	$__ebmb_lookup_l⁄ge°
(
eb_roŸ
 *
roŸ
, c⁄° *
x
)

348 
ebmb_node
 *
node
;

349 
eb_åoŸ_t
 *
åoŸ
, *
covî
;

350 
pos
, 
side
;

351 
node_bô
;

353 
åoŸ
 = 
roŸ
->
b
[
EB_LEFT
];

354 i‡(
	`u∆ikñy
(
åoŸ
 =
NULL
))

355  
NULL
;

357 
covî
 = 
NULL
;

358 
pos
 = 0;

360 i‡((
	`eb_gëèg
(
åoŸ
Ë=
EB_LEAF
)) {

361 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

362 
ebmb_node
, 
node
.
bønches
);

363 i‡(
	`check_bôs
(
x
 - 
pos
, 
node
->
key
,Öos,Çode->node.
pfx
))

364 
nŸ_found
;

366  
node
;

368 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_NODE
),

369 
ebmb_node
, 
node
.
bønches
);

371 
node_bô
 = 
node
->node.
bô
;

372 i‡(
node_bô
 < 0) {

377 i‡(
	`check_bôs
(
x
 - 
pos
, 
node
->
key
,Öos,Çode->node.
pfx
))

378 
nŸ_found
;

380 
åoŸ
 = 
node
->node.
bønches
.
b
[
EB_LEFT
];

381 
	`eb_gëèg
(
åoŸ
Ë!
EB_LEAF
)

382 
åoŸ
 = (
	`eb_u¡ag
—roŸ, 
EB_NODE
))->
b
[
EB_LEFT
];

383 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

384 
ebmb_node
, 
node
.
bønches
);

385  
node
;

388 
node_bô
 >>= 1;

389 
node_bô
 = ~node_bô + (
pos
 << 3) + 8;

390 i‡(
node_bô
 < 0) {

396 
x
++; 
pos
++;

397 i‡(
node
->
key
[
pos
-1] ^ *(*)(
x
-1))

398 
nŸ_found
;

399 
node_bô
 += 8;

400 i‡(
node_bô
 >= 0)

410 
side
 = *(*)
x
 >> 
node_bô
;

411 i‡(((
node
->
key
[
pos
] >> 
node_bô
Ë^ 
side
) > 1)

412 
nŸ_found
;

414 i‡(!(
node
->node.
bô
 & 1)) {

420 
covî
 = 
node
->node.
bønches
.
b
[
EB_LEFT
];

421 
åoŸ
 = 
node
->node.
bønches
.
b
[
EB_RGHT
];

424 
side
 &= 1;

425 
åoŸ
 = 
node
->node.
bønches
.
b
[
side
];

428 
nŸ_found
:

430  
	`ebmb_íåy
(
	`eb_wÆk_down
(
covî
, 
EB_LEFT
), 
ebmb_node
, 
node
);

431 
	}
}

437 
f‹˚ölöe
 
ebmb_node
 *
	$__ebmb_lookup_¥efix
(
eb_roŸ
 *
roŸ
, c⁄° *
x
, 
pfx
)

439 
ebmb_node
 *
node
;

440 
eb_åoŸ_t
 *
åoŸ
;

441 
pos
, 
side
;

442 
node_bô
;

444 
åoŸ
 = 
roŸ
->
b
[
EB_LEFT
];

445 i‡(
	`u∆ikñy
(
åoŸ
 =
NULL
))

446  
NULL
;

448 
pos
 = 0;

450 i‡((
	`eb_gëèg
(
åoŸ
Ë=
EB_LEAF
)) {

451 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

452 
ebmb_node
, 
node
.
bønches
);

453 i‡(
node
->node.
pfx
 !=Öfx)

454  
NULL
;

455 i‡(
	`check_bôs
(
x
 - 
pos
, 
node
->
key
,Öos,Çode->node.
pfx
))

456  
NULL
;

457  
node
;

459 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_NODE
),

460 
ebmb_node
, 
node
.
bønches
);

462 
node_bô
 = 
node
->node.
bô
;

463 i‡(
node_bô
 < 0) {

468 i‡(
node
->node.
pfx
 !=Öfx)

469  
NULL
;

470 i‡(
	`check_bôs
(
x
 - 
pos
, 
node
->
key
,Öos,Çode->node.
pfx
))

471  
NULL
;

473 
åoŸ
 = 
node
->node.
bønches
.
b
[
EB_LEFT
];

474 
	`eb_gëèg
(
åoŸ
Ë!
EB_LEAF
)

475 
åoŸ
 = (
	`eb_u¡ag
—roŸ, 
EB_NODE
))->
b
[
EB_LEFT
];

476 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

477 
ebmb_node
, 
node
.
bønches
);

478  
node
;

481 
node_bô
 >>= 1;

482 
node_bô
 = ~node_bô + (
pos
 << 3) + 8;

483 i‡(
node_bô
 < 0) {

489 
x
++; 
pos
++;

490 i‡(
node
->
key
[
pos
-1] ^ *(*)(
x
-1))

491  
NULL
;

492 
node_bô
 += 8;

493 i‡(
node_bô
 >= 0)

503 
side
 = *(*)
x
 >> 
node_bô
;

504 i‡(((
node
->
key
[
pos
] >> 
node_bô
Ë^ 
side
) > 1)

505  
NULL
;

507 i‡(!(
node
->node.
bô
 & 1)) {

513 i‡(
node
->node.
bô
 >> 1 =
pfx
)

514 
åoŸ
 = 
node
->node.
bønches
.
b
[
EB_LEFT
];

516 
åoŸ
 = 
node
->node.
bønches
.
b
[
EB_RGHT
];

519 
side
 &= 1;

520 
åoŸ
 = 
node
->node.
bønches
.
b
[
side
];

522 
	}
}

534 
f‹˚ölöe
 
ebmb_node
 *

535 
	$__ebmb_ö£π_¥efix
(
eb_roŸ
 *
roŸ
, 
ebmb_node
 *
√w
, 
Àn
)

537 
ebmb_node
 *
ﬁd
;

538 
side
;

539 
eb_åoŸ_t
 *
åoŸ
, **
up_±r
;

540 
eb_åoŸ_t
 *
roŸ_right
 = 
roŸ
;

541 
diff
;

542 
bô
;

543 
eb_åoŸ_t
 *
√w_À·
, *
√w_rght
;

544 
eb_åoŸ_t
 *
√w_Àaf
;

545 
ﬁd_node_bô
;

547 
side
 = 
EB_LEFT
;

548 
åoŸ
 = 
roŸ
->
b
[
EB_LEFT
];

549 
roŸ_right
 = 
roŸ
->
b
[
EB_RGHT
];

550 i‡(
	`u∆ikñy
(
åoŸ
 =
NULL
)) {

552 
roŸ
->
b
[
EB_LEFT
] = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEAF
);

553 
√w
->
node
.
Àaf_p
 = 
	`eb_dŸag
(
roŸ
, 
EB_LEFT
);

554 
√w
->
node
.
node_p
 = 
NULL
;

555  
√w
;

558 
Àn
 <<= 3;

559 i‡(
Àn
 > 
√w
->
node
.
pfx
)

560 
Àn
 = 
√w
->
node
.
pfx
;

574 
bô
 = 0;

576 i‡(
	`u∆ikñy
(
	`eb_gëèg
(
åoŸ
Ë=
EB_LEAF
)) {

580 
ﬁd
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

581 
ebmb_node
, 
node
.
bønches
);

582 
√w
->
node
.
node_p
 = 
ﬁd
->node.
Àaf_p
;

583 
up_±r
 = &
ﬁd
->
node
.
Àaf_p
;

584 
check_bô_™d_bªak
;

588 
ﬁd
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_NODE
),

589 
ebmb_node
, 
node
.
bønches
);

590 
ﬁd_node_bô
 = 
ﬁd
->
node
.
bô
;

597 i‡(
	`u∆ikñy
(
ﬁd_node_bô
 < 0)) {

599 
√w
->
node
.
node_p
 = 
ﬁd
->node.node_p;

600 
up_±r
 = &
ﬁd
->
node
.
node_p
;

601 
check_bô_™d_bªak
:

603 i‡(
Àn
 > 
ﬁd
->
node
.
pfx
)

604 
Àn
 = 
ﬁd
->
node
.
pfx
;

605 
bô
 = 
	`equÆ_bôs
(
√w
->
key
, 
ﬁd
->key, bô, 
Àn
);

611 
bô
 = 
	`equÆ_bôs
(
√w
->
key
, 
ﬁd
->key, bô, 
ﬁd_node_bô
 >> 1);

612 
bô
 = (bit << 1) + 1;

618 i‡(
bô
 >(
√w
->
node
.
pfx
 << 1Ë&& (√w->node.pfx << 1Ë< 
ﬁd_node_bô
) {

620 
√w
->
node
.
node_p
 = 
ﬁd
->node.node_p;

621 
up_±r
 = &
ﬁd
->
node
.
node_p
;

622 
√w
->
node
.
bô
 =Çew->node.
pfx
 << 1;

623 
diff
 = -1;

624 
ö£π_above
;

627 i‡(
	`u∆ikñy
(
bô
 < 
ﬁd_node_bô
)) {

633 
√w
->
node
.
node_p
 = 
ﬁd
->node.node_p;

634 
up_±r
 = &
ﬁd
->
node
.
node_p
;

635 
√w
->
node
.
bô
 = bit;

636 
diff
 = 
	`cmp_bôs
(
√w
->
key
, 
ﬁd
->key, 
bô
 >> 1);

637 
ö£π_above
;

640 i‡(!(
ﬁd_node_bô
 & 1)) {

646 i‡((
√w
->
node
.
pfx
 << 1Ë=
ﬁd_node_bô
) {

647 
roŸ
 = &
ﬁd
->
node
.
bønches
;

648 
side
 = 
EB_LEFT
;

649 
åoŸ
 = 
roŸ
->
b
[
side
];

654 
side
 = 
EB_RGHT
;

655 
bô
 = 
ﬁd_node_bô
 >> 1;

656 
roŸ
 = &
ﬁd
->
node
.
bønches
;

657 
åoŸ
 = 
roŸ
->
b
[
side
];

665 
ﬁd_node_bô
 >>= 1;

666 
bô
 = 
ﬁd_node_bô
 + 1;

669 
roŸ
 = &
ﬁd
->
node
.
bønches
;

670 
side
 = 
ﬁd_node_bô
 & 7;

671 
side
 ^= 7;

672 
side
 = (
√w
->
key
[
ﬁd_node_bô
 >> 3] >> side) & 1;

673 
åoŸ
 = 
roŸ
->
b
[
side
];

702 i‡(
bô
 > 
√w
->
node
.
pfx
)

703 
bô
 = 
√w
->
node
.
pfx
;

704 i‡(
bô
 > 
ﬁd
->
node
.
pfx
)

705 
bô
 = 
ﬁd
->
node
.
pfx
;

707 
√w
->
node
.
bô
 = (bit << 1) + 1;

713 
diff
 = 0;

714 i‡(
bô
 < 
ﬁd
->
node
.
pfx
 && bô < 
√w
->node.pfx)

715 
diff
 = 
	`cmp_bôs
(
√w
->
key
, 
ﬁd
->key, 
bô
);

717 i‡(
diff
 == 0) {

723 
√w
->
node
.
bô
--;

724 i‡(
√w
->
node
.
pfx
 =
ﬁd
->node.pfx) {

725 
√w
->
node
.
bô
 = -1;

727 i‡(
	`u∆ikñy
(
	`eb_gëèg
(
roŸ_right
))) {

731  
ﬁd
;

734 i‡(
	`eb_gëèg
(
åoŸ
Ë!
EB_LEAF
) {

736 
eb_node
 *
ªt
;

737 
ªt
 = 
	`eb_ö£π_dup
(&
ﬁd
->
node
, &
√w
->node);

738  
	`c⁄èöî_of
(
ªt
, 
ebmb_node
, 
node
);

743 i‡(
√w
->
node
.
pfx
 < 
ﬁd
->node.pfx)

744 
diff
 = -1;

747 
ö£π_above
:

748 
√w_À·
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEFT
);

749 
√w_rght
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_RGHT
);

750 
√w_Àaf
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEAF
);

752 i‡(
diff
 >= 0) {

753 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
åoŸ
;

754 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
√w_Àaf
;

755 
√w
->
node
.
Àaf_p
 = 
√w_rght
;

756 *
up_±r
 = 
√w_À·
;

759 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
√w_Àaf
;

760 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
åoŸ
;

761 
√w
->
node
.
Àaf_p
 = 
√w_À·
;

762 *
up_±r
 = 
√w_rght
;

765 
roŸ
->
b
[
side
] = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_NODE
);

766  
√w
;

767 
	}
}

	@ebtree/ebpttree.c

23 
	~"eb±åì.h
"

25 
REGPRM2
 
eb±_node
 *
	$eb±_ö£π
(
eb_roŸ
 *
roŸ
, 
eb±_node
 *
√w
)

27  
	`__eb±_ö£π
(
roŸ
, 
√w
);

28 
	}
}

30 
REGPRM2
 
eb±_node
 *
	$eb±_lookup
(
eb_roŸ
 *
roŸ
, *
x
)

32  
	`__eb±_lookup
(
roŸ
, 
x
);

33 
	}
}

39 
REGPRM2
 
eb±_node
 *
	$eb±_lookup_À
(
eb_roŸ
 *
roŸ
, *
x
)

41 
eb±_node
 *
node
;

42 
eb_åoŸ_t
 *
åoŸ
;

44 
åoŸ
 = 
roŸ
->
b
[
EB_LEFT
];

45 i‡(
	`u∆ikñy
(
åoŸ
 =
NULL
))

46  
NULL
;

49 i‡((
	`eb_gëèg
(
åoŸ
Ë=
EB_LEAF
)) {

54 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

55 
eb±_node
, 
node
.
bønches
);

56 i‡(
node
->
key
 <
x
)

57  
node
;

59 
åoŸ
 = 
node
->node.
Àaf_p
;

62 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_NODE
),

63 
eb±_node
, 
node
.
bønches
);

65 i‡(
node
->node.
bô
 < 0) {

74 i‡(
node
->
key
 <
x
) {

75 
åoŸ
 = 
node
->node.
bønches
.
b
[
EB_RGHT
];

76 
	`eb_gëèg
(
åoŸ
Ë!
EB_LEAF
)

77 
åoŸ
 = (
	`eb_u¡ag
—roŸ, 
EB_NODE
))->
b
[
EB_RGHT
];

78  
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

79 
eb±_node
, 
node
.
bønches
);

82 
åoŸ
 = 
node
->node.
node_p
;

86 i‡((((
±r_t
)
x
 ^ (±r_t)
node
->
key
Ë>>Çode->node.
bô
Ë>
EB_NODE_BRANCHES
) {

91 i‡(((
±r_t
)
node
->
key
 >>Çode->node.
bô
Ë< (’å_t)
x
 >>Çode->node.bit)) {

92 
åoŸ
 = 
node
->node.
bønches
.
b
[
EB_RGHT
];

93  
	`eb±_íåy
(
	`eb_wÆk_down
(
åoŸ
, 
EB_RGHT
), 
eb±_node
, 
node
);

99 
åoŸ
 = 
node
->node.
node_p
;

102 
åoŸ
 = 
node
->node.
bønches
.
b
[((
±r_t
)
x
 >>Çode->node.
bô
Ë& 
EB_NODE_BRANCH_MASK
];

109 
	`eb_gëèg
(
åoŸ
Ë=
EB_LEFT
) {

113 i‡(
	`u∆ikñy
(
	`eb_˛πag
((
	`eb_u¡ag
(
åoŸ
, 
EB_LEFT
))->
b
[
EB_RGHT
]Ë=
NULL
))

114  
NULL
;

115 
åoŸ
 = (
	`eb_roŸ_to_node
(
	`eb_u¡ag
—roŸ, 
EB_LEFT
)))->
node_p
;

118 
åoŸ
 = (
	`eb_u¡ag
—roŸ, 
EB_RGHT
))->
b
[
EB_LEFT
];

119 
node
 = 
	`eb±_íåy
(
	`eb_wÆk_down
(
åoŸ
, 
EB_RGHT
), 
eb±_node
,Çode);

120  
node
;

121 
	}
}

127 
REGPRM2
 
eb±_node
 *
	$eb±_lookup_ge
(
eb_roŸ
 *
roŸ
, *
x
)

129 
eb±_node
 *
node
;

130 
eb_åoŸ_t
 *
åoŸ
;

132 
åoŸ
 = 
roŸ
->
b
[
EB_LEFT
];

133 i‡(
	`u∆ikñy
(
åoŸ
 =
NULL
))

134  
NULL
;

137 i‡((
	`eb_gëèg
(
åoŸ
Ë=
EB_LEAF
)) {

142 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

143 
eb±_node
, 
node
.
bønches
);

144 i‡(
node
->
key
 >
x
)

145  
node
;

147 
åoŸ
 = 
node
->node.
Àaf_p
;

150 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_NODE
),

151 
eb±_node
, 
node
.
bønches
);

153 i‡(
node
->node.
bô
 < 0) {

162 i‡(
node
->
key
 >
x
) {

163 
åoŸ
 = 
node
->node.
bønches
.
b
[
EB_LEFT
];

164 
	`eb_gëèg
(
åoŸ
Ë!
EB_LEAF
)

165 
åoŸ
 = (
	`eb_u¡ag
—roŸ, 
EB_NODE
))->
b
[
EB_LEFT
];

166  
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

167 
eb±_node
, 
node
.
bønches
);

170 
åoŸ
 = 
node
->node.
node_p
;

174 i‡((((
±r_t
)
x
 ^ (±r_t)
node
->
key
Ë>>Çode->node.
bô
Ë>
EB_NODE_BRANCHES
) {

179 i‡(((
±r_t
)
node
->
key
 >>Çode->node.
bô
Ë> (’å_t)
x
 >>Çode->node.bit)) {

180 
åoŸ
 = 
node
->node.
bønches
.
b
[
EB_LEFT
];

181  
	`eb±_íåy
(
	`eb_wÆk_down
(
åoŸ
, 
EB_LEFT
), 
eb±_node
, 
node
);

187 
åoŸ
 = 
node
->node.
node_p
;

190 
åoŸ
 = 
node
->node.
bønches
.
b
[((
±r_t
)
x
 >>Çode->node.
bô
Ë& 
EB_NODE_BRANCH_MASK
];

197 
	`eb_gëèg
(
åoŸ
Ë!
EB_LEFT
)

199 
åoŸ
 = (
	`eb_roŸ_to_node
(
	`eb_u¡ag
—roŸ, 
EB_RGHT
)))->
node_p
;

202 
åoŸ
 = (
	`eb_u¡ag
—roŸ, 
EB_LEFT
))->
b
[
EB_RGHT
];

203 i‡(
	`eb_˛πag
(
åoŸ
Ë=
NULL
)

204  
NULL
;

206 
node
 = 
	`eb±_íåy
(
	`eb_wÆk_down
(
åoŸ
, 
EB_LEFT
), 
eb±_node
,Çode);

207  
node
;

208 
	}
}

	@ebtree/ebpttree.h

21 #i‚de‡
_EBPTTREE_H


22 
	#_EBPTTREE_H


	)

24 
	~"ebåì.h
"

25 
	~"eb32åì.h
"

26 
	~"eb64åì.h
"

30 
	#eb±_íåy
(
±r
, 
ty≥
, 
membî
Ë
	`c⁄èöî_of
’å,Åy≥, membî)

	)

32 
	#EBPT_ROOT
 
EB_ROOT


	)

33 
	#EBPT_TREE_HEAD
 
EB_TREE_HEAD


	)

36 #i‚de‡
PTR_INT_TYPE


37 
	#PTR_INT_TYPE
 
size_t


	)

40 
PTR_INT_TYPE
 
	t±r_t
;

48 
	seb±_node
 {

49 
eb_node
 
	mnode
;

50 *
	mkey
;

60 
f‹˚ölöe
 
eb±_node
 *
	$eb±_fú°
(
eb_roŸ
 *
roŸ
)

62  
	`eb±_íåy
(
	`eb_fú°
(
roŸ
), 
eb±_node
, 
node
);

63 
	}
}

66 
f‹˚ölöe
 
eb±_node
 *
	$eb±_œ°
(
eb_roŸ
 *
roŸ
)

68  
	`eb±_íåy
(
	`eb_œ°
(
roŸ
), 
eb±_node
, 
node
);

69 
	}
}

72 
f‹˚ölöe
 
eb±_node
 *
	$eb±_√xt
(
eb±_node
 *
eb±
)

74  
	`eb±_íåy
(
	`eb_√xt
(&
eb±
->
node
), 
eb±_node
,Çode);

75 
	}
}

78 
f‹˚ölöe
 
eb±_node
 *
	$eb±_¥ev
(
eb±_node
 *
eb±
)

80  
	`eb±_íåy
(
	`eb_¥ev
(&
eb±
->
node
), 
eb±_node
,Çode);

81 
	}
}

84 
f‹˚ölöe
 
eb±_node
 *
	$eb±_√xt_unique
(
eb±_node
 *
eb±
)

86  
	`eb±_íåy
(
	`eb_√xt_unique
(&
eb±
->
node
), 
eb±_node
,Çode);

87 
	}
}

90 
f‹˚ölöe
 
eb±_node
 *
	$eb±_¥ev_unique
(
eb±_node
 *
eb±
)

92  
	`eb±_íåy
(
	`eb_¥ev_unique
(&
eb±
->
node
), 
eb±_node
,Çode);

93 
	}
}

98 
f‹˚ölöe
 
	$eb±_dñëe
(
eb±_node
 *
eb±
)

100 
	`eb_dñëe
(&
eb±
->
node
);

101 
	}
}

106 
f‹˚ölöe
 
eb±_node
 *
	$eb±_lookup
(
eb_roŸ
 *
roŸ
, *
x
)

109  (
eb±_node
 *)
	`eb32_lookup
(
roŸ
, (
u32
)(
PTR_INT_TYPE
)
x
);

111  (
eb±_node
 *)
	`eb64_lookup
(
roŸ
, (
u64
)(
PTR_INT_TYPE
)
x
);

112 
	}
}

114 
f‹˚ölöe
 
eb±_node
 *
	$eb±_lookup_À
(
eb_roŸ
 *
roŸ
, *
x
)

117  (
eb±_node
 *)
	`eb32_lookup_À
(
roŸ
, (
u32
)(
PTR_INT_TYPE
)
x
);

119  (
eb±_node
 *)
	`eb64_lookup_À
(
roŸ
, (
u64
)(
PTR_INT_TYPE
)
x
);

120 
	}
}

122 
f‹˚ölöe
 
eb±_node
 *
	$eb±_lookup_ge
(
eb_roŸ
 *
roŸ
, *
x
)

125  (
eb±_node
 *)
	`eb32_lookup_ge
(
roŸ
, (
u32
)(
PTR_INT_TYPE
)
x
);

127  (
eb±_node
 *)
	`eb64_lookup_ge
(
roŸ
, (
u64
)(
PTR_INT_TYPE
)
x
);

128 
	}
}

130 
f‹˚ölöe
 
eb±_node
 *
	$eb±_ö£π
(
eb_roŸ
 *
roŸ
, 
eb±_node
 *
√w
)

133  (
eb±_node
 *)
	`eb32_ö£π
(
roŸ
, (
eb32_node
 *)
√w
);

135  (
eb±_node
 *)
	`eb64_ö£π
(
roŸ
, (
eb64_node
 *)
√w
);

136 
	}
}

144 
f‹˚ölöe
 
	$__eb±_dñëe
(
eb±_node
 *
eb±
)

146 
	`__eb_dñëe
(&
eb±
->
node
);

147 
	}
}

149 
f‹˚ölöe
 
eb±_node
 *
	$__eb±_lookup
(
eb_roŸ
 *
roŸ
, *
x
)

152  (
eb±_node
 *)
	`__eb32_lookup
(
roŸ
, (
u32
)(
PTR_INT_TYPE
)
x
);

154  (
eb±_node
 *)
	`__eb64_lookup
(
roŸ
, (
u64
)(
PTR_INT_TYPE
)
x
);

155 
	}
}

157 
f‹˚ölöe
 
eb±_node
 *
	$__eb±_ö£π
(
eb_roŸ
 *
roŸ
, 
eb±_node
 *
√w
)

160  (
eb±_node
 *)
	`__eb32_ö£π
(
roŸ
, (
eb32_node
 *)
√w
);

162  (
eb±_node
 *)
	`__eb64_ö£π
(
roŸ
, (
eb64_node
 *)
√w
);

163 
	}
}

	@ebtree/ebsttree.c

23 
	~"eb°åì.h
"

29 
REGPRM2
 
ebmb_node
 *
	$eb°_lookup
(
eb_roŸ
 *
roŸ
, c⁄° *
x
)

31  
	`__eb°_lookup
(
roŸ
, 
x
);

32 
	}
}

39 
REGPRM3
 
ebmb_node
 *
	$eb°_lookup_Àn
(
eb_roŸ
 *
roŸ
, c⁄° *
x
, 
Àn
)

41 
ebmb_node
 *
node
;

43 
node
 = 
	`ebmb_lookup
(
roŸ
, 
x
, 
Àn
);

44 i‡(!
node
 ||Çode->
key
[
Àn
] != 0)

45  
NULL
;

46  
node
;

47 
	}
}

54 
REGPRM2
 
ebmb_node
 *
	$eb°_ö£π
(
eb_roŸ
 *
roŸ
, 
ebmb_node
 *
√w
)

56  
	`__eb°_ö£π
(
roŸ
, 
√w
);

57 
	}
}

	@ebtree/ebsttree.h

23 #i‚de‡
_EBSTTREE_H


24 
	#_EBSTTREE_H


	)

26 
	~"ebåì.h
"

27 
	~"ebmbåì.h
"

32 
REGPRM2
 
ebmb_node
 *
eb°_lookup
(
eb_roŸ
 *
roŸ
, c⁄° *
x
);

33 
REGPRM3
 
ebmb_node
 *
eb°_lookup_Àn
(
eb_roŸ
 *
roŸ
, c⁄° *
x
, 
Àn
);

34 
REGPRM2
 
ebmb_node
 *
eb°_ö£π
(
eb_roŸ
 *
roŸ
, ebmb_nodê*
√w
);

40 
f‹˚ölöe
 
ebmb_node
 *
	$__eb°_lookup
(
eb_roŸ
 *
roŸ
, c⁄° *
x
)

42 
ebmb_node
 *
node
;

43 
eb_åoŸ_t
 *
åoŸ
;

44 
bô
;

45 
node_bô
;

47 
åoŸ
 = 
roŸ
->
b
[
EB_LEFT
];

48 i‡(
	`u∆ikñy
(
åoŸ
 =
NULL
))

49  
NULL
;

51 
bô
 = 0;

53 i‡((
	`eb_gëèg
(
åoŸ
Ë=
EB_LEAF
)) {

54 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

55 
ebmb_node
, 
node
.
bønches
);

56 i‡(
	`°rcmp
((*)
node
->
key
, 
x
) == 0)

57  
node
;

59  
NULL
;

61 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_NODE
),

62 
ebmb_node
, 
node
.
bønches
);

63 
node_bô
 = 
node
->node.
bô
;

65 i‡(
node_bô
 < 0) {

70 i‡(
	`°rcmp
((*)
node
->
key
, 
x
) != 0)

71  
NULL
;

73 
åoŸ
 = 
node
->node.
bønches
.
b
[
EB_LEFT
];

74 
	`eb_gëèg
(
åoŸ
Ë!
EB_LEAF
)

75 
åoŸ
 = (
	`eb_u¡ag
—roŸ, 
EB_NODE
))->
b
[
EB_LEFT
];

76 
node
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

77 
ebmb_node
, 
node
.
bønches
);

78  
node
;

84 i‡(
	`likñy
(
bô
 >= 0)) {

85 
bô
 = 
	`°rög_equÆ_bôs
(
x
, 
node
->
key
, bit);

86 i‡(
	`likñy
(
bô
 < 
node_bô
)) {

87 i‡(
bô
 >= 0)

88  
NULL
;

95 i‡(
	`eb_gëèg
(
roŸ
->
b
[
EB_RGHT
]))

96  
node
;

100 
åoŸ
 = 
node
->node.
bønches
.
b
[(((*)
x
)[
node_bô
 >> 3] >>

101 (~
node_bô
 & 7)) & 1];

103 
	}
}

110 
f‹˚ölöe
 
ebmb_node
 *

111 
	$__eb°_ö£π
(
eb_roŸ
 *
roŸ
, 
ebmb_node
 *
√w
)

113 
ebmb_node
 *
ﬁd
;

114 
side
;

115 
eb_åoŸ_t
 *
åoŸ
;

116 
eb_åoŸ_t
 *
roŸ_right
 = 
roŸ
;

117 
diff
;

118 
bô
;

119 
ﬁd_node_bô
;

121 
side
 = 
EB_LEFT
;

122 
åoŸ
 = 
roŸ
->
b
[
EB_LEFT
];

123 
roŸ_right
 = 
roŸ
->
b
[
EB_RGHT
];

124 i‡(
	`u∆ikñy
(
åoŸ
 =
NULL
)) {

126 
roŸ
->
b
[
EB_LEFT
] = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEAF
);

127 
√w
->
node
.
Àaf_p
 = 
	`eb_dŸag
(
roŸ
, 
EB_LEFT
);

128 
√w
->
node
.
node_p
 = 
NULL
;

129  
√w
;

144 
bô
 = 0;

146 i‡(
	`u∆ikñy
(
	`eb_gëèg
(
åoŸ
Ë=
EB_LEAF
)) {

147 
eb_åoŸ_t
 *
√w_À·
, *
√w_rght
;

148 
eb_åoŸ_t
 *
√w_Àaf
, *
ﬁd_Àaf
;

150 
ﬁd
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_LEAF
),

151 
ebmb_node
, 
node
.
bønches
);

153 
√w_À·
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEFT
);

154 
√w_rght
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_RGHT
);

155 
√w_Àaf
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEAF
);

156 
ﬁd_Àaf
 = 
	`eb_dŸag
(&
ﬁd
->
node
.
bønches
, 
EB_LEAF
);

158 
√w
->
node
.
node_p
 = 
ﬁd
->node.
Àaf_p
;

175 i‡(
bô
 >= 0)

176 
bô
 = 
	`°rög_equÆ_bôs
(
√w
->
key
, 
ﬁd
->key, bit);

178 i‡(
bô
 < 0) {

184 i‡(
	`eb_gëèg
(
roŸ_right
))

185  
ﬁd
;

188 
ﬁd
->
node
.
Àaf_p
 = 
√w_À·
;

189 
√w
->
node
.
Àaf_p
 = 
√w_rght
;

190 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
ﬁd_Àaf
;

191 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
√w_Àaf
;

192 
√w
->
node
.
bô
 = -1;

193 
roŸ
->
b
[
side
] = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_NODE
);

194  
√w
;

197 
diff
 = 
	`cmp_bôs
(
√w
->
key
, 
ﬁd
->key, 
bô
);

198 i‡(
diff
 < 0) {

200 
√w
->
node
.
Àaf_p
 = 
√w_À·
;

201 
ﬁd
->
node
.
Àaf_p
 = 
√w_rght
;

202 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
√w_Àaf
;

203 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
ﬁd_Àaf
;

206 
ﬁd
->
node
.
Àaf_p
 = 
√w_À·
;

207 
√w
->
node
.
Àaf_p
 = 
√w_rght
;

208 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
ﬁd_Àaf
;

209 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
√w_Àaf
;

215 
ﬁd
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
åoŸ
, 
EB_NODE
),

216 
ebmb_node
, 
node
.
bønches
);

217 
ﬁd_node_bô
 = 
ﬁd
->
node
.
bô
;

225 i‡(
bô
 >0 && (bô < 
ﬁd_node_bô
 || old_node_bit < 0))

226 
bô
 = 
	`°rög_equÆ_bôs
(
√w
->
key
, 
ﬁd
->key, bit);

228 i‡(
	`u∆ikñy
(
bô
 < 0)) {

232 i‡(
ﬁd_node_bô
 < 0) {

237 
eb_node
 *
ªt
;

238 
ªt
 = 
	`eb_ö£π_dup
(&
ﬁd
->
node
, &
√w
->node);

239  
	`c⁄èöî_of
(
ªt
, 
ebmb_node
, 
node
);

243 i‡(
bô
 < 
ﬁd_node_bô
 || old_node_bit < 0) {

252 
eb_åoŸ_t
 *
√w_À·
, *
√w_rght
;

253 
eb_åoŸ_t
 *
√w_Àaf
, *
ﬁd_node
;

255 
√w_À·
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEFT
);

256 
√w_rght
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_RGHT
);

257 
√w_Àaf
 = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_LEAF
);

258 
ﬁd_node
 = 
	`eb_dŸag
(&
ﬁd
->
node
.
bønches
, 
EB_NODE
);

260 
√w
->
node
.
node_p
 = 
ﬁd
->node.node_p;

263 
diff
 = 
	`cmp_bôs
(
√w
->
key
, 
ﬁd
->key, 
bô
);

264 i‡(
diff
 < 0) {

265 
√w
->
node
.
Àaf_p
 = 
√w_À·
;

266 
ﬁd
->
node
.
node_p
 = 
√w_rght
;

267 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
√w_Àaf
;

268 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
ﬁd_node
;

271 
ﬁd
->
node
.
node_p
 = 
√w_À·
;

272 
√w
->
node
.
Àaf_p
 = 
√w_rght
;

273 
√w
->
node
.
bønches
.
b
[
EB_LEFT
] = 
ﬁd_node
;

274 
√w
->
node
.
bønches
.
b
[
EB_RGHT
] = 
√w_Àaf
;

280 
roŸ
 = &
ﬁd
->
node
.
bønches
;

281 
side
 = (
√w
->
key
[
ﬁd_node_bô
 >> 3] >> (~old_node_bit & 7)) & 1;

282 
åoŸ
 = 
roŸ
->
b
[
side
];

295 
√w
->
node
.
bô
 = bit;

296 
roŸ
->
b
[
side
] = 
	`eb_dŸag
(&
√w
->
node
.
bønches
, 
EB_NODE
);

297  
√w
;

298 
	}
}

	@ebtree/ebtree.c

21 
	~"ebåì.h
"

23 
	$eb_dñëe
(
eb_node
 *
node
)

25 
	`__eb_dñëe
(
node
);

26 
	}
}

29 
REGPRM1
 
eb_node
 *
	$eb_ö£π_dup
(
eb_node
 *
sub
, eb_nodê*
√w
)

31  
	`__eb_ö£π_dup
(
sub
, 
√w
);

32 
	}
}

	@ebtree/ebtree.h

256 #i‚de‡
_EBTREE_H


257 
	#_EBTREE_H


	)

259 
	~<°dlib.h
>

260 
	~"compûî.h
"

262 
ölöe
 
	$Ê¢z8_gíîic
(
x
)

264 
ªt
 = 0;

265 i‡(
x
 >> 4Ë{ x >>4; 
ªt
 += 4; }

266  
ªt
 + ((0xFFFFAA50U >> (
x
 << 1)) & 3) + 1;

267 
	}
}

272 #i‡
deföed
(
__i386__
Ë|| deföed(
__x86_64__
)

274 
ölöe
 
	$Ê¢z
(
x
)

276 
r
;

277 
	`__asm__
("bsrl %1,%0\n"

278 : "Ù" (
r
Ë: "rm" (
x
));

279  
r
+1;

280 
	}
}

282 
ölöe
 
	$Ê¢z8
(
x
)

284 
r
;

285 
	`__asm__
("movzbl %%al, %%eax\n"

287 : "Ù" (
r
Ë: "a" (
x
));

288  
r
+1;

289 
	}
}

293 
	#Ê¢z
(
___a
) ({ \

294 
___x
, 
___bôs
 = 0; \

295 
___x
 = (
___a
); \

296 i‡(
___x
 & 0xffff0000Ë{ ___x &0xffff0000; 
___bôs
 += 16;} \

297 i‡(
___x
 & 0xff00ff00Ë{ ___x &0xff00ff00; 
___bôs
 += 8;} \

298 i‡(
___x
 & 0xf0f0f0f0Ë{ ___x &0xf0f0f0f0; 
___bôs
 += 4;} \

299 i‡(
___x
 & 0xccccccccË{ ___x &0xcccccccc; 
___bôs
 += 2;} \

300 i‡(
___x
 & 0xØØØØË{ ___x &0xØØØØ; 
___bôs
 += 1;} \

301 
___bôs
 + 1; \

302 })

	)

304 
ölöe
 
	$Ê¢z8
(
x
)

306  
	`Ê¢z8_gíîic
(
x
);

307 
	}
}

312 
ölöe
 
	$Ês64
(
x
)

314 
h
;

315 
bôs
 = 32;

317 
h
 = 
x
 >> 32;

318 i‡(!
h
) {

319 
h
 = 
x
;

320 
bôs
 = 0;

322  
	`Ê¢z
(
h
Ë+ 
bôs
;

323 
	}
}

325 
	#Ês_auto
(
x
Ë(((xË> 4Ë? 
	`Ês64
(xË: 
	`Ê¢z
(x))

	)

330 #i‚de‡
c⁄èöî_of


331 
	#c⁄èöî_of
(
±r
, 
ty≥
, 
«me
Ë(—y≥ *)(((*)’å)Ë- (()&(—y≥ *)0)->«me)))

	)

335 
	#EB_NODE_BITS
 1

	)

336 
	#EB_NODE_BRANCHES
 (1 << 
EB_NODE_BITS
)

	)

337 
	#EB_NODE_BRANCH_MASK
 (
EB_NODE_BRANCHES
 - 1)

	)

342 
	#EB_LEFT
 0

	)

343 
	#EB_RGHT
 1

	)

344 
	#EB_LEAF
 0

	)

345 
	#EB_NODE
 1

	)

351 
	#EB_NORMAL
 0

	)

352 
	#EB_UNIQUE
 1

	)

359 
	teb_åoŸ_t
;

365 
	seb_roŸ
 {

366 
eb_åoŸ_t
 *
	mb
[
EB_NODE_BRANCHES
];

374 
	seb_node
 {

375 
eb_roŸ
 
	mbønches
;

376 
eb_åoŸ_t
 *
	mnode_p
;

377 
eb_åoŸ_t
 *
	mÀaf_p
;

378 
	mbô
;

379 
	mpfx
;

383 
	#eb_íåy
(
±r
, 
ty≥
, 
membî
Ë
	`c⁄èöî_of
’å,Åy≥, membî)

	)

389 
	#EB_ROOT
 \

390 (
eb_roŸ
) { \

391 .
b
 = {[0] = 
NULL
, [1] = NULL }, \

392 }

	)

394 
	#EB_ROOT_UNIQUE
 \

395 (
eb_roŸ
) { \

396 .
b
 = {[0] = 
NULL
, [1] = (*)1 }, \

397 }

	)

399 
	#EB_TREE_HEAD
(
«me
) \

400 
eb_roŸ
 
«me
 = 
EB_ROOT


	)

411 
ölöe
 
eb_åoŸ_t
 *
	$eb_dŸag
(c⁄° 
eb_roŸ
 *
roŸ
, c⁄° 
èg
)

413  (
eb_åoŸ_t
 *)((*)
roŸ
 + 
èg
);

414 
	}
}

421 
ölöe
 
eb_roŸ
 *
	$eb_u¡ag
(c⁄° 
eb_åoŸ_t
 *
åoŸ
, c⁄° 
èg
)

423  (
eb_roŸ
 *)((*)
åoŸ
 - 
èg
);

424 
	}
}

427 
ölöe
 
	$eb_gëèg
(
eb_åoŸ_t
 *
åoŸ
)

429  ()
åoŸ
 & 1;

430 
	}
}

435 
ölöe
 
eb_roŸ
 *
	$eb_˛πag
(c⁄° 
eb_åoŸ_t
 *
åoŸ
)

437  (
eb_roŸ
 *)(()
åoŸ
 & ~1UL);

438 
	}
}

441 
ölöe
 
eb_node
 *
	$eb_roŸ_to_node
(
eb_roŸ
 *
roŸ
)

443  
	`c⁄èöî_of
(
roŸ
, 
eb_node
, 
bønches
);

444 
	}
}

451 
ölöe
 
eb_node
 *
	$eb_wÆk_down
(
eb_åoŸ_t
 *
°¨t
, 
side
)

454 
	`eb_gëèg
(
°¨t
Ë=
EB_NODE
)

455 
°¨t
 = (
	`eb_u¡ag
(°¨t, 
EB_NODE
))->
b
[
side
];

457  
	`eb_roŸ_to_node
(
	`eb_u¡ag
(
°¨t
, 
EB_LEAF
));

458 
	}
}

464 
f‹˚ölöe
 
eb_node
 *

465 
	$__eb_ö£π_dup
(
eb_node
 *
sub
, eb_nodê*
√w
)

467 
eb_node
 *
hód
 = 
sub
;

469 
eb_åoŸ
 *
√w_À·
 = 
	`eb_dŸag
(&
√w
->
bønches
, 
EB_LEFT
);

470 
eb_åoŸ
 *
√w_rght
 = 
	`eb_dŸag
(&
√w
->
bønches
, 
EB_RGHT
);

471 
eb_åoŸ
 *
√w_Àaf
 = 
	`eb_dŸag
(&
√w
->
bønches
, 
EB_LEAF
);

474 
	`eb_gëèg
(
hód
->
bønches
.
b
[
EB_RGHT
]Ë!
EB_LEAF
) {

475 
eb_node
 *
œ°
 = 
hód
;

476 
hód
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(hód->
bønches
.
b
[
EB_RGHT
], 
EB_NODE
),

477 
eb_node
, 
bønches
);

478 i‡(
hód
->
bô
 > 
œ°
->bit + 1)

479 
sub
 = 
hód
;

483 i‡(
hód
->
bô
 < -1) {

485 
√w
->
bô
 = -1;

486 
sub
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
hód
->
bønches
.
b
[
EB_RGHT
], 
EB_LEAF
),

487 
eb_node
, 
bønches
);

488 
hód
->
bønches
.
b
[
EB_RGHT
] = 
	`eb_dŸag
(&
√w
->bønches, 
EB_NODE
);

490 
√w
->
node_p
 = 
sub
->
Àaf_p
;

491 
√w
->
Àaf_p
 = 
√w_rght
;

492 
sub
->
Àaf_p
 = 
√w_À·
;

493 
√w
->
bønches
.
b
[
EB_LEFT
] = 
	`eb_dŸag
(&
sub
->bønches, 
EB_LEAF
);

494 
√w
->
bønches
.
b
[
EB_RGHT
] = 
√w_Àaf
;

495  
√w
;

497 
side
;

503 
√w
->
bô
 = 
sub
->bit - 1;

504 
side
 = 
	`eb_gëèg
(
sub
->
node_p
);

505 
hód
 = 
	`c⁄èöî_of
(
	`eb_u¡ag
(
sub
->
node_p
, 
side
), 
eb_node
, 
bønches
);

506 
hód
->
bønches
.
b
[
side
] = 
	`eb_dŸag
(&
√w
->bønches, 
EB_NODE
);

508 
√w
->
node_p
 = 
sub
->node_p;

509 
√w
->
Àaf_p
 = 
√w_rght
;

510 
sub
->
node_p
 = 
√w_À·
;

511 
√w
->
bønches
.
b
[
EB_LEFT
] = 
	`eb_dŸag
(&
sub
->bønches, 
EB_NODE
);

512 
√w
->
bønches
.
b
[
EB_RGHT
] = 
√w_Àaf
;

513  
√w
;

515 
	}
}

523 
ölöe
 
	$eb_is_em±y
(
eb_roŸ
 *
roŸ
)

525  !
roŸ
->
b
[
EB_LEFT
];

526 
	}
}

529 
ölöe
 
eb_node
 *
	$eb_fú°
(
eb_roŸ
 *
roŸ
)

531  
	`eb_wÆk_down
(
roŸ
->
b
[0], 
EB_LEFT
);

532 
	}
}

535 
ölöe
 
eb_node
 *
	$eb_œ°
(
eb_roŸ
 *
roŸ
)

537  
	`eb_wÆk_down
(
roŸ
->
b
[0], 
EB_RGHT
);

538 
	}
}

541 
ölöe
 
eb_node
 *
	$eb_¥ev
(
eb_node
 *
node
)

543 
eb_åoŸ_t
 *
t
 = 
node
->
Àaf_p
;

545 
	`eb_gëèg
(
t
Ë=
EB_LEFT
) {

549 i‡(
	`u∆ikñy
(
	`eb_˛πag
((
	`eb_u¡ag
(
t
, 
EB_LEFT
))->
b
[
EB_RGHT
]Ë=
NULL
))

550  
NULL
;

551 
t
 = (
	`eb_roŸ_to_node
(
	`eb_u¡ag
—, 
EB_LEFT
)))->
node_p
;

554 
t
 = (
	`eb_u¡ag
—, 
EB_RGHT
))->
b
[
EB_LEFT
];

555  
	`eb_wÆk_down
(
t
, 
EB_RGHT
);

556 
	}
}

559 
ölöe
 
eb_node
 *
	$eb_√xt
(
eb_node
 *
node
)

561 
eb_åoŸ_t
 *
t
 = 
node
->
Àaf_p
;

563 
	`eb_gëèg
(
t
Ë!
EB_LEFT
)

565 
t
 = (
	`eb_roŸ_to_node
(
	`eb_u¡ag
—, 
EB_RGHT
)))->
node_p
;

568 
t
 = (
	`eb_u¡ag
—, 
EB_LEFT
))->
b
[
EB_RGHT
];

569 i‡(
	`eb_˛πag
(
t
Ë=
NULL
)

570  
NULL
;

571  
	`eb_wÆk_down
(
t
, 
EB_LEFT
);

572 
	}
}

576 
ölöe
 
eb_node
 *
	$eb_¥ev_unique
(
eb_node
 *
node
)

578 
eb_åoŸ_t
 *
t
 = 
node
->
Àaf_p
;

581 i‡(
	`eb_gëèg
(
t
Ë!
EB_LEFT
) {

582 
node
 = 
	`eb_roŸ_to_node
(
	`eb_u¡ag
(
t
, 
EB_RGHT
));

584 i‡(
node
->
bô
 >= 0)

586 
t
 = 
node
->
node_p
;

592 i‡(
	`u∆ikñy
(
	`eb_˛πag
((
	`eb_u¡ag
(
t
, 
EB_LEFT
))->
b
[
EB_RGHT
]Ë=
NULL
))

593  
NULL
;

594 
t
 = (
	`eb_roŸ_to_node
(
	`eb_u¡ag
—, 
EB_LEFT
)))->
node_p
;

598 
t
 = (
	`eb_u¡ag
—, 
EB_RGHT
))->
b
[
EB_LEFT
];

599  
	`eb_wÆk_down
(
t
, 
EB_RGHT
);

600 
	}
}

605 
ölöe
 
eb_node
 *
	$eb_√xt_unique
(
eb_node
 *
node
)

607 
eb_åoŸ_t
 *
t
 = 
node
->
Àaf_p
;

610 i‡(
	`eb_gëèg
(
t
Ë=
EB_LEFT
) {

611 i‡(
	`u∆ikñy
(
	`eb_˛πag
((
	`eb_u¡ag
(
t
, 
EB_LEFT
))->
b
[
EB_RGHT
]Ë=
NULL
))

612  
NULL
;

613 
node
 = 
	`eb_roŸ_to_node
(
	`eb_u¡ag
(
t
, 
EB_LEFT
));

615 i‡(
node
->
bô
 >= 0)

617 
t
 = 
node
->
node_p
;

621 
t
 = (
	`eb_roŸ_to_node
(
	`eb_u¡ag
—, 
EB_RGHT
)))->
node_p
;

626 
t
 = (
	`eb_u¡ag
—, 
EB_LEFT
))->
b
[
EB_RGHT
];

627 i‡(
	`eb_˛πag
(
t
Ë=
NULL
)

628  
NULL
;

629  
	`eb_wÆk_down
(
t
, 
EB_LEFT
);

630 
	}
}

636 
f‹˚ölöe
 
	$__eb_dñëe
(
eb_node
 *
node
)

638 
__œbñ__
 
dñëe_u∆ök
;

639 
pside
, 
gpside
, 
sibty≥
;

640 
eb_node
 *
∑ª¡
;

641 
eb_roŸ
 *
g∑ª¡
;

643 i‡(!
node
->
Àaf_p
)

647 
pside
 = 
	`eb_gëèg
(
node
->
Àaf_p
);

648 
∑ª¡
 = 
	`eb_roŸ_to_node
(
	`eb_u¡ag
(
node
->
Àaf_p
, 
pside
));

655 i‡(
	`eb_˛πag
(
∑ª¡
->
bønches
.
b
[
EB_RGHT
]Ë=
NULL
) {

657 
∑ª¡
->
bønches
.
b
[
EB_LEFT
] = 
NULL
;

658 
dñëe_u∆ök
;

666 
gpside
 = 
	`eb_gëèg
(
∑ª¡
->
node_p
);

667 
g∑ª¡
 = 
	`eb_u¡ag
(
∑ª¡
->
node_p
, 
gpside
);

669 
g∑ª¡
->
b
[
gpside
] = 
∑ª¡
->
bønches
.b[!
pside
];

670 
sibty≥
 = 
	`eb_gëèg
(
g∑ª¡
->
b
[
gpside
]);

672 i‡(
sibty≥
 =
EB_LEAF
) {

673 
	`eb_roŸ_to_node
(
	`eb_u¡ag
(
g∑ª¡
->
b
[
gpside
], 
EB_LEAF
))->
Àaf_p
 =

674 
	`eb_dŸag
(
g∑ª¡
, 
gpside
);

676 
	`eb_roŸ_to_node
(
	`eb_u¡ag
(
g∑ª¡
->
b
[
gpside
], 
EB_NODE
))->
node_p
 =

677 
	`eb_dŸag
(
g∑ª¡
, 
gpside
);

684 
∑ª¡
->
node_p
 = 
NULL
;

693 i‡(!
node
->
node_p
)

694 
dñëe_u∆ök
;

701 
∑ª¡
->
node_p
 = 
node
->node_p;

702 
∑ª¡
->
bønches
 = 
node
->branches;

703 
∑ª¡
->
bô
 = 
node
->bit;

706 
gpside
 = 
	`eb_gëèg
(
∑ª¡
->
node_p
);

707 
g∑ª¡
 = 
	`eb_u¡ag
(
∑ª¡
->
node_p
, 
gpside
);

708 
g∑ª¡
->
b
[
gpside
] = 
	`eb_dŸag
(&
∑ª¡
->
bønches
, 
EB_NODE
);

711 
pside
 = 0;Öside <= 1;Öside++) {

712 i‡(
	`eb_gëèg
(
∑ª¡
->
bønches
.
b
[
pside
]Ë=
EB_NODE
) {

713 
	`eb_roŸ_to_node
(
	`eb_u¡ag
(
∑ª¡
->
bønches
.
b
[
pside
], 
EB_NODE
))->
node_p
 =

714 
	`eb_dŸag
(&
∑ª¡
->
bønches
, 
pside
);

716 
	`eb_roŸ_to_node
(
	`eb_u¡ag
(
∑ª¡
->
bønches
.
b
[
pside
], 
EB_LEAF
))->
Àaf_p
 =

717 
	`eb_dŸag
(&
∑ª¡
->
bønches
, 
pside
);

720 
dñëe_u∆ök
:

722 
node
->
Àaf_p
 = 
NULL
;

724 
	}
}

733 
f‹˚ölöe
 
	$equÆ_bôs
(c⁄° *
a
,

734 c⁄° *
b
,

735 
ign‹e
, 
Àn
)

737 
ign‹e
 >>3, 
a
 +ign‹e, 
b
 += ignore, ignore <<= 3;

738 
ign‹e
 < 
Àn
; ) {

739 
c
;

741 
a
++; 
b
++;

742 
ign‹e
 += 8;

743 
c
 = 
b
[-1] ^ 
a
[-1];

745 i‡(
c
) {

751 
ign‹e
 -
	`Ê¢z8
(
c
);

755  
ign‹e
;

756 
	}
}

762 
f‹˚ölöe
 
	$check_bôs
(c⁄° *
a
,

763 c⁄° *
b
,

764 
skù
,

765 
Àn
)

767 
bô
, 
ªt
;

774 
bô
 = ~
Àn
 + (
skù
 << 3) + 9;

775 
ªt
 = 
a
[
skù
] ^ 
b
[skip];

776 i‡(
	`u∆ikñy
(
bô
 >= 0))

777  
ªt
 >> 
bô
;

779 
skù
++;

780 i‡(
ªt
)

781  
ªt
;

782 
ªt
 = 
a
[
skù
] ^ 
b
[skip];

783 
bô
 += 8;

784 i‡(
bô
 >= 0)

785  
ªt
 >> 
bô
;

787 
	}
}

799 
f‹˚ölöe
 
	$°rög_equÆ_bôs
(c⁄° *
a
,

800 c⁄° *
b
,

801 
ign‹e
)

803 
beg
;

804 
c
;

806 
beg
 = 
ign‹e
 >> 3;

812 
d
;

814 
c
 = 
a
[
beg
];

815 
d
 = 
b
[
beg
];

816 
beg
++;

818 
c
 ^
d
;

819 i‡(
c
)

821 i‡(!
d
)

829  (
beg
 << 3Ë- 
	`Ê¢z8
(
c
);

830 
	}
}

832 
f‹˚ölöe
 
	$cmp_bôs
(c⁄° *
a
, c⁄° *
b
, 
pos
)

834 
ofs
;

835 
bô_a
, 
bô_b
;

837 
ofs
 = 
pos
 >> 3;

838 
pos
 = ~pos & 7;

840 
bô_a
 = (
a
[
ofs
] >> 
pos
) & 1;

841 
bô_b
 = (
b
[
ofs
] >> 
pos
) & 1;

843  
bô_a
 - 
bô_b
;

844 
	}
}

846 
f‹˚ölöe
 
	$gë_bô
(c⁄° *
a
, 
pos
)

848 
ofs
;

850 
ofs
 = 
pos
 >> 3;

851 
pos
 = ~pos & 7;

852  (
a
[
ofs
] >> 
pos
) & 1;

853 
	}
}

856 
eb_dñëe
(
eb_node
 *
node
);

857 
REGPRM1
 
eb_node
 *
eb_ö£π_dup
(eb_nodê*
sub
, eb_nodê*
√w
);

	@include/common/appsession.h

1 #i‚de‡
_COMMON_APPSESS_H


2 
	#_COMMON_APPSESS_H


	)

7 
	#TBLCHKINT
 5000

	)

9 
	~<sys/time.h
>

11 
	~<comm⁄/c⁄fig.h
>

12 
	~<comm⁄/mem‹y.h
>

14 
	~<ty≥s/èsk.h
>

16 
	s≠p£ssi⁄s
 {

17 *
	m£ssid
;

18 *
	m£rvîid
;

19 
	mexpúe
;

20 
	mªque°_cou¡
;

21 
li°
 
	mhash_li°
;

22 } 
	t≠p£ss
;

24 
poﬁ_hód
 *
poﬁ2_≠p£ss
;

26 
	s≠p_poﬁ
 {

27 
poﬁ_hód
 *
	m£ssid
;

28 
poﬁ_hód
 *
	m£rvîid
;

31 
≠p_poﬁ
 
≠oﬁs
;

32 
have_≠p£ssi⁄
;

36 
m©ch_°r
(c⁄° *
key1
, c⁄° *
key2
);

39 
de°roy
(
≠p£ss
 *
d©a
);

41 
èsk
 *
≠p£ssi⁄_ª‰esh
(èsk *
t
);

42 
≠p£ssi⁄_èsk_öô
();

43 
≠p£ssi⁄_öô
();

44 
≠p£ssi⁄_˛ónup
();

	@include/common/base64.h

14 #i‚de‡
_COMMON_BASE64_H


15 
	#_COMMON_BASE64_H


	)

17 
	~<comm⁄/c⁄fig.h
>

19 
a2ba£64
(*
ö
, 
ûí
, *
out
, 
ﬁí
);

20 
ba£64dec
(c⁄° *
ö
, 
size_t
 
ûí
, *
out
, size_à
ﬁí
);

21 c⁄° *
s30tob64
(
ö
, *
out
);

22 
b64tos30
(c⁄° *
ö
);

24 c⁄° 
ba£64èb
[];

	@include/common/cfgparse.h

22 #i‚de‡
_COMMON_CFGPARSE_H


23 
	#_COMMON_CFGPARSE_H


	)

25 
	~<comm⁄/com∑t.h
>

26 
	~<comm⁄/c⁄fig.h
>

27 
	~<comm⁄/möi-˛i°.h
>

29 
	~<ty≥s/¥oxy.h
>

32 
	#CFG_NONE
 0

	)

33 
	#CFG_GLOBAL
 1

	)

34 
	#CFG_LISTEN
 2

	)

35 
	#CFG_USERLIST
 3

	)

37 
	scfg_keyw‹d
 {

38 
	m£˘i⁄
;

39 c⁄° *
	mkw
;

40 (*
	m∑r£
)(

41 **
	m¨gs
,

42 
	m£˘i⁄_ty≥
,

43 
¥oxy
 *
	mcuΩx
,

44 
¥oxy
 *
	mdeÂx
,

45 *
	mîr
,

46 
	mîæí
);

54 
	scfg_kw_li°
 {

55 
li°
 
	mli°
;

56 
cfg_keyw‹d
 
	mkw
[
VAR_ARRAY
];

60 
cfg_maxpc⁄n
;

61 
cfg_maxc⁄n
;

63 
cfg_∑r£_globÆ
(c⁄° *
fûe
, 
löíum
, **
¨gs
, 
öv
);

64 
cfg_∑r£_li°í
(c⁄° *
fûe
, 
löíum
, **
¨gs
, 
öv
);

65 
ªadcfgfûe
(c⁄° *
fûe
);

66 
cfg_ªgi°î_keyw‹ds
(
cfg_kw_li°
 *
kwl
);

67 
cfg_uƒegi°î_keyw‹ds
(
cfg_kw_li°
 *
kwl
);

68 
öô_deÁu…_ö°™˚
();

69 
check_c⁄fig_vÆidôy
();

	@include/common/compat.h

22 #i‚de‡
_COMMON_COMPAT_H


23 
	#_COMMON_COMPAT_H


	)

26 
	~<sys/ty≥s.h
>

27 
	~<sys/sockë.h
>

28 
	~<comm⁄/c⁄fig.h
>

29 
	~<comm⁄/°™d¨d.h
>

31 #i‚de‡
BITS_PER_INT


32 
	#BITS_PER_INT
 (8*())

	)

36 #i‚de‡
TCP_NODELAY


37 
	#TCP_NODELAY
 1

	)

40 #i‚de‡
SHUT_RD


41 
	#SHUT_RD
 0

	)

44 #i‚de‡
SHUT_WR


45 
	#SHUT_WR
 1

	)

49 #i‚de‡
MSG_NOSIGNAL


50 
	#MSG_NOSIGNAL
 0

	)

56 #i‚de‡
MSG_DONTWAIT


57 
	#MSG_DONTWAIT
 0

	)

61 #i‚de‡
MSG_MORE


62 
	#MSG_MORE
 0

	)

65 #i‡
deföed
(
TPROXY
Ë&& deföed(
NETFILTER
)

66 
	~<löux/ty≥s.h
>

67 
	~<löux/√tfûãr_ùv6.h
>

68 
	~<löux/√tfûãr_ùv4.h
>

72 #i‡
deföed
(
CONFIG_HAP_LINUX_TPROXY
)

73 #i‡!
deföed
(
IP_FREEBIND
)

74 
	#IP_FREEBIND
 15

	)

76 #i‡!
deföed
(
IP_TRANSPARENT
)

77 
	#IP_TRANSPARENT
 19

	)

86 #i‡!
deföed
(
SO_REUSEPORT
Ë&& deföed(
NETFILTER
)

87 #i‡ (
SO_REUSEADDR
 == 2)

88 
	#SO_REUSEPORT
 15

	)

89 #ñi‡ (
SO_REUSEADDR
 == 0x0004)

90 
	#SO_REUSEPORT
 0x0200

	)

94 #i‡
deföed
(
__dõéibc__
)

95 
	~<°rögs.h
>

	@include/common/compiler.h

22 #i‚de‡
_COMMON_COMPILER_H


23 
	#_COMMON_COMPILER_H


	)

29 #i‚de‡
VAR_ARRAY


30 #i‡ 
__GNUC__
 < 3

31 
	#VAR_ARRAY
 0

	)

33 
	#VAR_ARRAY


	)

44 #i‚de‡
REGPRM1


45 #i‡
CONFIG_REGPARM
 >1 && 
__GNUC__
 >= 3

46 
	#REGPRM1
 
	`__©åibuã__
((
	`ªg∑rm
(1)))

	)

48 
	#REGPRM1


	)

52 #i‚de‡
REGPRM2


53 #i‡
CONFIG_REGPARM
 >2 && 
__GNUC__
 >= 3

54 
	#REGPRM2
 
	`__©åibuã__
((
	`ªg∑rm
(2)))

	)

56 
	#REGPRM2
 
REGPRM1


	)

60 #i‚de‡
REGPRM3


61 #i‡
CONFIG_REGPARM
 >3 && 
__GNUC__
 >= 3

62 
	#REGPRM3
 
	`__©åibuã__
((
	`ªg∑rm
(3)))

	)

64 
	#REGPRM3
 
REGPRM2


	)

72 #i‡!
deföed
(
f‹˚ölöe
)

73 #i‡
__GNUC__
 < 3

74 
	#f‹˚ölöe
 
ölöe


	)

76 
	#f‹˚ölöe
 
ölöe
 
	`__©åibuã__
((
Æways_ölöe
))

	)

87 #i‡!
deföed
(
likñy
)

88 #i‡
__GNUC__
 < 3

89 
	#__buûtö_ex≥˘
(
x
,
y
Ë(x)

	)

90 
	#likñy
(
x
Ë(x)

	)

91 
	#u∆ikñy
(
x
Ë(x)

	)

92 #ñi‡
__GNUC__
 < 4

94 
	#likñy
(
x
Ë(
	`__buûtö_ex≥˘
((xË!0, 1))

	)

95 
	#u∆ikñy
(
x
Ë(
	`__buûtö_ex≥˘
((xË!0, 0))

	)

101 
	#likñy
(
x
Ë(x)

	)

102 
	#u∆ikñy
(
x
Ë(
	`__buûtö_ex≥˘
(()(x), 0))

	)

	@include/common/config.h

22 #i‚de‡
_COMMON_CONFIG_H


23 
	#_COMMON_CONFIG_H


	)

25 
	~<comm⁄/compûî.h
>

26 
	~<comm⁄/deÁu…s.h
>

33 
	#SCHEDULER_RESOLUTION
 9

	)

39 #i‚de‡ 
CONFIG_HAP_NO_MEM_OPTIM


40 
	#CONFIG_HAP_MEM_OPTIM


	)

46 #ifde‡
CONFIG_HAP_MALLOC


47 
	#MALLOC
 
CONFIG_HAP_MALLOC


	)

49 
	#MALLOC
 
mÆloc


	)

52 #ifde‡
CONFIG_HAP_CALLOC


53 
	#CALLOC
 
CONFIG_HAP_CALLOC


	)

55 
	#CALLOC
 
ˇŒoc


	)

58 #ifde‡
CONFIG_HAP_FREE


59 
	#FREE
 
CONFIG_HAP_FREE


	)

61 
	#FREE
 
‰ì


	)

	@include/common/debug.h

22 #i‚de‡
_COMMON_DEBUG_H


23 
	#_COMMON_DEBUG_H


	)

25 
	~<comm⁄/c⁄fig.h
>

27 #ifde‡
DEBUG_FULL


28 
	#DPRINTF
(
x
...Ë
	`Ârötf
(x)

	)

30 
	#DPRINTF
(
x
...)

	)

33 #ifde‡
DEBUG_FSM


34 
	#FSM_PRINTF
(
x
...Ë
	`Ârötf
(x)

	)

36 
	#FSM_PRINTF
(
x
...)

	)

42 
	#ABORT_NOW
(Ë(*(*)0=0)

	)

48 
	#TRACE
(
£ss
, 
fmt
, 
¨gs
...) do { \

49 
	`Ârötf
(
°dîr
, \

50 "%d.%06d [%s:%d %s] [£s†%p(%x)] " 
fmt
 "\n", \

51 ()
now
.
tv_£c
, (Íow.
tv_u£c
, \

52 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, \

53 
£ss
, sess?((
£ssi⁄
 *)£ss)->
uniq_id
:~0U, \

54 ##
¨gs
); \

55 } 0)

	)

	@include/common/defaults.h

22 #i‚de‡
_COMMON_DEFAULTS_H


23 
	#_COMMON_DEFAULTS_H


	)

34 #i‚de‡
BUFSIZE


35 
	#BUFSIZE
 16384

	)

39 #i‚de‡
MAXREWRITE


40 
	#MAXREWRITE
 (
BUFSIZE
 / 2)

	)

43 
	#REQURI_LEN
 1024

	)

44 
	#CAPTURE_LEN
 64

	)

47 #i‚de‡
LINESIZE


48 
	#LINESIZE
 2048

	)

52 
	#MAX_LINE_ARGS
 64

	)

55 
	#MAX_STATS_ARGS
 16

	)

58 
	#MAX_MATCH
 10

	)

62 #i‚de‡
MAX_HTTP_HDR


63 
	#MAX_HTTP_HDR
 ((
BUFSIZE
+79)/80)

	)

67 #i‚de‡
MAX_HDR_HISTORY


68 
	#MAX_HDR_HISTORY
 10

	)

73 #i‚de‡
MAX_READ_POLL_LOOPS


74 
	#MAX_READ_POLL_LOOPS
 4

	)

82 #i‚de‡
MIN_RECV_AT_ONCE_ENOUGH


83 
	#MIN_RECV_AT_ONCE_ENOUGH
 (7*1448)

	)

89 #i‚de‡
MAX_WRITE_POLL_LOOPS


90 
	#MAX_WRITE_POLL_LOOPS
 2

	)

96 #i‚de‡
MIN_RET_FOR_READ_LOOP


97 
	#MIN_RET_FOR_READ_LOOP
 1460

	)

102 #i‚de‡
MAX_POLL_EVENTS


103 
	#MAX_POLL_EVENTS
 200

	)

109 #i‚de‡
COOKIE_DELIM


110 
	#COOKIE_DELIM
 '~'

	)

115 #i‚de‡
COOKIE_DELIM_DATE


116 
	#COOKIE_DELIM_DATE
 '|'

	)

119 
	#CONN_RETRIES
 3

	)

121 
	#CHK_CONNTIME
 2000

	)

122 
	#DEF_CHKINTR
 2000

	)

123 
	#DEF_FALLTIME
 3

	)

124 
	#DEF_RISETIME
 2

	)

125 
	#DEF_CHECK_REQ
 "OPTIONS / HTTP/1.0\r\n"

	)

126 
	#DEF_SMTP_CHECK_REQ
 "HELOÜoˇlho°\r\n"

	)

127 
	#DEF_LDAP_CHECK_REQ
 "\x30\x0c\x02\x01\x01\x60\x07\x02\x01\x03\x04\x00\x80\x00"

	)

129 
	#DEF_HANA_ONERR
 
HANA_ONERR_FAILCHK


	)

130 
	#DEF_HANA_ERRLIMIT
 10

	)

133 
	#DEF_XFORWARDFOR_HDR
 "X-F‹w¨ded-F‹"

	)

136 
	#DEF_XORIGINALTO_HDR
 "X-OrigöÆ-To"

	)

147 #i‚de‡
SYSTEM_MAXCONN


148 #i‚de‡
DEFAULT_MAXCONN


149 
	#DEFAULT_MAXCONN
 2000

	)

152 #unde‡
DEFAULT_MAXCONN


153 
	#DEFAULT_MAXCONN
 
SYSTEM_MAXCONN


	)

162 #i‚de‡
SRV_CHK_INTER_THRES


163 
	#SRV_CHK_INTER_THRES
 1000

	)

170 #i‚de‡
STATS_VERSION_STRING


171 
	#STATS_VERSION_STRING
 " vîsi⁄ " 
HAPROXY_VERSION
 ",Ññó£d " 
HAPROXY_DATE


	)

177 #i‚de‡
MAX_SIGNAL


178 
	#MAX_SIGNAL
 256

	)

182 #i‚de‡
MAX_HOSTNAME_LEN


183 
	#MAX_HOSTNAME_LEN
 32

	)

187 #i‚de‡
HCHK_DESC_LEN


188 
	#HCHK_DESC_LEN
 128

	)

	@include/common/epoll.h

29 #i‚de‡
_COMMON_EPOLL_H


30 
	#_COMMON_EPOLL_H


	)

32 
	~<sys/ty≥s.h
>

33 
	~<löux/uni°d.h
>

35 
	~<comm⁄/c⁄fig.h
>

38 #i‚de‡
EPOLL_CTL_ADD


39 
	#EPOLL_CTL_ADD
 1

	)

40 
	#EPOLL_CTL_DEL
 2

	)

41 
	#EPOLL_CTL_MOD
 3

	)

45 #i‚de‡
EPOLLIN


46 
	#EPOLLIN
 1

	)

47 
	#EPOLLPRI
 2

	)

48 
	#EPOLLOUT
 4

	)

49 
	#EPOLLERR
 8

	)

50 
	#EPOLLHUP
 16

	)

51 
	#EPOLLONESHOT
 (1 << 30)

	)

52 
	#EPOLLET
 (1 << 31)

	)

55 
	sïﬁl_evít
 {

56 
uöt32_t
 
	mevíts
;

58 *
	m±r
;

59 
	mfd
;

60 
uöt32_t
 
	mu32
;

61 
uöt64_t
 
	mu64
;

62 } 
	md©a
;

66 #i‡
deföed
(
__powîpc__
Ë|| deföed(
__powîpc64__
)

67 
	#__NR_ïﬁl_¸óã
 236

	)

68 
	#__NR_ïﬁl_˘l
 237

	)

69 
	#__NR_ïﬁl_waô
 238

	)

70 #ñi‡
deföed
(
__•¨c__
Ë|| deföed(
__•¨c64__
)

71 
	#__NR_ïﬁl_¸óã
 193

	)

72 
	#__NR_ïﬁl_˘l
 194

	)

73 
	#__NR_ïﬁl_waô
 195

	)

74 #ñi‡
deföed
(
__x86_64__
)

75 
	#__NR_ïﬁl_¸óã
 213

	)

76 
	#__NR_ïﬁl_˘l
 214

	)

77 
	#__NR_ïﬁl_waô
 215

	)

78 #ñi‡
deföed
(
__Æpha__
)

79 
	#__NR_ïﬁl_¸óã
 407

	)

80 
	#__NR_ïﬁl_˘l
 408

	)

81 
	#__NR_ïﬁl_waô
 409

	)

82 #ñi‡
deföed
 (
__i386__
)

83 
	#__NR_ïﬁl_¸óã
 254

	)

84 
	#__NR_ïﬁl_˘l
 255

	)

85 
	#__NR_ïﬁl_waô
 256

	)

87 #w¨nög 
unsuµ‹ãd
 
¨chôe˘uª
, 
guessög
 
__NR_ïﬁl_¸óã
=254 
like
 
x86
...

88 
	#__NR_ïﬁl_¸óã
 254

	)

89 
	#__NR_ïﬁl_˘l
 255

	)

90 
	#__NR_ïﬁl_waô
 256

	)

94 
ïﬁl_¸óã
(
size
);

95 
ïﬁl_˘l
(
ïfd
, 
›
, 
fd
, 
ïﬁl_evít
 * 
evít
);

96 
ïﬁl_waô
(
ïfd
, 
ïﬁl_evít
 * 
evíts
, 
maxevíts
, 
timeout
);

	@include/common/errors.h

22 #i‚de‡
_COMMON_ERRORS_H


23 
	#_COMMON_ERRORS_H


	)

31 
	#ERR_NONE
 0x00

	)

32 
	#ERR_RETRYABLE
 0x01

	)

33 
	#ERR_FATAL
 0x02

	)

34 
	#ERR_ABORT
 0x04

	)

35 
	#ERR_WARN
 0x08

	)

36 
	#ERR_ALERT
 0x10

	)

38 
	#ERR_CODE
 (
ERR_RETRYABLE
|
ERR_FATAL
|
ERR_ABORT
Ë

	)

	@include/common/memory.h

22 #i‚de‡
_COMMON_MEMORY_H


23 
	#_COMMON_MEMORY_H


	)

25 
	~<°dlib.h
>

27 
	~<comm⁄/c⁄fig.h
>

28 
	~<comm⁄/möi-˛i°.h
>

35 
	#poﬁ_Æloc_‰om
(
__poﬁ
, 
__Àn
) \

37 *
__p
; \

38 i‡((
__p
 = (
__poﬁ
)Ë=
NULL
) \

39 
__p
 = 
	`mÆloc
(((
__Àn
) >=  (*)) ? \

40 (
__Àn
) : (*)); \

42 
__poﬁ
 = *(**)(__pool); \

44 
__p
; \

45 })

	)

55 
	#poﬁ_‰ì_to
(
__poﬁ
, 
__±r
) \

57 *(**)(
__±r
Ë(*)(
__poﬁ
); \

58 
__poﬁ
 = (*)(
__±r
); \

59 })

	)

62 #ifde‡ 
CONFIG_HAP_MEM_OPTIM


69 
	#poﬁ_Æloc
(
ty≥
) \

71 *
__p
; \

72 i‡((
__p
 = 
poﬁ_
##
ty≥
Ë=
NULL
) \

73 
__p
 = 
	`mÆloc
(
sizeof_
##
ty≥
); \

75 
poﬁ_
##
ty≥
 = *(**)pool_##type; \

77 
__p
; \

78 })

	)

88 
	#poﬁ_‰ì
(
ty≥
, 
±r
) \

90 *(**)
±r
 = (*)
poﬁ_
##
ty≥
; \

91 
poﬁ_
##
ty≥
 = (*)
±r
; \

92 })

	)

95 
	#poﬁ_Æloc
(
ty≥
Ë(
	`ˇŒoc
(1,
sizeof_
##ty≥))

	)

96 
	#poﬁ_‰ì
(
ty≥
, 
±r
Ë(
	`‰ì
’å))

	)

103 
ölöe
 
	$poﬁ_de°roy
(**
poﬁ
)

105 *
ãmp
, *
√xt
;

106 
√xt
 = 
poﬁ
;

107 
√xt
) {

108 
ãmp
 = 
√xt
;

109 
√xt
 = *(**)
ãmp
;

110 
	`‰ì
(
ãmp
);

112 
	}
}

117 
	#MEM_F_SHARED
 0x1

	)

119 
	spoﬁ_hód
 {

120 **
	m‰ì_li°
;

121 
li°
 
	mli°
;

122 
	mu£d
;

123 
	mÆloˇãd
;

124 
	mlimô
;

125 
	mmöavaû
;

126 
	msize
;

127 
	mÊags
;

128 
	mu£rs
;

129 
	m«me
[12];

136 *
poﬁ_ªfûl_Æloc
(
poﬁ_hód
 *
poﬁ
);

142 
poﬁ_hód
 *
¸óã_poﬁ
(*
«me
, 
size
, 
Êags
);

146 
dump_poﬁs
();

151 
poﬁ_Êush2
(
poﬁ_hód
 *
poﬁ
);

157 
poﬁ_gc2
();

163 *
poﬁ_de°roy2
(
poﬁ_hód
 *
poﬁ
);

171 
	#poﬁ_Æloc2
(
poﬁ
) \

173 *
__p
; \

174 i‡((
__p
 = 
poﬁ
->
‰ì_li°
Ë=
NULL
) \

175 
__p
 = 
	`poﬁ_ªfûl_Æloc
(
poﬁ
); \

177 
poﬁ
->
‰ì_li°
 = *(**)pool->free_list; \

178 
poﬁ
->
u£d
++; \

180 
__p
; \

181 })

	)

192 
	#poﬁ_‰ì2
(
poﬁ
, 
±r
) \

194 i‡(
	`likñy
((
±r
Ë!
NULL
)) { \

195 *(**)
±r
 = (*)
poﬁ
->
‰ì_li°
;\

196 
poﬁ
->
‰ì_li°
 = (*)
±r
; \

197 
poﬁ
->
u£d
--; \

199 })

	)

	@include/common/mini-clist.h

7 #i‚de‡
_COMMON_MINI_CLIST_H


8 
	#_COMMON_MINI_CLIST_H


	)

10 
	~<comm⁄/c⁄fig.h
>

17 
	sli°
 {

18 
li°
 *
	mn
;

19 
li°
 *
	mp
;

31 
	sbªf
 {

32 
li°
 
	mu£rs
;

33 
li°
 *
	mªf
;

37 
	sw‹dli°
 {

38 
li°
 
	mli°
;

39 *
	ms
;

43 
	sc⁄d_w‹dli°
 {

44 
li°
 
	mli°
;

45 *
	mc⁄d
;

46 *
	ms
;

52 #unde‡
LIST_HEAD


53 #unde‡
LIST_INIT


54 #unde‡
LIST_NEXT


56 
	#LIST_HEAD
(
a
Ë((*)(&◊)))

	)

58 
	#LIST_INIT
(
l
Ë(÷)->
n
 = (l)->
p
 = (l))

	)

60 
	#LIST_HEAD_INIT
(
l
Ë{ &l, &»}

	)

71 
	#DLIST_ADD
(
lh
, 
ñ
Ë({ 
	`ty≥of
”lË
__ªt
 = (ñ); __ªt->
n
 = (*)÷h); __ªt->
p
 = (*)&÷h); i‡(
	`likñy
(__ªt->¿!
NULL
)Ë__ªt->n->∞__ªt; (lhË—y≥of÷h))&__ªt->n; __ªt; })

	)

74 
	#DLIST_DEL
(
ñ
Ë({ 
	`ty≥of
”lË
__ªt
 = (ñ); i‡(
	`likñy
(__ªt->
n
 !
NULL
)Ë__ªt->n->
p
 = __ªt->p; __ªt->p->¿__ªt->n; __ªt; })

	)

88 
	#f‹óch_dli°_ôem_c°
(
ôî©‹
, 
li°_hód
, 
°ru˘_ty≥
, 
°ru˘_membî
) \

89 (
ôî©‹
Ë
	`LIST_ELEM
(&(
li°_hód
), 
°ru˘_ty≥
, 
°ru˘_membî
.
n
); \

90 ((
ôî©‹
)->
°ru˘_membî
.
n
 !
NULL
) && \

91 (((
ôî©‹
Ë
	`LIST_ELEM
((ôî©‹)->
°ru˘_membî
.
n
, 
°ru˘_ty≥
, struct_member.n)), 1);\

92 )

	)

94 
	#f‹óch_dli°_ôem
(
ôî©‹
, 
v¨_li°_hód
, 
°ru˘_ty≥
, 
°ru˘_membî
) \

95 (
v¨_li°_hód
 !
NULL
) && \

96 ((
v¨_li°_hód
=((
ôî©‹
)=
	`LIST_ELEM
(v¨_li°_hód, 
°ru˘_ty≥
, 
°ru˘_membî
.
n
))->°ru˘_membî.n), 1))

	)

103 
	#whûe_dli°_ôem
(
ôî©‹
, 
v¨_li°_hód
, 
°ru˘_ty≥
, 
°ru˘_membî
) \

104 (
v¨_li°_hód
 !
NULL
) && \

105 (((
ôî©‹
)=
	`LIST_ELEM
(
v¨_li°_hód
, 
°ru˘_ty≥
, 
°ru˘_membî
.
n
)),1))

	)

111 
	#LIST_ADD
(
lh
, 
ñ
Ë({ (ñ)->
n
 = (lh)->n; (ñ)->n->
p
 = (lh)->¿”l); (ñ)->∞÷h); (ñ); })

	)

114 
	#LIST_ADDQ
(
lh
, 
ñ
Ë({ (ñ)->
p
 = (lh)->p; (ñ)->p->
n
 = (lh)->∞”l); (ñ)->¿÷h); (ñ); })

	)

117 
	#LIST_DEL
(
ñ
Ë({ 
	`ty≥of
”lË
__ªt
 = (ñ); (ñ)->
n
->
p
 = (ñ)->p; (ñ)->p->¿”l)->n; (__ªt); })

	)

124 
	#LIST_ELEM
(
lh
, 
±
, 
ñ
Ë(’t)(((*)÷h)Ë- ((*)&(’t)
NULL
)->ñ)))

	)

127 
	#LIST_ISEMPTY
(
lh
Ë(÷h)->
n
 =÷h))

	)

134 
	#LIST_NEXT
(
lh
, 
±
, 
ñ
Ë(
	`LIST_ELEM
(÷h)->
n
,Öt,Él))

	)

141 
	#LIST_PREV
(
lh
, 
±
, 
ñ
Ë(
	`LIST_ELEM
(÷h)->
p
,Öt,Él))

	)

154 
	#FOREACH_ITEM
(
ôî©‹
, 
li°_hód
, 
íd_ôem
, 
°ru˘_ty≥
, 
°ru˘_membî
) \

155 
ôî©‹
 = 
íd_ôem
 = 
	`LIST_ELEM
(
li°_hód
, 
°ru˘_ty≥
, 
°ru˘_membî
); \

156 ((
ôî©‹
Ë
	`LIST_ELEM
((ôî©‹)->
°ru˘_membî
.
n
, \

157 
°ru˘_ty≥
, 
°ru˘_membî
)Ë!(
íd_ôem
))

	)

166 
	#FOREACH_ITEM_SAFE
(
ôî©‹
, 
backup
, 
li°_hód
, 
íd_ôem
, 
°ru˘_ty≥
, 
°ru˘_membî
) \

167 
íd_ôem
 = 
	`LIST_ELEM
(
li°_hód
, 
°ru˘_ty≥
, 
°ru˘_membî
); \

168 
ôî©‹
 = 
	`LIST_ELEM
((
íd_ôem
)->
°ru˘_membî
.
n
, 
°ru˘_ty≥
, struct_member); \

169 i‡((
ôî©‹
Ë!(
íd_ôem
)) \

170 
backup
 = 
	`LIST_ELEM
((
ôî©‹
)->
°ru˘_membî
.
n
, 
°ru˘_ty≥
, struct_member); \

171  ; (
ôî©‹
Ë!(
íd_ôem
); (ôî©‹Ë(
backup
), \

172 
backup
 = 
	`LIST_ELEM
((
ôî©‹
)->
°ru˘_membî
.
n
, 
°ru˘_ty≥
, såu˘_membî))

	)

182 
	#li°_f‹_óch_íåy
(
ôem
, 
li°_hód
, 
membî
) \

183 
ôem
 = 
	`LIST_ELEM
((
li°_hód
)->
n
, 
	`ty≥of
(ôem), 
membî
); \

184 &
ôem
->
membî
 !(
li°_hód
); \

185 
ôem
 = 
	`LIST_ELEM
(ôem->
membî
.
n
, 
	`ty≥of
(ôem), membî))

	)

195 
	#li°_f‹_óch_íåy_ß„
(
ôem
, 
back
, 
li°_hód
, 
membî
) \

196 
ôem
 = 
	`LIST_ELEM
((
li°_hód
)->
n
, 
	`ty≥of
(ôem), 
membî
), \

197 
back
 = 
	`LIST_ELEM
(
ôem
->
membî
.
n
, 
	`ty≥of
(item), member); \

198 &
ôem
->
membî
 !(
li°_hód
); \

199 
ôem
 = 
back
, back = 
	`LIST_ELEM
(back->
membî
.
n
, 
	`ty≥of
(back), membî))

	)

	@include/common/rbtree.h

94 #i‚def 
_LINUX_RBTREE_H


95 
	#_LINUX_RBTREE_H


	)

102 
	srb_node


104 
rb_node
 *
	mrb_∑ª¡
;

105 
	mrb_cﬁ‹
;

106 
	#RB_RED
 0

	)

107 
	#RB_BLACK
 1

	)

108 
rb_node
 *
	mrb_right
;

109 
rb_node
 *
	mrb_À·
;

112 
	srb_roŸ


114 
rb_node
 *
	mrb_node
;

118 
	#c⁄èöî_of
(
±r
, 
ty≥
, 
membî
) ({ \

119 c⁄° 
	`ty≥of
–((
ty≥
 *)0)->
membî
 ) *
__m±r
 = (
±r
); \

120 (
ty≥
 *)–(*)
__m±r
 - 
	`off£tof
—y≥,
membî
Ë);})

	)

121 
	#off£tof
(
TYPE
, 
MEMBER
Ë((
size_t
Ë&((TYPE *)0)->MEMBER)

	)

124 
	#RB_ROOT
 (
rb_roŸ
Ë{ 
NULL
, }

	)

125 
	#rb_íåy
(
±r
, 
ty≥
, 
membî
Ë
	`c⁄èöî_of
’å,Åy≥, membî)

	)

127 
rb_ö£π_cﬁ‹
(
rb_node
 *, 
rb_roŸ
 *);

128 
rb_îa£
(
rb_node
 *, 
rb_roŸ
 *);

131 
rb_node
 *
rb_√xt
(rb_node *);

132 
rb_node
 *
rb_¥ev
(rb_node *);

133 
rb_node
 *
rb_fú°
(
rb_roŸ
 *);

134 
rb_node
 *
rb_œ°
(
rb_roŸ
 *);

137 
rb_ª∂a˚_node
(
rb_node
 *
vi˘im
, rb_nodê*
√w
,

138 
rb_roŸ
 *
roŸ
);

140 
ölöe
 
	$rb_lök_node
(
rb_node
 * 
node
, rb_nodê* 
∑ª¡
,

141 
rb_node
 ** 
rb_lök
)

143 
node
->
rb_∑ª¡
 = 
∑ª¡
;

144 
node
->
rb_cﬁ‹
 = 
RB_RED
;

145 
node
->
rb_À·
 =Çode->
rb_right
 = 
NULL
;

147 *
rb_lök
 = 
node
;

148 
	}
}

	@include/common/regex.h

22 #i‚de‡
_COMMON_REGEX_H


23 
	#_COMMON_REGEX_H


	)

25 
	~<comm⁄/c⁄fig.h
>

27 #ifde‡
USE_PCRE


28 
	~<p¸e.h
>

29 
	~<p¸ïosix.h
>

31 
	~<ªgex.h
>

35 
	#ACT_ALLOW
 0

	)

36 
	#ACT_REPLACE
 1

	)

37 
	#ACT_REMOVE
 2

	)

38 
	#ACT_DENY
 3

	)

39 
	#ACT_PASS
 4

	)

40 
	#ACT_TARPIT
 5

	)

41 
	#ACT_SETBE
 6

	)

43 
	shdr_exp
 {

44 
hdr_exp
 *
	m√xt
;

45 c⁄° 
ªgex_t
 *
	m¥eg
;

46 
	ma˘i⁄
;

47 c⁄° *
	mª∂a˚
;

48 *
	mc⁄d
;

51 
ªgm©ch_t
 
pm©ch
[
MAX_MATCH
];

53 
exp_ª∂a˚
(*
d°
, *
§c
, c⁄° *
°r
, c⁄° 
ªgm©ch_t
 *
m©ches
);

54 c⁄° *
check_ª∂a˚_°rög
(c⁄° *
°r
);

55 c⁄° *
chaö_ªgex
(
hdr_exp
 **
hód
, c⁄° 
ªgex_t
 *
¥eg
,

56 
a˘i⁄
, c⁄° *
ª∂a˚
, *
c⁄d
);

	@include/common/sessionhash.h

1 #i‚de‡
SESSION_HASH_H


2 
	#SESSION_HASH_H


	)

15 
	~<comm⁄/≠p£ssi⁄.h
>

17 #i‚de‡
TABLESHIFT


18 
	#TABLESHIFT
 11

	)

20 
	#TABLESIZE
 (1UL << 
TABLESHIFT
)

	)

21 
	#TABLEMASK
 (
TABLESIZE
 - 1)

	)

27 
	s≠p£ssi⁄_hash


29 
li°
 *
	mèbÀ
;

30 (*
	mde°roy
)(
	m≠p£ss
 *);

33 
≠p£ssi⁄_hash_f
(*);

34 
≠p£ssi⁄_hash_öô
(
≠p£ssi⁄_hash
 *
hash
,

35 (*
de°roy
)(
≠p£ss
*));

36 
	`≠p£ssi⁄_hash_ö£π
(
≠p£ssi⁄_hash
 *
hash
,

37 
≠p£ssi⁄s
 *
£ssi⁄
);

38 
≠p£ssi⁄s
 *
	`≠p£ssi⁄_hash_lookup
(
≠p£ssi⁄_hash
 *
hash
,

39 *
key
);

40 
	`≠p£ssi⁄_hash_ªmove
(
≠p£ssi⁄_hash
 *
hash
,

41 
≠p£ssi⁄s
 *
£ssi⁄
);

43 
	`≠p£ssi⁄_hash_de°roy
(
≠p£ssi⁄_hash
 *
hash
);

44 #i‡
	`deföed
(
DEBUG_HASH
)

45 
	`≠p£ssi⁄_hash_dump
(
≠p£ssi⁄_hash
 *
hash
);

58 
	#as_hash_f‹_óch_íåy_ß„
(
idx
, 
ôem
, 
back
, 
hash
, 
membî
) \

59 
idx
 = 0; idx < 
TABLESIZE
; idx++) \

60 
	`li°_f‹_óch_íåy_ß„
(
ôem
, 
back
, &((
hash
)->
èbÀ
[
idx
]), 
membî
)

	)

	@include/common/standard.h

22 #i‚de‡
_COMMON_STANDARD_H


23 
	#_COMMON_STANDARD_H


	)

25 
	~<limôs.h
>

26 
	~<°rög.h
>

27 
	~<time.h
>

28 
	~<sys/ty≥s.h
>

29 
	~<√töë/ö.h
>

30 
	~<comm⁄/c⁄fig.h
>

31 
	~<eb32åì.h
>

32 
	~<¥Ÿo/fd.h
>

36 
	#UBOUND
(
a
, 
max
Ë({ 
	`ty≥of
◊Ë
b
 = (max); i‡(◊Ë> bË◊Ëb; (a); })

	)

39 
	#LBOUND
(
a
, 
mö
Ë({ 
	`ty≥of
◊Ë
b
 = (mö); i‡(◊Ë< bË◊Ëb; (a); })

	)

43 
	#POWEROF2
(
x
Ë(((xË& ((x)-1)Ë=0)

	)

52 
°æ˝y2
(*
d°
, c⁄° *
§c
, 
size
);

58 
ôﬂ_°r
[][171];

59 *
u…ﬂ_r
(
n
, *
buf„r
, 
size
);

60 c⁄° *
uŒtoh_r
(
n
, *
buf„r
, 
size
);

61 
ölöe
 c⁄° *
	$u…ﬂ
(
n
)

63  
	`u…ﬂ_r
(
n
, 
ôﬂ_°r
[0], (itoa_str[0]));

64 
	}
}

69 
	#U2A0
(
n
Ë({ 
	`u…ﬂ_r
(“), 
ôﬂ_°r
[0], (ôﬂ_°r[0])); })

	)

70 
	#U2A1
(
n
Ë({ 
	`u…ﬂ_r
(“), 
ôﬂ_°r
[1], (ôﬂ_°r[1])); })

	)

71 
	#U2A2
(
n
Ë({ 
	`u…ﬂ_r
(“), 
ôﬂ_°r
[2], (ôﬂ_°r[2])); })

	)

72 
	#U2A3
(
n
Ë({ 
	`u…ﬂ_r
(“), 
ôﬂ_°r
[3], (ôﬂ_°r[3])); })

	)

73 
	#U2A4
(
n
Ë({ 
	`u…ﬂ_r
(“), 
ôﬂ_°r
[4], (ôﬂ_°r[4])); })

	)

74 
	#U2A5
(
n
Ë({ 
	`u…ﬂ_r
(“), 
ôﬂ_°r
[5], (ôﬂ_°r[5])); })

	)

75 
	#U2A6
(
n
Ë({ 
	`u…ﬂ_r
(“), 
ôﬂ_°r
[6], (ôﬂ_°r[6])); })

	)

76 
	#U2A7
(
n
Ë({ 
	`u…ﬂ_r
(“), 
ôﬂ_°r
[7], (ôﬂ_°r[7])); })

	)

77 
	#U2A8
(
n
Ë({ 
	`u…ﬂ_r
(“), 
ôﬂ_°r
[8], (ôﬂ_°r[8])); })

	)

78 
	#U2A9
(
n
Ë({ 
	`u…ﬂ_r
(“), 
ôﬂ_°r
[9], (ôﬂ_°r[9])); })

	)

81 
	#U2H0
(
n
Ë({ 
	`uŒtoh_r
(“), 
ôﬂ_°r
[0], (ôﬂ_°r[0])); })

	)

82 
	#U2H1
(
n
Ë({ 
	`uŒtoh_r
(“), 
ôﬂ_°r
[1], (ôﬂ_°r[1])); })

	)

83 
	#U2H2
(
n
Ë({ 
	`uŒtoh_r
(“), 
ôﬂ_°r
[2], (ôﬂ_°r[2])); })

	)

84 
	#U2H3
(
n
Ë({ 
	`uŒtoh_r
(“), 
ôﬂ_°r
[3], (ôﬂ_°r[3])); })

	)

85 
	#U2H4
(
n
Ë({ 
	`uŒtoh_r
(“), 
ôﬂ_°r
[4], (ôﬂ_°r[4])); })

	)

86 
	#U2H5
(
n
Ë({ 
	`uŒtoh_r
(“), 
ôﬂ_°r
[5], (ôﬂ_°r[5])); })

	)

87 
	#U2H6
(
n
Ë({ 
	`uŒtoh_r
(“), 
ôﬂ_°r
[6], (ôﬂ_°r[6])); })

	)

88 
	#U2H7
(
n
Ë({ 
	`uŒtoh_r
(“), 
ôﬂ_°r
[7], (ôﬂ_°r[7])); })

	)

89 
	#U2H8
(
n
Ë({ 
	`uŒtoh_r
(“), 
ôﬂ_°r
[8], (ôﬂ_°r[8])); })

	)

90 
	#U2H9
(
n
Ë({ 
	`uŒtoh_r
(“), 
ôﬂ_°r
[9], (ôﬂ_°r[9])); })

	)

100 c⁄° *
limô_r
(
n
, *
buf„r
, 
size
, c⁄° *
Æt
);

105 
	#LIM2A0
(
n
, 
Æt
Ë({ 
	`limô_r
(“), 
ôﬂ_°r
[0], (ôﬂ_°r[0]), (Æt)); })

	)

106 
	#LIM2A1
(
n
, 
Æt
Ë({ 
	`limô_r
(“), 
ôﬂ_°r
[1], (ôﬂ_°r[1]), (Æt)); })

	)

107 
	#LIM2A2
(
n
, 
Æt
Ë({ 
	`limô_r
(“), 
ôﬂ_°r
[2], (ôﬂ_°r[2]), (Æt)); })

	)

108 
	#LIM2A3
(
n
, 
Æt
Ë({ 
	`limô_r
(“), 
ôﬂ_°r
[3], (ôﬂ_°r[3]), (Æt)); })

	)

109 
	#LIM2A4
(
n
, 
Æt
Ë({ 
	`limô_r
(“), 
ôﬂ_°r
[4], (ôﬂ_°r[4]), (Æt)); })

	)

110 
	#LIM2A5
(
n
, 
Æt
Ë({ 
	`limô_r
(“), 
ôﬂ_°r
[5], (ôﬂ_°r[5]), (Æt)); })

	)

111 
	#LIM2A6
(
n
, 
Æt
Ë({ 
	`limô_r
(“), 
ôﬂ_°r
[6], (ôﬂ_°r[6]), (Æt)); })

	)

112 
	#LIM2A7
(
n
, 
Æt
Ë({ 
	`limô_r
(“), 
ôﬂ_°r
[7], (ôﬂ_°r[7]), (Æt)); })

	)

113 
	#LIM2A8
(
n
, 
Æt
Ë({ 
	`limô_r
(“), 
ôﬂ_°r
[8], (ôﬂ_°r[8]), (Æt)); })

	)

114 
	#LIM2A9
(
n
, 
Æt
Ë({ 
	`limô_r
(“), 
ôﬂ_°r
[9], (ôﬂ_°r[9]), (Æt)); })

	)

119 
ishex
(
s
);

125 
hex2i
(
c
);

132 c⁄° *
övÆid_ch¨
(c⁄° *
«me
);

139 c⁄° *
övÆid_domaöch¨
(c⁄° *
«me
);

145 
sockaddr_un
 *
°r2sun
(c⁄° *
°r
);

152 
sockaddr_ö
 *
°r2ß
(*
°r
);

163 
sockaddr_ö
 *
°r2ß_ønge
(*
°r
, *
low
, *
high
);

169 
°r2mask
(c⁄° *
°r
, 
ö_addr
 *
mask
);

177 
°r2√t
(c⁄° *
°r
, 
ö_addr
 *
addr
, ö_add∏*
mask
);

182 
uæ2ù
(c⁄° *
addr
, 
ö_addr
 *
d°
);

187 
uæ2ß
(c⁄° *
uæ
, 
uÀn
, 
sockaddr_ö
 *
addr
);

199 c⁄° 
hexèb
[];

200 *
ícode_°rög
(*
°¨t
, *
°›
,

201 c⁄° 
esˇ≥
, c⁄° 
fd_£t
 *
m≠
,

202 c⁄° *
°rög
);

207 
ölöe
 
	$__°r2ui
(c⁄° *
s
)

209 
i
 = 0;

210 *
s
) {

211 
i
 = i * 10 - '0';

212 
i
 +()*
s
++;

214  
i
;

215 
	}
}

220 
ölöe
 
	$__°r2uic
(c⁄° *
s
)

222 
i
 = 0;

223 
j
;

225 
j
 = (*
s
++) - '0';

226 i‡(
j
 > 9)

228 
i
 *= 10;

229 
i
 +
j
;

231  
i
;

232 
	}
}

237 
ölöe
 
	$__°æ2ui
(c⁄° *
s
, 
Àn
)

239 
i
 = 0;

240 
Àn
-- > 0) {

241 
i
 = i * 10 - '0';

242 
i
 +()*
s
++;

244  
i
;

245 
	}
}

250 
ölöe
 
	$__°æ2uic
(c⁄° *
s
, 
Àn
)

252 
i
 = 0;

253 
j
, 
k
;

255 
Àn
-- > 0) {

256 
j
 = (*
s
++) - '0';

257 
k
 = 
i
 * 10;

258 i‡(
j
 > 9)

260 
i
 = 
k
 + 
j
;

262  
i
;

263 
	}
}

265 
°r2ui
(c⁄° *
s
);

266 
°r2uic
(c⁄° *
s
);

267 
°æ2ui
(c⁄° *
s
, 
Àn
);

268 
°æ2uic
(c⁄° *
s
, 
Àn
);

269 
°æ2ic
(c⁄° *
s
, 
Àn
);

270 
°æ2úc
(c⁄° *
s
, 
Àn
, *
ªt
);

271 
°æ2Œrc
(c⁄° *
s
, 
Àn
, *
ªt
);

272 
öëaddr_ho°
(c⁄° *
ãxt
);

273 
öëaddr_ho°_lim
(c⁄° *
ãxt
, c⁄° *
°›
);

274 
öëaddr_ho°_lim_ªt
(c⁄° *
ãxt
, *
°›
, c⁄° **
ªt
);

276 
ölöe
 *
	$cut_¸lf
(*
s
) {

278 *
s
 != '\r' || *s == '\n') {

279 *
p
 = 
s
++;

281 i‡(!*
p
)

282  
p
;

285 *
s
++ = 0;

287  
s
;

288 
	}
}

290 
ölöe
 *
	$…rim
(*
s
, 
c
) {

292 i‡(
c
)

293 *
s
 =
c
)

294 
s
++;

296  
s
;

297 
	}
}

299 
ölöe
 *
	$πrim
(*
s
, 
c
) {

301 *
p
 = 
s
 + 
	`°æí
(s);

303 
p
-- > 
s
)

304 i‡(*
p
 =
c
)

305 *
p
 = '\0';

309  
s
;

310 
	}
}

312 
ölöe
 *
	$Æ…rim
(*
s
, 
c
) {

314 
	`πrim
(
s
, 
c
);

316  
	`…rim
(
s
, 
c
);

317 
	}
}

324 
ölöe
 
	$gë_loˇ…ime
(c⁄° 
time_t
 
now
, 
tm
 *tm)

326 
	`loˇ…ime_r
(&
now
, 
tm
);

327 
	}
}

334 
ölöe
 
	$gë_gmtime
(c⁄° 
time_t
 
now
, 
tm
 *tm)

336 
	`gmtime_r
(&
now
, 
tm
);

337 
	}
}

346 c⁄° *
∑r£_time_îr
(c⁄° *
ãxt
, *
ªt
, 
unô_Êags
);

347 c⁄° *
∑r£_size_îr
(c⁄° *
ãxt
, *
ªt
);

350 
	#TIME_UNIT_US
 0x0000

	)

351 
	#TIME_UNIT_MS
 0x0001

	)

352 
	#TIME_UNIT_S
 0x0002

	)

353 
	#TIME_UNIT_MIN
 0x0003

	)

354 
	#TIME_UNIT_HOUR
 0x0004

	)

355 
	#TIME_UNIT_DAY
 0x0005

	)

356 
	#TIME_UNIT_MASK
 0x0007

	)

362 
ölöe
 
	$mul32hi
(
a
, 
b
)

364  (()
a
 * 
b
) >> 32;

365 
	}
}

368 *
my_°∫dup
(c⁄° *
§c
, 
n
);

373 
gë_√xt_id
(
eb_roŸ
 *
roŸ
, 
key
);

380 
w‹d_m©ch
(c⁄° *
ßm∂e
, 
¶í
, c⁄° *
w‹d
, 
wÀn
);

	@include/common/template.h

22 #i‚de‡
_COMMON_TEMPLATE_H


23 
	#_COMMON_TEMPLATE_H


	)

25 
	~<comm⁄/c⁄fig.h
>

	@include/common/ticks.h

52 #i‚de‡
_COMMON_TICKS_H


53 
	#_COMMON_TICKS_H


	)

55 
	~<comm⁄/c⁄fig.h
>

56 
	~<comm⁄/°™d¨d.h
>

58 
	#TICK_ETERNITY
 0

	)

63 
	#MS_TO_TICKS
(
ms
Ë(ms)

	)

64 
	#TICKS_TO_MS
(
tk
Ë—k)

	)

67 
ölöe
 
	$tick_is£t
(
expúe
)

69  
expúe
 != 0;

70 
	}
}

75 
ölöe
 
	$tick_add
(
now
, 
timeout
)

77 
now
 +
timeout
;

78 i‡(
	`u∆ikñy
(!
now
))

79 
now
++;

80  
now
;

81 
	}
}

86 
ölöe
 
	$tick_add_if£t
(
now
, 
timeout
)

88 i‡(!
timeout
)

89  
TICK_ETERNITY
;

90  
	`tick_add
(
now
, 
timeout
);

91 
	}
}

94 
ölöe
 
	$tick_is_…
(
t1
, 
t2
)

96  (
t1
 - 
t2
) < 0;

97 
	}
}

100 
ölöe
 
	$tick_is_À
(
t1
, 
t2
)

102  (
t1
 - 
t2
) <= 0;

103 
	}
}

106 
ölöe
 
	$tick_is_expúed
(
timî
, 
now
)

108 i‡(
	`u∆ikñy
(!
	`tick_is£t
(
timî
)))

110 i‡(
	`u∆ikñy
((
timî
 - 
now
) <= 0))

113 
	}
}

116 
ölöe
 
	$tick_fú°
(
t1
, 
t2
)

118 i‡(!
	`tick_is£t
(
t1
))

119  
t2
;

120 i‡(!
	`tick_is£t
(
t2
))

121  
t1
;

122 i‡((
t1
 - 
t2
) <= 0)

123  
t1
;

125  
t2
;

126 
	}
}

129 
ölöe
 
	$tick_fú°_2nz
(
t1
, 
t2
)

131 i‡(!
	`tick_is£t
(
t1
))

132  
t2
;

133 i‡((
t1
 - 
t2
) <= 0)

134  
t1
;

136  
t2
;

137 
	}
}

140 
ölöe
 
	$tick_ªmaö
(
now
, 
exp
)

142 i‡(
	`tick_is_expúed
(
exp
, 
now
))

144  
exp
 - 
now
;

145 
	}
}

	@include/common/time.h

22 #i‚de‡
_COMMON_TIME_H


23 
	#_COMMON_TIME_H


	)

25 
	~<°dlib.h
>

26 
	~<sys/time.h
>

27 
	~<comm⁄/c⁄fig.h
>

28 
	~<comm⁄/°™d¨d.h
>

30 
	#SEC
 1

	)

31 
	#MINUTE
 (60 * 
SEC
)

	)

32 
	#HOUR
 (60 * 
MINUTE
)

	)

33 
	#DAY
 (24 * 
HOUR
)

	)

36 #i‚de‡
TV_ETERNITY


37 
	#TV_ETERNITY
 (~0UL)

	)

41 #i‚de‡
TV_ETERNITY_MS


42 
	#TV_ETERNITY_MS
 (-1)

	)

45 
	#TIME_ETERNITY
 (
TV_ETERNITY_MS
)

	)

50 
	#MAX_DELAY_MS
 1000

	)

54 
	#MINTIME
(
ﬁd
, 
√w
Ë((“ew)<0)?(ﬁd):(((ﬁd)<0||“ew)<(ﬁd))?“ew):(ﬁd)))

	)

55 
	#SETNOW
(
a
Ë(*a=
now
)

	)

57 
cuº_£c_ms
;

58 
cuº_£c_ms_sˇÀd
;

59 
now_ms
;

60 
timevÆ
 
now
;

61 
timevÆ
 
d©e
;

62 
timevÆ
 
°¨t_d©e
;

71 
REGPRM3
 
timevÆ
 *
tv_ms_add
(timevÆ *
tv
, c⁄° timevÆ *
‰om
, 
ms
);

77 
REGPRM2
 
tv_ms_cmp
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
);

83 
REGPRM2
 
tv_ms_cmp2
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
);

89 
REGPRM1
 
ölöe
 
timevÆ
 *
	$tv_now
(
timevÆ
 *
tv
)

91 
	`gëtimeofday
(
tv
, 
NULL
);

92  
tv
;

93 
	}
}

103 
REGPRM2
 
tv_upd©e_d©e
(
max_waô
, 
öãºu±ed
);

110 
REGPRM1
 
ölöe
 
timevÆ
 *
	$tv_ëînôy
(
timevÆ
 *
tv
)

112 
tv
->
tv_£c
 =Åv->
tv_u£c
 = 
TV_ETERNITY
;

113  
tv
;

114 
	}
}

120 
REGPRM1
 
ölöe
 
timevÆ
 *
	$tv_zîo
(
timevÆ
 *
tv
) {

121 
tv
->
tv_£c
 =Åv->
tv_u£c
 = 0;

122  
tv
;

123 
	}
}

128 
	#tv_i£ã∫ôy
(
tv
Ë(—v)->
tv_u£c
 =
TV_ETERNITY
)

	)

133 
	#tv_is£t
(
tv
Ë(—v)->
tv_u£c
 !
TV_ETERNITY
)

	)

138 
	#tv_iszîo
(
tv
Ë((—v)->
tv_£c
 | (tv)->
tv_u£c
Ë=0)

	)

143 
REGPRM1
 
ölöe
 
	$__tv_to_ms
(c⁄° 
timevÆ
 *
tv
)

145 
ªt
;

147 
ªt
 = 
tv
->
tv_£c
 * 1000;

148 
ªt
 +
tv
->
tv_u£c
 / 1000;

149  
ªt
;

150 
	}
}

155 
REGPRM2
 
ölöe
 
timevÆ
 * 
	$__tv_‰om_ms
(
timevÆ
 *
tv
, 
ms
)

157 
tv
->
tv_£c
 = 
ms
 / 1000;

158 
tv
->
tv_u£c
 = (
ms
 % 1000) * 1000;

159  
tv
;

160 
	}
}

169 
REGPRM1
 
ölöe
 
	$__u£c_to_1024th
(
u£c
)

171  (
u£c
 * 1073 + 742516) >> 20;

172 
	}
}

179 
REGPRM2
 
ölöe
 
	$__tv_cmp
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
)

181 i‡(()
tv1
->
tv_£c
 < ()
tv2
->tv_sec)

183 i‡(()
tv1
->
tv_£c
 > ()
tv2
->tv_sec)

185 i‡(()
tv1
->
tv_u£c
 < ()
tv2
->tv_usec)

187 i‡(()
tv1
->
tv_u£c
 > ()
tv2
->tv_usec)

191 
	}
}

194 
	#tv_i£q
 
__tv_i£q


	)

195 
REGPRM2
 
ölöe
 
	$__tv_i£q
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
)

197  (()
tv1
->
tv_£c
 =()
tv2
->tv_sec) &&

198 (()
tv1
->
tv_u£c
 =()
tv2
->tv_usec);

199 
	}
}

202 
	#tv_isgt
 
_tv_isgt


	)

203 
REGPRM2
 
_tv_isgt
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
);

204 
REGPRM2
 
ölöe
 
	$__tv_isgt
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
)

207 (()
tv1
->
tv_£c
 =()
tv2
->tv_sec) ?

208 (()
tv1
->
tv_u£c
 > ()
tv2
->tv_usec) :

209 (()
tv1
->
tv_£c
 > ()
tv2
->tv_sec);

210 
	}
}

213 
	#tv_isge
 
__tv_isge


	)

214 
REGPRM2
 
ölöe
 
	$__tv_isge
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
)

217 (()
tv1
->
tv_£c
 =()
tv2
->tv_sec) ?

218 (()
tv1
->
tv_u£c
 >()
tv2
->tv_usec) :

219 (()
tv1
->
tv_£c
 > ()
tv2
->tv_sec);

220 
	}
}

223 
	#tv_i¶t
 
__tv_i¶t


	)

224 
REGPRM2
 
ölöe
 
	$__tv_i¶t
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
)

227 (()
tv1
->
tv_£c
 =()
tv2
->tv_sec) ?

228 (()
tv1
->
tv_u£c
 < ()
tv2
->tv_usec) :

229 (()
tv1
->
tv_£c
 < ()
tv2
->tv_sec);

230 
	}
}

233 
	#tv_i¶e
 
_tv_i¶e


	)

234 
REGPRM2
 
_tv_i¶e
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
);

235 
REGPRM2
 
ölöe
 
	$__tv_i¶e
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
)

238 (()
tv1
->
tv_£c
 =()
tv2
->tv_sec) ?

239 (()
tv1
->
tv_u£c
 <()
tv2
->tv_usec) :

240 (()
tv1
->
tv_£c
 < ()
tv2
->tv_sec);

241 
	}
}

247 
	#tv_ms_cmp
 
_tv_ms_cmp


	)

248 
REGPRM2
 
_tv_ms_cmp
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
);

249 
REGPRM2
 
ölöe
 
	$__tv_ms_cmp
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
)

251 i‡(()
tv1
->
tv_£c
 =()
tv2
->tv_sec) {

252 i‡(()
tv2
->
tv_u£c
 >()
tv1
->tv_usec + 1000)

254 i‡(()
tv1
->
tv_u£c
 >()
tv2
->tv_usec + 1000)

259 i‡((()
tv2
->
tv_£c
 > ()
tv1
->tv_sec + 1) ||

260 ((()
tv2
->
tv_£c
 =()
tv1
->tv_sec + 1) &&

261 (()
tv2
->
tv_u£c
 + 1000000 >()
tv1
->tv_usec + 1000)))

263 i‡((()
tv1
->
tv_£c
 > ()
tv2
->tv_sec + 1) ||

264 ((()
tv1
->
tv_£c
 =()
tv2
->tv_sec + 1) &&

265 (()
tv1
->
tv_u£c
 + 1000000 >()
tv2
->tv_usec + 1000)))

269 
	}
}

275 
	#tv_ms_cmp2
 
_tv_ms_cmp2


	)

276 
REGPRM2
 
_tv_ms_cmp2
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
);

277 
REGPRM2
 
ölöe
 
	$__tv_ms_cmp2
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
)

279 i‡(
	`tv_i£ã∫ôy
(
tv1
))

280 i‡(
	`tv_i£ã∫ôy
(
tv2
))

284 i‡(
	`tv_i£ã∫ôy
(
tv2
))

286  
	`tv_ms_cmp
(
tv1
, 
tv2
);

287 
	}
}

295 
	#tv_ms_À2
 
_tv_ms_À2


	)

296 
REGPRM2
 
_tv_ms_À2
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
);

297 
REGPRM2
 
ölöe
 
	$__tv_ms_À2
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
)

299 i‡(
	`likñy
(()
tv1
->
tv_£c
 > ()
tv2
->tv_sec + 1))

302 i‡(
	`likñy
(()
tv1
->
tv_£c
 < ()
tv2
->tv_sec))

305 i‡(
	`likñy
(()
tv1
->
tv_£c
 =()
tv2
->tv_sec)) {

306 i‡(()
tv2
->
tv_u£c
 >()
tv1
->tv_usec + 1000)

312 i‡(
	`u∆ikñy
((()
tv1
->
tv_£c
 =()
tv2
->tv_sec + 1) &&

313 (()
tv1
->
tv_u£c
 + 1000000 >()
tv2
->tv_usec + 1000)))

317 
	}
}

327 
	#tv_ms_ñ≠£d
 
__tv_ms_ñ≠£d


	)

328 
REGPRM2
 
_tv_ms_ñ≠£d
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
);

329 
REGPRM2
 
ölöe
 
	$__tv_ms_ñ≠£d
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
)

331 
ªt
;

333 
ªt
 = ((sig√d )(
tv2
->
tv_£c
 - 
tv1
->tv_sec)) * 1000;

334 
ªt
 +((sig√d )(
tv2
->
tv_u£c
 - 
tv1
->tv_usec)) / 1000;

335  
ªt
;

336 
	}
}

344 
	#tv_ms_ªmaö
 
__tv_ms_ªmaö


	)

345 
REGPRM2
 
_tv_ms_ªmaö
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
);

346 
REGPRM2
 
ölöe
 
	$__tv_ms_ªmaö
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
)

348 i‡(
	`tv_ms_cmp
(
tv1
, 
tv2
) >= 0)

351  
	`__tv_ms_ñ≠£d
(
tv1
, 
tv2
);

352 
	}
}

359 
	#tv_ms_ªmaö2
 
_tv_ms_ªmaö2


	)

360 
REGPRM2
 
_tv_ms_ªmaö2
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
);

361 
REGPRM2
 
ölöe
 
	$__tv_ms_ªmaö2
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
)

363 i‡(
	`tv_i£ã∫ôy
(
tv2
))

364  
TIME_ETERNITY
;

366  
	`tv_ms_ªmaö
(
tv1
, 
tv2
);

367 
	}
}

372 
	#tv_add
 
_tv_add


	)

373 
REGPRM3
 
timevÆ
 *
_tv_add
(timevÆ *
tv
, c⁄° timevÆ *
‰om
, c⁄° timevÆ *
öc
);

374 
REGPRM3
 
ölöe
 
timevÆ
 *
	$__tv_add
(
timevÆ
 *
tv
, c⁄° timevÆ *
‰om
, c⁄° timevÆ *
öc
)

376 
tv
->
tv_u£c
 = 
‰om
->tv_u£¯+ 
öc
->tv_usec;

377 
tv
->
tv_£c
 = 
‰om
->tv_£¯+ 
öc
->tv_sec;

378 i‡(
tv
->
tv_u£c
 >= 1000000) {

379 
tv
->
tv_u£c
 -= 1000000;

380 
tv
->
tv_£c
++;

382  
tv
;

383 
	}
}

390 
	#tv_add_if£t
 
_tv_add_if£t


	)

391 
REGPRM3
 
_tv_add_if£t
(
timevÆ
 *
tv
, c⁄° timevÆ *
‰om
, c⁄° timevÆ *
öc
);

392 
REGPRM3
 
ölöe
 
	$__tv_add_if£t
(
timevÆ
 *
tv
, c⁄° timevÆ *
‰om
, c⁄° timevÆ *
öc
)

394 i‡(
	`tv_i£ã∫ôy
(
öc
))

396 
tv
->
tv_u£c
 = 
‰om
->tv_u£¯+ 
öc
->tv_usec;

397 
tv
->
tv_£c
 = 
‰om
->tv_£¯+ 
öc
->tv_sec;

398 i‡(
tv
->
tv_u£c
 >= 1000000) {

399 
tv
->
tv_u£c
 -= 1000000;

400 
tv
->
tv_£c
++;

403 
	}
}

408 
REGPRM2
 
ölöe
 
timevÆ
 *
	$__tv_add2
(
timevÆ
 *
tv
, c⁄° timevÆ *
öc
)

410 
tv
->
tv_u£c
 +
öc
->tv_usec;

411 
tv
->
tv_£c
 +
öc
->tv_sec;

412 i‡(
tv
->
tv_u£c
 >= 1000000) {

413 
tv
->
tv_u£c
 -= 1000000;

414 
tv
->
tv_£c
++;

416  
tv
;

417 
	}
}

424 
	#tv_ªmaö
 
_tv_ªmaö


	)

425 
REGPRM3
 
timevÆ
 *
_tv_ªmaö
(c⁄° timevÆ *
tv1
, c⁄° timevÆ *
tv2
, timevÆ *
tv
);

426 
REGPRM3
 
ölöe
 
timevÆ
 *
	$__tv_ªmaö
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
, timevÆ *
tv
)

428 
tv
->
tv_u£c
 = 
tv2
->tv_u£¯- 
tv1
->tv_usec;

429 
tv
->
tv_£c
 = 
tv2
->tv_£¯- 
tv1
->tv_sec;

430 i‡((sig√d)
tv
->
tv_£c
 > 0) {

431 i‡((sig√d)
tv
->
tv_u£c
 < 0) {

432 
tv
->
tv_u£c
 += 1000000;

433 
tv
->
tv_£c
--;

435 } i‡(
tv
->
tv_£c
 == 0) {

436 i‡((sig√d)
tv
->
tv_u£c
 < 0)

437 
tv
->
tv_u£c
 = 0;

439 
tv
->
tv_£c
 = 0;

440 
tv
->
tv_u£c
 = 0;

442  
tv
;

443 
	}
}

451 
	#tv_ªmaö2
 
_tv_ªmaö2


	)

452 
REGPRM3
 
timevÆ
 *
_tv_ªmaö2
(c⁄° timevÆ *
tv1
, c⁄° timevÆ *
tv2
, timevÆ *
tv
);

453 
REGPRM3
 
ölöe
 
timevÆ
 *
	$__tv_ªmaö2
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
, timevÆ *
tv
)

455 i‡(
	`tv_i£ã∫ôy
(
tv2
))

456  
	`tv_ëînôy
(
tv
);

457  
	`__tv_ªmaö
(
tv1
, 
tv2
, 
tv
);

458 
	}
}

464 
	#tv_ms_add
 
_tv_ms_add


	)

465 
REGPRM3
 
timevÆ
 *
_tv_ms_add
(timevÆ *
tv
, c⁄° timevÆ *
‰om
, 
ms
);

466 
REGPRM3
 
ölöe
 
timevÆ
 *
	$__tv_ms_add
(
timevÆ
 *
tv
, c⁄° timevÆ *
‰om
, 
ms
)

468 
tv
->
tv_u£c
 = 
‰om
->tv_u£¯+ (
ms
 % 1000) * 1000;

469 
tv
->
tv_£c
 = 
‰om
->tv_£¯+ (
ms
 / 1000);

470 
tv
->
tv_u£c
 >= 1000000) {

471 
tv
->
tv_u£c
 -= 1000000;

472 
tv
->
tv_£c
++;

474  
tv
;

475 
	}
}

485 
	#tv_isbef‹e
(
tv1
, 
tv2
) \

486 (
	`u∆ikñy
(()(
tv1
)->
tv_£c
 < ()(
tv2
)->tv_sec) ? 1 : \

487 (
	`u∆ikñy
(()(
tv1
)->
tv_£c
 > ()(
tv2
)->tv_sec) ? 0 : \

488 
	`u∆ikñy
(()(
tv1
)->
tv_u£c
 < ()(
tv2
)->tv_u£c)))

	)

496 
	#tv_mö
(
tvmö
, 
tv1
, 
tv2
) ({ \

497 i‡(
	`tv_isbef‹e
(
tv1
, 
tv2
)) { \

498 *
tvmö
 = *
tv1
; \

501 *
tvmö
 = *
tv2
; \

503 
tvmö
; \

504 })

	)

511 
	#tv_bound
(
tv1
, 
tv2
) ({ \

512 i‡(
	`tv_isbef‹e
(
tv2
, 
tv1
)) \

513 *
tv1
 = *
tv2
; \

514 
tv1
; \

515 })

	)

517 *
hum™_time
(
t
, 
hz_div
);

	@include/common/tools.h

22 #i‚de‡
_COMMON_TOOLS_H


23 
	#_COMMON_TOOLS_H


	)

25 
	~<comm⁄/c⁄fig.h
>

27 #i‚de‡
MIN


28 
	#MIN
(
a
, 
b
Ë((◊Ë< (b)Ë? (aË: (b))

	)

31 #i‚de‡
MAX


32 
	#MAX
(
a
, 
b
Ë((◊Ë> (b)Ë? (aË: (b))

	)

	@include/common/uri_auth.h

13 #i‚de‡
_COMMON_URI_AUTH_H


14 
	#_COMMON_URI_AUTH_H


	)

16 
	~<comm⁄/c⁄fig.h
>

18 
	~<ty≥s/auth.h
>

23 
	s°©_sc›e
 {

24 
°©_sc›e
 *
	m√xt
;

25 
	mpx_Àn
;

26 *
	mpx_id
;

29 
	#ST_HIDEVER
 0x00000001

	)

30 
	#ST_SHNODE
 0x00000002

	)

31 
	#ST_SHDESC
 0x00000004

	)

32 
	#ST_SHLGNDS
 0x00000008

	)

33 
	#ST_CONVDONE
 0x00000010

	)

36 
	suri_auth
 {

37 
	muri_Àn
;

38 *
	muri_¥efix
;

39 *
	mauth_ªÆm
;

40 *
	mnode
, *
	mdesc
;

41 
	mª‰esh
;

42 
	mÊags
;

43 
°©_sc›e
 *
	msc›e
;

44 
u£æi°
 *
	mu£æi°
;

45 
li°
 
	mªq_a˛
;

46 
li°
 
	madmö_ruÀs
;

47 
uri_auth
 *
	m√xt
;

51 #ifde‡
CONFIG_STATS_DEFAULT_URI


52 
	#STATS_DEFAULT_URI
 
CONFIG_STATS_DEFAULT_URI


	)

54 
	#STATS_DEFAULT_URI
 "/h≠roxy?°©s"

	)

58 #ifde‡
CONFIG_STATS_DEFAULT_REALM


59 
	#STATS_DEFAULT_REALM
 
CONFIG_STATS_DEFAULT_REALM


	)

61 
	#STATS_DEFAULT_REALM
 "HAProxy Sèti°ics"

	)

65 
	s°©s_admö_ruÀ
 {

66 
li°
 
	mli°
;

67 
a˛_c⁄d
 *
	mc⁄d
;

78 
uri_auth
 *
°©s_check_öô_uri_auth
(uri_auth **
roŸ
);

79 
uri_auth
 *
°©s_£t_uri
(uri_auth **
roŸ
, *
uri
);

80 
uri_auth
 *
°©s_£t_ªÆm
(uri_auth **
roŸ
, *
ªÆm
);

81 
uri_auth
 *
°©s_£t_ª‰esh
(uri_auth **
roŸ
, 
öãrvÆ
);

82 
uri_auth
 *
°©s_£t_Êag
(uri_auth **
roŸ
, 
Êag
);

83 
uri_auth
 *
°©s_add_auth
(uri_auth **
roŸ
, *
u£r
);

84 
uri_auth
 *
°©s_add_sc›e
(uri_auth **
roŸ
, *
sc›e
);

85 
uri_auth
 *
°©s_£t_node
(uri_auth **
roŸ
, *
«me
);

86 
uri_auth
 *
°©s_£t_desc
(uri_auth **
roŸ
, *
desc
);

	@include/common/version.h

22 #i‚de‡
_COMMON_VERSION_H


23 
	#_COMMON_VERSION_H


	)

25 
	~<comm⁄/c⁄fig.h
>

27 #ifde‡ 
CONFIG_PRODUCT_NAME


28 
	#PRODUCT_NAME
 
CONFIG_PRODUCT_NAME


	)

30 
	#PRODUCT_NAME
 "HAProxy"

	)

33 #ifde‡ 
CONFIG_PRODUCT_BRANCH


34 
	#PRODUCT_BRANCH
 
CONFIG_PRODUCT_BRANCH


	)

36 
	#PRODUCT_BRANCH
 "1.4"

	)

39 #ifde‡ 
CONFIG_PRODUCT_URL


40 
	#PRODUCT_URL
 
CONFIG_PRODUCT_URL


	)

42 
	#PRODUCT_URL
 "hâp://h≠roxy.1wt.eu/"

	)

45 #ifde‡ 
CONFIG_PRODUCT_URL_UPD


46 
	#PRODUCT_URL_UPD
 
CONFIG_PRODUCT_URL_UPD


	)

48 
	#PRODUCT_URL_UPD
 "hâp://h≠roxy.1wt.eu/#down"

	)

51 #ifde‡ 
CONFIG_PRODUCT_URL_DOC


52 
	#PRODUCT_URL_DOC
 
CONFIG_PRODUCT_URL_DOC


	)

54 
	#PRODUCT_URL_DOC
 "hâp://h≠roxy.1wt.eu/#docs"

	)

57 #ifde‡
CONFIG_HAPROXY_VERSION


58 
	#HAPROXY_VERSION
 
CONFIG_HAPROXY_VERSION


	)

63 #ifde‡
CONFIG_HAPROXY_DATE


64 
	#HAPROXY_DATE
 
CONFIG_HAPROXY_DATE


	)

	@include/import/ip_tproxy.h

13 #i‚de‡
_IP_TPROXY_H


14 
	#_IP_TPROXY_H


	)

16 #ifde‡
__KERNEL__


17 
	~<löux/ty≥s.h
>

18 
	~<löux/ö.h
>

20 
	~<√töë/ö.h
>

21 #i‚de‡
IP_RECVORIGADDRS


22 
	#IP_RECVORIGADDRS
 11273

	)

23 
	#IP_ORIGADDRS
 
IP_RECVORIGADDRS


	)

24 
	sö_‹igaddrs
 {

25 
ö_addr
 
	miﬂ_§ˇddr
;

26 
ö_addr
 
	miﬂ_d°addr
;

27 
	miﬂ_§˝‹t
;

28 
	miﬂ_d°p‹t
;

38 
	#IP_TPROXY
 11274

	)

42 
	mTPROXY_VERSION
 = 0,

43 
	mTPROXY_ASSIGN
,

44 
	mTPROXY_UNASSIGN
,

45 
	mTPROXY_QUERY
,

46 
	mTPROXY_FLAGS
,

47 
	mTPROXY_ALLOC
,

48 
	mTPROXY_CONNECT


52 
	#ITP_CONNECT
 0x00000001

	)

53 
	#ITP_LISTEN
 0x00000002

	)

54 
	#ITP_ESTABLISHED
 0x00000004

	)

56 
	#ITP_ONCE
 0x00010000

	)

57 
	#ITP_MARK
 0x00020000

	)

58 
	#ITP_APPLIED
 0x00040000

	)

59 
	#ITP_UNIDIR
 0x00080000

	)

61 
	sö_çroxy_addr
{

62 
ö_addr
 
	mÁddr
;

63 
u_öt16_t
 
	mÂ‹t
;

66 
	sö_çroxy
 {

68 
u_öt32_t
 
	m›
;

70 
	u_ö_¨gs
 {

71 
u_öt32_t
 
	mvîsi⁄
;

72 
ö_çroxy_addr
 
	maddr
;

73 
u_öt32_t
 
	mÊags
;

74 } 
	mv
;

	@include/proto/acl.h

22 #i‚de‡
_PROTO_ACL_H


23 
	#_PROTO_ACL_H


	)

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<ty≥s/a˛.h
>

35 
ölöe
 
	$a˛_√g
(
ªs
)

37  (3 >> 
ªs
);

38 
	}
}

41 
ölöe
 
	$a˛_∑ss
(
ªs
)

43  (
ªs
 >> 1);

44 
	}
}

49 
a˛
 *
föd_a˛_by_«me
(c⁄° *
«me
, 
li°
 *
hód
);

55 
a˛_keyw‹d
 *
föd_a˛_kw
(c⁄° *
kw
);

61 
a˛_ex¥
 *
∑r£_a˛_ex¥
(c⁄° **
¨gs
);

64 
a˛
 *
¥u√_a˛
(acl *acl);

72 
a˛
 *
∑r£_a˛
(c⁄° **
¨gs
, 
li°
 *
known_a˛
);

75 
a˛_c⁄d
 *
¥u√_a˛_c⁄d
(a˛_c⁄d *
c⁄d
);

81 
a˛_c⁄d
 *
∑r£_a˛_c⁄d
(c⁄° **
¨gs
, 
li°
 *
known_a˛
, 
pﬁ
);

89 
a˛_c⁄d
 *
buûd_a˛_c⁄d
(c⁄° *
fûe
, 
löe
, 
¥oxy
 *
px
, c⁄° **
¨gs
);

96 
a˛_exec_c⁄d
(
a˛_c⁄d
 *
c⁄d
, 
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
);

101 
a˛
 *
c⁄d_föd_ªquúe
(c⁄° 
a˛_c⁄d
 *
c⁄d
, 
ªquúe
);

107 
a˛_föd_èrgës
(
¥oxy
 *
p
);

112 
a˛
 *
föd_a˛_by_«me
(c⁄° *
«me
, 
li°
 *
hód
);

118 
a˛_ªgi°î_keyw‹ds
(
a˛_kw_li°
 *
kwl
);

123 
a˛_uƒegi°î_keyw‹ds
(
a˛_kw_li°
 *
kwl
);

134 
a˛_∑r£_nŸhög
(c⁄° **
ãxt
, 
a˛_∑âîn
 *
∑âîn
, *
›aque
);

137 
a˛_m©ch_°r
(
a˛_ã°
 *
ã°
, 
a˛_∑âîn
 *
∑âîn
);

140 
a˛_m©ch_öt
(
a˛_ã°
 *
ã°
, 
a˛_∑âîn
 *
∑âîn
);

143 
a˛_∑r£_öt
(c⁄° **
ãxt
, 
a˛_∑âîn
 *
∑âîn
, *
›aque
);

146 
a˛_∑r£_dŸãd_vî
(c⁄° **
ãxt
, 
a˛_∑âîn
 *
∑âîn
, *
›aque
);

151 
a˛_∑r£_ønge
(c⁄° **
ãxt
, 
a˛_∑âîn
 *
∑âîn
, *
›aque
);

154 
a˛_∑r£_°r
(c⁄° **
ãxt
, 
a˛_∑âîn
 *
∑âîn
, *
›aque
);

157 
a˛_∑r£_°rˇt
(c⁄° **
ãxt
, 
a˛_∑âîn
 *
∑âîn
, *
›aque
);

160 
a˛_∑r£_ªg
(c⁄° **
ãxt
, 
a˛_∑âîn
 *
∑âîn
, *
›aque
);

167 
a˛_∑r£_ù
(c⁄° **
ãxt
, 
a˛_∑âîn
 *
∑âîn
, *
›aque
);

170 
a˛_„tch_nŸhög
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

171 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
);

174 
a˛_m©ch_nŸhög
(
a˛_ã°
 *
ã°
, 
a˛_∑âîn
 *
∑âîn
);

177 
a˛_m©ch_íd
(
a˛_ã°
 *
ã°
, 
a˛_∑âîn
 *
∑âîn
);

180 
a˛_m©ch_beg
(
a˛_ã°
 *
ã°
, 
a˛_∑âîn
 *
∑âîn
);

183 
a˛_m©ch_sub
(
a˛_ã°
 *
ã°
, 
a˛_∑âîn
 *
∑âîn
);

189 
a˛_m©ch_dú
(
a˛_ã°
 *
ã°
, 
a˛_∑âîn
 *
∑âîn
);

195 
a˛_m©ch_dom
(
a˛_ã°
 *
ã°
, 
a˛_∑âîn
 *
∑âîn
);

198 
a˛_m©ch_ù
(
a˛_ã°
 *
ã°
, 
a˛_∑âîn
 *
∑âîn
);

205 
a˛_m©ch_ªg
(
a˛_ã°
 *
ã°
, 
a˛_∑âîn
 *
∑âîn
);

	@include/proto/auth.h

13 #i‚de‡
_PROTO_AUTH_H


14 
	#_PROTO_AUTH_H


	)

16 
	~<comm⁄/c⁄fig.h
>

17 
	~<ty≥s/auth.h
>

19 
u£æi°
 *userlist;

21 
u£æi°
 *
auth_föd_u£æi°
(*
«me
);

22 
auth_ªsﬁve_groups
(
u£æi°
 *
l
, *
groups
);

23 
ªq_a˛_ruÀ
 *
∑r£_auth_c⁄d
(c⁄° **
¨gs
, c⁄° *
fûe
, 
löíum
, 
¥oxy
 *proxy);

24 
u£æi°_‰ì
(
u£æi°
 *
ul
);

25 
ªq_a˛_‰ì
(
li°
 *
r
);

26 
a˛_m©ch_auth
(
a˛_ã°
 *
ã°
, 
a˛_∑âîn
 *
∑âîn
);

	@include/proto/backend.h

22 #i‚de‡
_PROTO_BACKEND_H


23 
	#_PROTO_BACKEND_H


	)

25 
	~<comm⁄/c⁄fig.h
>

27 
	~<ty≥s/backíd.h
>

28 
	~<ty≥s/¥oxy.h
>

29 
	~<ty≥s/£rvî.h
>

30 
	~<ty≥s/£ssi⁄.h
>

32 
assign_£rvî
(
£ssi⁄
 *
s
);

33 
assign_£rvî_addªss
(
£ssi⁄
 *
s
);

34 
assign_£rvî_™d_queue
(
£ssi⁄
 *
s
);

35 
c⁄√˘_£rvî
(
£ssi⁄
 *
s
);

36 
§v_ªdi•©ch_c⁄√˘
(
£ssi⁄
 *
t
);

37 c⁄° *
backíd_lb_Ægo_°r
(
Ægo
);

38 
backíd_∑r£_bÆ™˚
(c⁄° **
¨gs
, *
îr
,

39 
îæí
, 
¥oxy
 *
cuΩroxy
);

41 
be_dow¡ime
(
¥oxy
 *
px
);

42 
ªcou¡_£rvîs
(
¥oxy
 *
px
);

43 
upd©e_backíd_weight
(
¥oxy
 *
px
);

44 
£rvî
 *
gë_£rvî_sh
(
¥oxy
 *
px
, c⁄° *
addr
, 
Àn
);

45 
£rvî
 *
gë_£rvî_uh
(
¥oxy
 *
px
, *
uri
, 
uri_Àn
);

50 
ölöe
 
	$§v_is_ußbÀ
(
°©e
, 
weight
)

52 i‡(!
weight
)

54 i‡(
°©e
 & 
SRV_GOINGDOWN
)

56 i‡(!(
°©e
 & 
SRV_RUNNING
))

59 
	}
}

	@include/proto/buffers.h

22 #i‚de‡
_PROTO_BUFFERS_H


23 
	#_PROTO_BUFFERS_H


	)

25 
	~<°dio.h
>

26 
	~<°dlib.h
>

27 
	~<°rög.h
>

29 
	~<comm⁄/c⁄fig.h
>

30 
	~<comm⁄/mem‹y.h
>

31 
	~<comm⁄/ticks.h
>

32 
	~<comm⁄/time.h
>

34 
	~<ty≥s/buf„rs.h
>

35 
	~<ty≥s/globÆ.h
>

37 
poﬁ_hód
 *
poﬁ2_buf„r
;

40 
öô_buf„r
();

43 
ölöe
 
	$buf„r_öô
(
buf„r
 *
buf
)

45 
buf
->
£nd_max
 = 0;

46 
buf
->
to_f‹w¨d
 = 0;

47 
buf
->
l
 = buf->
tŸÆ
 = 0;

48 
buf
->
pùe
 = 
NULL
;

49 
buf
->
™Æy£rs
 = 0;

50 
buf
->
c⁄s
 = 
NULL
;

51 
buf
->
Êags
 = 
BF_OUT_EMPTY
;

52 
buf
->
r
 = buf->
Ã
 = buf->
w
 = buf->
d©a
;

53 
	}
}

59 
ölöe
 
	$buf„r_max_Àn
(
buf„r
 *
buf
)

61 i‡(
buf
->
to_f‹w¨d
 =
BUF_INFINITE_FORWARD
 ||

62 
buf
->
to_f‹w¨d
 + buf->
£nd_max
 >
globÆ
.
tu√
.
maxªwrôe
)

63  
buf
->
size
;

65  
buf
->
size
 - 
globÆ
.
tu√
.
maxªwrôe
 + buf->
to_f‹w¨d
 + buf->
£nd_max
;

66 
	}
}

74 
ölöe
 
	$buf„r_check_timeouts
(
buf„r
 *
b
)

76 i‡(
	`likñy
(!(
b
->
Êags
 & (
BF_SHUTR
|
BF_READ_TIMEOUT
|
BF_READ_ACTIVITY
|
BF_READ_NOEXP
))) &&

77 
	`u∆ikñy
(
	`tick_is_expúed
(
b
->
ªx
, 
now_ms
)))

78 
b
->
Êags
 |
BF_READ_TIMEOUT
;

80 i‡(
	`likñy
(!(
b
->
Êags
 & (
BF_SHUTW
|
BF_WRITE_TIMEOUT
|
BF_WRITE_ACTIVITY
))) &&

81 
	`u∆ikñy
(
	`tick_is_expúed
(
b
->
wex
, 
now_ms
)))

82 
b
->
Êags
 |
BF_WRITE_TIMEOUT
;

84 i‡(
	`likñy
(!(
b
->
Êags
 & 
BF_ANA_TIMEOUT
)) &&

85 
	`u∆ikñy
(
	`tick_is_expúed
(
b
->
™Æy£_exp
, 
now_ms
)))

86 
b
->
Êags
 |
BF_ANA_TIMEOUT
;

87 
	}
}

96 
ölöe
 
	$buf„r_f‹w¨d
(
buf„r
 *
buf
, 
byãs
)

98 
d©a_À·
;

100 i‡(!
byãs
)

102 
d©a_À·
 = 
buf
->
l
 - buf->
£nd_max
;

103 i‡(
d©a_À·
 >
byãs
) {

104 
buf
->
£nd_max
 +
byãs
;

105 
buf
->
Êags
 &~
BF_OUT_EMPTY
;

109 
buf
->
£nd_max
 +
d©a_À·
;

110 i‡(
buf
->
£nd_max
)

111 
buf
->
Êags
 &~
BF_OUT_EMPTY
;

113 i‡(
buf
->
to_f‹w¨d
 !
BUF_INFINITE_FORWARD
) {

114 
buf
->
to_f‹w¨d
 +
byãs
 - 
d©a_À·
;

115 i‡(
byãs
 =
BUF_INFINITE_FORWARD
)

116 
buf
->
to_f‹w¨d
 = 
byãs
;

119 i‡(
buf
->
l
 < 
	`buf„r_max_Àn
(buf))

120 
buf
->
Êags
 &~
BF_FULL
;

122 
buf
->
Êags
 |
BF_FULL
;

123 
	}
}

129 
ölöe
 
	$buf„r_Êush
(
buf„r
 *
buf
)

131 i‡(
buf
->
£nd_max
 < buf->
l
)

132 
buf
->
£nd_max
 = buf->
l
;

133 i‡(
buf
->
£nd_max
)

134 
buf
->
Êags
 &~
BF_OUT_EMPTY
;

135 
	}
}

141 
ölöe
 
	$buf„r_îa£
(
buf„r
 *
buf
)

143 
buf
->
£nd_max
 = 0;

144 
buf
->
to_f‹w¨d
 = 0;

145 
buf
->
r
 = buf->
Ã
 = buf->
w
 = buf->
d©a
;

146 
buf
->
l
 = 0;

147 
buf
->
Êags
 &~(
BF_FULL
 | 
BF_OUT_EMPTY
);

148 i‡(!
buf
->
pùe
)

149 
buf
->
Êags
 |
BF_OUT_EMPTY
;

150 
	}
}

157 
ölöe
 
	$buf„r_cut_èû
(
buf„r
 *
buf
)

159 i‡(!
buf
->
£nd_max
)

160  
	`buf„r_îa£
(
buf
);

162 
buf
->
to_f‹w¨d
 = 0;

163 i‡(
buf
->
l
 =buf->
£nd_max
)

166 
buf
->
l
 = buf->
£nd_max
;

167 
buf
->
r
 = buf->
w
 + buf->
l
;

168 i‡(
buf
->
r
 >buf->
d©a
 + buf->
size
)

169 
buf
->
r
 -buf->
size
;

170 
buf
->
Ã
 = buf->
r
;

171 
buf
->
Êags
 &~
BF_FULL
;

172 i‡(
buf
->
l
 >
	`buf„r_max_Àn
(buf))

173 
buf
->
Êags
 |
BF_FULL
;

174 
	}
}

180 
ölöe
 
	$buf„r_ign‹e
(
buf„r
 *
buf
, 
n
)

182 
buf
->
l
 -
n
;

183 
buf
->
w
 +
n
;

184 i‡(
buf
->
w
 >buf->
d©a
 + buf->
size
)

185 
buf
->
w
 -buf->
size
;

186 
buf
->
Êags
 &~
BF_FULL
;

187 i‡(
buf
->
l
 >
	`buf„r_max_Àn
(buf))

188 
buf
->
Êags
 |
BF_FULL
;

189 
	}
}

192 
ölöe
 
	$buf„r_shuå_now
(
buf„r
 *
buf
)

194 
buf
->
Êags
 |
BF_SHUTR_NOW
;

195 
	}
}

198 
ölöe
 
	$buf„r_shutw_now
(
buf„r
 *
buf
)

200 
buf
->
Êags
 |
BF_SHUTW_NOW
;

201 
	}
}

204 
ölöe
 
	$buf„r_ab‹t
(
buf„r
 *
buf
)

206 
buf
->
Êags
 |
BF_SHUTR_NOW
 | 
BF_SHUTW_NOW
;

207 
buf
->
Êags
 &~
BF_AUTO_CONNECT
;

208 
	}
}

215 
ölöe
 
buf„r_ö°Æl_hijackî
(
£ssi⁄
 *
s
,

216 
buf„r
 *
b
,

217 (*
func
)(
£ssi⁄
 *, 
buf„r
 *))

219 
b
->
hijackî
 = 
func
;

220 
b
->
Êags
 |
BF_HIJACK
;

221 
	`func
(
s
, 
b
);

222 
	}
}

225 
ölöe
 
	$buf„r_°›_hijack
(
buf„r
 *
buf
)

227 
buf
->
Êags
 &~
BF_HIJACK
;

228 
	}
}

231 
ölöe
 
	$buf„r_auto_c⁄√˘
(
buf„r
 *
buf
)

233 
buf
->
Êags
 |
BF_AUTO_CONNECT
;

234 
	}
}

239 
ölöe
 
	$buf„r_d⁄t_c⁄√˘
(
buf„r
 *
buf
)

241 
buf
->
Êags
 &~(
BF_AUTO_CONNECT
|
BF_AUTO_CLOSE
);

242 
	}
}

245 
ölöe
 
	$buf„r_auto_˛o£
(
buf„r
 *
buf
)

247 
buf
->
Êags
 |
BF_AUTO_CLOSE
;

248 
	}
}

251 
ölöe
 
	$buf„r_d⁄t_˛o£
(
buf„r
 *
buf
)

253 
buf
->
Êags
 &~
BF_AUTO_CLOSE
;

254 
	}
}

257 
ölöe
 
	$buf„r_auto_ªad
(
buf„r
 *
buf
)

259 
buf
->
Êags
 &~
BF_DONT_READ
;

260 
	}
}

263 
ölöe
 
	$buf„r_d⁄t_ªad
(
buf„r
 *
buf
)

265 
buf
->
Êags
 |
BF_DONT_READ
;

266 
	}
}

269 
ölöe
 
	$buf„r_max
(c⁄° 
buf„r
 *
buf
)

271 i‡(
buf
->
l
 =buf->
size
)

273 i‡(
buf
->
r
 >buf->
w
)

274  
buf
->
d©a
 + buf->
size
 - buf->
r
;

276  
buf
->
w
 - buf->
r
;

277 
	}
}

283 
ölöe
 
	$buf„r_ªÆign
(
buf„r
 *
buf
)

285 i‡(
buf
->
l
 == 0) {

287 
buf
->
r
 = buf->
w
 = buf->
Ã
 = buf->
d©a
;

289  
	`buf„r_max
(
buf
);

290 
	}
}

298 
ölöe
 
	$buf„r_c⁄tig_•a˚
(
buf„r
 *
buf
)

300 
ªt
;

302 i‡(
buf
->
l
 == 0) {

303 
buf
->
r
 = buf->
w
 = buf->
Ã
 = buf->
d©a
;

304 
ªt
 = 
	`buf„r_max_Àn
(
buf
);

306 i‡(
buf
->
r
 > buf->
w
) {

307 
ªt
 = 
buf
->
d©a
 + 
	`buf„r_max_Àn
(bufË- buf->
r
;

310 
ªt
 = 
buf
->
w
 - buf->
r
;

311 i‡(
ªt
 > 
	`buf„r_max_Àn
(
buf
))

312 
ªt
 = 
	`buf„r_max_Àn
(
buf
);

314  
ªt
;

315 
	}
}

318 
ölöe
 
	$buf„r_Æmo°_fuŒ
(
buf„r
 *
buf
)

320 i‡(
	`buf„r_c⁄tig_•a˚
(
buf
Ë< buf->
size
 / 4)

323 
	}
}

331 
ölöe
 
	$buf„r_c⁄tig_d©a
(
buf„r
 *
buf
)

333 
ªt
;

335 i‡(!
buf
->
£nd_max
 || !buf->
l
)

338 i‡(
buf
->
r
 > buf->
w
)

339 
ªt
 = 
buf
->
r
 - buf->
w
;

341 
ªt
 = 
buf
->
d©a
 + buf->
size
 - buf->
w
;

344 i‡(
ªt
 > 
buf
->
£nd_max
)

345 
ªt
 = 
buf
->
£nd_max
;

347  
ªt
;

348 
	}
}

356 
ölöe
 
	$buf„r_skù
(
buf„r
 *
buf
, 
Àn
)

358 
buf
->
w
 +
Àn
;

359 i‡(
buf
->
w
 >buf->
d©a
 + buf->
size
)

360 
buf
->
w
 -buf->
size
;

362 
buf
->
l
 -
Àn
;

363 i‡(!
buf
->
l
)

364 
buf
->
r
 = buf->
w
 = buf->
Ã
 = buf->
d©a
;

366 i‡(
buf
->
l
 < 
	`buf„r_max_Àn
(buf))

367 
buf
->
Êags
 &~
BF_FULL
;

369 
buf
->
£nd_max
 -
Àn
;

370 i‡(!
buf
->
£nd_max
 && !buf->
pùe
)

371 
buf
->
Êags
 |
BF_OUT_EMPTY
;

374 
buf
->
Êags
 |
BF_WRITE_PARTIAL
;

375 
	}
}

383 
ölöe
 
	$buf„r_si_≥ekch¨
(
buf„r
 *
buf
)

385 i‡(
buf
->
£nd_max
)

386  *
buf
->
w
;

388 i‡(
buf
->
Êags
 & (
BF_SHUTW
|
BF_SHUTW_NOW
))

392 
	}
}

399 
ölöe
 
	$buf„r_si_putch¨
(
buf„r
 *
buf
, 
c
)

401 i‡(
buf
->
Êags
 & 
BF_FULL
)

404 *
buf
->
r
 = 
c
;

406 
buf
->
l
++;

407 i‡(
buf
->
l
 >
	`buf„r_max_Àn
(buf))

408 
buf
->
Êags
 |
BF_FULL
;

410 
buf
->
r
++;

411 i‡(
buf
->
r
 - buf->
d©a
 =buf->
size
)

412 
buf
->
r
 -buf->
size
;

414 i‡(
buf
->
to_f‹w¨d
 >= 1) {

415 i‡(
buf
->
to_f‹w¨d
 !
BUF_INFINITE_FORWARD
)

416 
buf
->
to_f‹w¨d
--;

417 
buf
->
£nd_max
++;

418 
buf
->
Êags
 &~
BF_OUT_EMPTY
;

421 
buf
->
tŸÆ
++;

423 
	}
}

425 
buf„r_wrôe
(
buf„r
 *
buf
, c⁄° *
msg
, 
Àn
);

426 
buf„r_„ed2
(
buf„r
 *
buf
, c⁄° *
°r
, 
Àn
);

427 
buf„r_si_putch¨
(
buf„r
 *
buf
, 
c
);

428 
buf„r_si_≥eklöe
(
buf„r
 *
buf
, *
°r
, 
Àn
);

429 
buf„r_ª∂a˚
(
buf„r
 *
b
, *
pos
, *
íd
, c⁄° *
°r
);

430 
buf„r_ª∂a˚2
(
buf„r
 *
b
, *
pos
, *
íd
, c⁄° *
°r
, 
Àn
);

431 
buf„r_ö£π_löe2
(
buf„r
 *
b
, *
pos
, c⁄° *
°r
, 
Àn
);

432 
buf„r_dump
(
FILE
 *
o
, 
buf„r
 *
b
, 
‰om
, 
to
);

433 
buf„r_boun˚_ªÆign
(
buf„r
 *
buf
);

443 
ölöe
 
	$buf„r_wrôe_chunk
(
buf„r
 *
buf
, 
chunk
 *chunk)

445 
ªt
;

447 
ªt
 = 
	`buf„r_wrôe
(
buf
, 
chunk
->
°r
, chunk->
Àn
);

448 i‡(
ªt
 == -1)

449 
chunk
->
Àn
 = 0;

450  
ªt
;

451 
	}
}

461 
ölöe
 
	$buf„r_„ed_chunk
(
buf„r
 *
buf
, 
chunk
 *chunk)

463 
ªt
;

465 
ªt
 = 
	`buf„r_„ed2
(
buf
, 
chunk
->
°r
, chunk->
Àn
);

466 i‡(
ªt
 == -1)

467 
chunk
->
Àn
 = 0;

468  
ªt
;

469 
	}
}

477 
ölöe
 
	$buf„r_„ed
(
buf„r
 *
buf
, c⁄° *
°r
)

479  
	`buf„r_„ed2
(
buf
, 
°r
, 
	`°æí
(str));

480 
	}
}

482 
ölöe
 
	$chunk_öô
(
chunk
 *
chk
, *
°r
, 
size_t
 
size
) {

483 
chk
->
°r
 = str;

484 
chk
->
Àn
 = 0;

485 
chk
->
size
 = size;

486 
	}
}

489 
ölöe
 
	$chunk_öôÀn
(
chunk
 *
chk
, *
°r
, 
size_t
 
size
, 
Àn
) {

491 i‡(
size
 && 
Àn
 > size)

494 
chk
->
°r
 = str;

495 
chk
->
Àn
 =Üen;

496 
chk
->
size
 = size;

499 
	}
}

501 
ölöe
 
	$chunk_öô°r
(
chunk
 *
chk
, *
°r
) {

502 
chk
->
°r
 = str;

503 
chk
->
Àn
 = 
	`°æí
(
°r
);

504 
chk
->
size
 = 0;

505 
	}
}

507 
ölöe
 
	$chunk_°r˝y
(
chunk
 *
chk
, c⁄° *
°r
) {

508 
size_t
 
Àn
;

510 
Àn
 = 
	`°æí
(
°r
);

512 i‡(
	`u∆ikñy
(
Àn
 > 
chk
->
size
))

515 
chk
->
Àn
 =Üen;

516 
	`mem˝y
(
chk
->
°r
, så, 
Àn
);

519 
	}
}

521 
	$chunk_¥ötf
(
chunk
 *
chk
, c⁄° *
fmt
, ...)

522 
	`__©åibuã__
 ((
	`f‹m©
(
¥ötf
, 2, 3)));

524 
	`chunk_htmÀncode
(
chunk
 *
d°
, chunk *
§c
);

525 
	`chunk_asciõncode
(
chunk
 *
d°
, chunk *
§c
, 
qc
);

527 
ölöe
 
	$chunk_ª£t
(
chunk
 *
chk
) {

528 
chk
->
°r
 = 
NULL
;

529 
chk
->
Àn
 = -1;

530 
chk
->
size
 = 0;

531 
	}
}

533 
ölöe
 
	$chunk_de°roy
(
chunk
 *
chk
) {

535 i‡(!
chk
->
size
)

538 i‡(
chk
->
°r
)

539 
	`‰ì
(
chk
->
°r
);

541 
	`chunk_ª£t
(
chk
);

542 
	}
}

549 
ölöe
 *
	$chunk_dup
(
chunk
 *
d°
, c⁄° chunk *
§c
) {

550 i‡(!
d°
 || !
§c
 || !§c->
°r
)

551  
NULL
;

552 i‡(
d°
->
°r
)

553 
	`‰ì
(
d°
->
°r
);

554 
d°
->
Àn
 = 
§c
->len;

555 
d°
->
°r
 = (*)
	`mÆloc
(d°->
Àn
);

556 
	`mem˝y
(
d°
->
°r
, 
§c
->°r, d°->
Àn
);

557  
d°
->
°r
;

558 
	}
}

	@include/proto/checks.h

22 #i‚de‡
_PROTO_CHECKS_H


23 
	#_PROTO_CHECKS_H


	)

25 
	~<ty≥s/èsk.h
>

26 
	~<comm⁄/c⁄fig.h
>

28 c⁄° *
gë_check_°©us_des¸ùti⁄
(
check_°©us
);

29 c⁄° *
gë_check_°©us_öfo
(
check_°©us
);

30 
£t_£rvî_down
(
£rvî
 *
s
);

31 
£t_£rvî_up
(
£rvî
 *
s
);

32 
èsk
 *
¥o˚ss_chk
(èsk *
t
);

33 
°¨t_checks
();

34 
hó…h_adju°
(
£rvî
 *
s
, 
°©us
);

	@include/proto/client.h

22 #i‚de‡
_PROTO_CLIENT_H


23 
	#_PROTO_CLIENT_H


	)

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<ty≥s/£ssi⁄.h
>

28 
gë_‰t_addr
(
£ssi⁄
 *
s
);

29 
evít_ac˚±
(
fd
);

	@include/proto/cttproxy.h

23 #i‚de‡
_PROTO_CTTPROXY_H


24 
	#_PROTO_CTTPROXY_H


	)

26 
	~<°dlib.h
>

27 
	~<sys/sockë.h
>

28 
	~<sys/ty≥s.h
>

30 
	~<comm⁄/c⁄fig.h
>

31 
	~<imp‹t/ù_çroxy.h
>

37 
check_˘çroxy_vîsi⁄
();

	@include/proto/dumpstats.h

23 #i‚de‡
_PROTO_DUMPSTATS_H


24 
	#_PROTO_DUMPSTATS_H


	)

26 
	~<comm⁄/c⁄fig.h
>

27 
	~<ty≥s/buf„rs.h
>

28 
	~<ty≥s/£ssi⁄.h
>

31 
	#STAT_FMT_CSV
 0x00000001

	)

32 
	#STAT_SHOW_STAT
 0x00000002

	)

33 
	#STAT_SHOW_INFO
 0x00000004

	)

34 
	#STAT_HIDE_DOWN
 0x00000008

	)

35 
	#STAT_NO_REFRESH
 0x00000010

	)

36 
	#STAT_ADMIN
 0x00000020

	)

37 
	#STAT_BOUND
 0x00800000

	)

39 
	#STATS_TYPE_FE
 0

	)

40 
	#STATS_TYPE_BE
 1

	)

41 
	#STATS_TYPE_SV
 2

	)

42 
	#STATS_TYPE_SO
 3

	)

45 
	#STAT_CLI_INIT
 0

	)

46 
	#STAT_CLI_END
 1

	)

47 
	#STAT_CLI_GETREQ
 2

	)

48 
	#STAT_CLI_OUTPUT
 3

	)

49 
	#STAT_CLI_PROMPT
 3

	)

50 
	#STAT_CLI_PRINT
 4

	)

52 
	#STAT_CLI_O_INFO
 5

	)

53 
	#STAT_CLI_O_SESS
 6

	)

54 
	#STAT_CLI_O_ERR
 7

	)

57 
	#STAT_STATUS_UNKN
 "UNKN"

	)

58 
	#STAT_STATUS_DONE
 "DONE"

	)

59 
	#STAT_STATUS_NONE
 "NONE"

	)

60 
	#STAT_STATUS_EXCD
 "EXCD"

	)

61 
	#STAT_STATUS_DENY
 "DENY"

	)

64 
°©s_sock_∑r£_ªque°
(
°ªam_öãrÁ˚
 *
si
, *
löe
);

65 
°©s_io_h™dÀr
(
°ªam_öãrÁ˚
 *
si
);

66 
°©s_dump_øw_to_buf„r
(
£ssi⁄
 *
s
, 
buf„r
 *
ªp
);

67 
°©s_dump_hâp
(
£ssi⁄
 *
s
, 
buf„r
 *
ªp
, 
uri_auth
 *
uri
);

68 
°©s_dump_¥oxy
(
£ssi⁄
 *
s
, 
¥oxy
 *
px
, 
uri_auth
 *
uri
);

69 
°©s_dump_£ss_to_buf„r
(
£ssi⁄
 *
s
, 
buf„r
 *
ªp
);

70 
°©s_dump_îr‹s_to_buf„r
(
£ssi⁄
 *
s
, 
buf„r
 *
ªp
);

71 
hâp_°©s_io_h™dÀr
(
°ªam_öãrÁ˚
 *
si
);

	@include/proto/fd.h

22 #i‚de‡
_PROTO_FD_H


23 
	#_PROTO_FD_H


	)

25 
	~<°dio.h
>

26 
	~<sys/time.h
>

27 
	~<sys/ty≥s.h
>

28 
	~<uni°d.h
>

30 
	~<comm⁄/c⁄fig.h
>

31 
	~<ty≥s/fd.h
>

36 
fd_dñëe
(
fd
);

39 
dißbÀ_pﬁÀr
(c⁄° *
pﬁÀr_«me
);

46 
öô_pﬁÀrs
();

51 
deöô_pﬁÀrs
();

60 
f‹k_pﬁÀr
();

66 
li°_pﬁÀrs
(
FILE
 *
out
);

71 
run_pﬁÀr
();

73 
	#EV_FD_SET
(
fd
, 
ev
Ë(
cur_pﬁÀr
.
	`£t
((fd), (ev)))

	)

74 
	#EV_FD_CLR
(
fd
, 
ev
Ë(
cur_pﬁÀr
.
	`˛r
((fd), (ev)))

	)

75 
	#EV_FD_ISSET
(
fd
, 
ev
Ë(
cur_pﬁÀr
.
	`is_£t
((fd), (ev)))

	)

76 
	#EV_FD_COND_S
(
fd
, 
ev
Ë(
cur_pﬁÀr
.
	`c⁄d_s
((fd), (ev)))

	)

77 
	#EV_FD_COND_C
(
fd
, 
ev
Ë(
cur_pﬁÀr
.
	`c⁄d_c
((fd), (ev)))

	)

78 
	#EV_FD_REM
(
fd
Ë(
cur_pﬁÀr
.
	`ªm
(fd))

	)

79 
	#EV_FD_CLO
(
fd
Ë(
cur_pﬁÀr
.
	`˛o
(fd))

	)

83 
ölöe
 
	$fd_ö£π
(
fd
)

85 
fdèb
[
fd
].
ev
 = 0;

86 i‡(
fd
 + 1 > 
maxfd
)

87 
maxfd
 = 
fd
 + 1;

88 
	}
}

	@include/proto/freq_ctr.h

22 #i‚de‡
_PROTO_FREQ_CTR_H


23 
	#_PROTO_FREQ_CTR_H


	)

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<comm⁄/time.h
>

27 
	~<ty≥s/‰eq_˘r.h
>

33 
ölöe
 
	$rŸ©e_‰eq_˘r
(
‰eq_˘r
 *
˘r
)

35 
˘r
->
¥ev_˘r
 = cå->
cuº_˘r
;

36 i‡(
	`likñy
(
now
.
tv_£c
 - 
˘r
->
cuº_£c
 != 1)) {

38 
˘r
->
¥ev_˘r
 = 0;

40 
˘r
->
cuº_£c
 = 
now
.
tv_£c
;

41 
˘r
->
cuº_˘r
 = 0;

42 
	}
}

48 
ölöe
 
	$upd©e_‰eq_˘r
(
‰eq_˘r
 *
˘r
, 
öc
)

50 i‡(
	`likñy
(
˘r
->
cuº_£c
 =
now
.
tv_£c
)) {

51 
˘r
->
cuº_˘r
 +
öc
;

54 
	`rŸ©e_‰eq_˘r
(
˘r
);

55 
˘r
->
cuº_˘r
 = 
öc
;

57 
	}
}

62 
ªad_‰eq_˘r
(
‰eq_˘r
 *
˘r
);

68 
‰eq_˘r_ªmaö
(
‰eq_˘r
 *
˘r
, 
‰eq
, 
≥nd
);

76 
√xt_evít_dñay
(
‰eq_˘r
 *
˘r
, 
‰eq
, 
≥nd
);

	@include/proto/hdr_idx.h

22 #i‚de‡
_PROTO_HDR_IDX_H


23 
	#_PROTO_HDR_IDX_H


	)

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<ty≥s/hdr_idx.h
>

33 
ölöe
 
	$hdr_idx_öô
(
hdr_idx
 *
li°
)

35 i‡(
li°
->
size
 &&Üi°->
v
) {

36 
hdr_idx_ñem
 
e
 = { .
Àn
=0, .
¸
=0, .
√xt
=0};

37 
li°
->
v
[0] = 
e
;

39 
li°
->
èû
 = 0;

40 
li°
->
u£d
 =Üi°->
œ°
 = 1;

41 
	}
}

48 
ölöe
 
	$hdr_idx_fú°_idx
(
hdr_idx
 *
li°
)

50  
li°
->
v
[0].
√xt
;

51 
	}
}

59 
ölöe
 
	$hdr_idx_fú°_pos
(
hdr_idx
 *
li°
)

61  
li°
->
v
[0].
Àn
 +Üi°->v[0].
¸
 + 1;

62 
	}
}

69 
ölöe
 
	$hdr_idx_£t_°¨t
(
hdr_idx
 *
li°
, 
Àn
, 
¸
)

71 
li°
->
v
[0].
Àn
 =Üen;

72 
li°
->
v
[0].
¸
 = cr;

73 
	}
}

85 
hdr_idx_add
(
Àn
, 
¸
, 
hdr_idx
 *
li°
, 
a·î
);

	@include/proto/httperr.h

22 #i‚de‡
_PROTO_HTTPERR_H


23 
	#_PROTO_HTTPERR_H


	)

25 
	~<ty≥s/hâ≥º.h
>

27 c⁄° 
hâp_îr_codes
[
HTTP_ERR_SIZE
];

28 
chunk
 
hâp_îr_chunks
[
HTTP_ERR_SIZE
];

29 c⁄° *
HTTP_200
;

30 c⁄° *
HTTP_302
;

31 c⁄° *
HTTP_303
;

32 c⁄° *
HTTP_401_fmt
;

34 
chunk
 *
îr‹_mesßge
(
£ssi⁄
 *
s
, 
msgnum
);

	@include/proto/lb_chash.h

22 #i‚de‡
_PROTO_LB_CHASH_H


23 
	#_PROTO_LB_CHASH_H


	)

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<ty≥s/¥oxy.h
>

27 
	~<ty≥s/£rvî.h
>

29 
chash_öô_£rvî_åì
(
¥oxy
 *
p
);

30 
£rvî
 *
chash_gë_√xt_£rvî
(
¥oxy
 *
p
, £rvî *
§vtﬂvoid
);

31 
£rvî
 *
chash_gë_£rvî_hash
(
¥oxy
 *
p
, 
hash
);

	@include/proto/lb_fwlc.h

22 #i‚de‡
_PROTO_LB_FWLC_H


23 
	#_PROTO_LB_FWLC_H


	)

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<ty≥s/¥oxy.h
>

27 
	~<ty≥s/£rvî.h
>

29 
£rvî
 *
fwlc_gë_√xt_£rvî
(
¥oxy
 *
p
, £rvî *
§vtﬂvoid
);

30 
fwlc_öô_£rvî_åì
(
¥oxy
 *
p
);

	@include/proto/lb_fwrr.h

22 #i‚de‡
_PROTO_LB_FWRR_H


23 
	#_PROTO_LB_FWRR_H


	)

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<ty≥s/¥oxy.h
>

27 
	~<ty≥s/£rvî.h
>

29 
fwº_öô_£rvî_groups
(
¥oxy
 *
p
);

30 
£rvî
 *
fwº_gë_√xt_£rvî
(
¥oxy
 *
p
, £rvî *
§vtﬂvoid
);

	@include/proto/lb_map.h

22 #i‚de‡
_PROTO_LB_MAP_H


23 
	#_PROTO_LB_MAP_H


	)

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<ty≥s/¥oxy.h
>

27 
	~<ty≥s/£rvî.h
>

29 
m≠_£t_£rvî_°©us_down
(
£rvî
 *
§v
);

30 
m≠_£t_£rvî_°©us_up
(
£rvî
 *
§v
);

31 
ªˇlc_£rvî_m≠
(
¥oxy
 *
px
);

32 
öô_£rvî_m≠
(
¥oxy
 *
p
);

33 
£rvî
 *
m≠_gë_£rvî_º
(
¥oxy
 *
px
, £rvî *
§vtﬂvoid
);

34 
£rvî
 *
m≠_gë_£rvî_hash
(
¥oxy
 *
px
, 
hash
);

	@include/proto/log.h

23 #i‚de‡
_PROTO_LOG_H


24 
	#_PROTO_LOG_H


	)

26 
	~<°dio.h
>

27 
	~<sy¶og.h
>

29 
	~<comm⁄/c⁄fig.h
>

30 
	~<comm⁄/mem‹y.h
>

31 
	~<ty≥s/log.h
>

32 
	~<ty≥s/¥oxy.h
>

33 
	~<ty≥s/£ssi⁄.h
>

35 
poﬁ_hód
 *
poﬁ2_ªquri
;

41 
	$AÀπ
(c⁄° *
fmt
, ...)

42 
	`__©åibuã__
 ((
	`f‹m©
(
¥ötf
, 1, 2)));

47 
	$W¨nög
(c⁄° *
fmt
, ...)

48 
	`__©åibuã__
 ((
	`f‹m©
(
¥ötf
, 1, 2)));

53 
	$qÂrötf
(
FILE
 *
out
, c⁄° *
fmt
, ...)

54 
	`__©åibuã__
 ((
	`f‹m©
(
¥ötf
, 2, 3)));

62 
	$£nd_log
(
¥oxy
 *
p
, 
Àvñ
, c⁄° *
mesßge
, ...)

63 
	`__©åibuã__
 ((
	`f‹m©
(
¥ötf
, 3, 4)));

68 
	`t˝_£ss_log
(
£ssi⁄
 *
s
);

73 
	`gë_log_Àvñ
(c⁄° *
Àv
);

78 
	`gë_log_Ácûôy
(c⁄° *
Ác
);

	@include/proto/pattern.h

22 #i‚de‡
_PROTO_PATTERN_H


23 
	#_PROTO_PATTERN_H


	)

25 
	~<ty≥s/∑âîn.h
>

26 
	~<ty≥s/°ick_èbÀ.h
>

28 
∑âîn_ex¥
 *
∑âîn_∑r£_ex¥
(**
°r
, *
idx
);

29 
∑âîn
 *
∑âîn_¥o˚ss
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
,

30 *
l7
, 
dú
, 
∑âîn_ex¥
 *
ex¥
,

31 
∑âîn
 *
p
);

32 
°kèbÀ_key
 *
∑âîn_¥o˚ss_key
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
,

33 *
l7
, 
dú
, 
∑âîn_ex¥
 *
ex¥
,

34 
èbÀ_ty≥
);

35 
∑âîn_nŸußbÀ_key
(
∑âîn_ex¥
 *
ex¥
, 
èbÀ_ty≥
);

36 
∑âîn_ªgi°î_„tches
(
∑âîn_„tch_kw_li°
 *
p¶
);

37 
∑âîn_ªgi°î_c⁄vs
(
∑âîn_c⁄v_kw_li°
 *
p¶
);

	@include/proto/pipe.h

22 #i‚de‡
_PROTO_PIPE_H


23 
	#_PROTO_PIPE_H


	)

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<ty≥s/pùe.h
>

28 
pùes_u£d
;

29 
pùes_‰ì
;

34 
pùe
 *
gë_pùe
();

39 
kûl_pùe
(
pùe
 *
p
);

45 
put_pùe
(
pùe
 *
p
);

	@include/proto/port_range.h

22 #i‚de‡
_PROTO_PORT_RANGE_H


23 
	#_PROTO_PORT_RANGE_H


	)

25 
	~<ty≥s/p‹t_ønge.h
>

28 
ölöe
 
	$p‹t_ønge_Æloc_p‹t
(
p‹t_ønge
 *
ønge
)

30 
ªt
;

32 i‡(!
ønge
->
avaû
)

34 
ªt
 = 
ønge
->
p‹ts
[ønge->
gë
];

35 
ønge
->
gë
++;

36 i‡(
ønge
->
gë
 >ønge->
size
)

37 
ønge
->
gë
 = 0;

38 
ønge
->
avaû
--;

39  
ªt
;

40 
	}
}

46 
ölöe
 
	$p‹t_ønge_ªÀa£_p‹t
(
p‹t_ønge
 *
ønge
, 
p‹t
)

48 i‡(!
p‹t
 || !
ønge
)

51 
ønge
->
p‹ts
[ønge->
put
] = 
p‹t
;

52 
ønge
->
avaû
++;

53 
ønge
->
put
++;

54 i‡(
ønge
->
put
 >ønge->
size
)

55 
ønge
->
put
 = 0;

56 
	}
}

61 
ölöe
 
p‹t_ønge
 *
	$p‹t_ønge_Æloc_ønge
(
n
)

63 
p‹t_ønge
 *
ªt
;

64 
ªt
 = 
	`ˇŒoc
(1, (
p‹t_ønge
) +

65 
n
 * (((
p‹t_ønge
 *)0)->
p‹ts
[0]));

66 
ªt
->
size
 =Ñë->
avaû
 = 
n
;

67  
ªt
;

68 
	}
}

	@include/proto/proto_http.h

22 #i‚de‡
_PROTO_PROTO_HTTP_H


23 
	#_PROTO_PROTO_HTTP_H


	)

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<ty≥s/¥Ÿo_hâp.h
>

27 
	~<ty≥s/£ssi⁄.h
>

28 
	~<ty≥s/èsk.h
>

44 c⁄° 
hâp_is_˘l
[256];

45 c⁄° 
hâp_is_£p
[256];

46 c⁄° 
hâp_is_lws
[256];

47 c⁄° 
hâp_is_•ht
[256];

48 c⁄° 
hâp_is_¸lf
[256];

49 c⁄° 
hâp_is_tokí
[256];

50 c⁄° 
hâp_is_vî_tokí
[256];

52 
	#HTTP_IS_CTL
(
x
Ë(
hâp_is_˘l
[()(x)])

	)

53 
	#HTTP_IS_SEP
(
x
Ë(
hâp_is_£p
[()(x)])

	)

54 
	#HTTP_IS_LWS
(
x
Ë(
hâp_is_lws
[()(x)])

	)

55 
	#HTTP_IS_SPHT
(
x
Ë(
hâp_is_•ht
[()(x)])

	)

56 
	#HTTP_IS_CRLF
(
x
Ë(
hâp_is_¸lf
[()(x)])

	)

57 
	#HTTP_IS_TOKEN
(
x
Ë(
hâp_is_tokí
[()(x)])

	)

58 
	#HTTP_IS_VER_TOKEN
(
x
Ë(
hâp_is_vî_tokí
[()(x)])

	)

60 
evít_ac˚±
(
fd
);

61 
¥o˚ss_˛i
(
£ssi⁄
 *
t
);

62 
¥o˚ss_§v_d©a
(
£ssi⁄
 *
t
);

63 
¥o˚ss_§v_c⁄n
(
£ssi⁄
 *
t
);

64 
hâp_waô_f‹_ªque°
(
£ssi⁄
 *
s
, 
buf„r
 *
ªq
, 
™_bô
);

65 
hâp_¥o˚ss_ªq_comm⁄
(
£ssi⁄
 *
s
, 
buf„r
 *
ªq
, 
™_bô
, 
¥oxy
 *
px
);

66 
hâp_¥o˚ss_ªque°
(
£ssi⁄
 *
t
, 
buf„r
 *
ªq
, 
™_bô
);

67 
hâp_¥o˚ss_èΩô
(
£ssi⁄
 *
s
, 
buf„r
 *
ªq
, 
™_bô
);

68 
hâp_¥o˚ss_ªque°_body
(
£ssi⁄
 *
s
, 
buf„r
 *
ªq
, 
™_bô
);

69 
hâp_waô_f‹_ª•⁄£
(
£ssi⁄
 *
s
, 
buf„r
 *
ªp
, 
™_bô
);

70 
hâp_¥o˚ss_ªs_comm⁄
(
£ssi⁄
 *
t
, 
buf„r
 *
ªp
, 
™_bô
, 
¥oxy
 *
px
);

71 
hâp_ªque°_f‹w¨d_body
(
£ssi⁄
 *
s
, 
buf„r
 *
ªq
, 
™_bô
);

72 
hâp_ª•⁄£_f‹w¨d_body
(
£ssi⁄
 *
s
, 
buf„r
 *
ªs
, 
™_bô
);

74 
debug_hdr
(c⁄° *
dú
, 
£ssi⁄
 *
t
, c⁄° *
°¨t
, c⁄° *
íd
);

75 
gë_§v_‰om_≠p£ssi⁄
(
£ssi⁄
 *
t
, c⁄° *
begö
, 
Àn
);

76 
≠∂y_fûãr_to_ªq_hódîs
(
£ssi⁄
 *
t
, 
buf„r
 *
ªq
, 
hdr_exp
 *
exp
);

77 
≠∂y_fûãr_to_ªq_löe
(
£ssi⁄
 *
t
, 
buf„r
 *
ªq
, 
hdr_exp
 *
exp
);

78 
≠∂y_fûãrs_to_ªque°
(
£ssi⁄
 *
s
, 
buf„r
 *
ªq
, 
¥oxy
 *
px
);

79 
≠∂y_fûãrs_to_ª•⁄£
(
£ssi⁄
 *
t
, 
buf„r
 *
πr
, 
¥oxy
 *
px
);

80 
m™age_˛õ¡_side_≠p£ssi⁄
(
£ssi⁄
 *
t
, c⁄° *
buf
, 
Àn
);

81 
m™age_˛õ¡_side_cookõs
(
£ssi⁄
 *
t
, 
buf„r
 *
ªq
);

82 
m™age_£rvî_side_cookõs
(
£ssi⁄
 *
t
, 
buf„r
 *
πr
);

83 
check_ª•⁄£_f‹_ˇchóbûôy
(
£ssi⁄
 *
t
, 
buf„r
 *
πr
);

84 
°©s_check_uri
(
£ssi⁄
 *
s
, 
¥oxy
 *
backíd
);

85 
öô_¥Ÿo_hâp
();

86 
hâp_föd_hódî2
(c⁄° *
«me
, 
Àn
,

87 *
sﬁ
, 
hdr_idx
 *
idx
,

88 
hdr_˘x
 *
˘x
);

89 
hâp_£ss_log
(
£ssi⁄
 *
s
);

90 
≥rf‹m_hâp_ªdúe˘
(
£ssi⁄
 *
s
, 
°ªam_öãrÁ˚
 *
si
);

91 
hâp_ªtu∫_§v_îr‹
(
£ssi⁄
 *
s
, 
°ªam_öãrÁ˚
 *
si
);

92 
hâp_ˇ±uª_bad_mesßge
(
îr‹_¢≠shŸ
 *
es
, 
£ssi⁄
 *
s
,

93 
buf„r
 *
buf
, 
hâp_msg
 *
msg
,

94 
¥oxy
 *
Ÿhî_íd
);

95 
gë_ù_‰om_hdr2
(
hâp_msg
 *
msg
, c⁄° *
h«me
, 
hÀn
,

96 
hdr_idx
 *
idx
, 
occ
);

98 
hâp_öô_txn
(
£ssi⁄
 *
s
);

99 
hâp_íd_txn
(
£ssi⁄
 *
s
);

100 
hâp_ª£t_txn
(
£ssi⁄
 *
s
);

103 
	#hâp_msg_move_íd
(
msg
, 
byãs
) do { \

104 
_byãs
 = (
byãs
); \

105 (
msg
)->
cﬁ
 +(
_byãs
); \

106 (
msg
)->
sov
 +(
_byãs
); \

107 (
msg
)->
eoh
 +(
_byãs
); \

108 } 0)

	)

	@include/proto/proto_tcp.h

22 #i‚de‡
_PROTO_PROTO_TCP_H


23 
	#_PROTO_PROTO_TCP_H


	)

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<ty≥s/¥Ÿo_t˝.h
>

27 
	~<ty≥s/èsk.h
>

29 
t˝_evít_ac˚±
(
fd
);

30 
t˝v4_böd_sockë
(
fd
, 
Êags
, 
sockaddr_ö
 *
loˇl
, sockaddr_ö *
ªmŸe
);

31 
t˝v4_add_li°íî
(
li°íî
 *listener);

32 
t˝v6_add_li°íî
(
li°íî
 *listener);

33 
t˝_böd_li°íî
(
li°íî
 *li°íî, *
îrmsg
, 
îæí
);

34 
t˝v4_c⁄√˘_£rvî
(
°ªam_öãrÁ˚
 *
si
,

35 
¥oxy
 *
be
, 
£rvî
 *
§v
,

36 
sockaddr
 *
§v_addr
, sockadd∏*
‰om_addr
);

37 
t˝_ö•e˘_ªque°
(
£ssi⁄
 *
s
, 
buf„r
 *
ªq
, 
™_bô
);

38 
a˛_„tch_rdp_cookõ
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

39 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
);

40 
t˝_≥rsi°_rdp_cookõ
(
£ssi⁄
 *
s
, 
buf„r
 *
ªq
, 
™_bô
);

	@include/proto/proto_uxst.h

22 #i‚de‡
_PROTO_PROTO_UXST_H


23 
	#_PROTO_PROTO_UXST_H


	)

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<ty≥s/£ssi⁄.h
>

27 
	~<ty≥s/èsk.h
>

29 
ux°_evít_ac˚±
(
fd
);

30 
ux°_add_li°íî
(
li°íî
 *listener);

31 
ux°_ªq_™Æy£r_°©s
(
£ssi⁄
 *
s
, 
buf„r
 *
ªq
, 
™_bô
);

	@include/proto/protocols.h

22 #i‚de‡
_PROTO_PROTOCOLS_H


23 
	#_PROTO_PROTOCOLS_H


	)

25 
	~<ty≥s/¥Ÿocﬁs.h
>

31 
íabÀ_li°íî
(
li°íî
 *listener);

37 
dißbÀ_li°íî
(
li°íî
 *listener);

45 
íabÀ_Æl_li°íîs
(
¥Ÿocﬁ
 *
¥Ÿo
);

52 
dißbÀ_Æl_li°íîs
(
¥Ÿocﬁ
 *
¥Ÿo
);

59 
unböd_li°íî
(
li°íî
 *listener);

65 
unböd_Æl_li°íîs
(
¥Ÿocﬁ
 *
¥Ÿo
);

72 
dñëe_li°íî
(
li°íî
 *listener);

75 
¥Ÿocﬁ_ªgi°î
(
¥Ÿocﬁ
 *
¥Ÿo
);

80 
¥Ÿocﬁ_uƒegi°î
(
¥Ÿocﬁ
 *
¥Ÿo
);

85 
¥Ÿocﬁ_böd_Æl
();

92 
¥Ÿocﬁ_unböd_Æl
();

98 
¥Ÿocﬁ_íabÀ_Æl
();

	@include/proto/proxy.h

22 #i‚de‡
_PROTO_PROXY_H


23 
	#_PROTO_PROXY_H


	)

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<comm⁄/ticks.h
>

27 
	~<comm⁄/time.h
>

28 
	~<ty≥s/¥oxy.h
>

29 
	~<¥Ÿo/‰eq_˘r.h
>

31 
°¨t_¥oxõs
(
vîbo£
);

32 
maöèö_¥oxõs
(*
√xt
);

33 
so·_°›
();

34 
∑u£_¥oxy
(
¥oxy
 *
p
);

35 
°›_¥oxy
(
¥oxy
 *
p
);

36 
∑u£_¥oxõs
();

37 
li°í_¥oxõs
();

38 
£ssi⁄_£t_backíd
(
£ssi⁄
 *
s
, 
¥oxy
 *
be
);

40 c⁄° *
¥oxy_ˇp_°r
(
ˇp
);

41 c⁄° *
¥oxy_mode_°r
(
mode
);

42 
¥oxy
 *
föd¥oxy_mode
(c⁄° *
«me
, 
mode
, 
ˇp
);

43 
¥oxy
 *
föd¥oxy
(c⁄° *
«me
, 
ˇp
);

44 
£rvî
 *
föd£rvî
(c⁄° 
¥oxy
 *
px
, c⁄° *
«me
);

45 
¥oxy_cfg_ísuª_no_hâp
(
¥oxy
 *
cuΩroxy
);

46 
gë_backíd_£rvî
(c⁄° *
bk_«me
, c⁄° *
sv_«me
,

47 
¥oxy
 **
bk
, 
£rvî
 **
sv
);

53 
ölöe
 c⁄° *
	$¥oxy_ty≥_°r
(
¥oxy
 *proxy)

55  
	`¥oxy_ˇp_°r
(
¥oxy
->
ˇp
);

56 
	}
}

59 
ölöe
 
	$¥oxy_ª£t_timeouts
(
¥oxy
 *proxy)

61 
¥oxy
->
timeout
.
˛õ¡
 = 
TICK_ETERNITY
;

62 
¥oxy
->
timeout
.
èΩô
 = 
TICK_ETERNITY
;

63 
¥oxy
->
timeout
.
queue
 = 
TICK_ETERNITY
;

64 
¥oxy
->
timeout
.
c⁄√˘
 = 
TICK_ETERNITY
;

65 
¥oxy
->
timeout
.
£rvî
 = 
TICK_ETERNITY
;

66 
¥oxy
->
timeout
.
≠p£ssi⁄
 = 
TICK_ETERNITY
;

67 
¥oxy
->
timeout
.
hâ¥eq
 = 
TICK_ETERNITY
;

68 
¥oxy
->
timeout
.
check
 = 
TICK_ETERNITY
;

69 
	}
}

72 
ölöe
 
	$¥oxy_öc_„_˘r
(
li°íî
 *
l
, 
¥oxy
 *
„
)

74 
„
->
cou¡îs
.
cum_„c⁄n
++;

75 i‡(
l
->
cou¡îs
)

76 
l
->
cou¡îs
->
cum_c⁄n
++;

78 
	`upd©e_‰eq_˘r
(&
„
->
„_£ss_≥r_£c
, 1);

79 i‡(
„
->
„_£ss_≥r_£c
.
cuº_˘r
 > fe->
cou¡îs
.
„_•s_max
)

80 
„
->
cou¡îs
.
„_•s_max
 = fe->
„_£ss_≥r_£c
.
cuº_˘r
;

81 
	}
}

84 
ölöe
 
	$¥oxy_öc_be_˘r
(
¥oxy
 *
be
)

86 
be
->
cou¡îs
.
cum_bec⁄n
++;

87 
	`upd©e_‰eq_˘r
(&
be
->
be_£ss_≥r_£c
, 1);

88 i‡(
be
->
be_£ss_≥r_£c
.
cuº_˘r
 > be->
cou¡îs
.
be_•s_max
)

89 
be
->
cou¡îs
.
be_•s_max
 = be->
be_£ss_≥r_£c
.
cuº_˘r
;

90 
	}
}

93 
ölöe
 
	$¥oxy_öc_„_ªq_˘r
(
¥oxy
 *
„
)

95 
„
->
cou¡îs
.
cum_„_ªq
++;

96 
	`upd©e_‰eq_˘r
(&
„
->
„_ªq_≥r_£c
, 1);

97 i‡(
„
->
„_ªq_≥r_£c
.
cuº_˘r
 > fe->
cou¡îs
.
„_Ωs_max
)

98 
„
->
cou¡îs
.
„_Ωs_max
 = fe->
„_ªq_≥r_£c
.
cuº_˘r
;

99 
	}
}

	@include/proto/queue.h

22 #i‚de‡
_PROTO_QUEUE_H


23 
	#_PROTO_QUEUE_H


	)

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<comm⁄/mem‹y.h
>

27 
	~<comm⁄/möi-˛i°.h
>

29 
	~<ty≥s/¥oxy.h
>

30 
	~<ty≥s/queue.h
>

31 
	~<ty≥s/£ssi⁄.h
>

32 
	~<ty≥s/£rvî.h
>

33 
	~<ty≥s/èsk.h
>

35 
poﬁ_hód
 *
poﬁ2_≥ndc⁄n
;

37 
öô_≥ndc⁄n
();

38 
£ssi⁄
 *
≥ndc⁄n_gë_√xt_£ss
(
£rvî
 *
§v
, 
¥oxy
 *
px
);

39 
≥ndc⁄n
 *
≥ndc⁄n_add
(
£ssi⁄
 *
£ss
);

40 
≥ndc⁄n_‰ì
(
≥ndc⁄n
 *
p
);

41 
¥o˚ss_§v_queue
(
£rvî
 *
s
);

42 
§v_dy«mic_maxc⁄n
(c⁄° 
£rvî
 *
s
);

49 
ölöe
 
≥ndc⁄n
 *
	$≥ndc⁄n_‰om_§v
(c⁄° 
£rvî
 *
s
) {

50 i‡(!
s
->
nb≥nd
)

51  
NULL
;

53  
	`LIST_ELEM
(
s
->
≥ndc⁄ns
.
n
, 
≥ndc⁄n
 *, 
li°
);

54 
	}
}

59 
ölöe
 
≥ndc⁄n
 *
	$≥ndc⁄n_‰om_px
(c⁄° 
¥oxy
 *
px
) {

60 i‡(!
px
->
nb≥nd
)

61  
NULL
;

63  
	`LIST_ELEM
(
px
->
≥ndc⁄ns
.
n
, 
≥ndc⁄n
 *, 
li°
);

64 
	}
}

70 
ölöe
 
	$may_dequeue_èsks
(c⁄° 
£rvî
 *
s
, c⁄° 
¥oxy
 *
p
) {

71  (
s
 && (s->
nb≥nd
 || (
p
->nb≥nd && (s->
°©e
 & 
SRV_RUNNING
))) &&

72 (!
s
->
maxc⁄n
 || s->
cur_£ss
 < 
	`§v_dy«mic_maxc⁄n
(s)));

73 
	}
}

	@include/proto/server.h

22 #i‚de‡
_PROTO_SERVER_H


23 
	#_PROTO_SERVER_H


	)

25 
	~<uni°d.h
>

27 
	~<comm⁄/c⁄fig.h
>

28 
	~<ty≥s/¥oxy.h
>

29 
	~<ty≥s/queue.h
>

30 
	~<ty≥s/£rvî.h
>

32 
	~<¥Ÿo/queue.h
>

33 
	~<¥Ÿo/‰eq_˘r.h
>

35 
§v_dow¡ime
(
£rvî
 *
s
);

36 
§v_gëöãr
(
£rvî
 *
s
);

39 
ölöe
 
	$§v_öc_£ss_˘r
(
£rvî
 *
s
)

41 
s
->
cou¡îs
.
cum_£ss
++;

42 
	`upd©e_‰eq_˘r
(&
s
->
£ss_≥r_£c
, 1);

43 i‡(
s
->
£ss_≥r_£c
.
cuº_˘r
 > s->
cou¡îs
.
•s_max
)

44 
s
->
cou¡îs
.
•s_max
 = s->
£ss_≥r_£c
.
cuº_˘r
;

45 
	}
}

	@include/proto/session.h

22 #i‚de‡
_PROTO_SESSION_H


23 
	#_PROTO_SESSION_H


	)

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<comm⁄/mem‹y.h
>

27 
	~<ty≥s/£ssi⁄.h
>

29 
poﬁ_hód
 *
poﬁ2_£ssi⁄
;

30 
li°
 
£ssi⁄s
;

32 
£ssi⁄_‰ì
(
£ssi⁄
 *
s
);

35 
öô_£ssi⁄
();

37 
£ssi⁄_¥o˚ss_cou¡îs
(
£ssi⁄
 *
s
);

38 
£ss_ch™ge_£rvî
(
£ssi⁄
 *
£ss
, 
£rvî
 *
√w§v
);

39 
èsk
 *
¥o˚ss_£ssi⁄
(èsk *
t
);

40 
£ss_£t_ãrm_Êags
(
£ssi⁄
 *
s
);

41 
deÁu…_§v_îr‹
(
£ssi⁄
 *
s
, 
°ªam_öãrÁ˚
 *
si
);

43 
ölöe
 
	$åa˚_ãrm
(
£ssi⁄
 *
s
, 
code
)

45 
s
->
ãrm_åa˚
 <<
TT_BIT_SHIFT
;

46 
s
->
ãrm_åa˚
 |
code
;

47 
	}
}

	@include/proto/signal.h

13 
	~<sig«l.h
>

14 
	~<comm⁄/°™d¨d.h
>

15 
	~<ty≥s/sig«l.h
>

17 
sig«l_queue_Àn
;

18 
sig«l_des¸ùt‹
 
sig«l_°©e
[];

20 
sig«l_öô
();

21 
sig«l_h™dÀr
(
sig
);

22 
sig«l_ªgi°î
(
sig
, (*
h™dÀr
)());

23 
	`__sig«l_¥o˚ss_queue
();

25 
ölöe
 
	$sig«l_¥o˚ss_queue
()

27 i‡(
	`u∆ikñy
(
sig«l_queue_Àn
 > 0))

28 
	`__sig«l_¥o˚ss_queue
();

29 
	}
}

	@include/proto/stick_table.h

22 #i‚de‡
_PROTO_STICK_TABLE_H


23 
	#_PROTO_STICK_TABLE_H


	)

25 
	~<ty≥s/°ick_èbÀ.h
>

27 
°k£ss
 *
°k£ss_√w
(
°kèbÀ
 *
t
, 
°kèbÀ_key
 *
key
);

28 
°k£ss_key
(
°kèbÀ
 *
t
, 
°k£ss
 *
ts
, 
°kèbÀ_key
 *
key
);

29 
°k£ss_‰ì
(
°kèbÀ
 *
t
, 
°k£ss
 *
ts
);

31 
°kèbÀ_öô
(
°kèbÀ
 *
t
);

32 
°kèbÀ_∑r£_ty≥
(**
¨gs
, *
idx
, *
ty≥
, 
size_t
 *
key_size
);

33 
°kèbÀ_°‹e
(
°kèbÀ
 *
t
, 
°k£ss
 *
ts
, 
sid
);

34 
°k£ss
 *
°kèbÀ_lookup
(
°kèbÀ
 *
t
, 
°kèbÀ_key
 *
key
);

	@include/proto/stream_interface.h

22 #i‚de‡
_PROTO_STREAM_INTERFACE_H


23 
	#_PROTO_STREAM_INTERFACE_H


	)

25 
	~<°dlib.h
>

27 
	~<comm⁄/c⁄fig.h
>

28 
	~<ty≥s/°ªam_öãrÁ˚.h
>

32 
°ªam_öt_check_timeouts
(
°ªam_öãrÁ˚
 *
si
);

33 
°ªam_öt_ªp‹t_îr‹
(
°ªam_öãrÁ˚
 *
si
);

34 
°ªam_öt_ªä˛o£
(
°ªam_öãrÁ˚
 *
si
, c⁄° 
chunk
 *
msg
);

37 
°ªam_öt_upd©e
(
°ªam_öãrÁ˚
 *
si
);

38 
°ªam_öt_upd©e_embedded
(
°ªam_öãrÁ˚
 *
si
);

39 
°ªam_öt_shuå
(
°ªam_öãrÁ˚
 *
si
);

40 
°ªam_öt_shutw
(
°ªam_öãrÁ˚
 *
si
);

41 
°ªam_öt_chk_rcv
(
°ªam_öãrÁ˚
 *
si
);

42 
°ªam_öt_chk_¢d
(
°ªam_öãrÁ˚
 *
si
);

44 
èsk
 *
°ªam_öt_ªgi°î_h™dÀr
(
°ªam_öãrÁ˚
 *
si
,

45 (*
f˘
)(
°ªam_öãrÁ˚
 *));

46 
èsk
 *
	`°ªam_öt_ªgi°î_h™dÀr_èsk
(
°ªam_öãrÁ˚
 *
si
,

47 
èsk
 *(*
f˘
)(task *));

48 
	`°ªam_öt_uƒegi°î_h™dÀr
(
°ªam_öãrÁ˚
 *
si
);

	@include/proto/stream_sock.h

22 #i‚de‡
_PROTO_STREAM_SOCK_H


23 
	#_PROTO_STREAM_SOCK_H


	)

25 
	~<°dlib.h
>

26 
	~<sys/sockë.h
>

27 
	~<sys/ty≥s.h
>

29 
	~<comm⁄/c⁄fig.h
>

30 
	~<ty≥s/°ªam_öãrÁ˚.h
>

34 
°ªam_sock_ªad
(
fd
);

35 
°ªam_sock_wrôe
(
fd
);

36 
°ªam_sock_d©a_föish
(
°ªam_öãrÁ˚
 *
si
);

37 
°ªam_sock_shuå
(
°ªam_öãrÁ˚
 *
si
);

38 
°ªam_sock_shutw
(
°ªam_öãrÁ˚
 *
si
);

39 
°ªam_sock_chk_rcv
(
°ªam_öãrÁ˚
 *
si
);

40 
°ªam_sock_chk_¢d
(
°ªam_öãrÁ˚
 *
si
);

46 
ölöe
 
	$gë_‹igöÆ_d°
(
fd
, 
sockaddr_ö
 *
ß
, 
sockÀn_t
 *
ßÀn
) {

47 #i‡
	`deföed
(
TPROXY
Ë&& deföed(
SO_ORIGINAL_DST
)

48  
	`gësock›t
(
fd
, 
SOL_IP
, 
SO_ORIGINAL_DST
, (*)
ß
, 
ßÀn
);

50 #i‡
	`deföed
(
TPROXY
Ë&& deföed(
USE_GETSOCKNAME
)

51  
	`gësock«me
(
fd
, (
sockaddr
 *)
ß
, 
ßÀn
);

56 
	}
}

	@include/proto/task.h

22 #i‚de‡
_PROTO_TASK_H


23 
	#_PROTO_TASK_H


	)

26 
	~<sys/time.h
>

28 
	~<comm⁄/c⁄fig.h
>

29 
	~<comm⁄/mem‹y.h
>

30 
	~<comm⁄/möi-˛i°.h
>

31 
	~<comm⁄/°™d¨d.h
>

32 
	~<comm⁄/ticks.h
>

33 
	~<eb32åì.h
>

35 
	~<ty≥s/èsk.h
>

78 
	#TIMER_LOOK_BACK
 (1U << 31)

	)

81 
nb_èsks
;

82 
run_queue
;

83 
run_queue_cur
;

84 
nb_èsks_cur
;

85 
ni˚d_èsks
;

86 
poﬁ_hód
 *
poﬁ2_èsk
;

87 
eb32_node
 *
œ°_timî
;

90 
ölöe
 
	$èsk_ö_rq
(
èsk
 *
t
)

92  
t
->
rq
.
node
.
Àaf_p
 !
NULL
;

93 
	}
}

96 
ölöe
 
	$èsk_ö_wq
(
èsk
 *
t
)

98  
t
->
wq
.
node
.
Àaf_p
 !
NULL
;

99 
	}
}

102 
èsk
 *
__èsk_wakeup
(èsk *
t
);

103 
ölöe
 
èsk
 *
	$èsk_wakeup
(
èsk
 *
t
, 
f
)

105 i‡(
	`likñy
(!
	`èsk_ö_rq
(
t
)))

106 
	`__èsk_wakeup
(
t
);

107 
t
->
°©e
 |
f
;

108  
t
;

109 
	}
}

117 
ölöe
 
èsk
 *
	$__èsk_u∆ök_wq
(
èsk
 *
t
)

119 
	`eb32_dñëe
(&
t
->
wq
);

120 i‡(
œ°_timî
 =&
t
->
wq
)

121 
œ°_timî
 = 
NULL
;

122  
t
;

123 
	}
}

125 
ölöe
 
èsk
 *
	$èsk_u∆ök_wq
(
èsk
 *
t
)

127 i‡(
	`likñy
(
	`èsk_ö_wq
(
t
)))

128 
	`__èsk_u∆ök_wq
(
t
);

129  
t
;

130 
	}
}

138 
ölöe
 
èsk
 *
	$__èsk_u∆ök_rq
(
èsk
 *
t
)

140 
	`eb32_dñëe
(&
t
->
rq
);

141 
run_queue
--;

142 i‡(
	`likñy
(
t
->
ni˚
))

143 
ni˚d_èsks
--;

144  
t
;

145 
	}
}

147 
ölöe
 
èsk
 *
	$èsk_u∆ök_rq
(
èsk
 *
t
)

149 i‡(
	`likñy
(
	`èsk_ö_rq
(
t
)))

150 
	`__èsk_u∆ök_rq
(
t
);

151  
t
;

152 
	}
}

158 
ölöe
 
èsk
 *
	$èsk_dñëe
(
èsk
 *
t
)

160 
	`èsk_u∆ök_wq
(
t
);

161 
	`èsk_u∆ök_rq
(
t
);

162  
t
;

163 
	}
}

170 
ölöe
 
èsk
 *
	$èsk_öô
(
èsk
 *
t
)

172 
t
->
wq
.
node
.
Àaf_p
 = 
NULL
;

173 
t
->
rq
.
node
.
Àaf_p
 = 
NULL
;

174 
t
->
°©e
 = 
TASK_SLEEPING
;

175 
t
->
ni˚
 = 0;

176 
t
->
ˇŒs
 = 0;

177  
t
;

178 
	}
}

185 
ölöe
 
èsk
 *
	$èsk_√w
()

187 
èsk
 *
t
 = 
	`poﬁ_Æloc2
(
poﬁ2_èsk
);

188 i‡(
t
) {

189 
nb_èsks
++;

190 
	`èsk_öô
(
t
);

192  
t
;

193 
	}
}

199 
ölöe
 
	$èsk_‰ì
(
èsk
 *
t
)

201 
	`poﬁ_‰ì2
(
poﬁ2_èsk
, 
t
);

202 
nb_èsks
--;

203 
	}
}

208 
__èsk_queue
(
èsk
 *task);

209 
ölöe
 
	$èsk_queue
(
èsk
 *task)

220 i‡(!
	`tick_is£t
(
èsk
->
expúe
))

223 i‡(!
	`èsk_ö_wq
(
èsk
Ë|| 
	`tick_is_…
—ask->
expúe
,Åask->
wq
.
key
))

224 
	`__èsk_queue
(
èsk
);

225 
	}
}

235 
¥o˚ss_ru¬abÀ_èsks
(*
√xt
);

241 
wake_expúed_èsks
(*
√xt
);

244 
öô_èsk
();

	@include/proto/template.h

22 #i‚de‡
_PROTO_TEMPLATE_H


23 
	#_PROTO_TEMPLATE_H


	)

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<ty≥s/ãm∂©e.h
>

	@include/types/acl.h

22 #i‚de‡
_TYPES_ACL_H


23 
	#_TYPES_ACL_H


	)

25 
	~<comm⁄/com∑t.h
>

26 
	~<comm⁄/c⁄fig.h
>

27 
	~<comm⁄/möi-˛i°.h
>

29 
	~<ty≥s/auth.h
>

30 
	~<ty≥s/¥oxy.h
>

31 
	~<ty≥s/£rvî.h
>

32 
	~<ty≥s/£ssi⁄.h
>

34 
	~<ebmbåì.h
>

57 
	mACL_PAT_FAIL
 = 0,

58 
	mACL_PAT_MISS
 = 1,

59 
	mACL_PAT_PASS
 = 3,

67 
	mACL_COND_NONE
,

68 
	mACL_COND_IF
,

69 
	mACL_COND_UNLESS
,

76 
	mACL_TEST_F_READ_ONLY
 = 1 << 0,

77 
	mACL_TEST_F_MUST_FREE
 = 1 << 1,

78 
	mACL_TEST_F_VOL_TEST
 = 1 << 2,

79 
	mACL_TEST_F_VOL_HDR
 = 1 << 3,

80 
	mACL_TEST_F_VOL_1ST
 = 1 << 4,

81 
	mACL_TEST_F_VOL_TXN
 = 1 << 5,

82 
	mACL_TEST_F_VOL_SESS
 = 1 << 6,

83 
	mACL_TEST_F_VOLATILE
 = (1<<2)|(1<<3)|(1<<4)|(1<<5)|(1<<6),

84 
	mACL_TEST_F_FETCH_MORE
 = 1 << 7,

85 
	mACL_TEST_F_MAY_CHANGE
 = 1 << 8,

86 
	mACL_TEST_F_RES_SET
 = 1 << 9,

87 
	mACL_TEST_F_RES_PASS
 = 1 << 10,

88 
	mACL_TEST_F_SET_RES_PASS
 = (
ACL_TEST_F_RES_SET
|
ACL_TEST_F_RES_PASS
),

89 
	mACL_TEST_F_SET_RES_FAIL
 = (
ACL_TEST_F_RES_SET
),

90 
	mACL_TEST_F_NULL_MATCH
 = 1 << 11,

95 
	mACL_DIR_REQ
 = 0,

96 
	mACL_DIR_RTR
 = (1 << 0),

97 
	mACL_DIR_MASK
 = (
ACL_DIR_REQ
 | 
ACL_DIR_RTR
),

98 
	mACL_PARTIAL
 = (1 << 1),

103 
	mACL_PAT_F_IGNORE_CASE
 = 1 << 0,

104 
	mACL_PAT_F_FROM_FILE
 = 1 << 1,

105 
	mACL_PAT_F_TREE_OK
 = 1 << 2,

106 
	mACL_PAT_F_TREE
 = 1 << 3,

113 
	mACL_USE_NOTHING
 = 0,

114 
	mACL_USE_TCP4_PERMANENT
 = 1 << 0,

115 
	mACL_USE_TCP4_CACHEABLE
 = 1 << 1,

116 
	mACL_USE_TCP4_VOLATILE
 = 1 << 2,

117 
	mACL_USE_TCP4_ANY
 = (
ACL_USE_TCP4_PERMANENT
 | 
ACL_USE_TCP4_CACHEABLE
 | 
ACL_USE_TCP4_VOLATILE
),

119 
	mACL_USE_TCP6_PERMANENT
 = 1 << 3,

120 
	mACL_USE_TCP6_CACHEABLE
 = 1 << 4,

121 
	mACL_USE_TCP6_VOLATILE
 = 1 << 5,

122 
	mACL_USE_TCP6_ANY
 = (
ACL_USE_TCP6_PERMANENT
 | 
ACL_USE_TCP6_CACHEABLE
 | 
ACL_USE_TCP6_VOLATILE
),

124 
	mACL_USE_TCP_PERMANENT
 = 1 << 6,

125 
	mACL_USE_TCP_CACHEABLE
 = 1 << 7,

126 
	mACL_USE_TCP_VOLATILE
 = 1 << 8,

127 
	mACL_USE_TCP_ANY
 = (
ACL_USE_TCP_PERMANENT
 | 
ACL_USE_TCP_CACHEABLE
 | 
ACL_USE_TCP_VOLATILE
),

129 
	mACL_USE_L4REQ_PERMANENT
 = 1 << 9,

130 
	mACL_USE_L4REQ_CACHEABLE
 = 1 << 10,

131 
	mACL_USE_L4REQ_VOLATILE
 = 1 << 11,

132 
	mACL_USE_L4REQ_ANY
 = (
ACL_USE_L4REQ_PERMANENT
 | 
ACL_USE_L4REQ_CACHEABLE
 | 
ACL_USE_L4REQ_VOLATILE
),

134 
	mACL_USE_L4RTR_PERMANENT
 = 1 << 12,

135 
	mACL_USE_L4RTR_CACHEABLE
 = 1 << 13,

136 
	mACL_USE_L4RTR_VOLATILE
 = 1 << 14,

137 
	mACL_USE_L4RTR_ANY
 = (
ACL_USE_L4RTR_PERMANENT
 | 
ACL_USE_L4RTR_CACHEABLE
 | 
ACL_USE_L4RTR_VOLATILE
),

139 
	mACL_USE_L7REQ_PERMANENT
 = 1 << 15,

140 
	mACL_USE_L7REQ_CACHEABLE
 = 1 << 16,

141 
	mACL_USE_L7REQ_VOLATILE
 = 1 << 17,

142 
	mACL_USE_L7REQ_ANY
 = (
ACL_USE_L7REQ_PERMANENT
 | 
ACL_USE_L7REQ_CACHEABLE
 | 
ACL_USE_L7REQ_VOLATILE
),

144 
	mACL_USE_L7RTR_PERMANENT
 = 1 << 18,

145 
	mACL_USE_L7RTR_CACHEABLE
 = 1 << 19,

146 
	mACL_USE_L7RTR_VOLATILE
 = 1 << 20,

147 
	mACL_USE_L7RTR_ANY
 = (
ACL_USE_L7RTR_PERMANENT
 | 
ACL_USE_L7RTR_CACHEABLE
 | 
ACL_USE_L7RTR_VOLATILE
),

150 
	mACL_USE_HDR_CACHEABLE
 = 1 << 21,

151 
	mACL_USE_HDR_VOLATILE
 = 1 << 22,

152 
	mACL_USE_HDR_ANY
 = (
ACL_USE_HDR_CACHEABLE
 | 
ACL_USE_HDR_VOLATILE
),

155 
	mACL_USE_REQ_PERMANENT
 = (
ACL_USE_TCP4_PERMANENT
 | 
ACL_USE_TCP6_PERMANENT
 | 
ACL_USE_TCP_PERMANENT
 |

156 
ACL_USE_L4REQ_PERMANENT
 | 
ACL_USE_L7REQ_PERMANENT
),

157 
	mACL_USE_REQ_CACHEABLE
 = (
ACL_USE_TCP4_CACHEABLE
 | 
ACL_USE_TCP6_CACHEABLE
 | 
ACL_USE_TCP_CACHEABLE
 |

158 
ACL_USE_L4REQ_CACHEABLE
 | 
ACL_USE_L7REQ_CACHEABLE
 | 
ACL_USE_HDR_CACHEABLE
),

161 
	mACL_USE_REQ_VOLATILE
 = (
ACL_USE_TCP4_VOLATILE
 | 
ACL_USE_TCP6_VOLATILE
 | 
ACL_USE_TCP_VOLATILE
 |

162 
ACL_USE_L4REQ_VOLATILE
 | 
ACL_USE_L7REQ_VOLATILE
),

165 
	mACL_USE_L4_ANY
 = (
ACL_USE_L4REQ_ANY
 | 
ACL_USE_L4RTR_ANY
),

168 
	mACL_USE_L7_ANY
 = (
ACL_USE_L7REQ_ANY
 | 
ACL_USE_L7RTR_ANY
 | 
ACL_USE_HDR_ANY
),

171 
	mACL_USE_RTR_ANY
 = (
ACL_USE_L4RTR_ANY
 | 
ACL_USE_L7RTR_ANY
),

177 
	mACL_MAY_LOOKUP
 = 1 << 31,

183 
	mACL_HOOK_REQ_FE_TCP
 = 0,

184 
	mACL_HOOK_REQ_FE_TCP_CONTENT
,

185 
	mACL_HOOK_REQ_FE_HTTP_IN
,

186 
	mACL_HOOK_REQ_FE_SWITCH
,

187 
	mACL_HOOK_REQ_BE_TCP_CONTENT
,

188 
	mACL_HOOK_REQ_BE_HTTP_IN
,

189 
	mACL_HOOK_REQ_BE_SWITCH
,

190 
	mACL_HOOK_REQ_FE_HTTP_OUT
,

191 
	mACL_HOOK_REQ_BE_HTTP_OUT
,

193 
	mACL_HOOK_RTR_BE_TCP_CONTENT
,

194 
	mACL_HOOK_RTR_BE_HTTP_IN
,

195 
	mACL_HOOK_RTR_FE_TCP_CONTENT
,

196 
	mACL_HOOK_RTR_FE_HTTP_IN
,

197 
	mACL_HOOK_RTR_BE_HTTP_OUT
,

198 
	mACL_HOOK_RTR_FE_HTTP_OUT
,

202 
	sa˛_time
 {

203 
	mdow
:7;

204 
	mh1
:5, 
	mm1
:6;

205 
	mh2
:5, 
	mm2
:6;

209 
	sa˛_∑âîn
 {

210 
li°
 
	mli°
;

212 
	mi
;

214 sig√d 
	mmö
, 
	mmax
;

215 
	mmö_£t
 :1;

216 
	mmax_£t
 :1;

217 } 
	mønge
;

219 
ö_addr
 
	maddr
;

220 
ö_addr
 
	mmask
;

221 } 
	mùv4
;

222 
a˛_time
 
	mtime
;

223 
	mgroup_mask
;

224 
eb_roŸ
 *
	måì
;

225 } 
	mvÆ
;

227 *
	m±r
;

228 *
	m°r
;

229 
ªgex_t
 *
	mªg
;

230 } 
	m±r
;

231 (*
	m‰ì±rbuf
)(*
	m±r
);

232 
	mÀn
;

233 
	mÊags
;

239 
	sa˛_ã°
 {

240 
	mi
;

241 *
	m±r
;

242 
	mÀn
;

243 
	mÊags
;

245 *
	mp
;

246 
	mi
;

247 
	mŒ
;

248 
	md
;

249 *
	ma
[8];

250 } 
	m˘x
;

259 
	g¥oxy
;

260 
	g£ssi⁄
;

271 
	ga˛_ex¥
;

272 
	sa˛_keyw‹d
 {

273 c⁄° *
	mkw
;

274 (*
	m∑r£
)(c⁄° **
	mãxt
, 
a˛_∑âîn
 *
	m∑âîn
, *
	m›aque
);

275 (*
	m„tch
)(
¥oxy
 *
	mpx
, 
£ssi⁄
 *
	ml4
, *
	ml7
, 
	mdú
,

276 
a˛_ex¥
 *
	mex¥
, 
a˛_ã°
 *
	mã°
);

277 (*
	mm©ch
)(
a˛_ã°
 *
	mã°
, 
a˛_∑âîn
 *
	m∑âîn
);

278 
	mªquúes
;

279 
	mu£_˙t
;

288 
	sa˛_kw_li°
 {

289 
li°
 
	mli°
;

290 
a˛_keyw‹d
 
	mkw
[
VAR_ARRAY
];

302 
	sa˛_ex¥
 {

303 
li°
 
	mli°
;

304 
a˛_keyw‹d
 *
	mkw
;

306 *
	m°r
;

307 
u£æi°
 *
	mul
;

308 
£rvî
 *
	m§v
;

309 } 
	m¨g
;

310 
	m¨g_Àn
;

311 
li°
 
	m∑âîns
;

312 
eb_roŸ
 
	m∑âîn_åì
;

315 
	sa˛
 {

316 
li°
 
	mli°
;

317 *
	m«me
;

318 
li°
 
	mex¥
;

319 
	mˇche_idx
;

320 
	mªquúes
;

324 
	sa˛_ãrm
 {

325 
li°
 
	mli°
;

326 
a˛
 *
	ma˛
;

327 
	m√g
;

330 
	sa˛_ãrm_suôe
 {

331 
li°
 
	mli°
;

332 
li°
 
	mãrms
;

335 
	sa˛_c⁄d
 {

336 
li°
 
	mli°
;

337 
li°
 
	msuôes
;

338 
	mpﬁ
;

339 
	mªquúes
;

340 c⁄° *
	mfûe
;

341 
	mlöe
;

	@include/types/auth.h

13 #i‚de‡
_TYPES_AUTH_H


14 
	#_TYPES_AUTH_H


	)

16 
	~<comm⁄/c⁄fig.h
>

17 
	~<comm⁄/möi-˛i°.h
>

19 
	~<ty≥s/auth.h
>

21 
	#MAX_AUTH_GROUPS
 ()(()*8)

	)

23 
	#AU_O_INSECURE
 0x00000001

	)

26 
	mPR_REQ_ACL_ACT_UNKNOWN
 = 0,

27 
	mPR_REQ_ACL_ACT_ALLOW
,

28 
	mPR_REQ_ACL_ACT_DENY
,

29 
	mPR_REQ_ACL_ACT_HTTP_AUTH
,

31 
	mPR_REQ_ACL_ACT_MAX


35 
	sªq_a˛_ruÀ
 {

36 
li°
 
	mli°
;

37 
a˛_c⁄d
 *
	mc⁄d
;

38 
	ma˘i⁄
;

40 *
	mªÆm
;

41 } 
	mhâp_auth
;

44 
	sauth_u£rs
 {

45 
auth_u£rs
 *
	m√xt
;

46 
	mÊags
;

47 *
	mu£r
, *
	m∑ss
;

49 *
	mgroups
;

50 
	mgroup_mask
;

51 } 
	mu
;

54 
	su£æi°
 {

55 
u£æi°
 *
	m√xt
;

56 *
	m«me
;

57 
auth_u£rs
 *
	mu£rs
;

58 
	mgΩ˙t
;

59 *
	mgroups
[
MAX_AUTH_GROUPS
];

60 **
	mgroupu£rs
;

	@include/types/backend.h

22 #i‚de‡
_TYPES_BACKEND_H


23 
	#_TYPES_BACKEND_H


	)

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<ty≥s/lb_chash.h
>

27 
	~<ty≥s/lb_fwlc.h
>

28 
	~<ty≥s/lb_fwº.h
>

29 
	~<ty≥s/lb_m≠.h
>

30 
	~<ty≥s/£rvî.h
>

41 
	#BE_LB_HASH_SRC
 0x00000

	)

42 
	#BE_LB_HASH_URI
 0x00001

	)

43 
	#BE_LB_HASH_PRM
 0x00002

	)

44 
	#BE_LB_HASH_HDR
 0x00003

	)

45 
	#BE_LB_HASH_RDP
 0x00004

	)

47 
	#BE_LB_RR_DYN
 0x00000

	)

48 
	#BE_LB_RR_STATIC
 0x00001

	)

49 
	#BE_LB_PARM
 0x000FF

	)

52 
	#BE_LB_NEED_NONE
 0x00000

	)

53 
	#BE_LB_NEED_ADDR
 0x00100

	)

54 
	#BE_LB_NEED_DATA
 0x00200

	)

55 
	#BE_LB_NEED_HTTP
 0x00400

	)

57 
	#BE_LB_NEED
 0x00F00

	)

60 
	#BE_LB_KIND_NONE
 0x00000

	)

61 
	#BE_LB_KIND_RR
 0x01000

	)

62 
	#BE_LB_KIND_LC
 0x02000

	)

63 
	#BE_LB_KIND_HI
 0x03000

	)

64 
	#BE_LB_KIND
 0x07000

	)

69 
	#BE_LB_ALGO_NONE
 (
BE_LB_KIND_NONE
 | 
BE_LB_NEED_NONE
Ë

	)

70 
	#BE_LB_ALGO_RR
 (
BE_LB_KIND_RR
 | 
BE_LB_NEED_NONE
Ë

	)

71 
	#BE_LB_ALGO_LC
 (
BE_LB_KIND_LC
 | 
BE_LB_NEED_NONE
Ë

	)

72 
	#BE_LB_ALGO_SRR
 (
BE_LB_KIND_RR
 | 
BE_LB_NEED_NONE
 | 
BE_LB_RR_STATIC
Ë

	)

73 
	#BE_LB_ALGO_SH
 (
BE_LB_KIND_HI
 | 
BE_LB_NEED_ADDR
 | 
BE_LB_HASH_SRC
Ë

	)

74 
	#BE_LB_ALGO_UH
 (
BE_LB_KIND_HI
 | 
BE_LB_NEED_HTTP
 | 
BE_LB_HASH_URI
Ë

	)

75 
	#BE_LB_ALGO_PH
 (
BE_LB_KIND_HI
 | 
BE_LB_NEED_HTTP
 | 
BE_LB_HASH_PRM
Ë

	)

76 
	#BE_LB_ALGO_HH
 (
BE_LB_KIND_HI
 | 
BE_LB_NEED_HTTP
 | 
BE_LB_HASH_HDR
Ë

	)

77 
	#BE_LB_ALGO_RCH
 (
BE_LB_KIND_HI
 | 
BE_LB_NEED_DATA
 | 
BE_LB_HASH_RDP
Ë

	)

78 
	#BE_LB_ALGO
 (
BE_LB_KIND
 | 
BE_LB_NEED
 | 
BE_LB_PARM
 )

	)

84 
	#BE_LB_LKUP_NONE
 0x00000

	)

85 
	#BE_LB_LKUP_MAP
 0x10000

	)

86 
	#BE_LB_LKUP_RRTREE
 0x20000

	)

87 
	#BE_LB_LKUP_LCTREE
 0x30000

	)

88 
	#BE_LB_LKUP_CHTREE
 0x40000

	)

89 
	#BE_LB_LKUP
 0x70000

	)

92 
	#BE_LB_PROP_DYN
 0x80000

	)

95 
	#BE_LB_HASH_MAP
 0x000000

	)

96 
	#BE_LB_HASH_CONS
 0x100000

	)

97 
	#BE_LB_HASH_TYPE
 0x100000

	)

109 
	#BE_WEIGHT_SCALE
 16

	)

112 
	slb¥m
 {

113 
	mÆgo
;

114 
	mtŸ_wa˘
, 
	mtŸ_wbck
;

115 
	mtŸ_weight
;

116 
	mtŸ_u£d
;

117 
	mwmu…
;

118 
	mwdiv
;

119 
£rvî
 *
	mfbck
;

120 
lb_m≠
 
	mm≠
;

121 
lb_fwº
 
	mfwº
;

122 
lb_fwlc
 
	mfwlc
;

123 
lb_chash
 
	mchash
;

125 (*
	mupd©e_£rvî_eweight
)(
	m£rvî
 *);

126 (*
	m£t_£rvî_°©us_up
)(
	m£rvî
 *);

127 (*
	m£t_£rvî_°©us_down
)(
	m£rvî
 *);

128 (*
	m£rvî_èke_c⁄n
)(
	m£rvî
 *);

129 (*
	m£rvî_dr›_c⁄n
)(
	m£rvî
 *);

	@include/types/buffers.h

22 #i‚de‡
_TYPES_BUFFERS_H


23 
	#_TYPES_BUFFERS_H


	)

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<comm⁄/mem‹y.h
>

27 
	~<ty≥s/°ªam_öãrÁ˚.h
>

54 
	#BF_READ_NULL
 0x000001

	)

55 
	#BF_READ_PARTIAL
 0x000002

	)

56 
	#BF_READ_TIMEOUT
 0x000004

	)

57 
	#BF_READ_ERROR
 0x000008

	)

58 
	#BF_READ_ACTIVITY
 (
BF_READ_NULL
|
BF_READ_PARTIAL
|
BF_READ_ERROR
)

	)

60 
	#BF_FULL
 0x000010

	)

61 
	#BF_SHUTR
 0x000020

	)

62 
	#BF_SHUTR_NOW
 0x000040

	)

63 
	#BF_READ_NOEXP
 0x000080

	)

65 
	#BF_WRITE_NULL
 0x000100

	)

66 
	#BF_WRITE_PARTIAL
 0x000200

	)

67 
	#BF_WRITE_TIMEOUT
 0x000400

	)

68 
	#BF_WRITE_ERROR
 0x000800

	)

69 
	#BF_WRITE_ACTIVITY
 (
BF_WRITE_NULL
|
BF_WRITE_PARTIAL
|
BF_WRITE_ERROR
)

	)

71 
	#BF_OUT_EMPTY
 0x001000

	)

72 
	#BF_SHUTW
 0x002000

	)

73 
	#BF_SHUTW_NOW
 0x004000

	)

74 
	#BF_AUTO_CLOSE
 0x008000

	)

104 
	#BF_STREAMER
 0x010000

	)

105 
	#BF_STREAMER_FAST
 0x020000

	)

107 
	#BF_HIJACK
 0x040000

	)

108 
	#BF_ANA_TIMEOUT
 0x080000

	)

109 
	#BF_READ_ATTACHED
 0x100000

	)

110 
	#BF_KERN_SPLICING
 0x200000

	)

111 
	#BF_READ_DONTWAIT
 0x400000

	)

112 
	#BF_AUTO_CONNECT
 0x800000

	)

114 
	#BF_DONT_READ
 0x1000000

	)

115 
	#BF_EXPECT_MORE
 0x2000000

	)

116 
	#BF_SEND_DONTWAIT
 0x4000000

	)

119 
	#BF_CLEAR_READ
 (~(
BF_READ_NULL
|
BF_READ_PARTIAL
|
BF_READ_ERROR
|
BF_READ_ATTACHED
))

	)

120 
	#BF_CLEAR_WRITE
 (~(
BF_WRITE_NULL
|
BF_WRITE_PARTIAL
|
BF_WRITE_ERROR
))

	)

121 
	#BF_CLEAR_TIMEOUT
 (~(
BF_READ_TIMEOUT
|
BF_WRITE_TIMEOUT
|
BF_ANA_TIMEOUT
))

	)

124 
	#BF_MASK_ANALYSER
 (
BF_READ_ATTACHED
|
BF_READ_ACTIVITY
|
BF_READ_TIMEOUT
|
BF_ANA_TIMEOUT
|
BF_WRITE_ACTIVITY
)

	)

127 
	#BF_MASK_STATIC
 (
BF_OUT_EMPTY
|
BF_FULL
|
BF_HIJACK
|
BF_AUTO_CLOSE
|
BF_AUTO_CONNECT
|
BF_SHUTR
|
BF_SHUTW
|
BF_SHUTR_NOW
|
BF_SHUTW_NOW
)

	)

137 
	#AN_REQ_INSPECT
 0x00000001

	)

138 
	#AN_REQ_WAIT_HTTP
 0x00000002

	)

139 
	#AN_REQ_HTTP_PROCESS_FE
 0x00000004

	)

140 
	#AN_REQ_SWITCHING_RULES
 0x00000008

	)

141 
	#AN_REQ_HTTP_PROCESS_BE
 0x00000010

	)

142 
	#AN_REQ_HTTP_INNER
 0x00000020

	)

143 
	#AN_REQ_HTTP_TARPIT
 0x00000040

	)

144 
	#AN_REQ_HTTP_BODY
 0x00000080

	)

145 
	#AN_REQ_STICKING_RULES
 0x00000100

	)

147 
	#AN_REQ_PRST_RDP_COOKIE
 0x00000400

	)

148 
	#AN_REQ_HTTP_XFER_BODY
 0x00000800

	)

151 
	#AN_RES_INSPECT
 0x00010000

	)

152 
	#AN_RES_WAIT_HTTP
 0x00020000

	)

153 
	#AN_RES_HTTP_PROCESS_BE
 0x00040000

	)

154 
	#AN_RES_HTTP_PROCESS_FE
 0x00040000

	)

155 
	#AN_RES_STORE_RULES
 0x00080000

	)

156 
	#AN_RES_HTTP_XFER_BODY
 0x00100000

	)

160 
	#BUF_INFINITE_FORWARD
 (~0UL)

	)

163 
	schunk
 {

164 *
	m°r
;

165 
size_t
 
	msize
;

166 
	mÀn
;

170 
	g£ssi⁄
;

172 
	sbuf„r
 {

173 
	mÊags
;

174 
	mªx
;

175 
	mwex
;

176 
	mπo
;

177 
	mwto
;

178 
	m˘o
;

179 
	ml
;

180 *
	mr
, *
	mw
, *
	mÃ
;

181 
	msize
;

182 
	m£nd_max
;

183 
	mto_f‹w¨d
;

184 
	m™Æy£rs
;

185 
	m™Æy£_exp
;

186 (*
	mhijackî
)(
	m£ssi⁄
 *, 
	mbuf„r
 *);

187 
	mx„r_œrge
;

188 
	mx„r_smÆl
;

189 
	mtŸÆ
;

190 
°ªam_öãrÁ˚
 *
	m¥od
;

191 
°ªam_öãrÁ˚
 *
	mc⁄s
;

192 
pùe
 *
	mpùe
;

193 
	md©a
[0];

	@include/types/capture.h

22 #i‚de‡
_TYPES_CAPTURE_H


23 
	#_TYPES_CAPTURE_H


	)

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<comm⁄/mem‹y.h
>

28 
	sˇp_hdr
 {

29 
ˇp_hdr
 *
	m√xt
;

30 *
	m«me
;

31 
	m«mñí
;

32 
	mÀn
;

33 
	mödex
;

34 
poﬁ_hód
 *
	mpoﬁ
;

37 
poﬁ_hód
 *
poﬁ2_ˇ±uª
;

	@include/types/checks.h

15 
	mHCHK_STATUS_UNKNOWN
 = 0,

16 
	mHCHK_STATUS_INI
,

17 
	mHCHK_STATUS_START
,

20 
	mHCHK_STATUS_CHECKED
,

22 
	mHCHK_STATUS_HANA
,

24 
	mHCHK_STATUS_SOCKERR
,

26 
	mHCHK_STATUS_L4OK
,

27 
	mHCHK_STATUS_L4TOUT
,

28 
	mHCHK_STATUS_L4CON
,

31 
	mHCHK_STATUS_L6OK
,

32 
	mHCHK_STATUS_L6TOUT
,

33 
	mHCHK_STATUS_L6RSP
,

35 
	mHCHK_STATUS_L7TOUT
,

36 
	mHCHK_STATUS_L7RSP
,

39 
	mHCHK_STATUS_L57DATA
,

40 
	mHCHK_STATUS_L7OKD
,

41 
	mHCHK_STATUS_L7OKCD
,

42 
	mHCHK_STATUS_L7STS
,

44 
	mHCHK_STATUS_SIZE


50 
	mHANA_STATUS_UNKNOWN
 = 0,

52 
	mHANA_STATUS_L4_OK
,

53 
	mHANA_STATUS_L4_ERR
,

55 
	mHANA_STATUS_HTTP_OK
,

56 
	mHANA_STATUS_HTTP_STS
,

57 
	mHANA_STATUS_HTTP_HDRRSP
,

58 
	mHANA_STATUS_HTTP_RSP
,

60 
	mHANA_STATUS_HTTP_READ_ERROR
,

61 
	mHANA_STATUS_HTTP_READ_TIMEOUT
,

62 
	mHANA_STATUS_HTTP_BROKEN_PIPE
,

64 
	mHANA_STATUS_SIZE


68 
	mHANA_ONERR_UNKNOWN
 = 0,

70 
	mHANA_ONERR_FASTINTER
,

71 
	mHANA_ONERR_FAILCHK
,

72 
	mHANA_ONERR_SUDDTH
,

73 
	mHANA_ONERR_MARKDWN
,

77 
	mHANA_OBS_NONE
 = 0,

79 
	mHANA_OBS_LAYER4
,

80 
	mHANA_OBS_LAYER7
,

82 
	mHANA_OBS_SIZE


85 
	scheck_°©us
 {

86 
	mªsu…
;

87 *
	möfo
;

88 *
	mdesc
;

91 
	s™Æyze_°©us
 {

92 *
	mdesc
;

93 
	mÃ
[
HANA_OBS_SIZE
];

	@include/types/counters.h

22 #i‚de‡
_TYPES_COUNTERS_H


23 
	#_TYPES_COUNTERS_H


	)

25 
	spxcou¡îs
 {

26 
	m„c⁄n_max
, 
	mbec⁄n_max
;

28 
	mcum_„_ªq
;

29 
	mcum_„c⁄n
, 
	mcum_bec⁄n
;

30 
	mcum_lbc⁄n
;

32 
	m„_Ωs_max
;

33 
	m„_•s_max
;

34 
	mbe_•s_max
;

35 
	mnb≥nd_max
;

37 
	mbyãs_ö
;

38 
	mbyãs_out
;

40 
	mdíõd_ªq
, 
	mdíõd_ª•
;

41 
	mÁûed_ªq
;

45 
	mr•
[6];

46 } 
	mhâp
;

47 } 
	m„
, 
	mbe
;

49 
	mÁûed_c⁄ns
, 
	mÁûed_ª•
;

50 
	m˛i_ab‹ts
, 
	m§v_ab‹ts
;

51 
	mªåõs
, 
	mªdi•©ches
;

54 
	slicou¡îs
 {

55 
	mc⁄n_max
;

57 
	mcum_c⁄n
;

59 
	mbyãs_ö
;

60 
	mbyãs_out
;

62 
	mdíõd_ªq
, 
	mdíõd_ª•
;

63 
	mÁûed_ªq
;

66 
	s§vcou¡îs
 {

67 
	mcur_£ss_max
;

68 
	mnb≥nd_max
;

69 
	m•s_max
;

71 
	mcum_£ss
;

72 
	mcum_lbc⁄n
;

74 
	mbyãs_ö
;

75 
	mbyãs_out
;

77 
	mÁûed_c⁄ns
, 
	mÁûed_ª•
;

78 
	m˛i_ab‹ts
, 
	m§v_ab‹ts
;

79 
	mªåõs
, 
	mªdi•©ches
;

80 
	mÁûed_£cu
;

84 
	mr•
[6];

85 } 
	mhâp
;

86 } 
	mp
;

88 
	mÁûed_checks
, 
	mÁûed_h™a
;

89 
	mdown_å™s
;

	@include/types/fd.h

22 #i‚de‡
_TYPES_FD_H


23 
	#_TYPES_FD_H


	)

25 
	~<sys/sockë.h
>

26 
	~<sys/time.h
>

27 
	~<sys/ty≥s.h
>

28 
	~<uni°d.h
>

30 
	~<comm⁄/c⁄fig.h
>

31 
	~<ty≥s/èsk.h
>

32 
	~<ty≥s/¥Ÿocﬁs.h
>

35 
	#FD_STCLOSE
 0

	)

36 
	#FD_STLISTEN
 1

	)

37 
	#FD_STCONN
 2

	)

38 
	#FD_STREADY
 3

	)

39 
	#FD_STERROR
 4

	)

42 
	mDIR_RD
=0,

43 
	mDIR_WR
=1,

44 
	mDIR_SIZE


52 
	#FD_POLL_IN
 0x01

	)

53 
	#FD_POLL_PRI
 0x02

	)

54 
	#FD_POLL_OUT
 0x04

	)

55 
	#FD_POLL_ERR
 0x08

	)

56 
	#FD_POLL_HUP
 0x10

	)

58 
	#FD_POLL_DATA
 (
FD_POLL_IN
 | 
FD_POLL_OUT
)

	)

59 
	#FD_POLL_STICKY
 (
FD_POLL_ERR
 | 
FD_POLL_HUP
)

	)

64 
	#FD_FL_TCP
 0x0001

	)

65 
	#FD_FL_TCP_NODELAY
 0x0002

	)

66 
	#FD_FL_TCP_NOLING
 0x0004

	)

69 
	sfdèb
 {

71 (*
	mf
)(
	mfd
);

72 
buf„r
 *
	mb
;

73 } 
	mcb
[
DIR_SIZE
];

74 *
	mow√r
;

76 
	me
;

77 
	ms1
;

78 } 
	m•ec
;

79 
	mÊags
;

80 
	m°©e
;

81 
	mev
;

85 
	sfdöfo
 {

86 
p‹t_ønge
 *
	mp‹t_ønge
;

87 
	mloˇl_p‹t
;

88 
sockaddr
 *
	m≥îaddr
;

89 
sockÀn_t
 
	m≥îÀn
;

110 
	spﬁÀr
 {

111 *
	m¥iv©e
;

112 
REGPRM2
 (*
is_£t
)(c⁄° 
	mfd
, 
	mdú
);

113 
REGPRM2
 (*
£t
)(c⁄° 
	mfd
, 
	mdú
);

114 
REGPRM2
 (*
˛r
)(c⁄° 
	mfd
, 
	mdú
);

115 
REGPRM2
 (*
c⁄d_s
)(c⁄° 
	mfd
, 
	mdú
);

116 
REGPRM2
 (*
c⁄d_c
)(c⁄° 
	mfd
, 
	mdú
);

117 
REGPRM1
 (*
ªm
)(c⁄° 
	mfd
);

118 
REGPRM1
 (*
˛o
)(c⁄° 
	mfd
);

119 
REGPRM2
 (*
pﬁl
)(
pﬁÀr
 *
	mp
, 
	mexp
);

120 
REGPRM1
 (*
öô
)(
pﬁÀr
 *
	mp
);

121 
REGPRM1
 (*
ãrm
)(
pﬁÀr
 *
	mp
);

122 
REGPRM1
 (*
ã°
)(
pﬁÀr
 *
	mp
);

123 
REGPRM1
 (*
f‹k
)(
pﬁÀr
 *
	mp
);

124 c⁄° *
	m«me
;

125 
	m¥ef
;

128 
pﬁÀr
 
cur_pﬁÀr
;

129 
nbpﬁÀrs
;

130 
	#MAX_POLLERS
 10

	)

131 
pﬁÀr
 
pﬁÀrs
[
MAX_POLLERS
];

133 
fdèb
 *fdtab;

134 
fdöfo
 *fdinfo;

135 
maxfd
;

136 
tŸÆc⁄n
;

137 
a˘c⁄n
;

	@include/types/freq_ctr.h

22 #i‚de‡
_TYPES_FREQ_CTR_H


23 
	#_TYPES_FREQ_CTR_H


	)

25 
	~<comm⁄/c⁄fig.h
>

27 
	s‰eq_˘r
 {

28 
	mcuº_£c
;

29 
	mcuº_˘r
;

30 
	m¥ev_˘r
;

	@include/types/global.h

22 #i‚de‡
_TYPES_GLOBAL_H


23 
	#_TYPES_GLOBAL_H


	)

25 
	~<√töë/ö.h
>

27 
	~<comm⁄/c⁄fig.h
>

28 
	~<ty≥s/log.h
>

29 
	~<ty≥s/¥Ÿocﬁs.h
>

30 
	~<ty≥s/¥oxy.h
>

31 
	~<ty≥s/èsk.h
>

34 
	#MODE_DEBUG
 0x01

	)

35 
	#MODE_DAEMON
 0x02

	)

36 
	#MODE_QUIET
 0x04

	)

37 
	#MODE_CHECK
 0x08

	)

38 
	#MODE_VERBOSE
 0x10

	)

39 
	#MODE_STARTING
 0x20

	)

40 
	#MODE_FOREGROUND
 0x40

	)

43 
	#LSTCHK_CAP_BIND
 0x00000001

	)

44 
	#LSTCHK_CTTPROXY
 0x00000002

	)

45 
	#LSTCHK_NETADM
 0x00000004

	)

49 
	#GTUNE_USE_SELECT
 (1<<0)

	)

50 
	#GTUNE_USE_POLL
 (1<<1)

	)

51 
	#GTUNE_USE_EPOLL
 (1<<2)

	)

52 
	#GTUNE_USE_KQUEUE
 (1<<3)

	)

53 
	#GTUNE_USE_SEPOLL
 (1<<4)

	)

55 
	#GTUNE_USE_SPLICE
 (1<<5)

	)

58 
	#ACCESS_LVL_NONE
 0

	)

59 
	#ACCESS_LVL_USER
 1

	)

60 
	#ACCESS_LVL_OPER
 2

	)

61 
	#ACCESS_LVL_ADMIN
 3

	)

64 
	sglobÆ
 {

65 
	muid
;

66 
	mgid
;

67 
	mnb¥oc
;

68 
	mmaxc⁄n
;

69 
	mmaxpùes
;

70 
	mmaxsock
;

71 
	mæimô_nofûe
;

72 
	mæimô_memmax
;

73 
	mmode
;

74 
	mœ°_checks
;

75 
	m•ªad_checks
;

76 *
	mchroŸ
;

77 *
	mpidfûe
;

78 *
	mnode
, *
	mdesc
;

79 
	mlogÁc1
, 
	mlogÁc2
;

80 
	mlogÀv1
, 
	mlogÀv2
;

81 
	mmölvl1
, 
	mmölvl2
;

82 
log§v
 
	mlog§v1
, 
	mlog§v2
;

84 
	mmaxpﬁÀvíts
;

85 
	mmaxac˚±
;

86 
	m›ti⁄s
;

87 
	mªcv_íough
;

88 
	mbufsize
;

89 
	mmaxªwrôe
;

90 
	m˛õ¡_¢dbuf
;

91 
	m˛õ¡_rcvbuf
;

92 
	m£rvî_¢dbuf
;

93 
	m£rvî_rcvbuf
;

94 
	mchksize
;

95 } 
	mtu√
;

96 
li°íî
 
	m°©s_sock
;

97 
¥oxy
 *
	m°©s_„
;

100 
globÆ
 global;

101 *
¥og«me
;

102 
pid
;

103 
ªœtive_pid
;

104 
a˘c⁄n
;

105 
li°íîs
;

106 
åash
[
BUFSIZE
];

107 *
sw≠_buf„r
;

108 
nb_ﬁdpids
;

109 c⁄° 
zîo
;

110 c⁄° 
⁄e
;

111 c⁄° 
lögî
 
nﬁögî
;

112 
°›pög
;

113 
ho°«me
[
MAX_HOSTNAME_LEN
];

	@include/types/hdr_idx.h

41 #i‚de‡
_TYPES_HDR_IDX_H


42 
	#_TYPES_HDR_IDX_H


	)

56 
	shdr_idx_ñem
 {

57 
	mÀn
 :16;

58 
	m¸
 : 1;

59 
	m√xt
 :15;

67 
	shdr_idx
 {

68 
hdr_idx_ñem
 *
	mv
;

69 
	msize
;

70 
	mu£d
;

71 
	mœ°
;

72 sig√d 
	mèû
;

	@include/types/httperr.h

22 #i‚de‡
_TYPES_HTTPERR_H


23 
	#_TYPES_HTTPERR_H


	)

25 
	~<comm⁄/c⁄fig.h
>

31 
	mHTTP_ERR_400
 = 0,

32 
	mHTTP_ERR_403
,

33 
	mHTTP_ERR_408
,

34 
	mHTTP_ERR_500
,

35 
	mHTTP_ERR_502
,

36 
	mHTTP_ERR_503
,

37 
	mHTTP_ERR_504
,

38 
	mHTTP_ERR_SIZE


	@include/types/lb_chash.h

22 #i‚de‡
_TYPES_LB_CHASH_H


23 
	#_TYPES_LB_CHASH_H


	)

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<ebåì.h
>

27 
	~<eb32åì.h
>

29 
	slb_chash
 {

30 
eb_roŸ
 
	ma˘
;

31 
eb_roŸ
 
	mbck
;

32 
eb32_node
 *
	mœ°
;

	@include/types/lb_fwlc.h

22 #i‚de‡
_TYPES_LB_FWLC_H


23 
	#_TYPES_LB_FWLC_H


	)

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<ebåì.h
>

28 
	slb_fwlc
 {

29 
eb_roŸ
 
	ma˘
;

30 
eb_roŸ
 
	mbck
;

	@include/types/lb_fwrr.h

22 #i‚de‡
_TYPES_LB_FWRR_H


23 
	#_TYPES_LB_FWRR_H


	)

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<ebåì.h
>

29 
	sfwº_group
 {

30 
eb_roŸ
 
	mcuº
;

31 
eb_roŸ
 
	mt0
, 
	mt1
;

32 
eb_roŸ
 *
	möô
;

33 
eb_roŸ
 *
	m√xt
;

34 
	mcuº_pos
;

35 
	mcuº_weight
;

36 
	m√xt_weight
;

39 
	slb_fwº
 {

40 
fwº_group
 
	ma˘
;

41 
fwº_group
 
	mbck
;

	@include/types/lb_map.h

22 #i‚de‡
_TYPES_LB_MAP_H


23 
	#_TYPES_LB_MAP_H


	)

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<ty≥s/£rvî.h
>

29 
	#LB_MAP_RECALC
 (1 << 0)

	)

31 
	slb_m≠
 {

32 
£rvî
 **
	m§v
;

33 
	mº_idx
;

34 
	m°©e
;

	@include/types/log.h

22 #i‚de‡
_TYPES_LOG_H


23 
	#_TYPES_LOG_H


	)

25 
	~<sys/sockë.h
>

26 
	~<sys/un.h
>

27 
	~<√töë/ö.h
>

28 
	~<comm⁄/c⁄fig.h
>

30 
	#MAX_SYSLOG_LEN
 1024

	)

31 
	#NB_LOG_FACILITIES
 24

	)

32 
	#NB_LOG_LEVELS
 8

	)

33 
	#SYSLOG_PORT
 514

	)

37 
	#LW_DATE
 1

	)

38 
	#LW_CLIP
 2

	)

39 
	#LW_SVIP
 4

	)

40 
	#LW_SVID
 8

	)

41 
	#LW_REQ
 16

	)

42 
	#LW_RESP
 32

	)

43 
	#LW_PXIP
 64

	)

44 
	#LW_PXID
 128

	)

45 
	#LW_BYTES
 256

	)

46 
	#LW_COOKIE
 512

	)

47 
	#LW_REQHDR
 1024

	)

48 
	#LW_RSPHDR
 2048

	)

50 
	slog§v
 {

52 
sockaddr
 
	maddr
;

53 
sockaddr_un
 
	mun
;

54 
sockaddr_ö
 
	mö
;

55 } 
	mu
;

	@include/types/pattern.h

22 #i‚de‡
_TYPES_PATTERN_H


23 
	#_TYPES_PATTERN_H


	)

25 
	~<ty≥s/buf„rs.h
>

26 
	~<sys/sockë.h
>

27 
	~<√töë/ö.h
>

31 
	mPATTERN_TYPE_IP
 = 0,

32 
	mPATTERN_TYPE_INTEGER
 = 1,

33 
	mPATTERN_TYPE_STRING
 = 2,

34 
	mPATTERN_TYPES


38 
	#PATTERN_FETCH_REQ
 1

	)

39 
	#PATTERN_FETCH_RTR
 2

	)

42 
	u∑âîn_d©a
 {

43 
ö_addr
 
	mù
;

44 
uöt32_t
 
	möãgî
;

45 
chunk
 
	m°r
;

49 
	s∑âîn
 {

50 
	mty≥
;

51 
∑âîn_d©a
 
	md©a
;

55 
	s∑âîn_c⁄v
 {

56 c⁄° *
	mkw
;

57 (*
	m¥o˚ss
)(c⁄° *
	m¨g_p
,

58 
	m¨g_i
,

59 
∑âîn_d©a
 *
	md©a
);

60 
	mö_ty≥
;

61 
	mout_ty≥
;

62 (*
	m∑r£_¨gs
)(c⁄° *
	m¨g_°r
,

63 **
	m¨g_p
,

64 *
	m¨g_i
);

68 
	s∑âîn_c⁄v_ex¥
 {

69 
li°
 
	mli°
;

70 
∑âîn_c⁄v
 *
	mc⁄v
;

71 *
	m¨g_p
;

72 
	m¨g_i
;

76 
	s∑âîn_„tch
 {

77 c⁄° *
	mkw
;

78 (*
	m¥o˚ss
)(
¥oxy
 *
	mpx
,

79 
£ssi⁄
 *
	ml4
,

80 *
	ml7
,

81 
	mdú
, c⁄° *
	m¨g
,

82 
	m¨g_Àn
,

83 
∑âîn_d©a
 *
	md©a
);

84 
	mout_ty≥
;

85 
	mdú
;

89 
	s∑âîn_ex¥
 {

90 
li°
 
	mli°
;

91 
∑âîn_„tch
 *
	m„tch
;

92 *
	m¨g
;

93 
	m¨g_Àn
;

94 
li°
 
	mc⁄v_ex¥s
;

98 
	s∑âîn_„tch_kw_li°
 {

99 
li°
 
	mli°
;

100 
∑âîn_„tch
 
	mkw
[
VAR_ARRAY
];

104 
	s∑âîn_c⁄v_kw_li°
 {

105 
li°
 
	mli°
;

106 
∑âîn_c⁄v
 
	mkw
[
VAR_ARRAY
];

	@include/types/pipe.h

22 #i‚de‡
_TYPES_PIPE_H


23 
	#_TYPES_PIPE_H


	)

25 
	~<comm⁄/c⁄fig.h
>

31 
	spùe
 {

32 
	md©a
;

33 
	m¥od
;

34 
	mc⁄s
;

35 
pùe
 *
	m√xt
;

	@include/types/port_range.h

22 #i‚de‡
_TYPES_PORT_RANGE_H


23 
	#_TYPES_PORT_RANGE_H


	)

25 
	~<√töë/ö.h
>

27 
	sp‹t_ønge
 {

28 
	msize
, 
	mgë
, 
	mput
;

29 
	mavaû
;

30 
uöt16_t
 
	mp‹ts
[0];

	@include/types/proto_http.h

22 #i‚de‡
_TYPES_PROTO_HTTP_H


23 
	#_TYPES_PROTO_HTTP_H


	)

25 
	~<comm⁄/c⁄fig.h
>

27 
	~<ty≥s/buf„rs.h
>

28 
	~<ty≥s/hdr_idx.h
>

33 
	#TX_CLDENY
 0x00000001

	)

34 
	#TX_CLALLOW
 0x00000002

	)

35 
	#TX_SVDENY
 0x00000004

	)

36 
	#TX_SVALLOW
 0x00000008

	)

37 
	#TX_CLTARPIT
 0x00000010

	)

40 
	#TX_CK_NONE
 0x00000000

	)

41 
	#TX_CK_INVALID
 0x00000020

	)

42 
	#TX_CK_DOWN
 0x00000040

	)

43 
	#TX_CK_VALID
 0x00000060

	)

44 
	#TX_CK_EXPIRED
 0x00000080

	)

45 
	#TX_CK_OLD
 0x000000A0

	)

46 
	#TX_CK_MASK
 0x000000E0

	)

47 
	#TX_CK_SHIFT
 5

	)

50 
	#TX_SCK_NONE
 0x00000000

	)

51 
	#TX_SCK_FOUND
 0x00000100

	)

52 
	#TX_SCK_DELETED
 0x00000200

	)

53 
	#TX_SCK_INSERTED
 0x00000300

	)

54 
	#TX_SCK_REPLACED
 0x00000400

	)

55 
	#TX_SCK_UPDATED
 0x00000500

	)

56 
	#TX_SCK_MASK
 0x00000700

	)

57 
	#TX_SCK_SHIFT
 8

	)

59 
	#TX_SCK_PRESENT
 0x00000800

	)

62 
	#TX_CACHEABLE
 0x00001000

	)

63 
	#TX_CACHE_COOK
 0x00002000

	)

64 
	#TX_CACHE_SHIFT
 12

	)

67 
	#TX_REQ_VER_11
 0x00004000

	)

68 
	#TX_RES_VER_11
 0x00008000

	)

71 
	#TX_REQ_CNT_LEN
 0x00010000

	)

72 
	#TX_REQ_TE_CHNK
 0x00020000

	)

73 
	#TX_RES_CNT_LEN
 0x00040000

	)

74 
	#TX_RES_TE_CHNK
 0x00080000

	)

83 
	#TX_CON_WANT_TUN
 0x00000000

	)

84 
	#TX_CON_WANT_KAL
 0x00100000

	)

85 
	#TX_CON_WANT_SCL
 0x00200000

	)

86 
	#TX_CON_WANT_CLO
 0x00300000

	)

87 
	#TX_CON_WANT_MSK
 0x00300000

	)

89 
	#TX_CON_CLO_SET
 0x00400000

	)

90 
	#TX_CON_KAL_SET
 0x00800000

	)

96 
	#TX_REQ_XFER_LEN
 0x01000000

	)

97 
	#TX_RES_XFER_LEN
 0x02000000

	)

98 
	#TX_WAIT_NEXT_RQ
 0x04000000

	)

100 
	#TX_HDR_CONN_PRS
 0x08000000

	)

101 
	#TX_HDR_CONN_CLO
 0x10000000

	)

102 
	#TX_HDR_CONN_KAL
 0x20000000

	)

103 
	#TX_USE_PX_CONN
 0x40000000

	)

106 
	#TX_NOT_FIRST
 0x80000000

	)

129 
	#HTTP_MSG_RQBEFORE
 0

130 
	#HTTP_MSG_RQBEFORE_CR
 1

131 

	)

133 
	#HTTP_MSG_RQMETH
 2

134 
	#HTTP_MSG_RQMETH_SP
 3

135 
	#HTTP_MSG_RQURI
 4

136 
	#HTTP_MSG_RQURI_SP
 5

137 
	#HTTP_MSG_RQVER
 6

138 
	#HTTP_MSG_RQLINE_END
 7

139 

	)

140 
	#HTTP_MSG_RPBEFORE
 8

141 
	#HTTP_MSG_RPBEFORE_CR
 9

142 

	)

144 
	#HTTP_MSG_RPVER
 10

145 
	#HTTP_MSG_RPVER_SP
 11

146 
	#HTTP_MSG_RPCODE
 12

147 
	#HTTP_MSG_RPCODE_SP
 13

148 
	#HTTP_MSG_RPREASON
 14

149 
	#HTTP_MSG_RPLINE_END
 15

150 

	)

153 
	#HTTP_MSG_HDR_FIRST
 16

154 
	#HTTP_MSG_HDR_NAME
 17

155 
	#HTTP_MSG_HDR_COL
 18

156 
	#HTTP_MSG_HDR_L1_SP
 19

157 
	#HTTP_MSG_HDR_L1_LF
 20

158 
	#HTTP_MSG_HDR_L1_LWS
 21

159 
	#HTTP_MSG_HDR_VAL
 22

160 
	#HTTP_MSG_HDR_L2_LF
 23

161 
	#HTTP_MSG_HDR_L2_LWS
 24

162 

	)

163 
	#HTTP_MSG_LAST_LF
 25

164 

	)

169 
	#HTTP_MSG_ERROR
 26

170 

	)

176 
	#HTTP_MSG_BODY
 27

177 
	#HTTP_MSG_100_SENT
 28

178 
	#HTTP_MSG_CHUNK_SIZE
 29

179 
	#HTTP_MSG_DATA
 30

180 
	#HTTP_MSG_DATA_CRLF
 31

181 
	#HTTP_MSG_TRAILERS
 32

182 

	)

184 
	#HTTP_MSG_DONE
 33

185 
	#HTTP_MSG_CLOSING
 34

186 
	#HTTP_MSG_CLOSED
 35

187 
	#HTTP_MSG_TUNNEL
 36

188 

	)

190 
	#DATA_SRC_NONE
 0

	)

191 
	#DATA_SRC_STATS
 1

	)

195 
	mDATA_ST_INIT
 = 0,

196 
	mDATA_ST_HEAD
,

197 
	mDATA_ST_INFO
,

198 
	mDATA_ST_LIST
,

199 
	mDATA_ST_END
,

200 
	mDATA_ST_FIN
,

205 
	mDATA_ST_PX_INIT
 = 0,

206 
	mDATA_ST_PX_TH
,

207 
	mDATA_ST_PX_FE
,

208 
	mDATA_ST_PX_LI
,

209 
	mDATA_ST_PX_SV
,

210 
	mDATA_ST_PX_BE
,

211 
	mDATA_ST_PX_END
,

212 
	mDATA_ST_PX_FIN
,

217 
	mREDIRECT_FLAG_NONE
 = 0,

218 
	mREDIRECT_FLAG_DROP_QS
 = 1,

219 
	mREDIRECT_FLAG_APPEND_SLASH
 = 2,

224 
	mREDIRECT_TYPE_NONE
 = 0,

225 
	mREDIRECT_TYPE_LOCATION
,

226 
	mREDIRECT_TYPE_PREFIX
,

231 
	mPERSIST_TYPE_NONE
 = 0,

232 
	mPERSIST_TYPE_FORCE
,

233 
	mPERSIST_TYPE_IGNORE
,

238 
	mHTTP_METH_NONE
 = 0,

239 
	mHTTP_METH_OPTIONS
,

240 
	mHTTP_METH_GET
,

241 
	mHTTP_METH_HEAD
,

242 
	mHTTP_METH_POST
,

243 
	mHTTP_METH_PUT
,

244 
	mHTTP_METH_DELETE
,

245 
	mHTTP_METH_TRACE
,

246 
	mHTTP_METH_CONNECT
,

247 
	mHTTP_METH_OTHER
,

248 } 
	thâp_mëh_t
;

251 
	mHTTP_AUTH_WRONG
 = -1,

252 
	mHTTP_AUTH_UNKNOWN
 = 0,

253 
	mHTTP_AUTH_BASIC
,

254 
	mHTTP_AUTH_DIGEST
,

281 
	shâp_msg
 {

282 
	mmsg_°©e
;

283 
	mcﬁ
, 
	msov
;

284 
	meoh
;

285 *
	msﬁ
;

286 *
	meﬁ
;

287 
	msom
;

288 
	mîr_pos
;

291 
	ml
;

292 
	mm_l
;

293 
	mu
, 
	mu_l
;

294 
	mv
, 
	mv_l
;

295 } 
	mrq
;

297 
	ml
;

298 
	mv_l
;

299 
	mc
, 
	mc_l
;

300 
	mr
, 
	mr_l
;

301 } 
	m°
;

302 } 
	m¶
;

303 
	mhdr_c⁄ã¡_Àn
;

304 **
	mˇp
;

307 
	shâp_auth_d©a
 {

308 
	mmëhod
;

309 
chunk
 
	mmëhod_d©a
;

310 *
	mu£r
, *
	m∑ss
;

316 
	shâp_txn
 {

317 
hâp_msg
 
	mªq
;

318 
hdr_idx
 
	mhdr_idx
;

319 
	mÊags
;

320 
hâp_mëh_t
 
	mmëh
;

322 
	m°©us
;

323 
hâp_msg
 
	mr•
;

325 *
	muri
;

326 *
	m˛i_cookõ
;

327 *
	m§v_cookõ
;

328 *
	m£ssid
;

329 
	mcookõ_fú°_d©e
;

330 
	mcookõ_œ°_d©e
;

332 
hâp_auth_d©a
 
	mauth
;

340 
	shdr_˘x
 {

341 *
	mlöe
;

342 
	midx
;

343 
	mvÆ
;

344 
	mvÀn
;

345 
	mdñ
;

346 
	m¥ev
;

	@include/types/proto_tcp.h

22 #i‚de‡
_TYPES_PROTO_TCP_H


23 
	#_TYPES_PROTO_TCP_H


	)

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<comm⁄/möi-˛i°.h
>

28 
	~<ty≥s/a˛.h
>

32 
	mTCP_ACT_ACCEPT
 = 1,

33 
	mTCP_ACT_REJECT
 = 2,

36 
	st˝_ruÀ
 {

37 
li°
 
	mli°
;

38 
a˛_c⁄d
 *
	mc⁄d
;

39 
	ma˘i⁄
;

	@include/types/protocols.h

22 #i‚de‡
_TYPES_PROTOCOLS_H


23 
	#_TYPES_PROTOCOLS_H


	)

25 
	~<sys/ty≥s.h
>

26 
	~<sys/sockë.h
>

27 
	~<sys/°©.h
>

28 
	~<sys/un.h
>

30 
	~<comm⁄/c⁄fig.h
>

31 
	~<comm⁄/möi-˛i°.h
>

32 
	~<eb32åì.h
>

34 
	~<ty≥s/cou¡îs.h
>

35 
	~<ty≥s/èsk.h
>

38 
	#PROTO_NAME_LEN
 16

	)

41 
	#LI_NEW
 0

	)

42 
	#LI_INIT
 1

	)

43 
	#LI_ASSIGNED
 2

	)

44 
	#LI_LISTEN
 3

	)

45 
	#LI_READY
 4

	)

46 
	#LI_FULL
 5

	)

70 
	#LI_O_NONE
 0x0000

	)

71 
	#LI_O_NOLINGER
 0x0001

	)

72 
	#LI_O_FOREIGN
 0x0002

	)

73 
	#LI_O_NOQUICKACK
 0x0004

	)

74 
	#LI_O_DEF_ACCEPT
 0x0008

	)

80 
	sli°íî
 {

81 
	mfd
;

82 *
	m«me
;

83 
	mluid
;

84 
	m°©e
;

85 
	m›ti⁄s
;

86 
licou¡îs
 *
	mcou¡îs
;

87 
sockaddr_°‹age
 
	maddr
;

88 
¥Ÿocﬁ
 *
	m¥Ÿo
;

89 
	mnbc⁄n
;

90 
	mmaxc⁄n
;

91 
	mbacklog
;

92 
li°íî
 *
	m√xt
;

93 
li°
 
	m¥Ÿo_li°
;

94 (*
	mac˚±
)(
	mfd
);

95 
	mèsk
 * (*
	mh™dÀr
)(
èsk
 *
	mt
);

96 *
	mtimeout
;

97 *
	m¥iv©e
;

98 
	m™Æy£rs
;

99 
	mni˚
;

102 
uid_t
 
	muid
;

103 
gid_t
 
	mgid
;

104 
mode_t
 
	mmode
;

105 
	mÀvñ
;

106 } 
	mux
;

107 } 
	m≥rm
;

108 *
	möãrÁ˚
;

109 
	mmax£g
;

112 c⁄° *
	mfûe
;

113 
	mlöe
;

114 
eb32_node
 
	mid
;

115 } 
	mc⁄f
;

124 
	s¥Ÿocﬁ
 {

125 
	m«me
[
PROTO_NAME_LEN
];

126 
	msock_domaö
;

127 
	msock_ty≥
;

128 
	msock_¥Ÿ
;

129 
ß_Ámûy_t
 
	msock_Ámûy
;

130 
sockÀn_t
 
	msock_addæí
;

131 
	ml3_addæí
;

132 (*
	mªad
)(
	mfd
);

133 (*
	mwrôe
)(
	mfd
);

134 (*
	mböd_Æl
)(
¥Ÿocﬁ
 *
	m¥Ÿo
);

135 (*
	munböd_Æl
)(
¥Ÿocﬁ
 *
	m¥Ÿo
);

136 (*
	míabÀ_Æl
)(
¥Ÿocﬁ
 *
	m¥Ÿo
);

137 (*
	mdißbÀ_Æl
)(
¥Ÿocﬁ
 *
	m¥Ÿo
);

138 
li°
 
	mli°íîs
;

139 
	mnb_li°íîs
;

140 
li°
 
	mli°
;

	@include/types/proxy.h

22 #i‚de‡
_TYPES_PROXY_H


23 
	#_TYPES_PROXY_H


	)

25 
	~<sys/ty≥s.h
>

26 
	~<sys/sockë.h
>

27 
	~<√töë/ö.h
>

28 
	~<¨∑/öë.h
>

30 
	~<comm⁄/≠p£ssi⁄.h
>

31 
	~<comm⁄/c⁄fig.h
>

32 
	~<comm⁄/möi-˛i°.h
>

33 
	~<comm⁄/ªgex.h
>

34 
	~<comm⁄/£ssi⁄hash.h
>

35 
	~<comm⁄/toﬁs.h
>

36 
	~<eb32åì.h
>

38 
	~<ty≥s/a˛.h
>

39 
	~<ty≥s/∑âîn.h
>

40 
	~<ty≥s/backíd.h
>

41 
	~<ty≥s/buf„rs.h
>

42 
	~<ty≥s/cou¡îs.h
>

43 
	~<ty≥s/‰eq_˘r.h
>

44 
	~<ty≥s/hâ≥º.h
>

45 
	~<ty≥s/log.h
>

46 
	~<ty≥s/¥Ÿocﬁs.h
>

47 
	~<ty≥s/£ssi⁄.h
>

48 
	~<ty≥s/£rvî.h
>

49 
	~<ty≥s/°ick_èbÀ.h
>

52 
	#PR_STNEW
 0

	)

53 
	#PR_STIDLE
 1

	)

54 
	#PR_STRUN
 2

	)

55 
	#PR_STSTOPPED
 3

	)

56 
	#PR_STPAUSED
 4

	)

57 
	#PR_STERROR
 5

	)

60 
	#PR_MODE_TCP
 0

	)

61 
	#PR_MODE_HTTP
 1

	)

62 
	#PR_MODE_HEALTH
 2

	)

65 
	#PR_CAP_NONE
 0x0000

	)

66 
	#PR_CAP_FE
 0x0001

	)

67 
	#PR_CAP_BE
 0x0002

	)

68 
	#PR_CAP_RS
 0x0004

	)

69 
	#PR_CAP_LISTEN
 (
PR_CAP_FE
|
PR_CAP_BE
|
PR_CAP_RS
)

	)

72 
	#PR_O_REDISP
 0x00000001

	)

73 
	#PR_O_TRANSP
 0x00000002

	)

74 
	#PR_O_COOK_RW
 0x00000004

	)

75 
	#PR_O_COOK_IND
 0x00000008

	)

76 
	#PR_O_COOK_INS
 0x00000010

	)

77 
	#PR_O_COOK_PFX
 0x00000020

	)

78 
	#PR_O_COOK_ANY
 (
PR_O_COOK_RW
 | 
PR_O_COOK_IND
 | 
PR_O_COOK_INS
 | 
PR_O_COOK_PFX
)

	)

79 
	#PR_O_SMTP_CHK
 0x00000040

	)

80 
	#PR_O_KEEPALIVE
 0x00000080

	)

81 
	#PR_O_FWDFOR
 0x00000100

	)

82 
	#PR_O_BIND_SRC
 0x00000200

	)

83 
	#PR_O_NULLNOLOG
 0x00000400

	)

84 
	#PR_O_COOK_NOC
 0x00000800

	)

85 
	#PR_O_COOK_POST
 0x00001000

	)

86 
	#PR_O_HTTP_CHK
 0x00002000

	)

87 
	#PR_O_PERSIST
 0x00004000

	)

88 
	#PR_O_LOGASAP
 0x00008000

	)

89 
	#PR_O_HTTP_CLOSE
 0x00010000

	)

90 
	#PR_O_CHK_CACHE
 0x00020000

	)

91 
	#PR_O_TCP_CLI_KA
 0x00040000

	)

92 
	#PR_O_TCP_SRV_KA
 0x00080000

	)

93 
	#PR_O_USE_ALL_BK
 0x00100000

	)

94 
	#PR_O_FORCE_CLO
 0x00200000

	)

95 
	#PR_O_TCP_NOLING
 0x00400000

	)

96 
	#PR_O_ABRT_CLOSE
 0x00800000

	)

99 
	#PR_O_TPXY_ADDR
 0x01000000

	)

100 
	#PR_O_TPXY_CIP
 0x02000000

	)

101 
	#PR_O_TPXY_CLI
 0x03000000

	)

102 
	#PR_O_TPXY_DYN
 0x04000000

	)

103 
	#PR_O_TPXY_MASK
 0x07000000

	)

105 
	#PR_O_SERVER_CLO
 0x08000000

	)

106 
	#PR_O_CONTSTATS
 0x10000000

	)

107 
	#PR_O_HTTP_PROXY
 0x20000000

	)

108 
	#PR_O_DISABLE404
 0x40000000

	)

109 
	#PR_O_ORGTO
 0x80000000

	)

112 
	#PR_O2_SPLIC_REQ
 0x00000001

	)

113 
	#PR_O2_SPLIC_RTR
 0x00000002

	)

114 
	#PR_O2_SPLIC_AUT
 0x00000004

	)

115 
	#PR_O2_SPLIC_ANY
 (
PR_O2_SPLIC_REQ
|
PR_O2_SPLIC_RTR
|
PR_O2_SPLIC_AUT
)

	)

116 
	#PR_O2_REQBUG_OK
 0x00000008

	)

117 
	#PR_O2_RSPBUG_OK
 0x00000010

	)

118 
	#PR_O2_NOLOGNORM
 0x00000020

	)

119 
	#PR_O2_LOGERRORS
 0x00000040

	)

120 
	#PR_O2_SMARTACC
 0x00000080

	)

121 
	#PR_O2_SMARTCON
 0x00000100

	)

122 
	#PR_O2_RDPC_PRST
 0x00000200

	)

123 
	#PR_O2_CLFLOG
 0x00000400

	)

124 
	#PR_O2_LOGHCHKS
 0x00000800

	)

125 
	#PR_O2_INDEPSTR
 0x00001000

	)

126 
	#PR_O2_SOCKSTAT
 0x00002000

	)

129 
	#PR_O2_AS_REQL
 0x00004000

	)

130 
	#PR_O2_AS_PFX
 0x00008000

	)

133 
	#PR_O2_AS_M_PP
 0x00000000

	)

134 
	#PR_O2_AS_M_QS
 0x00010000

	)

135 
	#PR_O2_AS_M_ANY
 0x00010000

	)

137 
	#PR_O2_MYSQL_CHK
 0x00020000

	)

138 
	#PR_O2_USE_PXHDR
 0x00040000

	)

139 
	#PR_O2_CHK_SNDST
 0x00080000

	)

140 
	#PR_O2_SSL3_CHK
 0x00100000

	)

141 
	#PR_O2_FAKE_KA
 0x00200000

	)

142 
	#PR_O2_LDAP_CHK
 0x00400000

	)

144 
	#PR_O2_EXP_NONE
 0x00000000

	)

145 
	#PR_O2_EXP_STS
 0x00800000

	)

146 
	#PR_O2_EXP_RSTS
 0x01000000

	)

147 
	#PR_O2_EXP_STR
 0x01800000

	)

148 
	#PR_O2_EXP_RSTR
 0x02000000

	)

149 
	#PR_O2_EXP_TYPE
 0x03800000

	)

150 
	#PR_O2_EXP_INV
 0x04000000

	)

151 
	#PR_O2_COOK_PSV
 0x08000000

	)

155 
	#STK_IS_MATCH
 0x00000001

	)

156 
	#STK_IS_STORE
 0x00000002

	)

157 
	#STK_ON_RSP
 0x00000004

	)

159 
	sîr‹_¢≠shŸ
 {

160 
timevÆ
 
	mwhí
;

161 
	mÀn
;

162 
	mpos
;

163 
	msid
;

164 
£rvî
 *
	m§v
;

165 
¥oxy
 *
	m€
;

166 
sockaddr_°‹age
 
	m§c
;

167 
	mbuf
[
BUFSIZE
];

170 
	s¥oxy
 {

171 
li°íî
 *
	mli°í
;

172 
ö_addr
 
	mm⁄_√t
, 
	mm⁄_mask
;

173 
	m°©e
;

174 
	m›ti⁄s
;

175 
	m›ti⁄s2
;

176 
	m„_ªq_™a
, 
	mbe_ªq_™a
;

177 
	m„_r•_™a
, 
	mbe_r•_™a
;

178 
	mmode
;

179 
sockaddr_ö
 
	mdi•©ch_addr
;

181 
¥oxy
 *
	mbe
;

182 *
	m«me
;

183 } 
	mdefbe
;

184 
li°
 
	ma˛
;

185 
li°
 
	mªq_a˛
;

186 
li°
 
	mblock_c⁄d
;

187 
li°
 
	mªdúe˘_ruÀs
;

188 
li°
 
	mswôchög_ruÀs
;

189 
li°
 
	m≥rsi°_ruÀs
;

190 
li°
 
	m°ickög_ruÀs
;

191 
li°
 
	m°‹î•_ruÀs
;

193 
	mö•e˘_dñay
;

194 
li°
 
	mö•e˘_ruÀs
;

195 } 
	mt˝_ªq
;

196 
	ma˛_ªquúes
;

197 
£rvî
 *
	m§v
, 
	mdef§v
;

198 
	m§v_a˘
, 
	m§v_bck
;

199 
lb¥m
 
	mlb¥m
;

200 *
	mcookõ_domaö
;

201 *
	mcookõ_«me
;

202 
	mcookõ_Àn
;

203 
	mcookõ_maxidÀ
;

204 
	mcookõ_maxli„
;

205 *
	mrdp_cookõ_«me
;

206 
	mrdp_cookõ_Àn
;

207 *
	muæ_∑øm_«me
;

208 
	muæ_∑øm_Àn
;

209 
	muæ_∑øm_po°_limô
;

210 
	muri_Àn_limô
;

211 
	muri_dús_dïth1
;

212 *
	mhh_«me
;

213 
	mhh_Àn
;

214 
	mhh_m©ch_domaö
;

215 *
	m≠p£ssi⁄_«me
;

216 
	m≠p£ssi⁄_«me_Àn
;

217 
	m≠p£ssi⁄_Àn
;

218 
≠p£ssi⁄_hash
 
	mhtbl_¥oxy
;

219 *
	mˇ±uª_«me
;

220 
	mˇ±uª_«mñí
;

221 
	mˇ±uª_Àn
;

222 
uri_auth
 *
	muri_auth
;

223 *
	mm⁄ô‹_uri
;

224 
	mm⁄ô‹_uri_Àn
;

225 
li°
 
	mm⁄_Áû_c⁄d
;

227 
	m˛õ¡
;

228 
	mèΩô
;

229 
	mqueue
;

230 
	mc⁄√˘
;

231 
	m£rvî
;

232 
	m≠p£ssi⁄
;

233 
	mhâ¥eq
;

234 
	mhâpka
;

235 
	mcheck
;

236 } 
	mtimeout
;

237 *
	mid
, *
	mdesc
;

238 
li°
 
	m≥ndc⁄ns
;

239 
	mnb≥nd
;

240 
	mtŸ≥nd
;

241 
	m„c⁄n
, 
	mbec⁄n
;

242 
‰eq_˘r
 
	m„_ªq_≥r_£c
;

243 
‰eq_˘r
 
	m„_£ss_≥r_£c
;

244 
‰eq_˘r
 
	mbe_£ss_≥r_£c
;

245 
	mmaxc⁄n
;

246 
	m„_•s_lim
;

247 
	mfuŒc⁄n
;

248 
ö_addr
 
	mex˚±_√t
, 
	mex˚±_mask
;

249 
ö_addr
 
	mex˚±_to
;

250 
ö_addr
 
	mex˚±_mask_to
;

251 *
	mfwdf‹_hdr_«me
;

252 
	mfwdf‹_hdr_Àn
;

253 *
	m‹gto_hdr_«me
;

254 
	m‹gto_hdr_Àn
;

256 
	mdown_å™s
;

257 
	mdown_time
;

258 
time_t
 
	mœ°_ch™ge
;

260 
	mc⁄n_ªåõs
;

261 
	mˇp
;

262 
sockaddr_ö
 
	msour˚_addr
;

263 #i‡
deföed
(
CONFIG_HAP_CTTPROXY
Ë|| deföed(
CONFIG_HAP_LINUX_TPROXY
)

264 
sockaddr_ö
 
	mçroxy_addr
;

265 *
	mböd_hdr_«me
;

266 
	mböd_hdr_Àn
;

267 
	mböd_hdr_occ
;

269 
	miÁ˚_Àn
;

270 *
	miÁ˚_«me
;

271 
¥oxy
 *
	m√xt
;

272 
log§v
 
	mlog§v1
, 
	mlog§v2
;

273 sig√d 
	mlogÁc1
, 
	mlogÁc2
;

274 
	mlogÀv1
, 
	mlogÀv2
;

275 
	mmölvl1
, 
	mmölvl2
;

276 
	mto_log
;

277 
	m°›_time
;

278 
hdr_exp
 *
	mªq_exp
;

279 
hdr_exp
 *
	mr•_exp
;

280 
	mnb_ªq_ˇp
, 
	mnb_r•_ˇp
;

281 
ˇp_hdr
 *
	mªq_ˇp
;

282 
ˇp_hdr
 *
	mr•_ˇp
;

283 
poﬁ_hód
 *
	mªq_ˇp_poﬁ
,

284 *
	mr•_ˇp_poﬁ
;

285 
poﬁ_hód
 *
	mhdr_idx_poﬁ
;

286 
li°
 
	mªq_add
, 
	mr•_add
;

287 
pxcou¡îs
 
	mcou¡îs
;

289 
°kèbÀ
 
	mèbÀ
;

291 
	mgø˚
;

292 *
	mcheck_ªq
;

293 
	mcheck_Àn
;

294 *
	mex≥˘_°r
;

295 
ªgex_t
 *
	mex≥˘_ªgex
;

296 
chunk
 
	mîrmsg
[
HTTP_ERR_SIZE
];

297 
	muuid
;

298 
	mbacklog
;

299 
	mböd_¥oc
;

300 
îr‹_¢≠shŸ
 
	mövÆid_ªq
, 
	mövÆid_ªp
;

303 
	mno_›ti⁄s
;

304 
	mno_›ti⁄s2
;

307 c⁄° *
	mfûe
;

308 
	mlöe
;

309 
eb32_node
 
	mid
;

310 
eb_roŸ
 
	mu£d_li°íî_id
;

311 
eb_roŸ
 
	mu£d_£rvî_id
;

312 } 
	mc⁄f
;

315 
	sswôchög_ruÀ
 {

316 
li°
 
	mli°
;

317 
a˛_c⁄d
 *
	mc⁄d
;

319 
¥oxy
 *
	mbackíd
;

320 *
	m«me
;

321 } 
	mbe
;

324 
	s≥rsi°_ruÀ
 {

325 
li°
 
	mli°
;

326 
a˛_c⁄d
 *
	mc⁄d
;

327 
	mty≥
;

330 
	s°ickög_ruÀ
 {

331 
li°
 
	mli°
;

332 
a˛_c⁄d
 *
	mc⁄d
;

333 
∑âîn_ex¥
 *
	mex¥
;

334 
	mÊags
;

336 
°kèbÀ
 *
	mt
;

337 *
	m«me
;

338 } 
	mèbÀ
;

342 
	sªdúe˘_ruÀ
 {

343 
li°
 
	mli°
;

344 
a˛_c⁄d
 *
	mc⁄d
;

345 
	mty≥
;

346 
	mrdr_Àn
;

347 *
	mrdr_°r
;

348 
	mcode
;

349 
	mÊags
;

350 
	mcookõ_Àn
;

351 *
	mcookõ_°r
;

354 
¥oxy
 *proxy;

355 
eb_roŸ
 
u£d_¥oxy_id
;

	@include/types/queue.h

22 #i‚de‡
_TYPES_QUEUE_H


23 
	#_TYPES_QUEUE_H


	)

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<comm⁄/möi-˛i°.h
>

28 
	~<ty≥s/£rvî.h
>

29 
	~<ty≥s/£ssi⁄.h
>

31 
	s≥ndc⁄n
 {

32 
li°
 
	mli°
;

33 
£ssi⁄
 *
	m£ss
;

34 
£rvî
 *
	m§v
;

	@include/types/server.h

22 #i‚de‡
_TYPES_SERVER_H


23 
	#_TYPES_SERVER_H


	)

25 
	~<√töë/ö.h
>

26 
	~<¨∑/öë.h
>

28 
	~<comm⁄/c⁄fig.h
>

29 
	~<comm⁄/möi-˛i°.h
>

30 
	~<eb32åì.h
>

32 
	~<ty≥s/buf„rs.h
>

33 
	~<ty≥s/cou¡îs.h
>

34 
	~<ty≥s/‰eq_˘r.h
>

35 
	~<ty≥s/p‹t_ønge.h
>

36 
	~<ty≥s/¥oxy.h
>

37 
	~<ty≥s/queue.h
>

38 
	~<ty≥s/èsk.h
>

39 
	~<ty≥s/checks.h
>

43 
	#SRV_RUNNING
 0x0001

	)

44 
	#SRV_BACKUP
 0x0002

	)

45 
	#SRV_MAPPORTS
 0x0004

	)

46 
	#SRV_BIND_SRC
 0x0008

	)

47 
	#SRV_CHECKED
 0x0010

	)

48 
	#SRV_GOINGDOWN
 0x0020

	)

49 
	#SRV_WARMINGUP
 0x0040

	)

50 
	#SRV_MAINTAIN
 0x0080

	)

51 
	#SRV_TPROXY_ADDR
 0x0100

	)

52 
	#SRV_TPROXY_CIP
 0x0200

	)

53 
	#SRV_TPROXY_CLI
 0x0300

	)

54 
	#SRV_TPROXY_DYN
 0x0400

	)

55 
	#SRV_TPROXY_MASK
 0x0700

	)

58 
	#SRV_STATUS_OK
 0

	)

59 
	#SRV_STATUS_INTERNAL
 1

	)

60 
	#SRV_STATUS_NOSRV
 2

	)

61 
	#SRV_STATUS_FULL
 3

	)

62 
	#SRV_STATUS_QUEUED
 4

	)

65 
	#SRV_CHK_UNKNOWN
 0x0000

	)

66 
	#SRV_CHK_ERROR
 0x0001

	)

67 
	#SRV_CHK_RUNNING
 0x0002

	)

68 
	#SRV_CHK_DISABLE
 0x0004

	)

71 
	#SRV_UWGHT_RANGE
 256

	)

72 
	#SRV_UWGHT_MAX
 (
SRV_UWGHT_RANGE
 - 1)

	)

73 
	#SRV_EWGHT_RANGE
 (
SRV_UWGHT_RANGE
 * 
BE_WEIGHT_SCALE
)

	)

74 
	#SRV_EWGHT_MAX
 (
SRV_UWGHT_MAX
 * 
BE_WEIGHT_SCALE
)

	)

79 
	g£rvî
;

80 
	såì_occ
 {

81 
£rvî
 *
	m£rvî
;

82 
eb32_node
 
	mnode
;

85 
	s£rvî
 {

86 
£rvî
 *
	m√xt
;

87 
	m°©e
;

88 
	m¥ev_°©e
;

89 
	mckÀn
;

90 
	mrdr_Àn
;

91 *
	mcookõ
;

92 *
	mrdr_pfx
;

94 
¥oxy
 *
	m¥oxy
;

95 
	m£rved
;

96 
	mcur_£ss
;

97 
	mmaxc⁄n
, 
	mmöc⁄n
;

98 
	mnb≥nd
;

99 
	mmaxqueue
;

100 
§vcou¡îs
 
	mcou¡îs
;

102 
li°
 
	m≥ndc⁄ns
;

103 
èsk
 *
	mcheck
;

105 
sockaddr_ö
 
	maddr
;

106 
sockaddr_ö
 
	msour˚_addr
;

107 #i‡
deföed
(
CONFIG_HAP_CTTPROXY
Ë|| deföed(
CONFIG_HAP_LINUX_TPROXY
)

108 
sockaddr_ö
 
	mçroxy_addr
;

109 *
	mböd_hdr_«me
;

110 
	mböd_hdr_Àn
;

111 
	mböd_hdr_occ
;

113 
	miÁ˚_Àn
;

114 *
	miÁ˚_«me
;

115 
p‹t_ønge
 *
	m•‹t_ønge
;

117 
£rvî
 *
	måack√xt
, *
	måacked
;

118 *
	måackô
;

119 
sockaddr_ö
 
	mcheck_addr
;

120 
	mcheck_p‹t
;

121 
	mhó…h
;

122 
	mc⁄£cutive_îr‹s
;

123 
	mri£
, 
	mÁŒ
;

124 
	mc⁄£cutive_îr‹s_limô
;

125 
	mob£rve
, 
	m⁄îr‹
;

126 
	möãr
, 
	mÁ°öãr
, 
	mdownöãr
;

127 
	m¶ow°¨t
;

128 
	mªsu…
;

129 
	mcurfd
;

131 *
	mid
;

132 
	miweight
,
	muweight
, 
	meweight
;

133 
	mwsc‹e
;

134 
	m¥ev_eweight
;

135 
	mrweight
;

136 
	m≈os
, 
	mÕos
;

137 
eb32_node
 
	mlb_node
;

138 
eb_roŸ
 *
	mlb_åì
;

139 
£rvî
 *
	m√xt_fuŒ
;

140 
	mlb_nodes_tŸ
;

141 
	mlb_nodes_now
;

142 
åì_occ
 *
	mlb_nodes
;

144 
	mdown_time
;

145 
time_t
 
	mœ°_ch™ge
;

146 
timevÆ
 
	mcheck_°¨t
;

147 
	mcheck_duøti⁄
;

148 
	mcheck_°©us
, 
	mcheck_code
;

149 
	mcheck_desc
[
HCHK_DESC_LEN
];

151 
‰eq_˘r
 
	m£ss_≥r_£c
;

152 
	mpuid
;

154 *
	mcheck_d©a
;

155 
	mcheck_d©a_Àn
;

158 c⁄° *
	mfûe
;

159 
	mlöe
;

160 
eb32_node
 
	mid
;

161 } 
	mc⁄f
;

	@include/types/session.h

22 #i‚de‡
_TYPES_SESSION_H


23 
	#_TYPES_SESSION_H


	)

26 
	~<sys/time.h
>

27 
	~<uni°d.h
>

28 
	~<√töë/ö.h
>

29 
	~<¨∑/öë.h
>

31 
	~<comm⁄/c⁄fig.h
>

32 
	~<comm⁄/möi-˛i°.h
>

34 
	~<ty≥s/buf„rs.h
>

35 
	~<ty≥s/¥Ÿo_hâp.h
>

36 
	~<ty≥s/¥oxy.h
>

37 
	~<ty≥s/queue.h
>

38 
	~<ty≥s/£rvî.h
>

39 
	~<ty≥s/°ªam_öãrÁ˚.h
>

40 
	~<ty≥s/èsk.h
>

41 
	~<ty≥s/°ick_èbÀ.h
>

45 
	#SN_DIRECT
 0x00000001

	)

46 
	#SN_ASSIGNED
 0x00000002

	)

47 
	#SN_ADDR_SET
 0x00000004

	)

48 
	#SN_BE_ASSIGNED
 0x00000008

	)

50 
	#SN_FORCE_PRST
 0x00000010

	)

51 
	#SN_MONITOR
 0x00000020

	)

52 
	#SN_CURR_SESS
 0x00000040

	)

53 
	#SN_FRT_ADDR_SET
 0x00000080

	)

54 
	#SN_REDISP
 0x00000100

	)

55 
	#SN_CONN_TAR
 0x00000200

	)

56 
	#SN_REDIRECTABLE
 0x00000400

	)

57 
	#SN_TUNNEL
 0x00000800

	)

60 
	#SN_ERR_NONE
 0x00000000

	)

61 
	#SN_ERR_CLITO
 0x00001000

	)

62 
	#SN_ERR_CLICL
 0x00002000

	)

63 
	#SN_ERR_SRVTO
 0x00003000

	)

64 
	#SN_ERR_SRVCL
 0x00004000

	)

65 
	#SN_ERR_PRXCOND
 0x00005000

	)

66 
	#SN_ERR_RESOURCE
 0x00006000

	)

67 
	#SN_ERR_INTERNAL
 0x00007000

	)

68 
	#SN_ERR_MASK
 0x00007000

	)

69 
	#SN_ERR_SHIFT
 12

	)

73 
	#SN_FINST_R
 0x00010000

	)

74 
	#SN_FINST_C
 0x00020000

	)

75 
	#SN_FINST_H
 0x00030000

	)

76 
	#SN_FINST_D
 0x00040000

	)

77 
	#SN_FINST_L
 0x00050000

	)

78 
	#SN_FINST_Q
 0x00060000

	)

79 
	#SN_FINST_T
 0x00070000

	)

80 
	#SN_FINST_MASK
 0x00070000

	)

81 
	#SN_FINST_SHIFT
 16

	)

84 
	#SN_IGNORE_PRST
 0x00100000

	)

106 
	#TT_BIT_SHIFT
 8

	)

108 
	mTT_NONE
 = 0,

109 
	mTT_ANON
 = 1,

110 
	mTT_CLIENT
 = 0x10,

111 
	mTT_CLIENT_1
,

112 
	mTT_CLIENT_2
,

113 
	mTT_HTTP_CLI
 = 0x20,

114 
	mTT_HTTP_CLI_1
,

115 
	mTT_HTTP_CLI_2
,

116 
	mTT_HTTP_CLI_3
,

117 
	mTT_HTTP_CLI_4
,

118 
	mTT_HTTP_CLI_5
,

119 
	mTT_HTTP_CLI_6
,

120 
	mTT_HTTP_CLI_7
,

121 
	mTT_HTTP_CLI_8
,

122 
	mTT_HTTP_CLI_9
,

123 
	mTT_HTTP_CLI_10
,

124 
	mTT_HTTP_SRV
 = 0x30,

125 
	mTT_HTTP_SRV_1
,

126 
	mTT_HTTP_SRV_2
,

127 
	mTT_HTTP_SRV_3
,

128 
	mTT_HTTP_SRV_4
,

129 
	mTT_HTTP_SRV_5
,

130 
	mTT_HTTP_SRV_6
,

131 
	mTT_HTTP_SRV_7
,

132 
	mTT_HTTP_SRV_8
,

133 
	mTT_HTTP_SRV_9
,

134 
	mTT_HTTP_SRV_10
,

135 
	mTT_HTTP_SRV_11
,

136 
	mTT_HTTP_SRV_12
,

137 
	mTT_HTTP_SRV_13
,

138 
	mTT_HTTP_SRV_14
,

139 
	mTT_HTTP_CNT
 = 0x40,

140 
	mTT_HTTP_CNT_1
,

141 
	mTT_HTTP_URI
 = 0x50,

142 
	mTT_HTTP_URI_1
,

158 
	s£ssi⁄
 {

159 
li°
 
	mli°
;

160 
li°
 
	mback_ªfs
;

161 
èsk
 *
	mèsk
;

163 
li°íî
 *
	mli°íî
;

164 
¥oxy
 *
	m„
;

165 
¥oxy
 *
	mbe
;

166 
	mc⁄n_ªåõs
;

167 
	mÊags
;

168 
	mãrm_åa˚
;

169 
buf„r
 *
	mªq
;

170 
buf„r
 *
	mªp
;

171 
°ªam_öãrÁ˚
 
	msi
[2];

172 
sockaddr_°‹age
 
	m˛i_addr
;

173 
sockaddr_°‹age
 
	m‰t_addr
;

174 
sockaddr_ö
 
	m§v_addr
;

175 
sockaddr_ö
 
	m‰om_addr
;

176 
£rvî
 *
	m§v
;

177 
£rvî
 *
	m§v_c⁄n
;

178 
£rvî
 *
	m¥ev_§v
;

179 
≥ndc⁄n
 *
	m≥nd_pos
;

180 
hâp_txn
 
	mtxn
;

183 
°k£ss
 *
	mts
;

184 
°kèbÀ
 *
	mèbÀ
;

185 
	mÊags
;

186 } 
	m°‹e
[8];

187 
	m°‹e_cou¡
;

190 
	mlogwaô
;

191 
timevÆ
 
	mac˚±_d©e
;

192 
timevÆ
 
	mtv_ac˚±
;

193 
timevÆ
 
	mtv_ªque°
;

194 
	mt_queue
;

195 
	mt_c⁄√˘
;

196 
	mt_d©a
;

197 
	mt_˛o£
;

198 
	m§v_queue_size
;

199 
	m¥x_queue_size
;

200 
	mbyãs_ö
;

201 
	mbyãs_out
;

202 } 
	mlogs
;

203 (*
	mdo_log
)(
£ssi⁄
 *
	ms
);

204 (*
	m§v_îr‹
)(
£ssi⁄
 *
	ms
,

205 
°ªam_öãrÁ˚
 *
	msi
);

206 
	md©a_sour˚
;

207 
	md©a_°©e
;

210 
¥oxy
 *
	mpx
;

211 
£rvî
 *
	msv
;

212 
li°íî
 *
	ml
;

213 
	mpx_°
, 
	msv_°
;

214 
	mÊags
;

215 
	miid
, 
	mty≥
, 
	msid
;

216 c⁄° *
	m°_code
;

217 } 
	m°©s
;

219 
bªf
 
	mbªf
;

220 *
	mèrgë
;

221 
	muid
;

222 
	m£˘i⁄
;

223 
	mpos
;

224 } 
	m£ss
;

226 
	miid
;

227 
¥oxy
 *
	mpx
;

228 
	mbuf
;

229 
	msid
;

230 
	m±r
;

231 
	mbﬁ
;

232 } 
	mîr‹s
;

234 c⁄° *
	mmsg
;

235 } 
	m˛i
;

236 } 
	md©a_˘x
;

237 
	muniq_id
;

	@include/types/signal.h

13 
	~<sig«l.h
>

14 
	~<comm⁄/c⁄fig.h
>

15 
	~<comm⁄/°™d¨d.h
>

17 
	ssig«l_des¸ùt‹
 {

18 
	mcou¡
;

19 (*
	mh™dÀr
)(
	msig
);

	@include/types/stick_table.h

22 #i‚de‡
_TYPES_STICK_TABLE_H


23 
	#_TYPES_STICK_TABLE_H


	)

25 
	~<sys/sockë.h
>

26 
	~<√töë/ö.h
>

28 
	~<ebåì.h
>

29 
	~<ebmbåì.h
>

30 
	~<eb32åì.h
>

31 
	~<comm⁄/mem‹y.h
>

34 
	#STKTABLE_TYPE_IP
 0

	)

35 
	#STKTABLE_TYPE_INTEGER
 1

	)

36 
	#STKTABLE_TYPE_STRING
 2

	)

38 
	#STKTABLE_TYPES
 3

	)

41 
	#STKTABLE_TYPEFLAG_CUSTOMKEYSIZE
 0x00000001

	)

44 
	s°kèbÀ_ty≥
 {

45 c⁄° *
	mkw
;

46 
	mÊags
;

47 
size_t
 
	mdeÁu…_size
;

51 
	s°k£ss
 {

52 
	msid
;

53 
	mexpúe
;

54 
eb32_node
 
	mexps
;

55 
ebmb_node
 
	mkeys
;

60 
	s°kèbÀ
 {

61 
eb_roŸ
 
	mkeys
;

62 
eb_roŸ
 
	mexps
;

63 
poﬁ_hód
 *
	mpoﬁ
;

64 
èsk
 *
	mexp_èsk
;

65 
	mty≥
;

66 
size_t
 
	mkey_size
;

67 
	msize
;

68 
	mcuºít
;

69 
	mn›urge
;

70 
	mexp_√xt
;

71 
	mexpúe
;

75 
	u°kèbÀ_key_d©a
 {

76 
ö_addr
 
	mù
;

77 
uöt32_t
 
	möãgî
;

78 
	mbuf
[
BUFSIZE
];

82 
	s°kèbÀ_key
 {

83 *
	mkey
;

84 
size_t
 
	mkey_Àn
;

85 
°kèbÀ_key_d©a
 
	md©a
;

	@include/types/stream_interface.h

22 #i‚de‡
_TYPES_STREAM_INTERFACE_H


23 
	#_TYPES_STREAM_INTERFACE_H


	)

25 
	~<°dlib.h
>

26 
	~<sys/sockë.h
>

28 
	~<ty≥s/buf„rs.h
>

29 
	~<comm⁄/c⁄fig.h
>

37 
	mSI_ST_INI
 = 0,

38 
	mSI_ST_REQ
,

39 
	mSI_ST_QUE
,

40 
	mSI_ST_TAR
,

41 
	mSI_ST_ASS
,

42 
	mSI_ST_CON
,

43 
	mSI_ST_CER
,

44 
	mSI_ST_EST
,

45 
	mSI_ST_DIS
,

46 
	mSI_ST_CLO
,

51 
	mSI_ET_NONE
 = 0x0000,

52 
	mSI_ET_QUEUE_TO
 = 0x0001,

53 
	mSI_ET_QUEUE_ERR
 = 0x0002,

54 
	mSI_ET_QUEUE_ABRT
 = 0x0004,

55 
	mSI_ET_CONN_TO
 = 0x0008,

56 
	mSI_ET_CONN_ERR
 = 0x0010,

57 
	mSI_ET_CONN_ABRT
 = 0x0020,

58 
	mSI_ET_CONN_OTHER
 = 0x0040,

59 
	mSI_ET_DATA_TO
 = 0x0080,

60 
	mSI_ET_DATA_ERR
 = 0x0100,

61 
	mSI_ET_DATA_ABRT
 = 0x0200,

66 
	mSI_FL_NONE
 = 0x0000,

67 
	mSI_FL_EXP
 = 0x0001,

68 
	mSI_FL_ERR
 = 0x0002,

69 
	mSI_FL_WAIT_ROOM
 = 0x0004,

70 
	mSI_FL_WAIT_DATA
 = 0x0008,

71 
	mSI_FL_CAP_SPLTCP
 = 0x0010,

72 
	mSI_FL_DONT_WAKE
 = 0x0020,

73 
	mSI_FL_INDEP_STR
 = 0x0040,

74 
	mSI_FL_NOLINGER
 = 0x0080,

77 
	#SI_FL_CAP_SPLICE
 (
SI_FL_CAP_SPLTCP
)

	)

79 
	g£rvî
;

80 
	g¥oxy
;

86 
	s°ªam_öãrÁ˚
 {

87 
	m°©e
;

88 
	m¥ev_°©e
;

89 *
	mow√r
;

90 
	mfd
;

91 
	mÊags
;

92 
	mexp
;

93 (*
	mupd©e
)(
	m°ªam_öãrÁ˚
 *);

94 (*
	mshuå
)(
	m°ªam_öãrÁ˚
 *);

95 (*
	mshutw
)(
	m°ªam_öãrÁ˚
 *);

96 (*
	mchk_rcv
)(
	m°ªam_öãrÁ˚
 *);

97 (*
	mchk_¢d
)(
	m°ªam_öãrÁ˚
 *);

98 (*
	mc⁄√˘
)(
	m°ªam_öãrÁ˚
 *, 
	m¥oxy
 *, 
	m£rvî
 *,

99 
	msockaddr
 *, sockaddr *);

100 (*
	mioh™dÀr
)(
	m°ªam_öãrÁ˚
 *);

101 
buf„r
 *
	mib
, *
	mob
;

102 
	mîr_ty≥
;

103 *
	mîr_loc
;

104 *
	m¥iv©e
;

105 
	m°0
, 
	m°1
;

	@include/types/task.h

22 #i‚de‡
_TYPES_TASK_H


23 
	#_TYPES_TASK_H


	)

25 
	~<sys/time.h
>

27 
	~<comm⁄/c⁄fig.h
>

28 
	~<comm⁄/möi-˛i°.h
>

29 
	~<eb32åì.h
>

32 
	#TASK_SLEEPING
 0x00

	)

33 
	#TASK_RUNNING
 0x01

	)

34 
	#TASK_WOKEN_INIT
 0x02

	)

35 
	#TASK_WOKEN_TIMER
 0x04

	)

36 
	#TASK_WOKEN_IO
 0x08

	)

37 
	#TASK_WOKEN_SIGNAL
 0x10

	)

38 
	#TASK_WOKEN_MSG
 0x20

	)

39 
	#TASK_WOKEN_RES
 0x40

	)

40 
	#TASK_WOKEN_OTHER
 0x80

	)

43 
	#TASK_WOKEN_ANY
 (
TASK_WOKEN_OTHER
|
TASK_WOKEN_INIT
|
TASK_WOKEN_TIMER
| \

44 
TASK_WOKEN_IO
|
TASK_WOKEN_SIGNAL
|
TASK_WOKEN_MSG
| \

45 
TASK_WOKEN_RES
)

	)

48 
	sèsk
 {

49 
eb32_node
 
	mwq
;

50 
eb32_node
 
	mrq
;

51 
	m°©e
;

52 
	mexpúe
;

53 
	mˇŒs
;

54 
	mèsk
 * (*
	m¥o˚ss
)(
èsk
 *
	mt
);

55 *
	mc⁄ãxt
;

56 
	mni˚
;

	@include/types/template.h

22 #i‚de‡
_TYPES_TEMPLATE_H


23 
	#_TYPES_TEMPLATE_H


	)

25 
	~<comm⁄/c⁄fig.h
>

	@src/acl.c

13 
	~<˘y≥.h
>

14 
	~<°dio.h
>

15 
	~<°rög.h
>

17 
	~<comm⁄/c⁄fig.h
>

18 
	~<comm⁄/möi-˛i°.h
>

19 
	~<comm⁄/°™d¨d.h
>

20 
	~<comm⁄/uri_auth.h
>

22 
	~<ty≥s/globÆ.h
>

24 
	~<¥Ÿo/a˛.h
>

25 
	~<¥Ÿo/auth.h
>

26 
	~<¥Ÿo/log.h
>

27 
	~<¥Ÿo/¥oxy.h
>

29 
	~<eb°åì.h
>

34 c⁄° 
	gfût_ˇp
[] = {

35 [
ACL_HOOK_REQ_FE_TCP
] = 
ACL_USE_TCP4_ANY
|
ACL_USE_TCP6_ANY
|
ACL_USE_TCP_ANY
,

36 [
ACL_HOOK_REQ_FE_TCP_CONTENT
] = 
ACL_USE_TCP4_ANY
|
ACL_USE_TCP6_ANY
|
ACL_USE_TCP_ANY
|
ACL_USE_L4REQ_ANY
,

37 [
ACL_HOOK_REQ_FE_HTTP_IN
] = 
ACL_USE_TCP4_ANY
|
ACL_USE_TCP6_ANY
|
ACL_USE_TCP_ANY
|
ACL_USE_L4REQ_ANY
|
ACL_USE_L7REQ_ANY
|
ACL_USE_HDR_ANY
,

38 [
ACL_HOOK_REQ_FE_SWITCH
] = 
ACL_USE_TCP4_ANY
|
ACL_USE_TCP6_ANY
|
ACL_USE_TCP_ANY
|
ACL_USE_L4REQ_ANY
|
ACL_USE_L7REQ_ANY
|
ACL_USE_HDR_ANY
,

39 [
ACL_HOOK_REQ_BE_TCP_CONTENT
] = 
ACL_USE_TCP4_ANY
|
ACL_USE_TCP6_ANY
|
ACL_USE_TCP_ANY
|
ACL_USE_L4REQ_ANY
|
ACL_USE_L7REQ_ANY
|
ACL_USE_HDR_ANY
,

40 [
ACL_HOOK_REQ_BE_HTTP_IN
] = 
ACL_USE_TCP4_ANY
|
ACL_USE_TCP6_ANY
|
ACL_USE_TCP_ANY
|
ACL_USE_L4REQ_ANY
|
ACL_USE_L7REQ_ANY
|
ACL_USE_HDR_ANY
,

41 [
ACL_HOOK_REQ_BE_SWITCH
] = 
ACL_USE_TCP4_ANY
|
ACL_USE_TCP6_ANY
|
ACL_USE_TCP_ANY
|
ACL_USE_L4REQ_ANY
|
ACL_USE_L7REQ_ANY
|
ACL_USE_HDR_ANY
,

42 [
ACL_HOOK_REQ_FE_HTTP_OUT
] = 
ACL_USE_TCP4_ANY
|
ACL_USE_TCP6_ANY
|
ACL_USE_TCP_ANY
|
ACL_USE_L4REQ_ANY
|
ACL_USE_L7REQ_ANY
|
ACL_USE_HDR_ANY
,

43 [
ACL_HOOK_REQ_BE_HTTP_OUT
] = 
ACL_USE_TCP4_ANY
|
ACL_USE_TCP6_ANY
|
ACL_USE_TCP_ANY
|
ACL_USE_L4REQ_ANY
|
ACL_USE_L7REQ_ANY
|
ACL_USE_HDR_ANY
,

45 [
ACL_HOOK_RTR_BE_TCP_CONTENT
] = 
ACL_USE_REQ_PERMANENT
|
ACL_USE_REQ_CACHEABLE
|
ACL_USE_L4RTR_ANY
,

46 [
ACL_HOOK_RTR_BE_HTTP_IN
] = 
ACL_USE_REQ_PERMANENT
|
ACL_USE_REQ_CACHEABLE
|
ACL_USE_L4RTR_ANY
|
ACL_USE_L7RTR_ANY
,

47 [
ACL_HOOK_RTR_FE_TCP_CONTENT
] = 
ACL_USE_REQ_PERMANENT
|
ACL_USE_REQ_CACHEABLE
|
ACL_USE_L4RTR_ANY
|
ACL_USE_L7RTR_ANY
,

48 [
ACL_HOOK_RTR_FE_HTTP_IN
] = 
ACL_USE_REQ_PERMANENT
|
ACL_USE_REQ_CACHEABLE
|
ACL_USE_L4RTR_ANY
|
ACL_USE_L7RTR_ANY
,

49 [
ACL_HOOK_RTR_BE_HTTP_OUT
] = 
ACL_USE_REQ_PERMANENT
|
ACL_USE_REQ_CACHEABLE
|
ACL_USE_L4RTR_ANY
|
ACL_USE_L7RTR_ANY
,

50 [
ACL_HOOK_RTR_FE_HTTP_OUT
] = 
ACL_USE_REQ_PERMANENT
|
ACL_USE_REQ_CACHEABLE
|
ACL_USE_L4RTR_ANY
|
ACL_USE_L7RTR_ANY
,

54 
a˛_kw_li°
 
	ga˛_keyw‹ds
 = {

55 .
li°
 = 
LIST_HEAD_INIT
(
a˛_keyw‹ds
.list)

65 
	$a˛_„tch_åue
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

66 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

68 
ã°
->
Êags
 |
ACL_TEST_F_SET_RES_PASS
;

70 
	}
}

76 
	$a˛_„tch_waô_íd
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

77 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

79 i‡(
dú
 & 
ACL_PARTIAL
) {

80 
ã°
->
Êags
 |
ACL_TEST_F_MAY_CHANGE
;

83 
ã°
->
Êags
 |
ACL_TEST_F_SET_RES_PASS
;

85 
	}
}

89 
	$a˛_„tch_Ál£
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

90 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

92 
ã°
->
Êags
 |
ACL_TEST_F_SET_RES_FAIL
;

94 
	}
}

102 
	$a˛_∑r£_nŸhög
(c⁄° **
ãxt
, 
a˛_∑âîn
 *
∑âîn
, *
›aque
)

105 
	}
}

108 
	$a˛_„tch_nŸhög
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

109 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

112 
	}
}

115 
	$a˛_m©ch_nŸhög
(
a˛_ã°
 *
ã°
, 
a˛_∑âîn
 *
∑âîn
)

117  
ACL_PAT_FAIL
;

118 
	}
}

122 
	$a˛_m©ch_°r
(
a˛_ã°
 *
ã°
, 
a˛_∑âîn
 *
∑âîn
)

124 
iˇ£
;

126 i‡(
∑âîn
->
Àn
 !
ã°
->len)

127  
ACL_PAT_FAIL
;

129 
iˇ£
 = 
∑âîn
->
Êags
 & 
ACL_PAT_F_IGNORE_CASE
;

130 i‡((
iˇ£
 && 
	`°∫ˇ£cmp
(
∑âîn
->
±r
.
°r
, 
ã°
->±r,Åe°->
Àn
) == 0) ||

131 (!
iˇ£
 && 
	`°∫cmp
(
∑âîn
->
±r
.
°r
, 
ã°
->±r,Åe°->
Àn
) == 0))

132  
ACL_PAT_PASS
;

133  
ACL_PAT_FAIL
;

134 
	}
}

139 *
	$a˛_lookup_°r
(
a˛_ã°
 *
ã°
, 
a˛_ex¥
 *
ex¥
)

142 
ebmb_node
 *
node
;

143 
¥ev
;

146 
¥ev
 = 
ã°
->
±r
[ã°->
Àn
];

147 i‡(
¥ev
)

148 
ã°
->
±r
[ã°->
Àn
] = '\0';

149 
node
 = 
	`eb°_lookup
(&
ex¥
->
∑âîn_åì
, 
ã°
->
±r
);

150 i‡(
¥ev
)

151 
ã°
->
±r
[ã°->
Àn
] = 
¥ev
;

152  
node
;

153 
	}
}

160 
	$a˛_m©ch_ªg
(
a˛_ã°
 *
ã°
, 
a˛_∑âîn
 *
∑âîn
)

162 
ﬁd_ch¨
;

163 
ªt
;

165 i‡(
	`u∆ikñy
(
ã°
->
Êags
 & 
ACL_TEST_F_READ_ONLY
)) {

166 *
√w_°r
;

168 
√w_°r
 = 
	`ˇŒoc
(1, 
ã°
->
Àn
 + 1);

169 i‡(!
√w_°r
)

170  
ACL_PAT_FAIL
;

172 
	`mem˝y
(
√w_°r
, 
ã°
->
±r
,Åe°->
Àn
);

173 
√w_°r
[
ã°
->
Àn
] = 0;

174 i‡(
ã°
->
Êags
 & 
ACL_TEST_F_MUST_FREE
)

175 
	`‰ì
(
ã°
->
±r
);

176 
ã°
->
±r
 = 
√w_°r
;

177 
ã°
->
Êags
 |
ACL_TEST_F_MUST_FREE
;

178 
ã°
->
Êags
 &~
ACL_TEST_F_READ_ONLY
;

181 
ﬁd_ch¨
 = 
ã°
->
±r
[ã°->
Àn
];

182 
ã°
->
±r
[ã°->
Àn
] = 0;

184 i‡(
	`ªgexec
(
∑âîn
->
±r
.
ªg
, 
ã°
->±r, 0, 
NULL
, 0) == 0)

185 
ªt
 = 
ACL_PAT_PASS
;

187 
ªt
 = 
ACL_PAT_FAIL
;

189 
ã°
->
±r
[ã°->
Àn
] = 
ﬁd_ch¨
;

190  
ªt
;

191 
	}
}

194 
	$a˛_m©ch_beg
(
a˛_ã°
 *
ã°
, 
a˛_∑âîn
 *
∑âîn
)

196 
iˇ£
;

198 i‡(
∑âîn
->
Àn
 > 
ã°
->len)

199  
ACL_PAT_FAIL
;

201 
iˇ£
 = 
∑âîn
->
Êags
 & 
ACL_PAT_F_IGNORE_CASE
;

202 i‡((
iˇ£
 && 
	`°∫ˇ£cmp
(
∑âîn
->
±r
.
°r
, 
ã°
->±r,Ö©ã∫->
Àn
) != 0) ||

203 (!
iˇ£
 && 
	`°∫cmp
(
∑âîn
->
±r
.
°r
, 
ã°
->±r,Ö©ã∫->
Àn
) != 0))

204  
ACL_PAT_FAIL
;

205  
ACL_PAT_PASS
;

206 
	}
}

209 
	$a˛_m©ch_íd
(
a˛_ã°
 *
ã°
, 
a˛_∑âîn
 *
∑âîn
)

211 
iˇ£
;

213 i‡(
∑âîn
->
Àn
 > 
ã°
->len)

214  
ACL_PAT_FAIL
;

215 
iˇ£
 = 
∑âîn
->
Êags
 & 
ACL_PAT_F_IGNORE_CASE
;

216 i‡((
iˇ£
 && 
	`°∫ˇ£cmp
(
∑âîn
->
±r
.
°r
, 
ã°
->±∏+Åe°->
Àn
 -Öattern->len,Öattern->len) != 0) ||

217 (!
iˇ£
 && 
	`°∫cmp
(
∑âîn
->
±r
.
°r
, 
ã°
->±∏+Åe°->
Àn
 -Öattern->len,Öattern->len) != 0))

218  
ACL_PAT_FAIL
;

219  
ACL_PAT_PASS
;

220 
	}
}

225 
	$a˛_m©ch_sub
(
a˛_ã°
 *
ã°
, 
a˛_∑âîn
 *
∑âîn
)

227 
iˇ£
;

228 *
íd
;

229 *
c
;

231 i‡(
∑âîn
->
Àn
 > 
ã°
->len)

232  
ACL_PAT_FAIL
;

234 
íd
 = 
ã°
->
±r
 +Åe°->
Àn
 - 
∑âîn
->len;

235 
iˇ£
 = 
∑âîn
->
Êags
 & 
ACL_PAT_F_IGNORE_CASE
;

236 i‡(
iˇ£
) {

237 
c
 = 
ã°
->
±r
; c <
íd
; c++) {

238 i‡(
	`tﬁowî
(*
c
Ë!tﬁowî(*
∑âîn
->
±r
.
°r
))

240 i‡(
	`°∫ˇ£cmp
(
∑âîn
->
±r
.
°r
, 
c
,Ö©ã∫->
Àn
) == 0)

241  
ACL_PAT_PASS
;

244 
c
 = 
ã°
->
±r
; c <
íd
; c++) {

245 i‡(*
c
 !*
∑âîn
->
±r
.
°r
)

247 i‡(
	`°∫cmp
(
∑âîn
->
±r
.
°r
, 
c
,Ö©ã∫->
Àn
) == 0)

248  
ACL_PAT_PASS
;

251  
ACL_PAT_FAIL
;

252 
	}
}

259 
	$m©ch_w‹d
(
a˛_ã°
 *
ã°
, 
a˛_∑âîn
 *
∑âîn
, 
dñim
)

261 
may_m©ch
, 
iˇ£
;

262 *
c
, *
íd
;

263 *
ps
;

264 
∂
;

266 
∂
 = 
∑âîn
->
Àn
;

267 
ps
 = 
∑âîn
->
±r
.
°r
;

268 
∂
 > 0 && (*
ps
 =
dñim
 || *ps == '/' || *ps == '?')) {

269 
∂
--;

270 
ps
++;

273 
∂
 > 0 &&

274 (
ps
[
∂
 - 1] =
dñim
 ||Ös[pl - 1] == '/' ||Ös[pl - 1] == '?'))

275 
∂
--;

277 i‡(
∂
 > 
ã°
->
Àn
)

278  
ACL_PAT_FAIL
;

280 
may_m©ch
 = 1;

281 
iˇ£
 = 
∑âîn
->
Êags
 & 
ACL_PAT_F_IGNORE_CASE
;

282 
íd
 = 
ã°
->
±r
 +Åe°->
Àn
 - 
∂
;

283 
c
 = 
ã°
->
±r
; c <
íd
; c++) {

284 i‡(*
c
 ='/' || *¯=
dñim
 || *c == '?') {

285 
may_m©ch
 = 1;

289 i‡(!
may_m©ch
)

292 i‡(
iˇ£
) {

293 i‡((
	`tﬁowî
(*
c
Ë=tﬁowî(*
ps
)) &&

294 (
	`°∫ˇ£cmp
(
ps
, 
c
, 
∂
) == 0) &&

295 (
c
 =
íd
 || c[
∂
] ='/' || c[∂] =
dñim
 || c[pl] == '?'))

296  
ACL_PAT_PASS
;

298 i‡((*
c
 =*
ps
) &&

299 (
	`°∫cmp
(
ps
, 
c
, 
∂
) == 0) &&

300 (
c
 =
íd
 || c[
∂
] ='/' || c[∂] =
dñim
 || c[pl] == '?'))

301  
ACL_PAT_PASS
;

303 
may_m©ch
 = 0;

305  
ACL_PAT_FAIL
;

306 
	}
}

312 
	$a˛_m©ch_dú
(
a˛_ã°
 *
ã°
, 
a˛_∑âîn
 *
∑âîn
)

314  
	`m©ch_w‹d
(
ã°
, 
∑âîn
, '/');

315 
	}
}

321 
	$a˛_m©ch_dom
(
a˛_ã°
 *
ã°
, 
a˛_∑âîn
 *
∑âîn
)

323  
	`m©ch_w‹d
(
ã°
, 
∑âîn
, '.');

324 
	}
}

327 
	$a˛_m©ch_öt
(
a˛_ã°
 *
ã°
, 
a˛_∑âîn
 *
∑âîn
)

329 i‡((!
∑âîn
->
vÆ
.
ønge
.
mö_£t
 ||Ö©ã∫->vÆ.ønge.
mö
 <
ã°
->
i
) &&

330 (!
∑âîn
->
vÆ
.
ønge
.
max_£t
 || 
ã°
->
i
 <∑âîn->vÆ.ønge.
max
))

331  
ACL_PAT_PASS
;

332  
ACL_PAT_FAIL
;

333 
	}
}

335 
	$a˛_m©ch_ù
(
a˛_ã°
 *
ã°
, 
a˛_∑âîn
 *
∑âîn
)

337 
ö_addr
 *
s
;

339 i‡(
ã°
->
i
 !
AF_INET
)

340  
ACL_PAT_FAIL
;

342 
s
 = (*)
ã°
->
±r
;

343 i‡(((
s
->
s_addr
 ^ 
∑âîn
->
vÆ
.
ùv4
.
addr
.s_addrË&Ö©ã∫->vÆ.ùv4.
mask
.s_addr) == 0)

344  
ACL_PAT_PASS
;

345  
ACL_PAT_FAIL
;

346 
	}
}

351 *
	$a˛_lookup_ù
(
a˛_ã°
 *
ã°
, 
a˛_ex¥
 *
ex¥
)

353 
ö_addr
 *
s
;

355 i‡(
ã°
->
i
 !
AF_INET
)

356  
ACL_PAT_FAIL
;

358 
s
 = (*)
ã°
->
±r
;

360  
	`ebmb_lookup_l⁄ge°
(&
ex¥
->
∑âîn_åì
, &
s
->
s_addr
);

361 
	}
}

364 
	$a˛_∑r£_°r
(c⁄° **
ãxt
, 
a˛_∑âîn
 *
∑âîn
, *
›aque
)

366 
Àn
;

368 
Àn
 = 
	`°æí
(*
ãxt
);

370 i‡(
∑âîn
->
Êags
 & 
ACL_PAT_F_TREE_OK
) {

374 
ebmb_node
 *
node
;

376 
node
 = 
	`ˇŒoc
(1, (*nodeË+ 
Àn
 + 1);

377 i‡(!
node
)

379 
	`mem˝y
(
node
->
key
, *
ãxt
, 
Àn
 + 1);

380 i‡(
	`eb°_ö£π
(
∑âîn
->
vÆ
.
åì
, 
node
) !=Çode)

381 
	`‰ì
(
node
);

382 
∑âîn
->
Êags
 |
ACL_PAT_F_TREE
;

386 
∑âîn
->
±r
.
°r
 = 
	`°rdup
(*
ãxt
);

387 i‡(!
∑âîn
->
±r
.
°r
)

389 
∑âîn
->
Àn
 =Üen;

391 
	}
}

395 
	$a˛_∑r£_°rˇt
(c⁄° **
ãxt
, 
a˛_∑âîn
 *
∑âîn
, *
›aque
)

398 
Àn
 = 0, 
i
;

399 *
s
;

401 
i
 = 0; *
ãxt
[i]; i++)

402 
Àn
 +
	`°æí
(
ãxt
[
i
])+1;

404 
∑âîn
->
±r
.
°r
 = 
s
 = 
	`ˇŒoc
(1, 
Àn
);

405 i‡(!
∑âîn
->
±r
.
°r
)

408 
i
 = 0; *
ãxt
[i]; i++)

409 
s
 +
	`•rötf
(s, 
i
?" %s":"%s", 
ãxt
[i]);

411 
∑âîn
->
Àn
 =Üen;

413  
i
;

414 
	}
}

417 
	$a˛_‰ì_ªg
(*
±r
) {

419 
	`ªg‰ì
((
ªgex_t
 *)
±r
);

420 
	}
}

423 
	$a˛_∑r£_ªg
(c⁄° **
ãxt
, 
a˛_∑âîn
 *
∑âîn
, *
›aque
)

425 
ªgex_t
 *
¥eg
;

426 
iˇ£
;

428 
¥eg
 = 
	`ˇŒoc
(1, (
ªgex_t
));

430 i‡(!
¥eg
)

433 
iˇ£
 = (
∑âîn
->
Êags
 & 
ACL_PAT_F_IGNORE_CASE
Ë? 
REG_ICASE
 : 0;

434 i‡(
	`ªgcomp
(
¥eg
, *
ãxt
, 
REG_EXTENDED
 | 
REG_NOSUB
 | 
iˇ£
) != 0) {

435 
	`‰ì
(
¥eg
);

439 
∑âîn
->
±r
.
ªg
 = 
¥eg
;

440 
∑âîn
->
‰ì±rbuf
 = &
a˛_‰ì_ªg
;

442 
	}
}

455 
	$a˛_∑r£_öt
(c⁄° **
ãxt
, 
a˛_∑âîn
 *
∑âîn
, *
›aque
)

457 sig√d 
i
;

458 
j
, 
œ°
, 
skù
 = 0;

459 c⁄° *
±r
 = *
ãxt
;

462 !
	`isdigô
(()*
±r
)) {

463 i‡(
	`°rcmp
(
±r
, "eq"Ë=0Ë*
›aque
 = 0;

464 i‡(
	`°rcmp
(
±r
, "gt"Ë=0Ë*
›aque
 = 1;

465 i‡(
	`°rcmp
(
±r
, "ge"Ë=0Ë*
›aque
 = 2;

466 i‡(
	`°rcmp
(
±r
, "…"Ë=0Ë*
›aque
 = 3;

467 i‡(
	`°rcmp
(
±r
, "À"Ë=0Ë*
›aque
 = 4;

471 
skù
++;

472 
±r
 = 
ãxt
[
skù
];

475 
œ°
 = 
i
 = 0;

477 
j
 = *
±r
++;

478 i‡((
j
 ='-' || j =':'Ë&& !
œ°
) {

479 
œ°
++;

480 
∑âîn
->
vÆ
.
ønge
.
mö
 = 
i
;

481 
i
 = 0;

484 
j
 -= '0';

485 i‡(
j
 > 9)

488 
i
 *= 10;

489 
i
 +
j
;

492 i‡(
œ°
 && *
›aque
 >= 1 && *opaque <= 4)

496 i‡(!
œ°
)

497 
∑âîn
->
vÆ
.
ønge
.
mö
 = 
i
;

498 
∑âîn
->
vÆ
.
ønge
.
max
 = 
i
;

500 *
›aque
) {

502 
∑âîn
->
vÆ
.
ønge
.
mö_£t
 = 1;

503 
∑âîn
->
vÆ
.
ønge
.
max_£t
 = 1;

506 
∑âîn
->
vÆ
.
ønge
.
mö
++;

508 
∑âîn
->
vÆ
.
ønge
.
mö_£t
 = 1;

509 
∑âîn
->
vÆ
.
ønge
.
max_£t
 = 0;

512 
∑âîn
->
vÆ
.
ønge
.
max
--;

514 
∑âîn
->
vÆ
.
ønge
.
mö_£t
 = 0;

515 
∑âîn
->
vÆ
.
ønge
.
max_£t
 = 1;

518  
skù
 + 1;

519 
	}
}

541 
	$a˛_∑r£_dŸãd_vî
(c⁄° **
ãxt
, 
a˛_∑âîn
 *
∑âîn
, *
›aque
)

543 sig√d 
i
;

544 
j
, 
œ°
, 
skù
 = 0;

545 c⁄° *
±r
 = *
ãxt
;

548 !
	`isdigô
(()*
±r
)) {

549 i‡(
	`°rcmp
(
±r
, "eq"Ë=0Ë*
›aque
 = 0;

550 i‡(
	`°rcmp
(
±r
, "gt"Ë=0Ë*
›aque
 = 1;

551 i‡(
	`°rcmp
(
±r
, "ge"Ë=0Ë*
›aque
 = 2;

552 i‡(
	`°rcmp
(
±r
, "…"Ë=0Ë*
›aque
 = 3;

553 i‡(
	`°rcmp
(
±r
, "À"Ë=0Ë*
›aque
 = 4;

557 
skù
++;

558 
±r
 = 
ãxt
[
skù
];

561 
œ°
 = 
i
 = 0;

563 
j
 = *
±r
++;

564 i‡(
j
 == '.') {

566 i‡(
i
 >= 65536)

568 
i
 <<= 16;

571 i‡((
j
 ='-' || j =':'Ë&& !
œ°
) {

572 
œ°
++;

573 i‡(
i
 < 65536)

574 
i
 <<= 16;

575 
∑âîn
->
vÆ
.
ønge
.
mö
 = 
i
;

576 
i
 = 0;

579 
j
 -= '0';

580 i‡(
j
 > 9)

583 
i
 = (i & 0xFFFF0000) + (i & 0xFFFF) * 10;

584 
i
 +
j
;

588 i‡(
i
 < 65536)

589 
i
 <<= 16;

591 i‡(
œ°
 && *
›aque
 >= 1 && *opaque <= 4)

595 i‡(!
œ°
)

596 
∑âîn
->
vÆ
.
ønge
.
mö
 = 
i
;

597 
∑âîn
->
vÆ
.
ønge
.
max
 = 
i
;

599 *
›aque
) {

601 
∑âîn
->
vÆ
.
ønge
.
mö_£t
 = 1;

602 
∑âîn
->
vÆ
.
ønge
.
max_£t
 = 1;

605 
∑âîn
->
vÆ
.
ønge
.
mö
++;

607 
∑âîn
->
vÆ
.
ønge
.
mö_£t
 = 1;

608 
∑âîn
->
vÆ
.
ønge
.
max_£t
 = 0;

611 
∑âîn
->
vÆ
.
ønge
.
max
--;

613 
∑âîn
->
vÆ
.
ønge
.
mö_£t
 = 0;

614 
∑âîn
->
vÆ
.
ønge
.
max_£t
 = 1;

617  
skù
 + 1;

618 
	}
}

625 
	$a˛_∑r£_ù
(c⁄° **
ãxt
, 
a˛_∑âîn
 *
∑âîn
, *
›aque
)

627 
eb_roŸ
 *
åì
 = 
NULL
;

628 i‡(
∑âîn
->
Êags
 & 
ACL_PAT_F_TREE_OK
)

629 
åì
 = 
∑âîn
->
vÆ
.tree;

631 i‡(
	`°r2√t
(*
ãxt
, &
∑âîn
->
vÆ
.
ùv4
.
addr
, &∑âîn->vÆ.ùv4.
mask
)) {

632 
mask
 = 
	`¡ohl
(
∑âîn
->
vÆ
.
ùv4
.mask.
s_addr
);

633 
ebmb_node
 *
node
;

639 i‡(
mask
 + (mask & -maskË=0 && 
åì
) {

640 
mask
 = mask ? 33 - 
	`Ê¢z
(mask & -mask) : 0;

642 
node
 = 
	`ˇŒoc
(1, (*node) + 4);

643 i‡(!
node
)

645 
	`mem˝y
(
node
->
key
, &
∑âîn
->
vÆ
.
ùv4
.
addr
, 4);

646 
node
->node.
pfx
 = 
mask
;

647 i‡(
	`ebmb_ö£π_¥efix
(
åì
, 
node
, 4) !=Çode)

648 
	`‰ì
(
node
);

649 
∑âîn
->
Êags
 |
ACL_PAT_F_TREE
;

656 
	}
}

662 
	$a˛_ªgi°î_keyw‹ds
(
a˛_kw_li°
 *
kwl
)

664 
i
;

665 
	`W¨nög
("övokêa˛_ªgi°î_keyw‹ds–kw»%∞)\n", 
kwl
);

666 
i
 = 0; 
kwl
->
kw
[i].kw !
NULL
; i++) {

667 
	`W¨nög
("addá˛ keyw‹d: %s\n", 
kwl
->
kw
[
i
].kw);

669 
	`LIST_ADDQ
(&
a˛_keyw‹ds
.
li°
, &
kwl
->list);

670 
	}
}

675 
	$a˛_uƒegi°î_keyw‹ds
(
a˛_kw_li°
 *
kwl
)

677 
	`LIST_DEL
(&
kwl
->
li°
);

678 
	`LIST_INIT
(&
kwl
->
li°
);

679 
	}
}

684 
a˛
 *
	$föd_a˛_by_«me
(c⁄° *
«me
, 
li°
 *
hód
)

686 
a˛
 *acl;

687 
	`li°_f‹_óch_íåy
(
a˛
, 
hód
, 
li°
) {

688 i‡(
	`°rcmp
(
a˛
->
«me
,Çame) == 0)

689  
a˛
;

691  
NULL
;

692 
	}
}

697 
a˛_keyw‹d
 *
	$föd_a˛_kw
(c⁄° *
kw
)

699 
ödex
;

700 c⁄° *
kwíd
;

701 
a˛_kw_li°
 *
kwl
;

703 
kwíd
 = 
	`°rchr
(
kw
, '(');

704 i‡(!
kwíd
)

705 
kwíd
 = 
kw
 + 
	`°æí
(kw);

707 
	`li°_f‹_óch_íåy
(
kwl
, &
a˛_keyw‹ds
.
li°
,Üist) {

708 
ödex
 = 0; 
kwl
->
kw
[ödex].kw !
NULL
; index++) {

709 i‡((
	`°∫cmp
(
kwl
->
kw
[
ödex
].kw, kw, 
kwíd
 - kw) == 0) &&

710 
kwl
->
kw
[
ödex
].kw[
kwíd
-kw] == 0)

711  &
kwl
->
kw
[
ödex
];

714  
NULL
;

715 
	}
}

717 
	$‰ì_∑âîn
(
a˛_∑âîn
 *
∑t
)

720 i‡(
∑t
->
±r
.ptr) {

721 i‡(
∑t
->
‰ì±rbuf
)

722 
∑t
->
	`‰ì±rbuf
’©->
±r
.ptr);

724 
	`‰ì
(
∑t
->
±r
.ptr);

727 
	`‰ì
(
∑t
);

728 
	}
}

730 
	$‰ì_∑âîn_li°
(
li°
 *
hód
)

732 
a˛_∑âîn
 *
∑t
, *
tmp
;

733 
	`li°_f‹_óch_íåy_ß„
(
∑t
, 
tmp
, 
hód
, 
li°
)

734 
	`‰ì_∑âîn
(
∑t
);

735 
	}
}

737 
	$‰ì_∑âîn_åì
(
eb_roŸ
 *
roŸ
)

739 
eb_node
 *
node
, *
√xt
;

740 
node
 = 
	`eb_fú°
(
roŸ
);

741 
node
) {

742 
√xt
 = 
	`eb_√xt
(
node
);

743 
	`‰ì
(
node
);

744 
node
 = 
√xt
;

746 
	}
}

748 
a˛_ex¥
 *
	$¥u√_a˛_ex¥
(
a˛_ex¥
 *
ex¥
)

750 
	`‰ì_∑âîn_li°
(&
ex¥
->
∑âîns
);

751 
	`‰ì_∑âîn_åì
(&
ex¥
->
∑âîn_åì
);

752 
	`LIST_INIT
(&
ex¥
->
∑âîns
);

753 i‡(
ex¥
->
¨g_Àn
 &&Éx¥->
¨g
.
°r
)

754 
	`‰ì
(
ex¥
->
¨g
.
°r
);

755 
ex¥
->
kw
->
u£_˙t
--;

756  
ex¥
;

757 
	}
}

759 
	$a˛_ªad_∑âîns_‰om_fûe
–
a˛_keyw‹d
 *
a˛kw
,

760 
a˛_ex¥
 *
ex¥
,

761 c⁄° *
fûíame
, 
∑tÊags
)

763 
FILE
 *
fûe
;

764 *
c
;

765 c⁄° *
¨gs
[2];

766 
a˛_∑âîn
 *
∑âîn
;

767 
›aque
;

769 
fûe
 = 
	`f›í
(
fûíame
, "r");

770 i‡(!
fûe
)

777 
›aque
 = 0;

778 
∑âîn
 = 
NULL
;

779 
¨gs
[1] = "";

780 
	`fgës
(
åash
, —øsh), 
fûe
Ë!
NULL
) {

782 
c
 = 
åash
;

785 i‡(*
c
 == '#')

789 *
c
 == ' ' || *c == '\t')

790 
c
++;

793 i‡(!*
c
)

796 
¨gs
[0] = 
c
;

797 *
c
 && *c != '\n' && *c != '\r')

798 
c
++;

799 *
c
 = 0;

802 i‡(!
∑âîn
)

803 
∑âîn
 = (
a˛_∑âîn
 *)
	`mÆloc
((*pattern));

804 i‡(!
∑âîn
)

805 
out_˛o£
;

807 
	`mem£t
(
∑âîn
, 0, (*pattern));

808 
∑âîn
->
Êags
 = 
∑tÊags
;

810 i‡((
a˛kw
->
ªquúes
 & 
ACL_MAY_LOOKUP
Ë&& !(
∑âîn
->
Êags
 & 
ACL_PAT_F_IGNORE_CASE
)) {

814 
∑âîn
->
Êags
 |
ACL_PAT_F_TREE_OK
;

815 
∑âîn
->
vÆ
.
åì
 = &
ex¥
->
∑âîn_åì
;

818 i‡(!
a˛kw
->
	`∑r£
(
¨gs
, 
∑âîn
, &
›aque
))

819 
out_‰ì_∑âîn
;

822 i‡(!(
∑âîn
->
Êags
 & 
ACL_PAT_F_TREE
)) {

823 
	`LIST_ADDQ
(&
ex¥
->
∑âîns
, &
∑âîn
->
li°
);

824 
∑âîn
 = 
NULL
;

827 i‡(
∑âîn
)

828 
	`‰ì_∑âîn
(
∑âîn
);

831 
out_‰ì_∑âîn
:

832 
	`‰ì_∑âîn
(
∑âîn
);

833 
out_˛o£
:

834 
	`f˛o£
(
fûe
);

836 
	}
}

842 
a˛_ex¥
 *
	$∑r£_a˛_ex¥
(c⁄° **
¨gs
)

844 
__œbñ__
 
out_ªtu∫
, 
out_‰ì_ex¥
, 
out_‰ì_∑âîn
;

845 
a˛_ex¥
 *
ex¥
;

846 
a˛_keyw‹d
 *
a˛kw
;

847 
a˛_∑âîn
 *
∑âîn
;

848 
›aque
, 
∑tÊags
;

849 c⁄° *
¨g
;

851 
a˛kw
 = 
	`föd_a˛_kw
(
¨gs
[0]);

852 i‡(!
a˛kw
 || !a˛kw->
∑r£
)

853 
out_ªtu∫
;

855 
ex¥
 = (
a˛_ex¥
 *)
	`ˇŒoc
(1, (*expr));

856 i‡(!
ex¥
)

857 
out_ªtu∫
;

859 
ex¥
->
kw
 = 
a˛kw
;

860 
a˛kw
->
u£_˙t
++;

861 
	`LIST_INIT
(&
ex¥
->
∑âîns
);

862 
ex¥
->
∑âîn_åì
 = 
EB_ROOT_UNIQUE
;

863 
ex¥
->
¨g
.
°r
 = 
NULL
;

864 
ex¥
->
¨g_Àn
 = 0;

866 
¨g
 = 
	`°rchr
(
¨gs
[0], '(');

867 i‡(
¨g
 !
NULL
) {

868 *
íd
, *
¨g2
;

870 
¨g
++;

871 
íd
 = 
	`°rchr
(
¨g
, ')');

872 i‡(!
íd
)

873 
out_‰ì_ex¥
;

874 
¨g2
 = 
	`my_°∫dup
(
¨g
, 
íd
 -árg);

875 i‡(!
¨g2
)

876 
out_‰ì_ex¥
;

877 
ex¥
->
¨g_Àn
 = 
íd
 - 
¨g
;

878 
ex¥
->
¨g
.
°r
 = 
¨g2
;

881 
¨gs
++;

888 
∑tÊags
 = 0;

889 **
¨gs
 == '-') {

890 i‡((*
¨gs
)[1] == 'i')

891 
∑tÊags
 |
ACL_PAT_F_IGNORE_CASE
;

892 i‡((*
¨gs
)[1] == 'f') {

893 i‡(!
	`a˛_ªad_∑âîns_‰om_fûe
(
a˛kw
, 
ex¥
, 
¨gs
[1], 
∑tÊags
 | 
ACL_PAT_F_FROM_FILE
))

894 
out_‰ì_ex¥
;

895 
¨gs
++;

897 i‡((*
¨gs
)[1] == '-') {

898 
¨gs
++;

903 
¨gs
++;

907 
›aque
 = 0;

908 **
¨gs
) {

909 
ªt
;

910 
∑âîn
 = (
a˛_∑âîn
 *)
	`ˇŒoc
(1, (*pattern));

911 i‡(!
∑âîn
)

912 
out_‰ì_ex¥
;

913 
∑âîn
->
Êags
 = 
∑tÊags
;

915 
ªt
 = 
a˛kw
->
	`∑r£
(
¨gs
, 
∑âîn
, &
›aque
);

916 i‡(!
ªt
)

917 
out_‰ì_∑âîn
;

918 
	`LIST_ADDQ
(&
ex¥
->
∑âîns
, &
∑âîn
->
li°
);

919 
¨gs
 +
ªt
;

922  
ex¥
;

924 
out_‰ì_∑âîn
:

925 
	`‰ì_∑âîn
(
∑âîn
);

926 
out_‰ì_ex¥
:

927 
	`¥u√_a˛_ex¥
(
ex¥
);

928 
	`‰ì
(
ex¥
);

929 
out_ªtu∫
:

930  
NULL
;

931 
	}
}

934 
a˛
 *
	$¥u√_a˛
(
a˛
 *acl) {

936 
a˛_ex¥
 *
ex¥
, *
ex¥b
;

938 
	`‰ì
(
a˛
->
«me
);

940 
	`li°_f‹_óch_íåy_ß„
(
ex¥
, 
ex¥b
, &
a˛
->ex¥, 
li°
) {

941 
	`LIST_DEL
(&
ex¥
->
li°
);

942 
	`¥u√_a˛_ex¥
(
ex¥
);

943 
	`‰ì
(
ex¥
);

946  
a˛
;

947 
	}
}

956 
a˛
 *
	$∑r£_a˛
(c⁄° **
¨gs
, 
li°
 *
known_a˛
)

958 
__œbñ__
 
out_ªtu∫
, 
out_‰ì_a˛_ex¥
, 
out_‰ì_«me
;

959 
a˛
 *
cur_a˛
;

960 
a˛_ex¥
 *acl_expr;

961 *
«me
;

963 i‡(**
¨gs
 && 
	`övÆid_ch¨
(*args))

964 
out_ªtu∫
;

966 
a˛_ex¥
 = 
	`∑r£_a˛_ex¥
(
¨gs
 + 1);

967 i‡(!
a˛_ex¥
)

968 
out_ªtu∫
;

974 i‡(!
	`°rchr
(
¨gs
[1], '(') && *args[2] == '(')

975 
	`W¨nög
("parsingácl '%s' :\n"

980 
¨gs
[0],árgs[1],árgs[2]);

982 i‡(*
¨gs
[0])

983 
cur_a˛
 = 
	`föd_a˛_by_«me
(
¨gs
[0], 
known_a˛
);

985 
cur_a˛
 = 
NULL
;

987 i‡(!
cur_a˛
) {

988 
«me
 = 
	`°rdup
(
¨gs
[0]);

989 i‡(!
«me
)

990 
out_‰ì_a˛_ex¥
;

991 
cur_a˛
 = (
a˛
 *)
	`ˇŒoc
(1, (*cur_acl));

992 i‡(
cur_a˛
 =
NULL
)

993 
out_‰ì_«me
;

995 
	`LIST_INIT
(&
cur_a˛
->
ex¥
);

996 
	`LIST_ADDQ
(
known_a˛
, &
cur_a˛
->
li°
);

997 
cur_a˛
->
«me
 =Çame;

1000 
cur_a˛
->
ªquúes
 |
a˛_ex¥
->
kw
->requires;

1001 
	`LIST_ADDQ
(&
cur_a˛
->
ex¥
, &
a˛_ex¥
->
li°
);

1002  
cur_a˛
;

1004 
out_‰ì_«me
:

1005 
	`‰ì
(
«me
);

1006 
out_‰ì_a˛_ex¥
:

1007 
	`¥u√_a˛_ex¥
(
a˛_ex¥
);

1008 
	`‰ì
(
a˛_ex¥
);

1009 
out_ªtu∫
:

1010  
NULL
;

1011 
	}
}

1016 c⁄° *
	m«me
;

1017 c⁄° *
	mex¥
[4];

1018 } 
	gdeÁu…_a˛_li°
[] = {

1019 { .
«me
 = "TRUE", .
	gex¥
 = {"always_true",""}},

1020 { .
	g«me
 = "FALSE", .
	gex¥
 = {"always_false",""}},

1021 { .
	g«me
 = "LOCALHOST", .
	gex¥
 = {"src","127.0.0.1/8",""}},

1022 { .
	g«me
 = "HTTP", .
	gex¥
 = {"req_proto_http",""}},

1023 { .
	g«me
 = "HTTP_1.0", .
	gex¥
 = {"req_ver","1.0",""}},

1024 { .
	g«me
 = "HTTP_1.1", .
	gex¥
 = {"req_ver","1.1",""}},

1025 { .
	g«me
 = "METH_CONNECT", .
	gex¥
 = {"method","CONNECT",""}},

1026 { .
	g«me
 = "METH_GET", .
	gex¥
 = {"method","GET","HEAD",""}},

1027 { .
	g«me
 = "METH_HEAD", .
	gex¥
 = {"method","HEAD",""}},

1028 { .
	g«me
 = "METH_OPTIONS", .
	gex¥
 = {"method","OPTIONS",""}},

1029 { .
	g«me
 = "METH_POST", .
	gex¥
 = {"method","POST",""}},

1030 { .
	g«me
 = "METH_TRACE", .
	gex¥
 = {"method","TRACE",""}},

1031 { .
	g«me
 = "HTTP_URL_ABS", .
	gex¥
 = {"url_reg","^[^/:]*://",""}},

1032 { .
	g«me
 = "HTTP_URL_SLASH", .
	gex¥
 = {"url_beg","/",""}},

1033 { .
	g«me
 = "HTTP_URL_STAR", .
	gex¥
 = {"url","*",""}},

1034 { .
	g«me
 = "HTTP_CONTENT", .
	gex¥
 = {"hdr_val(content-length)","gt","0",""}},

1035 { .
	g«me
 = "RDP_COOKIE", .
	gex¥
 = {"req_rdp_cookie_cnt","gt","0",""}},

1036 { .
	g«me
 = "REQ_CONTENT", .
	gex¥
 = {"req_len","gt","0",""}},

1037 { .
	g«me
 = "WAIT_END", .
	gex¥
 = {"wait_end",""}},

1038 { .
	g«me
 = 
NULL
, .
	gex¥
 = {""}}

1046 
a˛
 *
	$föd_a˛_deÁu…
(c⁄° *
a˛_«me
, 
li°
 *
known_a˛
)

1048 
__œbñ__
 
out_ªtu∫
, 
out_‰ì_a˛_ex¥
, 
out_‰ì_«me
;

1049 
a˛
 *
cur_a˛
;

1050 
a˛_ex¥
 *acl_expr;

1051 *
«me
;

1052 
ödex
;

1054 
ödex
 = 0; 
deÁu…_a˛_li°
[ödex].
«me
 !
NULL
; index++) {

1055 i‡(
	`°rcmp
(
a˛_«me
, 
deÁu…_a˛_li°
[
ödex
].
«me
) == 0)

1059 i‡(
deÁu…_a˛_li°
[
ödex
].
«me
 =
NULL
)

1060  
NULL
;

1062 
a˛_ex¥
 = 
	`∑r£_a˛_ex¥
((c⁄° **)
deÁu…_a˛_li°
[
ödex
].
ex¥
);

1063 i‡(!
a˛_ex¥
)

1064 
out_ªtu∫
;

1066 
«me
 = 
	`°rdup
(
a˛_«me
);

1067 i‡(!
«me
)

1068 
out_‰ì_a˛_ex¥
;

1069 
cur_a˛
 = (
a˛
 *)
	`ˇŒoc
(1, (*cur_acl));

1070 i‡(
cur_a˛
 =
NULL
)

1071 
out_‰ì_«me
;

1073 
cur_a˛
->
«me
 =Çame;

1074 
cur_a˛
->
ªquúes
 |
a˛_ex¥
->
kw
->requires;

1075 
	`LIST_INIT
(&
cur_a˛
->
ex¥
);

1076 
	`LIST_ADDQ
(&
cur_a˛
->
ex¥
, &
a˛_ex¥
->
li°
);

1077 i‡(
known_a˛
)

1078 
	`LIST_ADDQ
(
known_a˛
, &
cur_a˛
->
li°
);

1080  
cur_a˛
;

1082 
out_‰ì_«me
:

1083 
	`‰ì
(
«me
);

1084 
out_‰ì_a˛_ex¥
:

1085 
	`¥u√_a˛_ex¥
(
a˛_ex¥
);

1086 
	`‰ì
(
a˛_ex¥
);

1087 
out_ªtu∫
:

1088  
NULL
;

1089 
	}
}

1092 
a˛_c⁄d
 *
	$¥u√_a˛_c⁄d
(
a˛_c⁄d
 *
c⁄d
)

1094 
a˛_ãrm_suôe
 *
suôe
, *
tmp_suôe
;

1095 
a˛_ãrm
 *
ãrm
, *
tmp_ãrm
;

1098 
	`li°_f‹_óch_íåy_ß„
(
suôe
, 
tmp_suôe
, &
c⁄d
->
suôes
, 
li°
) {

1099 
	`li°_f‹_óch_íåy_ß„
(
ãrm
, 
tmp_ãrm
, &
suôe
->
ãrms
, 
li°
)

1100 
	`‰ì
(
ãrm
);

1101 
	`‰ì
(
suôe
);

1103  
c⁄d
;

1104 
	}
}

1110 
a˛_c⁄d
 *
	$∑r£_a˛_c⁄d
(c⁄° **
¨gs
, 
li°
 *
known_a˛
, 
pﬁ
)

1112 
__œbñ__
 
out_ªtu∫
, 
out_‰ì_suôe
, 
out_‰ì_ãrm
;

1113 
¨g
, 
√g
;

1114 c⁄° *
w‹d
;

1115 
a˛
 *
cur_a˛
;

1116 
a˛_ãrm
 *
cur_ãrm
;

1117 
a˛_ãrm_suôe
 *
cur_suôe
;

1118 
a˛_c⁄d
 *
c⁄d
;

1120 
c⁄d
 = (
a˛_c⁄d
 *)
	`ˇŒoc
(1, (*cond));

1121 i‡(
c⁄d
 =
NULL
)

1122 
out_ªtu∫
;

1124 
	`LIST_INIT
(&
c⁄d
->
li°
);

1125 
	`LIST_INIT
(&
c⁄d
->
suôes
);

1126 
c⁄d
->
pﬁ
 =Öol;

1128 
cur_suôe
 = 
NULL
;

1129 
√g
 = 0;

1130 
¨g
 = 0; *
¨gs
[arg];árg++) {

1131 
w‹d
 = 
¨gs
[
¨g
];

1134 *
w‹d
 == '!') {

1135 
√g
 = !neg;

1136 
w‹d
++;

1142 i‡(!*
w‹d
)

1145 i‡(
	`°rˇ£cmp
(
w‹d
, "‹"Ë=0 || 
	`°rcmp
(word, "||") == 0) {

1147 
cur_suôe
 = 
NULL
;

1148 
√g
 = 0;

1152 i‡(
	`°rcmp
(
w‹d
, "{") == 0) {

1156 
¨g_íd
 = 
¨g
 + 1;

1157 c⁄° **
¨gs_√w
;

1159 *
¨gs
[
¨g_íd
] && 
	`°rcmp
(args[arg_end], "}") != 0)

1160 
¨g_íd
++;

1162 i‡(!*
¨gs
[
¨g_íd
])

1163 
out_‰ì_suôe
;

1165 
¨gs_√w
 = 
	`ˇŒoc
(1, (
¨g_íd
 - 
¨g
 + 1) * (*args_new));

1166 i‡(!
¨gs_√w
)

1167 
out_‰ì_suôe
;

1169 
¨gs_√w
[0] = "";

1170 
	`mem˝y
(
¨gs_√w
 + 1, 
¨gs
 + 
¨g
 + 1, (
¨g_íd
 -árg) * (*args_new));

1171 
¨gs_√w
[
¨g_íd
 - 
¨g
] = "";

1172 
cur_a˛
 = 
	`∑r£_a˛
(
¨gs_√w
, 
known_a˛
);

1173 
	`‰ì
(
¨gs_√w
);

1175 i‡(!
cur_a˛
)

1176 
out_‰ì_suôe
;

1177 
¨g
 = 
¨g_íd
;

1185 
cur_a˛
 = 
	`föd_a˛_by_«me
(
w‹d
, 
known_a˛
);

1186 i‡(
cur_a˛
 =
NULL
) {

1187 
cur_a˛
 = 
	`föd_a˛_deÁu…
(
w‹d
, 
known_a˛
);

1188 i‡(
cur_a˛
 =
NULL
)

1189 
out_‰ì_suôe
;

1193 
cur_ãrm
 = (
a˛_ãrm
 *)
	`ˇŒoc
(1, (*cur_term));

1194 i‡(
cur_ãrm
 =
NULL
)

1195 
out_‰ì_suôe
;

1197 
cur_ãrm
->
a˛
 = 
cur_a˛
;

1198 
cur_ãrm
->
√g
 =Çeg;

1199 
c⁄d
->
ªquúes
 |
cur_a˛
->requires;

1201 i‡(!
cur_suôe
) {

1202 
cur_suôe
 = (
a˛_ãrm_suôe
 *)
	`ˇŒoc
(1, (*cur_suite));

1203 i‡(
cur_ãrm
 =
NULL
)

1204 
out_‰ì_ãrm
;

1205 
	`LIST_INIT
(&
cur_suôe
->
ãrms
);

1206 
	`LIST_ADDQ
(&
c⁄d
->
suôes
, &
cur_suôe
->
li°
);

1208 
	`LIST_ADDQ
(&
cur_suôe
->
ãrms
, &
cur_ãrm
->
li°
);

1209 
√g
 = 0;

1212  
c⁄d
;

1214 
out_‰ì_ãrm
:

1215 
	`‰ì
(
cur_ãrm
);

1216 
out_‰ì_suôe
:

1217 
	`¥u√_a˛_c⁄d
(
c⁄d
);

1218 
	`‰ì
(
c⁄d
);

1219 
out_ªtu∫
:

1220  
NULL
;

1221 
	}
}

1229 
a˛_c⁄d
 *
	$buûd_a˛_c⁄d
(c⁄° *
fûe
, 
löe
, 
¥oxy
 *
px
, c⁄° **
¨gs
)

1231 
pﬁ
 = 
ACL_COND_NONE
;

1232 
a˛_c⁄d
 *
c⁄d
 = 
NULL
;

1234 i‡(!
	`°rcmp
(*
¨gs
, "if")) {

1235 
pﬁ
 = 
ACL_COND_IF
;

1236 
¨gs
++;

1238 i‡(!
	`°rcmp
(*
¨gs
, "unless")) {

1239 
pﬁ
 = 
ACL_COND_UNLESS
;

1240 
¨gs
++;

1243  
NULL
;

1245 
c⁄d
 = 
	`∑r£_a˛_c⁄d
(
¨gs
, &
px
->
a˛
, 
pﬁ
);

1246 i‡(!
c⁄d
)

1247  
NULL
;

1249 
c⁄d
->
fûe
 = file;

1250 
c⁄d
->
löe
 =Üine;

1251 
px
->
a˛_ªquúes
 |
c⁄d
->
ªquúes
;

1253  
c⁄d
;

1254 
	}
}

1270 
	$a˛_exec_c⁄d
(
a˛_c⁄d
 *
c⁄d
, 
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
)

1272 
__œbñ__
 
„tch_√xt
;

1273 
a˛_ãrm_suôe
 *
suôe
;

1274 
a˛_ãrm
 *
ãrm
;

1275 
a˛_ex¥
 *
ex¥
;

1276 
a˛
 *acl;

1277 
a˛_∑âîn
 *
∑âîn
;

1278 
a˛_ã°
 
ã°
;

1279 
a˛_ªs
, 
suôe_ªs
, 
c⁄d_ªs
;

1284 
c⁄d_ªs
 = 
ACL_PAT_FAIL
;

1285 
	`li°_f‹_óch_íåy
(
suôe
, &
c⁄d
->
suôes
, 
li°
) {

1294 
suôe_ªs
 = 
ACL_PAT_PASS
;

1295 
	`li°_f‹_óch_íåy
(
ãrm
, &
suôe
->
ãrms
, 
li°
) {

1296 
a˛
 = 
ãrm
->acl;

1305 
a˛_ªs
 = 
ACL_PAT_FAIL
;

1306 
	`li°_f‹_óch_íåy
(
ex¥
, &
a˛
->ex¥, 
li°
) {

1308 
	`mem£t
(&
ã°
, 0, (test));

1309 
„tch_√xt
:

1310 i‡(!
ex¥
->
kw
->
	`„tch
(
px
, 
l4
, 
l7
, 
dú
,Éx¥, &
ã°
)) {

1312 i‡(
ã°
.
Êags
 & 
ACL_TEST_F_MAY_CHANGE
 && 
dú
 & 
ACL_PARTIAL
)

1313 
a˛_ªs
 |
ACL_PAT_MISS
;

1317 i‡(
ã°
.
Êags
 & 
ACL_TEST_F_RES_SET
) {

1318 i‡(
ã°
.
Êags
 & 
ACL_TEST_F_RES_PASS
)

1319 
a˛_ªs
 |
ACL_PAT_PASS
;

1321 
a˛_ªs
 |
ACL_PAT_FAIL
;

1324 i‡(!
	`eb_is_em±y
(&
ex¥
->
∑âîn_åì
)) {

1326 i‡(
ex¥
->
kw
->
m©ch
 =
a˛_m©ch_°r
)

1327 
a˛_ªs
 |
	`a˛_lookup_°r
(&
ã°
, 
ex¥
Ë? 
ACL_PAT_PASS
 : 
ACL_PAT_FAIL
;

1328 i‡(
ex¥
->
kw
->
m©ch
 =
a˛_m©ch_ù
)

1329 
a˛_ªs
 |
	`a˛_lookup_ù
(&
ã°
, 
ex¥
Ë? 
ACL_PAT_PASS
 : 
ACL_PAT_FAIL
;

1333 
	`li°_f‹_óch_íåy
(
∑âîn
, &
ex¥
->
∑âîns
, 
li°
) {

1334 i‡(
a˛_ªs
 =
ACL_PAT_PASS
)

1336 
a˛_ªs
 |
ex¥
->
kw
->
	`m©ch
(&
ã°
, 
∑âîn
);

1339 i‡((
ã°
.
Êags
 & 
ACL_TEST_F_NULL_MATCH
) &&

1340 
	`LIST_ISEMPTY
(&
ex¥
->
∑âîns
Ë&& 
	`eb_is_em±y
(&ex¥->
∑âîn_åì
))

1341 
a˛_ªs
 |
ex¥
->
kw
->
	`m©ch
(&
ã°
, 
NULL
);

1355 i‡(
ã°
.
Êags
 & 
ACL_TEST_F_MUST_FREE
) {

1356 
	`‰ì
(
ã°
.
±r
);

1357 
ã°
.
Àn
 = 0;

1361 i‡(
a˛_ªs
 =
ACL_PAT_PASS
)

1364 i‡(
ã°
.
Êags
 & 
ACL_TEST_F_FETCH_MORE
)

1365 
„tch_√xt
;

1371 i‡(
ã°
.
Êags
 & 
ACL_TEST_F_MAY_CHANGE
 && 
dú
 & 
ACL_PARTIAL
)

1372 
a˛_ªs
 |
ACL_PAT_MISS
;

1379 i‡(
ãrm
->
√g
)

1380 
a˛_ªs
 = 
	`a˛_√g
(acl_res);

1382 
suôe_ªs
 &
a˛_ªs
;

1385 i‡(
suôe_ªs
 =
ACL_PAT_FAIL
)

1388 
c⁄d_ªs
 |
suôe_ªs
;

1391 i‡(
c⁄d_ªs
 =
ACL_PAT_PASS
)

1394  
c⁄d_ªs
;

1395 
	}
}

1405 
a˛
 *
	$c⁄d_föd_ªquúe
(c⁄° 
a˛_c⁄d
 *
c⁄d
, 
ªquúe
)

1407 
a˛_ãrm_suôe
 *
suôe
;

1408 
a˛_ãrm
 *
ãrm
;

1409 
a˛
 *acl;

1411 
	`li°_f‹_óch_íåy
(
suôe
, &
c⁄d
->
suôes
, 
li°
) {

1412 
	`li°_f‹_óch_íåy
(
ãrm
, &
suôe
->
ãrms
, 
li°
) {

1413 
a˛
 = 
ãrm
->acl;

1414 i‡(
a˛
->
ªquúes
 & 
ªquúe
)

1415  
a˛
;

1418  
NULL
;

1419 
	}
}

1426 
	$a˛_föd_èrgës
(
¥oxy
 *
p
)

1429 
a˛
 *acl;

1430 
a˛_ex¥
 *
ex¥
;

1431 
a˛_∑âîn
 *
∑âîn
;

1432 
u£æi°
 *
ul
;

1433 
cfgîr
 = 0;

1435 
	`li°_f‹_óch_íåy
(
a˛
, &
p
->a˛, 
li°
) {

1436 
	`li°_f‹_óch_íåy
(
ex¥
, &
a˛
->ex¥, 
li°
) {

1437 i‡(
	`°rcmp
(
ex¥
->
kw
->kw, "srv_is_up") == 0) {

1438 
¥oxy
 *
px
;

1439 
£rvî
 *
§v
;

1440 *
≤ame
, *
¢ame
;

1442 i‡(!
ex¥
->
¨g
.
°r
 || !*expr->arg.str) {

1443 
	`AÀπ
("proxy %s:ácl %s %s(): missing serverÇame.\n",

1444 
p
->
id
, 
a˛
->
«me
, 
ex¥
->
kw
->kw);

1445 
cfgîr
++;

1449 
≤ame
 = 
ex¥
->
¨g
.
°r
;

1450 
¢ame
 = 
	`°ºchr
(
≤ame
, '/');

1452 i‡(
¢ame
)

1453 *
¢ame
++ = '\0';

1455 
¢ame
 = 
≤ame
;

1456 
≤ame
 = 
NULL
;

1459 
px
 = 
p
;

1460 i‡(
≤ame
) {

1461 
px
 = 
	`föd¥oxy
(
≤ame
, 
PR_CAP_BE
);

1462 i‡(!
px
) {

1463 
	`AÀπ
("proxy %s:ácl %s %s(): unableÅo findÖroxy '%s'.\n",

1464 
p
->
id
, 
a˛
->
«me
, 
ex¥
->
kw
->kw, 
≤ame
);

1465 
cfgîr
++;

1470 
§v
 = 
	`föd£rvî
(
px
, 
¢ame
);

1471 i‡(!
§v
) {

1472 
	`AÀπ
("proxy %s:ácl %s %s(): unableÅo find server '%s'.\n",

1473 
p
->
id
, 
a˛
->
«me
, 
ex¥
->
kw
->kw, 
¢ame
);

1474 
cfgîr
++;

1478 
	`‰ì
(
ex¥
->
¨g
.
°r
);

1479 
ex¥
->
¨g_Àn
 = 0;

1480 
ex¥
->
¨g
.
§v
 = srv;

1484 i‡(
	`°r°r
(
ex¥
->
kw
->kw, "http_auth") ==Éxpr->kw->kw) {

1486 i‡(!
ex¥
->
¨g
.
°r
 || !*expr->arg.str) {

1487 
	`AÀπ
("proxy %s:ácl %s %s(): missing userlistÇame.\n",

1488 
p
->
id
, 
a˛
->
«me
, 
ex¥
->
kw
->kw);

1489 
cfgîr
++;

1493 i‡(
p
->
uri_auth
 &&Ö->uri_auth->
u£æi°
 &&

1494 !
	`°rcmp
(
p
->
uri_auth
->
u£æi°
->
«me
, 
ex¥
->
¨g
.
°r
))

1495 
ul
 = 
p
->
uri_auth
->
u£æi°
;

1497 
ul
 = 
	`auth_föd_u£æi°
(
ex¥
->
¨g
.
°r
);

1499 i‡(!
ul
) {

1500 
	`AÀπ
("proxy %s:ácl %s %s(%s): unableÅo find userlist.\n",

1501 
p
->
id
, 
a˛
->
«me
, 
ex¥
->
kw
->kw,Éx¥->
¨g
.
°r
);

1502 
cfgîr
++;

1506 
ex¥
->
¨g_Àn
 = 0;

1507 
ex¥
->
¨g
.
ul
 = ul;

1511 i‡(!
	`°rcmp
(
ex¥
->
kw
->kw, "http_auth_group")) {

1513 i‡(
	`LIST_ISEMPTY
(&
ex¥
->
∑âîns
)) {

1514 
	`AÀπ
("proxy %s:ácl %s %s():Ço groups specified.\n",

1515 
p
->
id
, 
a˛
->
«me
, 
ex¥
->
kw
->kw);

1516 
cfgîr
++;

1520 
	`li°_f‹_óch_íåy
(
∑âîn
, &
ex¥
->
∑âîns
, 
li°
) {

1521 
∑âîn
->
vÆ
.
group_mask
 = 
	`auth_ªsﬁve_groups
(
ex¥
->
¨g
.
ul
,Ö©ã∫->
±r
.
°r
);

1523 
	`‰ì
(
∑âîn
->
±r
.
°r
);

1524 
∑âîn
->
±r
.
°r
 = 
NULL
;

1525 
∑âîn
->
Àn
 = 0;

1527 i‡(!
∑âîn
->
vÆ
.
group_mask
) {

1528 
	`AÀπ
("proxy %s:ácl %s %s(): invalid group(s).\n",

1529 
p
->
id
, 
a˛
->
«me
, 
ex¥
->
kw
->kw);

1530 
cfgîr
++;

1538  
cfgîr
;

1539 
	}
}

1546 
a˛_kw_li°
 
	ga˛_kws
 = {{ },{

1547 { "Æways_åue", 
a˛_∑r£_nŸhög
, 
a˛_„tch_åue
, 
a˛_m©ch_nŸhög
, 
ACL_USE_NOTHING
 },

1548 { "Æways_Ál£", 
a˛_∑r£_nŸhög
, 
a˛_„tch_Ál£
, 
a˛_m©ch_nŸhög
, 
ACL_USE_NOTHING
 },

1549 { "waô_íd", 
a˛_∑r£_nŸhög
, 
a˛_„tch_waô_íd
, 
a˛_m©ch_nŸhög
, 
ACL_USE_NOTHING
 },

1551 { "time", 
a˛_∑r£_time
, 
a˛_„tch_time
, 
a˛_m©ch_time
 },

1553 { 
NULL
, NULL, NULL, NULL }

1557 
__©åibuã__
((
c⁄°ru˘‹
))

1558 
	$__a˛_öô
()

1560 
	`a˛_ªgi°î_keyw‹ds
(&
a˛_kws
);

1561 
	}
}

	@src/appsession.c

14 
	~<°dio.h
>

15 
	~<°rög.h
>

17 
	~<comm⁄/≠p£ssi⁄.h
>

18 
	~<comm⁄/c⁄fig.h
>

19 
	~<comm⁄/mem‹y.h
>

20 
	~<comm⁄/£ssi⁄hash.h
>

21 
	~<comm⁄/ticks.h
>

22 
	~<comm⁄/time.h
>

24 
	~<ty≥s/globÆ.h
>

26 
	~<¥Ÿo/¥oxy.h
>

27 
	~<¥Ÿo/èsk.h
>

29 
èsk
 *
	g≠p£ss_ª‰esh
 = 
NULL
;

30 
poﬁ_hód
 *
	gpoﬁ2_≠p£ss
;

31 
≠p_poﬁ
 
	g≠oﬁs
;

32 
	ghave_≠p£ssi⁄
;

34 
	$≠p£ssi⁄_öô
()

36 
öôülized
 = 0;

37 
idÀn
;

38 
£rvî
 *
s
;

39 
¥oxy
 *
p
 =Öroxy;

41 i‡(!
öôülized
) {

42 
poﬁ2_≠p£ss
 = 
	`¸óã_poﬁ
("≠p£ss", (
≠p£ss
), 
MEM_F_SHARED
);

43 i‡(
poﬁ2_≠p£ss
 =
NULL
)

46 i‡(!
	`≠p£ssi⁄_èsk_öô
()) {

47 
£r_msize
, 
£s_msize
;

49 
≠oﬁs
.
£ssid
 = 
NULL
;

50 
≠oﬁs
.
£rvîid
 = 
NULL
;

52 
£r_msize
 = (*);

53 
£s_msize
 = (*);

54 
p
) {

55 
s
 = 
p
->
§v
;

56 i‡(
£s_msize
 < 
p
->
≠p£ssi⁄_Àn
)

57 
£s_msize
 = 
p
->
≠p£ssi⁄_Àn
;

58 
s
) {

59 
idÀn
 = 
	`°æí
(
s
->
id
);

60 i‡(
£r_msize
 < 
idÀn
)

61 
£r_msize
 = 
idÀn
;

62 
s
 = s->
√xt
;

64 
p
 =Ö->
√xt
;

67 
£r_msize
 ++;

68 
£s_msize
 ++;

70 
≠oﬁs
.
£ssid
 = 
	`¸óã_poﬁ
("£ssid", 
£s_msize
, 
MEM_F_SHARED
);

71 i‡(!
≠oﬁs
.
£ssid
)

73 
≠oﬁs
.
£rvîid
 = 
	`¸óã_poﬁ
("£rvîid", 
£r_msize
, 
MEM_F_SHARED
);

74 i‡(!
≠oﬁs
.
£rvîid
)

78 
	`Ârötf
(
°dîr
, "appsession_task_init failed\n");

81 
öôülized
 ++;

84 
	}
}

86 
	$≠p£ssi⁄_èsk_öô
()

88 
öôülized
 = 0;

89 i‡(!
öôülized
) {

90 i‡((
≠p£ss_ª‰esh
 = 
	`èsk_√w
()Ë=
NULL
)

93 
≠p£ss_ª‰esh
->
c⁄ãxt
 = 
NULL
;

94 
≠p£ss_ª‰esh
->
expúe
 = 
	`tick_add
(
now_ms
, 
	`MS_TO_TICKS
(
TBLCHKINT
));

95 
≠p£ss_ª‰esh
->
¥o˚ss
 = 
≠p£ssi⁄_ª‰esh
;

96 
	`èsk_queue
(
≠p£ss_ª‰esh
);

97 
öôülized
 ++;

100 
	}
}

102 
èsk
 *
	$≠p£ssi⁄_ª‰esh
(
èsk
 *
t
)

104 
¥oxy
 *
p
 =Öroxy;

105 
≠p£ssi⁄_hash
 *
htbl
;

106 
≠p£ss
 *
ñemít
, *
back
;

107 
i
;

109 
p
) {

110 i‡(
p
->
≠p£ssi⁄_«me
 !
NULL
) {

111 
htbl
 = &
p
->
htbl_¥oxy
;

112 
	`as_hash_f‹_óch_íåy_ß„
(
i
, 
ñemít
, 
back
, &
p
->
htbl_¥oxy
, 
hash_li°
) {

113 i‡(
	`tick_is_expúed
(
ñemít
->
expúe
, 
now_ms
)) {

114 i‡((
globÆ
.
mode
 & 
MODE_DEBUG
) &&

115 (!(
globÆ
.
mode
 & 
MODE_QUIET
Ë|| (globÆ.modê& 
MODE_VERBOSE
))) {

116 
Àn
;

120 
Àn
 = 
	`•rötf
(
åash
, "appsession_refresh: cleaning upÉxpired Session '%s' on Server %s\n",

121 
ñemít
->
£ssid
,ÉÀmít->
£rvîid
?element->serverid:"(null)");

122 
	`wrôe
(1, 
åash
, 
Àn
);

125 
	`LIST_DEL
(&
ñemít
->
hash_li°
);

126 
htbl
->
	`de°roy
(
ñemít
);

130 
p
 =Ö->
√xt
;

132 
t
->
expúe
 = 
	`tick_add
(
now_ms
, 
	`MS_TO_TICKS
(
TBLCHKINT
));

133  
t
;

134 
	}
}

136 
	$m©ch_°r
(c⁄° *
key1
, c⁄° *
key2
)

138 
≠p£ss
 *
ãmp1
,*
ãmp2
;

139 
ãmp1
 = (
≠p£ss
 *)
key1
;

140 
ãmp2
 = (
≠p£ss
 *)
key2
;

145  (
	`°rcmp
(
ãmp1
->
£ssid
,
ãmp2
->sessid) == 0);

146 
	}
}

148 
	$de°roy
(
≠p£ss
 *
ãmp1
) {

149 
	`poﬁ_‰ì2
(
≠oﬁs
.
£ssid
, 
ãmp1
->sessid);

150 
	`poﬁ_‰ì2
(
≠oﬁs
.
£rvîid
, 
ãmp1
->serverid);

151 
	`poﬁ_‰ì2
(
poﬁ2_≠p£ss
, 
ãmp1
);

152 
	}
}

154 
	$≠p£ssi⁄_˛ónup
( )

156 
¥oxy
 *
p
 =Öroxy;

158 
p
) {

159 
	`≠p£ssi⁄_hash_de°roy
(&(
p
->
htbl_¥oxy
));

160 
p
 =Ö->
√xt
;

163 i‡(
≠p£ss_ª‰esh
) {

164 
	`èsk_dñëe
(
≠p£ss_ª‰esh
);

165 
	`èsk_‰ì
(
≠p£ss_ª‰esh
);

166 
≠p£ss_ª‰esh
 = 
NULL
;

169 
	}
}

	@src/auth.c

13 #ifde‡
CONFIG_HAP_CRYPT


15 
	#_GNU_SOURCE


	)

17 #ifde‡
NEED_CRYPT_H


19 
	~<¸y±.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

26 
	~<uni°d.h
>

28 
	~<comm⁄/c⁄fig.h
>

30 
	~<¥Ÿo/a˛.h
>

31 
	~<¥Ÿo/log.h
>

33 
	~<ty≥s/auth.h
>

35 
u£æi°
 *
	gu£æi°
 = 
NULL
;

41 
u£æi°
 *

42 
	$auth_föd_u£æi°
(*
«me
)

44 
u£æi°
 *
l
;

46 i‡(!
«me
 || !*name)

47  
NULL
;

49 
l
 = 
u£æi°
;Ü;Ü =Ü->
√xt
)

50 i‡(!
	`°rcmp
(
l
->
«me
,Çame))

51  
l
;

53  
NULL
;

54 
	}
}

62 
	$auth_ªsﬁve_groups
(
u£æi°
 *
l
, *
groups
)

65 *
group
 = 
NULL
;

66 
g
, 
group_mask
 = 0;

68 i‡(!
groups
 || !*groups)

71 (
group
 = 
	`°πok
(group?
NULL
:
groups
," "))) {

72 
g
 = 0; g < 
l
->
gΩ˙t
; g++)

73 i‡(!
	`°rcmp
(
l
->
groups
[
g
], 
group
))

76 i‡(
g
 =
l
->
gΩ˙t
) {

77 
	`AÀπ
("No such group '%s' in userlist '%s'.\n",

78 
group
, 
l
->
«me
);

82 
group_mask
 |(1 << 
g
);

85  
group_mask
;

86 
	}
}

88 
ªq_a˛_ruÀ
 *

89 
	$∑r£_auth_c⁄d
(c⁄° **
¨gs
, c⁄° *
fûe
, 
löíum
, 
¥oxy
 *proxy)

91 
ªq_a˛_ruÀ
 *
ªq_a˛
;

92 
cur_¨g
;

94 
ªq_a˛
 = (
ªq_a˛_ruÀ
*)
	`ˇŒoc
(1, (req_acl_rule));

95 i‡(!
ªq_a˛
) {

96 
	`AÀπ
("∑rsög [%s:%d]: ouào‡mem‹y.\n", 
fûe
, 
löíum
);

97  
NULL
;

100 i‡(!*
¨gs
[0]) {

101 
ªq_îr‹_∑rsög
;

102 } i‡(!
	`°rcmp
(
¨gs
[0], "allow")) {

103 
ªq_a˛
->
a˘i⁄
 = 
PR_REQ_ACL_ACT_ALLOW
;

104 
cur_¨g
 = 1;

105 } i‡(!
	`°rcmp
(
¨gs
[0], "deny")) {

106 
ªq_a˛
->
a˘i⁄
 = 
PR_REQ_ACL_ACT_DENY
;

107 
cur_¨g
 = 1;

108 } i‡(!
	`°rcmp
(
¨gs
[0], "auth")) {

109 
ªq_a˛
->
a˘i⁄
 = 
PR_REQ_ACL_ACT_HTTP_AUTH
;

110 
cur_¨g
 = 1;

112 *
¨gs
[
cur_¨g
]) {

113 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "realm")) {

114 
ªq_a˛
->
hâp_auth
.
ªÆm
 = 
	`°rdup
(
¨gs
[
cur_¨g
 + 1]);

115 
cur_¨g
+=2;

121 
ªq_îr‹_∑rsög
:

122 
	`AÀπ
("parsing [%s:%d]: %s '%s',Éxpects 'allow', 'deny', 'auth'.\n",

123 
fûe
, 
löíum
, *
¨gs
[1]?"unknownÖarameter":"missing keyword in",árgs[*args[1]?1:0]);

124  
NULL
;

127 i‡(
	`°rcmp
(
¨gs
[
cur_¨g
], "if") == 0 || strcmp(args[cur_arg], "unless") == 0) {

128 
a˛_c⁄d
 *
c⁄d
;

130 i‡((
c⁄d
 = 
	`buûd_a˛_c⁄d
(
fûe
, 
löíum
, 
¥oxy
, 
¨gs
+
cur_¨g
)Ë=
NULL
) {

131 
	`AÀπ
("parsing [%s:%d] :Érror detected whileÖarsingán 'http-request %s' condition.\n",

132 
fûe
, 
löíum
, 
¨gs
[0]);

133  
NULL
;

135 
ªq_a˛
->
c⁄d
 = cond;

137 i‡(*
¨gs
[
cur_¨g
]) {

138 
	`AÀπ
("parsing [%s:%d]: 'http-request %s'Éxpects 'realm' for 'auth' or"

140 
fûe
, 
löíum
, 
¨gs
[0],árgs[
cur_¨g
]);

141  
NULL
;

144  
ªq_a˛
;

145 
	}
}

148 
	$u£æi°_‰ì
(
u£æi°
 *
ul
)

150 
u£æi°
 *
tul
;

151 
auth_u£rs
 *
au
, *
èu
;

152 
i
;

154 
ul
) {

155 
au
 = 
ul
->
u£rs
;

156 
au
) {

157 
èu
 = 
au
;

158 
au
 =áu->
√xt
;

159 
	`‰ì
(
èu
->
u£r
);

160 
	`‰ì
(
èu
->
∑ss
);

161 
	`‰ì
(
èu
);

164 
tul
 = 
ul
;

165 
ul
 = ul->
√xt
;

167 
i
 = 0; i < 
tul
->
gΩ˙t
; i++)

168 
	`‰ì
(
tul
->
groups
[
i
]);

170 
	`‰ì
(
tul
->
«me
);

171 
	`‰ì
(
tul
);

173 
	}
}

176 
	$ªq_a˛_‰ì
(
li°
 *
r
) {

177 
ªq_a˛_ruÀ
 *
å
, *
¥
;

179 
	`li°_f‹_óch_íåy_ß„
(
¥
, 
å
, 
r
, 
li°
) {

180 
	`LIST_DEL
(&
¥
->
li°
);

181 i‡(
¥
->
a˘i⁄
 =
PR_REQ_ACL_ACT_HTTP_AUTH
)

182 
	`‰ì
(
¥
->
hâp_auth
.
ªÆm
);

184 
	`‰ì
(
¥
);

186 
	}
}

192 
	$check_u£r
(
u£æi°
 *
ul
, 
group_mask
, c⁄° *
u£r
, c⁄° *
∑ss
)

195 
auth_u£rs
 *
u
;

196 c⁄° *
ï
;

198 #ifde‡
DEBUG_AUTH


199 
	`Ârötf
(
°dîr
, "req: userlist=%s, user=%s,Öass=%s, group_mask=%u\n",

200 
ul
->
«me
, 
u£r
, 
∑ss
, 
group_mask
);

203 
u
 = 
ul
->
u£rs
; u; u = u->
√xt
)

204 i‡(!
	`°rcmp
(
u£r
, 
u
->user))

207 i‡(!
u
)

210 #ifde‡
DEBUG_AUTH


211 
	`Ârötf
(
°dîr
, "cfg: user=%s,Öass=%s, group_mask=%u, flags=%X",

212 
u
->
u£r
, u->
∑ss
, u->
group_mask
, u->
Êags
);

219 i‡(
group_mask
 && !(group_mask & 
u
->u.group_mask))

222 i‡(!(
u
->
Êags
 & 
AU_O_INSECURE
)) {

223 #ifde‡
CONFIG_HAP_CRYPT


224 
ï
 = 
	`¸y±
(
∑ss
, 
u
->pass);

229 
ï
 = 
∑ss
;

231 #ifde‡
DEBUG_AUTH


232 
	`Ârötf
(
°dîr
, ", cry±=%s\n", 
ï
);

235 i‡(!
	`°rcmp
(
ï
, 
u
->
∑ss
))

239 
	}
}

242 
	$a˛_m©ch_auth
(
a˛_ã°
 *
ã°
, 
a˛_∑âîn
 *
∑âîn
)

245 
u£æi°
 *
ul
 = 
ã°
->
˘x
.
a
[0];

246 *
u£r
 = 
ã°
->
˘x
.
a
[1];

247 *
∑ss
 = 
ã°
->
˘x
.
a
[2];

248 
group_mask
;

250 i‡(
∑âîn
)

251 
group_mask
 = 
∑âîn
->
vÆ
.group_mask;

253 
group_mask
 = 0;

255 i‡(
	`check_u£r
(
ul
, 
group_mask
, 
u£r
, 
∑ss
))

256  
ACL_PAT_PASS
;

258  
ACL_PAT_FAIL
;

259 
	}
}

	@src/backend.c

13 
	~<î∫o.h
>

14 
	~<f˙é.h
>

15 
	~<°dio.h
>

16 
	~<°dlib.h
>

17 
	~<sy¶og.h
>

18 
	~<°rög.h
>

19 
	~<˘y≥.h
>

20 
	~<sys/ty≥s.h
>

22 
	~<comm⁄/com∑t.h
>

23 
	~<comm⁄/c⁄fig.h
>

24 
	~<comm⁄/debug.h
>

25 
	~<comm⁄/ticks.h
>

26 
	~<comm⁄/time.h
>

28 
	~<ty≥s/globÆ.h
>

30 
	~<¥Ÿo/a˛.h
>

31 
	~<¥Ÿo/backíd.h
>

32 
	~<¥Ÿo/˛õ¡.h
>

33 
	~<¥Ÿo/lb_chash.h
>

34 
	~<¥Ÿo/lb_fwlc.h
>

35 
	~<¥Ÿo/lb_fwº.h
>

36 
	~<¥Ÿo/lb_m≠.h
>

37 
	~<¥Ÿo/¥Ÿo_hâp.h
>

38 
	~<¥Ÿo/¥Ÿo_t˝.h
>

39 
	~<¥Ÿo/queue.h
>

40 
	~<¥Ÿo/£rvî.h
>

41 
	~<¥Ÿo/£ssi⁄.h
>

42 
	~<¥Ÿo/èsk.h
>

51 
	$ªcou¡_£rvîs
(
¥oxy
 *
px
)

53 
£rvî
 *
§v
;

55 
px
->
§v_a˘
 =Öx->
§v_bck
 = 0;

56 
px
->
lb¥m
.
tŸ_wa˘
 =Öx->lb¥m.
tŸ_wbck
 = 0;

57 
px
->
lb¥m
.
fbck
 = 
NULL
;

58 
§v
 = 
px
->§v; srv !
NULL
; srv = srv->
√xt
) {

59 i‡(!
	`§v_is_ußbÀ
(
§v
->
°©e
, srv->
eweight
))

62 i‡(
§v
->
°©e
 & 
SRV_BACKUP
) {

63 i‡(!
px
->
§v_bck
 &&

64 !(
px
->
›ti⁄s
 & 
PR_O_USE_ALL_BK
))

65 
px
->
lb¥m
.
fbck
 = 
§v
;

66 
px
->
§v_bck
++;

67 
px
->
lb¥m
.
tŸ_wbck
 +
§v
->
eweight
;

69 
px
->
§v_a˘
++;

70 
px
->
lb¥m
.
tŸ_wa˘
 +
§v
->
eweight
;

73 
	}
}

79 
	$upd©e_backíd_weight
(
¥oxy
 *
px
)

81 i‡(
px
->
§v_a˘
) {

82 
px
->
lb¥m
.
tŸ_weight
 =Öx->lb¥m.
tŸ_wa˘
;

83 
px
->
lb¥m
.
tŸ_u£d
 =Öx->
§v_a˘
;

85 i‡(
px
->
lb¥m
.
fbck
) {

87 
px
->
lb¥m
.
tŸ_weight
 =Öx->lb¥m.
fbck
->
eweight
;

88 
px
->
lb¥m
.
tŸ_u£d
 = 1;

91 
px
->
lb¥m
.
tŸ_weight
 =Öx->lb¥m.
tŸ_wbck
;

92 
px
->
lb¥m
.
tŸ_u£d
 =Öx->
§v_bck
;

94 
	}
}

103 
£rvî
 *
	$gë_£rvî_sh
(
¥oxy
 *
px
, c⁄° *
addr
, 
Àn
)

105 
h
, 
l
;

107 i‡(
px
->
lb¥m
.
tŸ_weight
 == 0)

108  
NULL
;

110 
l
 = 
h
 = 0;

113 i‡(
px
->
lb¥m
.
tŸ_u£d
 == 1)

114 
hash_d⁄e
;

116 (
l
 +  ()Ë<
Àn
) {

117 
h
 ^
	`¡ohl
(*(*)(&
addr
[
l
]));

118 
l
 +=  ();

120 
hash_d⁄e
:

121 i‡(
px
->
lb¥m
.
Ægo
 & 
BE_LB_LKUP_CHTREE
)

122  
	`chash_gë_£rvî_hash
(
px
, 
h
);

124  
	`m≠_gë_£rvî_hash
(
px
, 
h
);

125 
	}
}

139 
£rvî
 *
	$gë_£rvî_uh
(
¥oxy
 *
px
, *
uri
, 
uri_Àn
)

141 
hash
 = 0;

142 
c
;

143 
¶ashes
 = 0;

145 i‡(
px
->
lb¥m
.
tŸ_weight
 == 0)

146  
NULL
;

149 i‡(
px
->
lb¥m
.
tŸ_u£d
 == 1)

150 
hash_d⁄e
;

152 i‡(
px
->
uri_Àn_limô
)

153 
uri_Àn
 = 
	`MIN
(uri_Àn, 
px
->
uri_Àn_limô
);

155 
uri_Àn
--) {

156 
c
 = *
uri
++;

157 i‡(
c
 == '/') {

158 
¶ashes
++;

159 i‡(
¶ashes
 =
px
->
uri_dús_dïth1
)

162 i‡(
c
 == '?')

165 
hash
 = 
c
 + (hash << 6) + (hash << 16) - hash;

167 
hash_d⁄e
:

168 i‡(
px
->
lb¥m
.
Ægo
 & 
BE_LB_LKUP_CHTREE
)

169  
	`chash_gë_£rvî_hash
(
px
, 
hash
);

171  
	`m≠_gë_£rvî_hash
(
px
, 
hash
);

172 
	}
}

183 
£rvî
 *
	$gë_£rvî_ph
(
¥oxy
 *
px
, c⁄° *
uri
, 
uri_Àn
)

185 
hash
 = 0;

186 c⁄° *
p
;

187 c⁄° *
∑øms
;

188 
∂í
;

191 i‡(
px
->
lb¥m
.
tŸ_weight
 == 0)

192  
NULL
;

194 i‡((
p
 = 
	`memchr
(
uri
, '?', 
uri_Àn
)Ë=
NULL
)

195  
NULL
;

197 
p
++;

199 
uri_Àn
 -(
p
 - 
uri
);

200 
∂í
 = 
px
->
uæ_∑øm_Àn
;

201 
∑øms
 = 
p
;

203 
uri_Àn
 > 
∂í
) {

205 i‡(
∑øms
[
∂í
] == '=') {

206 i‡(
	`memcmp
(
∑øms
, 
px
->
uæ_∑øm_«me
, 
∂í
) == 0) {

211 
p
 +
∂í
 + 1;

212 
uri_Àn
 -
∂í
 + 1;

214 
uri_Àn
 && *
p
 != '&') {

215 
hash
 = *
p
 + (hash << 6) + (hash << 16) - hash;

216 
uri_Àn
--;

217 
p
++;

219 i‡(
px
->
lb¥m
.
Ægo
 & 
BE_LB_LKUP_CHTREE
)

220  
	`chash_gë_£rvî_hash
(
px
, 
hash
);

222  
	`m≠_gë_£rvî_hash
(
px
, 
hash
);

226 
p
 = 
	`memchr
(
∑øms
, '&', 
uri_Àn
);

227 i‡(!
p
)

228  
NULL
;

229 
p
++;

230 
uri_Àn
 -(
p
 - 
∑øms
);

231 
∑øms
 = 
p
;

233  
NULL
;

234 
	}
}

239 
£rvî
 *
	$gë_£rvî_ph_po°
(
£ssi⁄
 *
s
)

241 
hash
 = 0;

242 
hâp_txn
 *
txn
 = &
s
->txn;

243 
buf„r
 *
ªq
 = 
s
->req;

244 
hâp_msg
 *
msg
 = &
txn
->
ªq
;

245 
¥oxy
 *
px
 = 
s
->
be
;

246 
∂í
 = 
px
->
uæ_∑øm_Àn
;

247 
Àn
 = 
msg
->
hdr_c⁄ã¡_Àn
;

248 c⁄° *
∑øms
 = 
ªq
->
d©a
 + 
msg
->
sov
;

249 c⁄° *
p
 = 
∑øms
;

251 i‡(
Àn
 > 
ªq
->
l
 - (
msg
->
sov
 - msg->
som
))

252 
Àn
 = 
ªq
->
l
 - (
msg
->
sov
 - msg->
som
);

254 i‡(
Àn
 == 0)

255  
NULL
;

257 i‡(
px
->
lb¥m
.
tŸ_weight
 == 0)

258  
NULL
;

260 
Àn
 > 
∂í
) {

262 i‡(
∑øms
[
∂í
] == '=') {

263 i‡(
	`memcmp
(
∑øms
, 
px
->
uæ_∑øm_«me
, 
∂í
) == 0) {

268 
p
 +
∂í
 + 1;

269 
Àn
 -
∂í
 + 1;

271 
Àn
 && *
p
 != '&') {

272 i‡(
	`u∆ikñy
(!
	`HTTP_IS_TOKEN
(*
p
))) {

276 i‡(
	`likñy
(
	`HTTP_IS_LWS
(*
p
)))

278  
NULL
;

282 
hash
 = *
p
 + (hash << 6) + (hash << 16) - hash;

283 
Àn
--;

284 
p
++;

287 i‡(
px
->
lb¥m
.
Ægo
 & 
BE_LB_LKUP_CHTREE
)

288  
	`chash_gë_£rvî_hash
(
px
, 
hash
);

290  
	`m≠_gë_£rvî_hash
(
px
, 
hash
);

294 
p
 = 
	`memchr
(
∑øms
, '&', 
Àn
);

295 i‡(!
p
)

296  
NULL
;

297 
p
++;

298 
Àn
 -(
p
 - 
∑øms
);

299 
∑øms
 = 
p
;

301  
NULL
;

302 
	}
}

314 
£rvî
 *
	$gë_£rvî_hh
(
£ssi⁄
 *
s
)

316 
hash
 = 0;

317 
hâp_txn
 *
txn
 = &
s
->txn;

318 
hâp_msg
 *
msg
 = &
txn
->
ªq
;

319 
¥oxy
 *
px
 = 
s
->
be
;

320 
∂í
 = 
px
->
hh_Àn
;

321 
Àn
;

322 
hdr_˘x
 
˘x
;

323 c⁄° *
p
;

326 i‡(
px
->
lb¥m
.
tŸ_weight
 == 0)

327  
NULL
;

329 
˘x
.
idx
 = 0;

332 
	`hâp_föd_hódî2
(
px
->
hh_«me
, 
∂í
, 
msg
->
sﬁ
, &
txn
->
hdr_idx
, &
˘x
);

335 i‡(!
˘x
.
idx
 || !˘x.
vÀn
)

336  
NULL
;

339 i‡(
px
->
lb¥m
.
tŸ_u£d
 == 1)

340 
hash_d⁄e
;

345 
Àn
 = 
˘x
.
vÀn
;

346 
p
 = (*)
˘x
.
löe
 + ctx.
vÆ
;

347 i‡(!
px
->
hh_m©ch_domaö
) {

348 
Àn
) {

349 
hash
 = *
p
 + (hash << 6) + (hash << 16) - hash;

350 
Àn
--;

351 
p
++;

354 
dohash
 = 0;

355 
p
 +
Àn
 - 1;

362 
Àn
) {

363 i‡(*
p
 == '.') {

364 i‡(!
dohash
)

365 
dohash
 = 1;

369 i‡(
dohash
)

370 
hash
 = *
p
 + (hash << 6) + (hash << 16) - hash;

372 
Àn
--;

373 
p
--;

376 
hash_d⁄e
:

377 i‡(
px
->
lb¥m
.
Ægo
 & 
BE_LB_LKUP_CHTREE
)

378  
	`chash_gë_£rvî_hash
(
px
, 
hash
);

380  
	`m≠_gë_£rvî_hash
(
px
, 
hash
);

381 
	}
}

383 
£rvî
 *
	$gë_£rvî_rch
(
£ssi⁄
 *
s
)

385 
hash
 = 0;

386 
¥oxy
 *
px
 = 
s
->
be
;

387 
Àn
;

388 c⁄° *
p
;

389 
ªt
;

390 
a˛_ex¥
 
ex¥
;

391 
a˛_ã°
 
ã°
;

394 i‡(
px
->
lb¥m
.
tŸ_weight
 == 0)

395  
NULL
;

397 
	`mem£t
(&
ex¥
, 0, (expr));

398 
	`mem£t
(&
ã°
, 0, (test));

400 
ex¥
.
¨g
.
°r
 = 
px
->
hh_«me
;

401 
ex¥
.
¨g_Àn
 = 
px
->
hh_Àn
;

403 
ªt
 = 
	`a˛_„tch_rdp_cookõ
(
px
, 
s
, 
NULL
, 
ACL_DIR_REQ
, &
ex¥
, &
ã°
);

404 i‡(
ªt
 =0 || (
ã°
.
Êags
 & 
ACL_TEST_F_MAY_CHANGE
Ë||Åe°.
Àn
 == 0)

405  
NULL
;

408 i‡(
px
->
lb¥m
.
tŸ_u£d
 == 1)

409 
hash_d⁄e
;

414 
Àn
 = 
ã°
.len;

415 
p
 = (*)
ã°
.
±r
;

416 
Àn
) {

417 
hash
 = *
p
 + (hash << 6) + (hash << 16) - hash;

418 
Àn
--;

419 
p
++;

421 
hash_d⁄e
:

422 i‡(
px
->
lb¥m
.
Ægo
 & 
BE_LB_LKUP_CHTREE
)

423  
	`chash_gë_£rvî_hash
(
px
, 
hash
);

425  
	`m≠_gë_£rvî_hash
(
px
, 
hash
);

426 
	}
}

453 
	$assign_£rvî
(
£ssi⁄
 *
s
)

456 
£rvî
 *
c⁄n_¶Ÿ
;

457 
îr
;

459 #ifde‡
DEBUG_FULL


460 
	`Ârötf
(
°dîr
,"assign_£rvî : s=%p\n",
s
);

463 
îr
 = 
SRV_STATUS_INTERNAL
;

464 i‡(
	`u∆ikñy
(
s
->
≥nd_pos
 || s->
Êags
 & 
SN_ASSIGNED
))

465 
out_îr
;

467 
s
->
¥ev_§v
 = s->prev_srv;

468 
c⁄n_¶Ÿ
 = 
s
->
§v_c⁄n
;

473 i‡(
c⁄n_¶Ÿ
)

474 
	`£ss_ch™ge_£rvî
(
s
, 
NULL
);

481 
s
->
§v
 = 
NULL
;

482 i‡(
s
->
be
->
lb¥m
.
Ægo
 & 
BE_LB_KIND
) {

483 
Àn
;

485 i‡(!
s
->
be
->
lb¥m
.
tŸ_weight
) {

486 
îr
 = 
SRV_STATUS_NOSRV
;

487 
out
;

494 
s
->
be
->
lb¥m
.
Ægo
 & 
BE_LB_LKUP
) {

495 
BE_LB_LKUP_RRTREE
:

496 
s
->
§v
 = 
	`fwº_gë_√xt_£rvî
(s->
be
, s->
¥ev_§v
);

499 
BE_LB_LKUP_LCTREE
:

500 
s
->
§v
 = 
	`fwlc_gë_√xt_£rvî
(s->
be
, s->
¥ev_§v
);

503 
BE_LB_LKUP_CHTREE
:

504 
BE_LB_LKUP_MAP
:

505 i‡((
s
->
be
->
lb¥m
.
Ægo
 & 
BE_LB_KIND
Ë=
BE_LB_KIND_RR
) {

506 i‡(
s
->
be
->
lb¥m
.
Ægo
 & 
BE_LB_LKUP_CHTREE
)

507 
s
->
§v
 = 
	`chash_gë_√xt_£rvî
(s->
be
, s->
¥ev_§v
);

509 
s
->
§v
 = 
	`m≠_gë_£rvî_º
(s->
be
, s->
¥ev_§v
);

512 i‡((
s
->
be
->
lb¥m
.
Ægo
 & 
BE_LB_KIND
Ë!
BE_LB_KIND_HI
) {

514 
îr
 = 
SRV_STATUS_INTERNAL
;

515 
out
;

518 
s
->
be
->
lb¥m
.
Ægo
 & 
BE_LB_PARM
) {

519 
BE_LB_HASH_SRC
:

520 i‡(
s
->
˛i_addr
.
ss_Ámûy
 =
AF_INET
)

521 
Àn
 = 4;

522 i‡(
s
->
˛i_addr
.
ss_Ámûy
 =
AF_INET6
)

523 
Àn
 = 16;

526 
îr
 = 
SRV_STATUS_INTERNAL
;

527 
out
;

530 
s
->
§v
 = 
	`gë_£rvî_sh
(s->
be
,

531 (*)&((
sockaddr_ö
 *)&
s
->
˛i_addr
)->
sö_addr
,

532 
Àn
);

535 
BE_LB_HASH_URI
:

537 i‡(
s
->
txn
.
ªq
.
msg_°©e
 < 
HTTP_MSG_BODY
)

539 
s
->
§v
 = 
	`gë_£rvî_uh
(s->
be
,

540 
s
->
txn
.
ªq
.
sﬁ
 + s->txn.ªq.
¶
.
rq
.
u
,

541 
s
->
txn
.
ªq
.
¶
.
rq
.
u_l
);

544 
BE_LB_HASH_PRM
:

546 i‡(
s
->
txn
.
ªq
.
msg_°©e
 < 
HTTP_MSG_BODY
)

548 i‡(
s
->
txn
.
mëh
 =
HTTP_METH_POST
 &&

549 
	`memchr
(
s
->
txn
.
ªq
.
sﬁ
 + s->txn.ªq.
¶
.
rq
.
u
, '&',

550 
s
->
txn
.
ªq
.
¶
.
rq
.
u_l
 ) =
NULL
)

551 
s
->
§v
 = 
	`gë_£rvî_ph_po°
(s);

553 
s
->
§v
 = 
	`gë_£rvî_ph
(s->
be
,

554 
s
->
txn
.
ªq
.
sﬁ
 + s->txn.ªq.
¶
.
rq
.
u
,

555 
s
->
txn
.
ªq
.
¶
.
rq
.
u_l
);

558 
BE_LB_HASH_HDR
:

560 i‡(
s
->
txn
.
ªq
.
msg_°©e
 < 
HTTP_MSG_BODY
)

562 
s
->
§v
 = 
	`gë_£rvî_hh
(s);

565 
BE_LB_HASH_RDP
:

567 
s
->
§v
 = 
	`gë_£rvî_rch
(s);

572 
îr
 = 
SRV_STATUS_INTERNAL
;

573 
out
;

579 i‡(!
s
->
§v
) {

580 i‡(
s
->
be
->
lb¥m
.
Ægo
 & 
BE_LB_LKUP_CHTREE
)

581 
s
->
§v
 = 
	`chash_gë_√xt_£rvî
(s->
be
, s->
¥ev_§v
);

583 
s
->
§v
 = 
	`m≠_gë_£rvî_º
(s->
be
, s->
¥ev_§v
);

591 
îr
 = 
SRV_STATUS_INTERNAL
;

592 
out
;

595 i‡(!
s
->
§v
) {

596 
îr
 = 
SRV_STATUS_FULL
;

597 
out
;

599 i‡(
s
->
§v
 !s->
¥ev_§v
) {

600 
s
->
be
->
cou¡îs
.
cum_lbc⁄n
++;

601 
s
->
§v
->
cou¡îs
.
cum_lbc⁄n
++;

604 i‡(
s
->
be
->
›ti⁄s
 & 
PR_O_HTTP_PROXY
) {

605 i‡(!
s
->
§v_addr
.
sö_addr
.
s_addr
) {

606 
îr
 = 
SRV_STATUS_NOSRV
;

607 
out
;

610 i‡(!*(*)&
s
->
be
->
di•©ch_addr
.
sö_addr
 &&

611 !(
s
->
be
->
›ti⁄s
 & 
PR_O_TRANSP
)) {

612 
îr
 = 
SRV_STATUS_NOSRV
;

613 
out
;

616 
s
->
Êags
 |
SN_ASSIGNED
;

617 
îr
 = 
SRV_STATUS_OK
;

618 
out
:

623 i‡(
c⁄n_¶Ÿ
) {

624 i‡(
c⁄n_¶Ÿ
 =
s
->
§v
) {

625 
	`£ss_ch™ge_£rvî
(
s
, s->
§v
);

627 i‡(
	`may_dequeue_èsks
(
c⁄n_¶Ÿ
, 
s
->
be
))

628 
	`¥o˚ss_§v_queue
(
c⁄n_¶Ÿ
);

632 
out_îr
:

633  
îr
;

634 
	}
}

650 
	$assign_£rvî_addªss
(
£ssi⁄
 *
s
)

652 #ifde‡
DEBUG_FULL


653 
	`Ârötf
(
°dîr
,"assign_£rvî_addªs†: s=%p\n",
s
);

656 i‡((
s
->
Êags
 & 
SN_DIRECT
Ë|| (s->
be
->
lb¥m
.
Ægo
 & 
BE_LB_KIND
)) {

658 i‡(!(
s
->
Êags
 & 
SN_ASSIGNED
))

659  
SRV_STATUS_INTERNAL
;

661 
s
->
§v_addr
 = s->
§v
->
addr
;

663 i‡(!
s
->
§v_addr
.
sö_addr
.
s_addr
) {

668 i‡(!(
s
->
be
->
›ti⁄s
 & 
PR_O_TRANSP
Ë&& !(s->
Êags
 & 
SN_FRT_ADDR_SET
))

669 
	`gë_‰t_addr
(
s
);

671 
s
->
§v_addr
.
sö_addr
 = ((
sockaddr_ö
 *)&s->
‰t_addr
)->sin_addr;

676 i‡(
s
->
§v
->
°©e
 & 
SRV_MAPPORTS
) {

677 i‡(!(
s
->
be
->
›ti⁄s
 & 
PR_O_TRANSP
Ë&& !(s->
Êags
 & 
SN_FRT_ADDR_SET
))

678 
	`gë_‰t_addr
(
s
);

679 i‡(
s
->
‰t_addr
.
ss_Ámûy
 =
AF_INET
) {

680 
s
->
§v_addr
.
sö_p‹t
 = 
	`ht⁄s
(
	`¡ohs
(s->srv_addr.sin_port) +

681 
	`¡ohs
(((
sockaddr_ö
 *)&
s
->
‰t_addr
)->
sö_p‹t
));

683 
s
->
§v_addr
.
sö_p‹t
 = 
	`ht⁄s
(
	`¡ohs
(s->srv_addr.sin_port) +

684 
	`¡ohs
(((
sockaddr_ö6
 *)&
s
->
‰t_addr
)->
sö6_p‹t
));

688 i‡(*(*)&
s
->
be
->
di•©ch_addr
.
sö_addr
) {

690 
s
->
§v_addr
 = s->
be
->
di•©ch_addr
;

692 i‡(
s
->
be
->
›ti⁄s
 & 
PR_O_TRANSP
) {

694 i‡(!(
s
->
Êags
 & 
SN_FRT_ADDR_SET
))

695 
	`gë_‰t_addr
(
s
);

697 
	`mem˝y
(&
s
->
§v_addr
, &s->
‰t_addr
, 
	`MIN
((s->srv_addr), (s->frt_addr)));

702 i‡(
s
->
be
->
›ti⁄s
 & 
PR_O_HTTP_PROXY
) {

708  
SRV_STATUS_INTERNAL
;

711 
s
->
Êags
 |
SN_ADDR_SET
;

712  
SRV_STATUS_OK
;

713 
	}
}

735 
	$assign_£rvî_™d_queue
(
£ssi⁄
 *
s
)

737 
≥ndc⁄n
 *
p
;

738 
îr
;

740 i‡(
s
->
≥nd_pos
)

741  
SRV_STATUS_INTERNAL
;

743 
îr
 = 
SRV_STATUS_OK
;

744 i‡(!(
s
->
Êags
 & 
SN_ASSIGNED
)) {

745 
îr
 = 
	`assign_£rvî
(
s
);

746 i‡(
s
->
¥ev_§v
) {

756 i‡(
s
->
¥ev_§v
 !s->
§v
) {

757 i‡((
s
->
txn
.
Êags
 & 
TX_CK_MASK
Ë=
TX_CK_VALID
) {

758 
s
->
txn
.
Êags
 &~
TX_CK_MASK
;

759 
s
->
txn
.
Êags
 |
TX_CK_DOWN
;

761 
s
->
Êags
 |
SN_REDISP
;

762 
s
->
¥ev_§v
->
cou¡îs
.
ªdi•©ches
++;

763 
s
->
be
->
cou¡îs
.
ªdi•©ches
++;

765 
s
->
¥ev_§v
->
cou¡îs
.
ªåõs
++;

766 
s
->
be
->
cou¡îs
.
ªåõs
++;

771 
îr
) {

772 
SRV_STATUS_OK
:

774 i‡(!
s
->
§v
)

775  
SRV_STATUS_OK
;

778 i‡(
s
->
§v_c⁄n
 =s->
§v
)

779  
SRV_STATUS_OK
;

785 i‡((
s
->
Êags
 & 
SN_REDIRECTABLE
Ë&& s->
§v
->
rdr_Àn
) {

789 
	`£ss_ch™ge_£rvî
(
s
, s->
§v
);

790  
SRV_STATUS_OK
;

798 i‡(
s
->
§v
->
maxc⁄n
 &&

799 (
s
->
§v
->
nb≥nd
 || s->§v->
£rved
 >
	`§v_dy«mic_maxc⁄n
(s->srv))) {

801 i‡(
s
->
§v
->
maxqueue
 > 0 && s->§v->
nb≥nd
 >= s->srv->maxqueue)

802  
SRV_STATUS_FULL
;

804 
p
 = 
	`≥ndc⁄n_add
(
s
);

805 i‡(
p
)

806  
SRV_STATUS_QUEUED
;

808  
SRV_STATUS_INTERNAL
;

812 
	`£ss_ch™ge_£rvî
(
s
, s->
§v
);

813  
SRV_STATUS_OK
;

815 
SRV_STATUS_FULL
:

817 
p
 = 
	`≥ndc⁄n_add
(
s
);

818 i‡(
p
)

819  
SRV_STATUS_QUEUED
;

821  
SRV_STATUS_INTERNAL
;

823 
SRV_STATUS_NOSRV
:

824  
îr
;

826 
SRV_STATUS_INTERNAL
:

827  
îr
;

830  
SRV_STATUS_INTERNAL
;

832 
	}
}

838 
	$assign_çroxy_addªss
(
£ssi⁄
 *
s
)

840 #i‡
	`deföed
(
CONFIG_HAP_CTTPROXY
Ë|| deföed(
CONFIG_HAP_LINUX_TPROXY
)

841 i‡(
s
->
§v
 !
NULL
 && s->§v->
°©e
 & 
SRV_BIND_SRC
) {

842 
s
->
§v
->
°©e
 & 
SRV_TPROXY_MASK
) {

843 
SRV_TPROXY_ADDR
:

844 
s
->
‰om_addr
 = *(
sockaddr_ö
 *)&s->
§v
->
çroxy_addr
;

846 
SRV_TPROXY_CLI
:

847 
SRV_TPROXY_CIP
:

849 
s
->
‰om_addr
 = *(
sockaddr_ö
 *)&s->
˛i_addr
;

851 
SRV_TPROXY_DYN
:

852 i‡(
s
->
§v
->
böd_hdr_occ
) {

854 
s
->
‰om_addr
.
sö_p‹t
 = 0;

855 
s
->
‰om_addr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
	`gë_ù_‰om_hdr2
(&s->
txn
.
ªq
,

856 
s
->
§v
->
böd_hdr_«me
,

857 
s
->
§v
->
böd_hdr_Àn
,

858 &
s
->
txn
.
hdr_idx
,

859 
s
->
§v
->
böd_hdr_occ
));

863 
	`mem£t
(&
s
->
‰om_addr
, 0, (s->from_addr));

866 i‡(
s
->
be
->
›ti⁄s
 & 
PR_O_BIND_SRC
) {

867 
s
->
be
->
›ti⁄s
 & 
PR_O_TPXY_MASK
) {

868 
PR_O_TPXY_ADDR
:

869 
s
->
‰om_addr
 = *(
sockaddr_ö
 *)&s->
be
->
çroxy_addr
;

871 
PR_O_TPXY_CLI
:

872 
PR_O_TPXY_CIP
:

874 
s
->
‰om_addr
 = *(
sockaddr_ö
 *)&s->
˛i_addr
;

876 
PR_O_TPXY_DYN
:

877 i‡(
s
->
be
->
böd_hdr_occ
) {

879 
s
->
‰om_addr
.
sö_p‹t
 = 0;

880 
s
->
‰om_addr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
	`gë_ù_‰om_hdr2
(&s->
txn
.
ªq
,

881 
s
->
be
->
böd_hdr_«me
,

882 
s
->
be
->
böd_hdr_Àn
,

883 &
s
->
txn
.
hdr_idx
,

884 
s
->
be
->
böd_hdr_occ
));

888 
	`mem£t
(&
s
->
‰om_addr
, 0, (s->from_addr));

892 
	}
}

907 
	$c⁄√˘_£rvî
(
£ssi⁄
 *
s
)

909 
îr
;

911 i‡(!(
s
->
Êags
 & 
SN_ADDR_SET
)) {

912 
îr
 = 
	`assign_£rvî_addªss
(
s
);

913 i‡(
îr
 !
SRV_STATUS_OK
)

914  
SN_ERR_INTERNAL
;

917 i‡(!
s
->
ªq
->
c⁄s
->
c⁄√˘
)

918  
SN_ERR_INTERNAL
;

920 
	`assign_çroxy_addªss
(
s
);

922 
îr
 = 
s
->
ªq
->
c⁄s
->
	`c⁄√˘
(s->ªq->c⁄s, s->
be
, s->
§v
,

923 (
sockaddr
 *)&
s
->
§v_addr
,

924 (
sockaddr
 *)&
s
->
‰om_addr
);

926 i‡(
îr
 !
SN_ERR_NONE
)

927  
îr
;

929 i‡(
s
->
§v
) {

930 
s
->
Êags
 |
SN_CURR_SESS
;

931 
s
->
§v
->
cur_£ss
++;

932 i‡(
s
->
§v
->
cur_£ss
 > s->§v->
cou¡îs
.
cur_£ss_max
)

933 
s
->
§v
->
cou¡îs
.
cur_£ss_max
 = s->§v->
cur_£ss
;

934 i‡(
s
->
be
->
lb¥m
.
£rvî_èke_c⁄n
)

935 
s
->
be
->
lb¥m
.
	`£rvî_èke_c⁄n
(s->
§v
);

938  
SN_ERR_NONE
;

939 
	}
}

950 
	$§v_ªdi•©ch_c⁄√˘
(
£ssi⁄
 *
t
)

952 
c⁄n_îr
;

957 
ªdi•©ch
:

958 
c⁄n_îr
 = 
	`assign_£rvî_™d_queue
(
t
);

959 
c⁄n_îr
) {

960 
SRV_STATUS_OK
:

963 
SRV_STATUS_FULL
:

971 i‡(((
t
->
Êags
 & (
SN_DIRECT
|
SN_FORCE_PRST
)) == SN_DIRECT) &&

972 (
t
->
be
->
›ti⁄s
 & 
PR_O_REDISP
)) {

973 
t
->
Êags
 &~(
SN_DIRECT
 | 
SN_ASSIGNED
 | 
SN_ADDR_SET
);

974 
t
->
¥ev_§v
 =Å->
§v
;

975 
ªdi•©ch
;

978 i‡(!
t
->
ªq
->
c⁄s
->
îr_ty≥
) {

979 
t
->
ªq
->
c⁄s
->
îr_ty≥
 = 
SI_ET_QUEUE_ERR
;

980 
t
->
ªq
->
c⁄s
->
îr_loc
 =Å->
§v
;

983 
t
->
§v
->
cou¡îs
.
Áûed_c⁄ns
++;

984 
t
->
be
->
cou¡îs
.
Áûed_c⁄ns
++;

987 
SRV_STATUS_NOSRV
:

989 i‡(!
t
->
ªq
->
c⁄s
->
îr_ty≥
) {

990 
t
->
ªq
->
c⁄s
->
îr_ty≥
 = 
SI_ET_CONN_ERR
;

991 
t
->
ªq
->
c⁄s
->
îr_loc
 = 
NULL
;

994 
t
->
be
->
cou¡îs
.
Áûed_c⁄ns
++;

997 
SRV_STATUS_QUEUED
:

998 
t
->
ªq
->
c⁄s
->
exp
 = 
	`tick_add_if£t
(
now_ms
,Å->
be
->
timeout
.
queue
);

999 
t
->
ªq
->
c⁄s
->
°©e
 = 
SI_ST_QUE
;

1003 
SRV_STATUS_INTERNAL
:

1005 i‡(!
t
->
ªq
->
c⁄s
->
îr_ty≥
) {

1006 
t
->
ªq
->
c⁄s
->
îr_ty≥
 = 
SI_ET_CONN_OTHER
;

1007 
t
->
ªq
->
c⁄s
->
îr_loc
 =Å->
§v
;

1010 i‡(
t
->
§v
)

1011 
	`§v_öc_£ss_˘r
(
t
->
§v
);

1012 i‡(
t
->
§v
)

1013 
t
->
§v
->
cou¡îs
.
Áûed_c⁄ns
++;

1014 
t
->
be
->
cou¡îs
.
Áûed_c⁄ns
++;

1017 i‡(
	`may_dequeue_èsks
(
t
->
§v
,Å->
be
))

1018 
	`¥o˚ss_§v_queue
(
t
->
§v
);

1025 
	}
}

1027 
	$be_dow¡ime
(
¥oxy
 *
px
) {

1028 i‡(
px
->
lb¥m
.
tŸ_weight
 &&Öx->
œ°_ch™ge
 < 
now
.
tv_£c
)

1029  
px
->
down_time
;

1031  
now
.
tv_£c
 - 
px
->
œ°_ch™ge
 +Öx->
down_time
;

1032 
	}
}

1039 c⁄° *
	$backíd_lb_Ægo_°r
(
Ægo
) {

1041 i‡(
Ægo
 =
BE_LB_ALGO_RR
)

1043 i‡(
Ægo
 =
BE_LB_ALGO_SRR
)

1045 i‡(
Ægo
 =
BE_LB_ALGO_LC
)

1047 i‡(
Ægo
 =
BE_LB_ALGO_SH
)

1049 i‡(
Ægo
 =
BE_LB_ALGO_UH
)

1051 i‡(
Ægo
 =
BE_LB_ALGO_PH
)

1053 i‡(
Ægo
 =
BE_LB_ALGO_HH
)

1055 i‡(
Ægo
 =
BE_LB_ALGO_RCH
)

1058  
NULL
;

1059 
	}
}

1068 
	$backíd_∑r£_bÆ™˚
(c⁄° **
¨gs
, *
îr
, 
îæí
, 
¥oxy
 *
cuΩroxy
)

1070 i‡(!*(
¨gs
[0])) {

1072 
cuΩroxy
->
lb¥m
.
Ægo
 &~
BE_LB_ALGO
;

1073 
cuΩroxy
->
lb¥m
.
Ægo
 |
BE_LB_ALGO_RR
;

1077 i‡(!
	`°rcmp
(
¨gs
[0], "roundrobin")) {

1078 
cuΩroxy
->
lb¥m
.
Ægo
 &~
BE_LB_ALGO
;

1079 
cuΩroxy
->
lb¥m
.
Ægo
 |
BE_LB_ALGO_RR
;

1081 i‡(!
	`°rcmp
(
¨gs
[0], "static-rr")) {

1082 
cuΩroxy
->
lb¥m
.
Ægo
 &~
BE_LB_ALGO
;

1083 
cuΩroxy
->
lb¥m
.
Ægo
 |
BE_LB_ALGO_SRR
;

1085 i‡(!
	`°rcmp
(
¨gs
[0], "leastconn")) {

1086 
cuΩroxy
->
lb¥m
.
Ægo
 &~
BE_LB_ALGO
;

1087 
cuΩroxy
->
lb¥m
.
Ægo
 |
BE_LB_ALGO_LC
;

1089 i‡(!
	`°rcmp
(
¨gs
[0], "source")) {

1090 
cuΩroxy
->
lb¥m
.
Ægo
 &~
BE_LB_ALGO
;

1091 
cuΩroxy
->
lb¥m
.
Ægo
 |
BE_LB_ALGO_SH
;

1093 i‡(!
	`°rcmp
(
¨gs
[0], "uri")) {

1094 
¨g
 = 1;

1096 
cuΩroxy
->
lb¥m
.
Ægo
 &~
BE_LB_ALGO
;

1097 
cuΩroxy
->
lb¥m
.
Ægo
 |
BE_LB_ALGO_UH
;

1099 *
¨gs
[
¨g
]) {

1100 i‡(!
	`°rcmp
(
¨gs
[
¨g
], "len")) {

1101 i‡(!*
¨gs
[
¨g
+1] || (
	`©oi
(args[arg+1]) <= 0)) {

1102 
	`¢¥ötf
(
îr
, 
îæí
, "'bÆ™˚ uròÀn'Éx≥˘†®posôivêöãgî (gŸ '%s').", 
¨gs
[
¨g
+1]);

1105 
cuΩroxy
->
uri_Àn_limô
 = 
	`©oi
(
¨gs
[
¨g
+1]);

1106 
¨g
 += 2;

1108 i‡(!
	`°rcmp
(
¨gs
[
¨g
], "depth")) {

1109 i‡(!*
¨gs
[
¨g
+1] || (
	`©oi
(args[arg+1]) <= 0)) {

1110 
	`¢¥ötf
(
îr
, 
îæí
, "'bÆ™˚ uròdïth'Éx≥˘†®posôivêöãgî (gŸ '%s').", 
¨gs
[
¨g
+1]);

1116 
cuΩroxy
->
uri_dús_dïth1
 = 
	`©oi
(
¨gs
[
¨g
+1]) + 1;

1117 
¨g
 += 2;

1120 
	`¢¥ötf
(
îr
, 
îæí
, "'bÆ™˚ uri' o∆yác˚±†∑ømëî†'Àn'ánd 'dïth' (gŸ '%s').", 
¨gs
[
¨g
]);

1125 i‡(!
	`°rcmp
(
¨gs
[0], "url_param")) {

1126 i‡(!*
¨gs
[1]) {

1127 
	`¢¥ötf
(
îr
, 
îæí
, "'balance url_param'Ñequiresán URLÖarameterÇame.");

1130 
cuΩroxy
->
lb¥m
.
Ægo
 &~
BE_LB_ALGO
;

1131 
cuΩroxy
->
lb¥m
.
Ægo
 |
BE_LB_ALGO_PH
;

1133 
	`‰ì
(
cuΩroxy
->
uæ_∑øm_«me
);

1134 
cuΩroxy
->
uæ_∑øm_«me
 = 
	`°rdup
(
¨gs
[1]);

1135 
cuΩroxy
->
uæ_∑øm_Àn
 = 
	`°æí
(
¨gs
[1]);

1136 i‡(*
¨gs
[2]) {

1137 i‡(
	`°rcmp
(
¨gs
[2], "check_post")) {

1138 
	`¢¥ötf
(
îr
, 
îæí
, "'balance url_param' onlyáccepts check_post modifier.");

1141 i‡(*
¨gs
[3]) {

1143 
cuΩroxy
->
uæ_∑øm_po°_limô
 = 
	`°r2ui
(
¨gs
[3]);

1146 i‡(!
cuΩroxy
->
uæ_∑øm_po°_limô
)

1147 
cuΩroxy
->
uæ_∑øm_po°_limô
 = 48;

1148 i‡–
cuΩroxy
->
uæ_∑øm_po°_limô
 < 3 )

1149 
cuΩroxy
->
uæ_∑øm_po°_limô
 = 3;

1152 i‡(!
	`°∫cmp
(
¨gs
[0], "hdr(", 4)) {

1153 c⁄° *
beg
, *
íd
;

1155 
beg
 = 
¨gs
[0] + 4;

1156 
íd
 = 
	`°rchr
(
beg
, ')');

1158 i‡(!
íd
 ||Énd =
beg
) {

1159 
	`¢¥ötf
(
îr
, 
îæí
, "'balance hdr(name)'Ñequiresán http header fieldÇame.");

1163 
cuΩroxy
->
lb¥m
.
Ægo
 &~
BE_LB_ALGO
;

1164 
cuΩroxy
->
lb¥m
.
Ægo
 |
BE_LB_ALGO_HH
;

1166 
	`‰ì
(
cuΩroxy
->
hh_«me
);

1167 
cuΩroxy
->
hh_Àn
 = 
íd
 - 
beg
;

1168 
cuΩroxy
->
hh_«me
 = 
	`my_°∫dup
(
beg
, 
íd
 - beg);

1169 
cuΩroxy
->
hh_m©ch_domaö
 = 0;

1171 i‡(*
¨gs
[1]) {

1172 i‡(
	`°rcmp
(
¨gs
[1], "use_domain_only")) {

1173 
	`¢¥ötf
(
îr
, 
îæí
, "'balance hdr(name)' onlyáccepts 'use_domain_only' modifier.");

1176 
cuΩroxy
->
hh_m©ch_domaö
 = 1;

1180 i‡(!
	`°∫cmp
(
¨gs
[0], "rdp-cookie", 10)) {

1181 
cuΩroxy
->
lb¥m
.
Ægo
 &~
BE_LB_ALGO
;

1182 
cuΩroxy
->
lb¥m
.
Ægo
 |
BE_LB_ALGO_RCH
;

1184 i‡–*(
¨gs
[0] + 10 ) == '(' ) {

1185 c⁄° *
beg
, *
íd
;

1187 
beg
 = 
¨gs
[0] + 11;

1188 
íd
 = 
	`°rchr
(
beg
, ')');

1190 i‡(!
íd
 ||Énd =
beg
) {

1191 
	`¢¥ötf
(
îr
, 
îæí
, "'balanceÑdp-cookie(name)'ÑequiresánÑdp cookieÇame.");

1195 
	`‰ì
(
cuΩroxy
->
hh_«me
);

1196 
cuΩroxy
->
hh_«me
 = 
	`my_°∫dup
(
beg
, 
íd
 - beg);

1197 
cuΩroxy
->
hh_Àn
 = 
íd
 - 
beg
;

1199 i‡–*(
¨gs
[0] + 10 ) == '\0' ) {

1200 
	`‰ì
(
cuΩroxy
->
hh_«me
);

1201 
cuΩroxy
->
hh_«me
 = 
	`°rdup
("mstshash");

1202 
cuΩroxy
->
hh_Àn
 = 
	`°æí
(cuΩroxy->
hh_«me
);

1205 
	`¢¥ötf
(
îr
, 
îæí
, "'balanceÑdp-cookie(name)'ÑequiresánÑdp cookieÇame.");

1210 
	`¢¥ötf
(
îr
, 
îæí
, "'balance' only supports 'roundrobin', 'static-rr', 'leastconn', 'source', 'uri', 'url_param', 'hdr(name)'ánd 'rdp-cookie(name)' options.");

1214 
	}
}

1223 
	$a˛_„tch_nb§v
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

1224 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

1226 
ã°
->
Êags
 = 
ACL_TEST_F_VOL_TEST
;

1227 i‡(
ex¥
->
¨g_Àn
) {

1229 
px
 = 
¥oxy
;Öx;Öx =Öx->
√xt
)

1230 i‡((
px
->
ˇp
 & 
PR_CAP_BE
Ë&& !
	`°rcmp
’x->
id
, 
ex¥
->
¨g
.
°r
))

1233 i‡(!
px
)

1236 i‡(
px
->
§v_a˘
)

1237 
ã°
->
i
 = 
px
->
§v_a˘
;

1238 i‡(
px
->
lb¥m
.
fbck
)

1239 
ã°
->
i
 = 1;

1241 
ã°
->
i
 = 
px
->
§v_bck
;

1244 
	}
}

1250 
	$a˛_„tch_§v_is_up
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

1251 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

1253 
£rvî
 *
§v
 = 
ex¥
->
¨g
.srv;

1255 
ã°
->
Êags
 = 
ACL_TEST_F_VOL_TEST
;

1256 i‡(!(
§v
->
°©e
 & 
SRV_MAINTAIN
) &&

1257 (!(
§v
->
°©e
 & 
SRV_CHECKED
Ë|| (§v->°©ê& 
SRV_RUNNING
)))

1258 
ã°
->
Êags
 |
ACL_TEST_F_SET_RES_PASS
;

1260 
ã°
->
Êags
 |
ACL_TEST_F_SET_RES_FAIL
;

1262 
	}
}

1266 
	$a˛_„tch_c⁄n¶Ÿs
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

1267 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

1269 
£rvî
 *
ôî©‹
;

1270 
ã°
->
Êags
 = 
ACL_TEST_F_VOL_TEST
;

1271 i‡(
ex¥
->
¨g_Àn
) {

1273 
px
 = 
¥oxy
;Öx;Öx =Öx->
√xt
)

1274 i‡((
px
->
ˇp
 & 
PR_CAP_BE
Ë&& !
	`°rcmp
’x->
id
, 
ex¥
->
¨g
.
°r
))

1277 i‡(!
px
)

1280 
ã°
->
i
 = 0;

1281 
ôî©‹
 = 
px
->
§v
;

1282 
ôî©‹
) {

1283 i‡((
ôî©‹
->
°©e
 & 
SRV_RUNNING
) == 0) {

1284 
ôî©‹
 = iãøt‹->
√xt
;

1287 i‡(
ôî©‹
->
maxc⁄n
 =0 || iãøt‹->
maxqueue
 == 0) {

1288 
ã°
->
i
 = -1;

1292 
ã°
->
i
 +(
ôî©‹
->
maxc⁄n
 - iãøt‹->
cur_£ss
)

1293 + (
ôî©‹
->
maxqueue
 - iãøt‹->
nb≥nd
);

1294 
ôî©‹
 = iãøt‹->
√xt
;

1298 
	}
}

1302 
	$a˛_„tch_„_£ss_øã
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

1303 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

1305 
ã°
->
Êags
 = 
ACL_TEST_F_VOL_TEST
;

1306 i‡(
ex¥
->
¨g_Àn
) {

1308 
px
 = 
¥oxy
;Öx;Öx =Öx->
√xt
)

1309 i‡((
px
->
ˇp
 & 
PR_CAP_FE
Ë&& !
	`°rcmp
’x->
id
, 
ex¥
->
¨g
.
°r
))

1312 i‡(!
px
)

1315 
ã°
->
i
 = 
	`ªad_‰eq_˘r
(&
px
->
„_£ss_≥r_£c
);

1317 
	}
}

1321 
	$a˛_„tch_be_£ss_øã
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

1322 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

1324 
ã°
->
Êags
 = 
ACL_TEST_F_VOL_TEST
;

1325 i‡(
ex¥
->
¨g_Àn
) {

1327 
px
 = 
¥oxy
;Öx;Öx =Öx->
√xt
)

1328 i‡((
px
->
ˇp
 & 
PR_CAP_BE
Ë&& !
	`°rcmp
’x->
id
, 
ex¥
->
¨g
.
°r
))

1331 i‡(!
px
)

1334 
ã°
->
i
 = 
	`ªad_‰eq_˘r
(&
px
->
be_£ss_≥r_£c
);

1336 
	}
}

1340 
	$a˛_„tch_„_c⁄n
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

1341 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

1343 
ã°
->
Êags
 = 
ACL_TEST_F_VOL_TEST
;

1344 i‡(
ex¥
->
¨g_Àn
) {

1346 
px
 = 
¥oxy
;Öx;Öx =Öx->
√xt
)

1347 i‡((
px
->
ˇp
 & 
PR_CAP_FE
Ë&& !
	`°rcmp
’x->
id
, 
ex¥
->
¨g
.
°r
))

1350 i‡(!
px
)

1353 
ã°
->
i
 = 
px
->
„c⁄n
;

1355 
	}
}

1359 
	$a˛_„tch_be_c⁄n
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

1360 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

1362 
ã°
->
Êags
 = 
ACL_TEST_F_VOL_TEST
;

1363 i‡(
ex¥
->
¨g_Àn
) {

1365 
px
 = 
¥oxy
;Öx;Öx =Öx->
√xt
)

1366 i‡((
px
->
ˇp
 & 
PR_CAP_BE
Ë&& !
	`°rcmp
’x->
id
, 
ex¥
->
¨g
.
°r
))

1369 i‡(!
px
)

1372 
ã°
->
i
 = 
px
->
bec⁄n
;

1374 
	}
}

1378 
	$a˛_„tch_queue_size
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

1379 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

1381 
ã°
->
Êags
 = 
ACL_TEST_F_VOL_TEST
;

1382 i‡(
ex¥
->
¨g_Àn
) {

1384 
px
 = 
¥oxy
;Öx;Öx =Öx->
√xt
)

1385 i‡((
px
->
ˇp
 & 
PR_CAP_BE
Ë&& !
	`°rcmp
’x->
id
, 
ex¥
->
¨g
.
°r
))

1388 i‡(!
px
)

1391 
ã°
->
i
 = 
px
->
tŸ≥nd
;

1393 
	}
}

1402 
	$a˛_„tch_avg_queue_size
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

1403 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

1405 
nb§v
;

1407 
ã°
->
Êags
 = 
ACL_TEST_F_VOL_TEST
;

1408 i‡(
ex¥
->
¨g_Àn
) {

1410 
px
 = 
¥oxy
;Öx;Öx =Öx->
√xt
)

1411 i‡((
px
->
ˇp
 & 
PR_CAP_BE
Ë&& !
	`°rcmp
’x->
id
, 
ex¥
->
¨g
.
°r
))

1414 i‡(!
px
)

1417 i‡(
px
->
§v_a˘
)

1418 
nb§v
 = 
px
->
§v_a˘
;

1419 i‡(
px
->
lb¥m
.
fbck
)

1420 
nb§v
 = 1;

1422 
nb§v
 = 
px
->
§v_bck
;

1424 i‡(
nb§v
 > 0)

1425 
ã°
->
i
 = (
px
->
tŸ≥nd
 + 
nb§v
 - 1) /Çbsrv;

1427 
ã°
->
i
 = 
px
->
tŸ≥nd
 * 2;

1430 
	}
}

1433 
a˛_kw_li°
 
	ga˛_kws
 = {{ },{

1434 { "nb§v", 
a˛_∑r£_öt
, 
a˛_„tch_nb§v
, 
a˛_m©ch_öt
, 
ACL_USE_NOTHING
 },

1435 { "c⁄n¶Ÿs", 
a˛_∑r£_öt
, 
a˛_„tch_c⁄n¶Ÿs
, 
a˛_m©ch_öt
, 
ACL_USE_NOTHING
 },

1436 { "„_£ss_øã", 
a˛_∑r£_öt
, 
a˛_„tch_„_£ss_øã
, 
a˛_m©ch_öt
, 
ACL_USE_NOTHING
 },

1437 { "be_£ss_øã", 
a˛_∑r£_öt
, 
a˛_„tch_be_£ss_øã
, 
a˛_m©ch_öt
, 
ACL_USE_NOTHING
 },

1438 { "„_c⁄n", 
a˛_∑r£_öt
, 
a˛_„tch_„_c⁄n
, 
a˛_m©ch_öt
, 
ACL_USE_NOTHING
 },

1439 { "be_c⁄n", 
a˛_∑r£_öt
, 
a˛_„tch_be_c⁄n
, 
a˛_m©ch_öt
, 
ACL_USE_NOTHING
 },

1440 { "queue", 
a˛_∑r£_öt
, 
a˛_„tch_queue_size
, 
a˛_m©ch_öt
, 
ACL_USE_NOTHING
 },

1441 { "avg_queue", 
a˛_∑r£_öt
, 
a˛_„tch_avg_queue_size
, 
a˛_m©ch_öt
, 
ACL_USE_NOTHING
 },

1442 { "§v_is_up", 
a˛_∑r£_nŸhög
, 
a˛_„tch_§v_is_up
, 
a˛_m©ch_nŸhög
, 
ACL_USE_NOTHING
 },

1443 { 
NULL
, NULL, NULL, NULL },

1447 
__©åibuã__
((
c⁄°ru˘‹
))

1448 
	$__backíd_öô
()

1450 
	`a˛_ªgi°î_keyw‹ds
(&
a˛_kws
);

1451 
	}
}

	@src/base64.c

14 
	~<°dlib.h
>

15 
	~<°rög.h
>

17 
	~<comm⁄/ba£64.h
>

18 
	~<comm⁄/c⁄fig.h
>

20 
	#B64BASE
 '#'

	)

21 
	#B64CMIN
 '+'

	)

22 
	#B64CMAX
 'z'

	)

23 
	#B64PADV
 64

	)

25 c⁄° 
	gba£64èb
[65]="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";

26 c⁄° 
	gba£64ªv
[]="b###cXYZ[\\]^_`a###d###$%&'()*+,-./0123456789:;<=######>?@ABCDEFGHIJKLMNOPQRSTUVW";

33 
	$a2ba£64
(*
ö
, 
ûí
, *
out
, 
ﬁí
)

35 
c⁄vÀn
;

37 
c⁄vÀn
 = ((
ûí
 + 2) / 3) * 4;

39 i‡(
c⁄vÀn
 >
ﬁí
)

43 
ûí
 >= 3) {

44 
out
[0] = 
ba£64èb
[((()
ö
[0]) >> 2)];

45 
out
[1] = 
ba£64èb
[((()
ö
[0] & 0x03) << 4) | ((()in[1]) >> 4)];

46 
out
[2] = 
ba£64èb
[((()
ö
[1] & 0x0F) << 2) | ((()in[2]) >> 6)];

47 
out
[3] = 
ba£64èb
[((()
ö
[2] & 0x3F))];

48 
out
 += 4;

49 
ö
 +3; 
ûí
 -= 3;

52 i‡(!
ûí
) {

53 
out
[0] = '\0';

55 
out
[0] = 
ba£64èb
[(()
ö
[0]) >> 2];

56 i‡(
ûí
 == 1) {

57 
out
[1] = 
ba£64èb
[(()
ö
[0] & 0x03) << 4];

58 
out
[2] = '=';

60 
out
[1] = 
ba£64èb
[((()
ö
[0] & 0x03) << 4) |

61 ((()
ö
[1]) >> 4)];

62 
out
[2] = 
ba£64èb
[(()
ö
[1] & 0x0F) << 2];

64 
out
[3] = '=';

65 
out
[4] = '\0';

68  
c⁄vÀn
;

69 
	}
}

77 
	$ba£64dec
(c⁄° *
ö
, 
size_t
 
ûí
, *
out
, size_à
ﬁí
) {

79 
t
[4];

80 sig√d 
b
;

81 
c⁄vÀn
 = 0, 
i
 = 0, 
∑d
 = 0;

83 i‡(
ûí
 % 4)

86 i‡(
ﬁí
 < 
ûí
 / 4 * 3)

89 
ûí
) {

92 
b
 = (sig√d )*
ö
 - 
B64CMIN
;

93 i‡(()
b
 > (
B64CMAX
-
B64CMIN
))

96 
b
 = 
ba£64ªv
[b] - 
B64BASE
 - 1;

99 i‡(
b
 < 0)

103 i‡(
∑d
 && 
b
 !
B64PADV
)

107 i‡(
∑d
 && 
i
 < 2)

110 i‡(
b
 =
B64PADV
)

111 
∑d
++;

113 
t
[
i
++] = 
b
;

115 i‡(
i
 == 4) {

123 
out
[
c⁄vÀn
] = ((
t
[0] << 2) + (t[1] >> 4));

124 
out
[
c⁄vÀn
+1] = ((
t
[1] << 4) + (t[2] >> 2));

125 
out
[
c⁄vÀn
+2] = ((
t
[2] << 6) + (t[3] >> 0));

127 
c⁄vÀn
 +3-
∑d
;

129 
∑d
 = 
i
 = 0;

132 
ö
++;

133 
ûí
--;

136  
c⁄vÀn
;

137 
	}
}

147 c⁄° *
	$s30tob64
(
ö
, *
out
)

149 
i
;

150 
i
 = 0; i < 5; i++) {

151 
out
[
i
] = 
ba£64èb
[(
ö
 >> 24) & 0x3F];

152 
ö
 <<= 6;

154 
out
[5] = '\0';

155  
out
;

156 
	}
}

163 
	$b64tos30
(c⁄° *
ö
)

165 
i
, 
out
;

166 sig√d 
b
;

168 
out
 = 0;

169 
i
 = 0; i < 5; i++) {

170 
b
 = (sig√d )
ö
[
i
] - 
B64CMIN
;

171 i‡(()
b
 > (
B64CMAX
 - 
B64CMIN
))

174 
b
 = 
ba£64ªv
[b] - 
B64BASE
 - 1;

175 i‡(
b
 < 0)

178 i‡(
b
 =
B64PADV
)

181 
out
 = (ouà<< 6Ë+ 
b
;

183  
out
;

184 
	}
}

	@src/buffers.c

13 
	~<˘y≥.h
>

14 
	~<°d¨g.h
>

15 
	~<°dio.h
>

16 
	~<°rög.h
>

18 
	~<comm⁄/c⁄fig.h
>

19 
	~<comm⁄/mem‹y.h
>

20 
	~<¥Ÿo/buf„rs.h
>

21 
	~<ty≥s/globÆ.h
>

23 
poﬁ_hód
 *
	gpoﬁ2_buf„r
;

27 
	$öô_buf„r
()

29 
poﬁ2_buf„r
 = 
	`¸óã_poﬁ
("buf„r", (
buf„r
Ë+ 
globÆ
.
tu√
.
bufsize
, 
MEM_F_SHARED
);

30  
poﬁ2_buf„r
 !
NULL
;

31 
	}
}

39 
	$buf„r_wrôe
(
buf„r
 *
buf
, c⁄° *
msg
, 
Àn
)

41 
max
;

43 i‡(
Àn
 == 0)

46 i‡(
Àn
 > 
buf
->
size
) {

55 
max
 = 
	`buf„r_ªÆign
(
buf
);

57 i‡(
Àn
 > 
max
)

58  
max
;

60 
	`mem˝y
(
buf
->
r
, 
msg
, 
Àn
);

61 
buf
->
l
 +
Àn
;

62 
buf
->
£nd_max
 +
Àn
;

63 
buf
->
r
 +
Àn
;

64 
buf
->
tŸÆ
 +
Àn
;

65 i‡(
buf
->
r
 =buf->
d©a
 + buf->
size
)

66 
buf
->
r
 = buf->
d©a
;

68 
buf
->
Êags
 &~(
BF_OUT_EMPTY
|
BF_FULL
);

69 i‡(
buf
->
l
 >
	`buf„r_max_Àn
(buf))

70 
buf
->
Êags
 |
BF_FULL
;

73 
	}
}

82 
	$buf„r_„ed2
(
buf„r
 *
buf
, c⁄° *
°r
, 
Àn
)

84 
max
;

86 i‡(
Àn
 == 0)

89 i‡(
Àn
 > 
	`buf„r_max_Àn
(
buf
)) {

96 
max
 = 
	`buf„r_c⁄tig_•a˚
(
buf
);

98 i‡(
Àn
 > 
max
)

99  
max
;

101 
	`mem˝y
(
buf
->
r
, 
°r
, 
Àn
);

102 
buf
->
l
 +
Àn
;

103 
buf
->
r
 +
Àn
;

104 
buf
->
tŸÆ
 +
Àn
;

105 i‡(
buf
->
to_f‹w¨d
) {

106 
fwd
 = 
Àn
;

107 i‡(
buf
->
to_f‹w¨d
 !
BUF_INFINITE_FORWARD
) {

108 i‡(
fwd
 > 
buf
->
to_f‹w¨d
)

109 
fwd
 = 
buf
->
to_f‹w¨d
;

110 
buf
->
to_f‹w¨d
 -
fwd
;

112 
buf
->
£nd_max
 +
fwd
;

113 
buf
->
Êags
 &~
BF_OUT_EMPTY
;

116 i‡(
buf
->
r
 =buf->
d©a
 + buf->
size
)

117 
buf
->
r
 = buf->
d©a
;

119 
buf
->
Êags
 &~
BF_FULL
;

120 i‡(
buf
->
l
 >
	`buf„r_max_Àn
(buf))

121 
buf
->
Êags
 |
BF_FULL
;

124 
buf
->
Êags
 |
BF_READ_PARTIAL
;

126 
	}
}

138 
	$buf„r_si_≥eklöe
(
buf„r
 *
buf
, *
°r
, 
Àn
)

140 
ªt
, 
max
;

141 *
p
;

143 
ªt
 = 0;

144 
max
 = 
Àn
;

145 i‡(!
buf
->
£nd_max
) {

146 i‡(
buf
->
Êags
 & (
BF_SHUTW
|
BF_SHUTW_NOW
))

147 
ªt
 = -1;

148 
out
;

151 
p
 = 
buf
->
w
;

153 i‡(
max
 > 
buf
->
£nd_max
) {

154 
max
 = 
buf
->
£nd_max
;

155 
°r
[
max
-1] = 0;

157 
max
) {

158 *
°r
++ = *
p
;

159 
ªt
++;

160 
max
--;

162 i‡(*
p
 == '\n')

164 
p
++;

165 i‡(
p
 =
buf
->
d©a
 + buf->
size
)

166 
p
 = 
buf
->
d©a
;

168 i‡(
ªt
 > 0 &&Ñë < 
Àn
 &&Ñë < 
buf
->
£nd_max
 &&

169 *(
°r
-1) != '\n' &&

170 !(
buf
->
Êags
 & (
BF_SHUTW
|
BF_SHUTW_NOW
)))

171 
ªt
 = 0;

172 
out
:

173 i‡(
max
)

174 *
°r
 = 0;

175  
ªt
;

176 
	}
}

188 
	$buf„r_ª∂a˚
(
buf„r
 *
b
, *
pos
, *
íd
, c⁄° *
°r
)

190 
dñè
;

191 
Àn
;

193 
Àn
 = 
	`°æí
(
°r
);

194 
dñè
 = 
Àn
 - (
íd
 - 
pos
);

196 i‡(
dñè
 + 
b
->
r
 >b->
d©a
 + b->
size
)

199 i‡(
dñè
 + 
b
->
r
 > b->
w
 && b->w >b->∏&& b->
l
)

203 
	`memmove
(
íd
 + 
dñè
,Énd, 
b
->
r
 -Énd);

206 
	`mem˝y
(
pos
, 
°r
,
Àn
);

209 i‡(
b
->
r
 > 
pos
Ëb->∏+
dñè
;

210 i‡(
b
->
Ã
 > 
pos
Ëb->Ã +
dñè
;

211 
b
->
l
 +
dñè
;

213 
b
->
Êags
 &~
BF_FULL
;

214 i‡(
b
->
l
 == 0)

215 
b
->
r
 = b->
w
 = b->
Ã
 = b->
d©a
;

216 i‡(
b
->
l
 >
	`buf„r_max_Àn
(b))

217 
b
->
Êags
 |
BF_FULL
;

219  
dñè
;

220 
	}
}

226 
	$buf„r_ª∂a˚2
(
buf„r
 *
b
, *
pos
, *
íd
, c⁄° *
°r
, 
Àn
)

228 
dñè
;

230 
dñè
 = 
Àn
 - (
íd
 - 
pos
);

232 i‡(
dñè
 + 
b
->
r
 >b->
d©a
 + b->
size
)

235 i‡(
dñè
 + 
b
->
r
 > b->
w
 && b->w >b->∏&& b->
l
)

239 
	`memmove
(
íd
 + 
dñè
,Énd, 
b
->
r
 -Énd);

242 i‡(
Àn
)

243 
	`mem˝y
(
pos
, 
°r
, 
Àn
);

246 i‡(
b
->
r
 > 
pos
Ëb->∏+
dñè
;

247 i‡(
b
->
Ã
 > 
pos
Ëb->Ã +
dñè
;

248 
b
->
l
 +
dñè
;

250 
b
->
Êags
 &~
BF_FULL
;

251 i‡(
b
->
l
 == 0)

252 
b
->
r
 = b->
w
 = b->
Ã
 = b->
d©a
;

253 i‡(
b
->
l
 >
	`buf„r_max_Àn
(b))

254 
b
->
Êags
 |
BF_FULL
;

256  
dñè
;

257 
	}
}

269 
	$buf„r_ö£π_löe2
(
buf„r
 *
b
, *
pos
, c⁄° *
°r
, 
Àn
)

271 
dñè
;

273 
dñè
 = 
Àn
 + 2;

275 i‡(
dñè
 + 
b
->
r
 >b->
d©a
 + b->
size
)

279 
	`memmove
(
pos
 + 
dñè
,Öos, 
b
->
r
 -Öos);

282 i‡(
Àn
 && 
°r
) {

283 
	`mem˝y
(
pos
, 
°r
, 
Àn
);

284 
pos
[
Àn
] = '\r';

285 
pos
[
Àn
 + 1] = '\n';

289 i‡(
b
->
r
 > 
pos
Ëb->∏+
dñè
;

290 i‡(
b
->
Ã
 > 
pos
Ëb->Ã +
dñè
;

291 
b
->
l
 +
dñè
;

293 
b
->
Êags
 &~
BF_FULL
;

294 i‡(
b
->
l
 >
	`buf„r_max_Àn
(b))

295 
b
->
Êags
 |
BF_FULL
;

297  
dñè
;

298 
	}
}

307 
	$buf„r_boun˚_ªÆign
(
buf„r
 *
buf
)

309 
adv™˚
, 
to_move
;

310 *
‰om
, *
to
;

312 
adv™˚
 = 
buf
->
d©a
 + buf->
size
 - buf->
w
;

313 i‡(!
adv™˚
)

316 
‰om
 = 
buf
->
w
;

317 
to_move
 = 
buf
->
l
;

318 
to_move
) {

319 
œ°
, 
ßve
;

321 
œ°
 = *
‰om
;

322 
to
 = 
‰om
 + 
adv™˚
;

323 i‡(
to
 >
buf
->
d©a
 + buf->
size
)

324 
to
 -
buf
->
size
;

327 
ßve
 = *
to
;

328 *
to
 = 
œ°
;

329 
œ°
 = 
ßve
;

330 
to_move
--;

331 i‡(!
to_move
)

335 i‡(
to
 =
‰om
)

342 i‡(
‰om
 > 
buf
->
r
) {

343 i‡(
to
 >
buf
->
r
 &&Åÿ< 
‰om
)

345 } i‡(
‰om
 < 
buf
->
r
) {

346 i‡(
to
 < 
‰om
 ||Åÿ>
buf
->
r
)

351 
to
 +
adv™˚
;

352 i‡(
to
 >
buf
->
d©a
 + buf->
size
)

353 
to
 -
buf
->
size
;

356 
‰om
++;

357 i‡(
‰om
 >
buf
->
d©a
 + buf->
size
)

358 
‰om
 -
buf
->
size
;

360 
	}
}

368 
	$chunk_¥ötf
(
chunk
 *
chk
, c⁄° *
fmt
, ...)

370 
va_li°
 
¨gp
;

371 
ªt
;

373 i‡(!
chk
->
°r
 || !chk->
size
)

376 
	`va_°¨t
(
¨gp
, 
fmt
);

377 
ªt
 = 
	`v¢¥ötf
(
chk
->
°r
 + chk->
Àn
, chk->
size
 - chk->Àn, 
fmt
, 
¨gp
);

378 i‡(
ªt
 >
chk
->
size
 - chk->
Àn
)

380 
chk
->
°r
[chk->
Àn
] = 0;

382 
chk
->
Àn
 +
ªt
;

383 
	`va_íd
(
¨gp
);

384  
chk
->
Àn
;

385 
	}
}

392 
	$chunk_htmÀncode
(
chunk
 *
d°
, chunk *
§c
) {

394 
i
, 
l
;

395 
ﬁí
, 
‰ì
;

396 
c
;

398 
ﬁí
 = 
d°
->
Àn
;

400 
i
 = 0; i < 
§c
->
Àn
; i++) {

401 
‰ì
 = 
d°
->
size
 - d°->
Àn
;

403 i‡(!
‰ì
) {

404 
d°
->
Àn
 = 
ﬁí
;

405  
d°
->
Àn
;

408 
c
 = 
§c
->
°r
[
i
];

410 i‡(!
	`ißscii
(
c
Ë|| !
	`i•röt
(()c) || c == '&' || c == '"' || c == '\'' || c == '<' || c == '>') {

411 
l
 = 
	`¢¥ötf
(
d°
->
°r
 + d°->
Àn
, 
‰ì
, "&#%u;", ()
c
);

413 i‡(
‰ì
 < 
l
) {

414 
d°
->
Àn
 = 
ﬁí
;

415  
d°
->
Àn
;

418 
d°
->
Àn
 +
l
;

420 
d°
->
°r
[d°->
Àn
] = 
c
;

421 
d°
->
Àn
++;

425  
d°
->
Àn
;

426 
	}
}

433 
	$chunk_asciõncode
(
chunk
 *
d°
, chunk *
§c
, 
qc
) {

434 
i
, 
l
;

435 
ﬁí
, 
‰ì
;

436 
c
;

438 
ﬁí
 = 
d°
->
Àn
;

440 
i
 = 0; i < 
§c
->
Àn
; i++) {

441 
‰ì
 = 
d°
->
size
 - d°->
Àn
;

443 i‡(!
‰ì
) {

444 
d°
->
Àn
 = 
ﬁí
;

445  
d°
->
Àn
;

448 
c
 = 
§c
->
°r
[
i
];

450 i‡(!
	`ißscii
(
c
Ë|| !
	`i•röt
(()cË|| c ='<' || c ='>' || c =
qc
) {

451 
l
 = 
	`¢¥ötf
(
d°
->
°r
 + d°->
Àn
, 
‰ì
, "<%02X>", ()
c
);

453 i‡(
‰ì
 < 
l
) {

454 
d°
->
Àn
 = 
ﬁí
;

455  
d°
->
Àn
;

458 
d°
->
Àn
 +
l
;

460 
d°
->
°r
[d°->
Àn
] = 
c
;

461 
d°
->
Àn
++;

465  
d°
->
Àn
;

466 
	}
}

471 
	$buf„r_dump
(
FILE
 *
o
, 
buf„r
 *
b
, 
‰om
, 
to
)

473 
	`Ârötf
(
o
, "Dumpög buf„∏%p\n", 
b
);

474 
	`Ârötf
(
o
, " data=%pÜ=%dÑ=%p w=%pÜr=%p\n",

475 
b
->
d©a
, b->
l
, b->
r
, b->
w
, b->
Ã
);

477 i‡(!
to
 ||Åÿ> 
b
->
l
)

478 
to
 = 
b
->
l
;

480 
	`Ârötf
(
o
, "Dumpög c⁄ã¡†‰om byã %dÅÿbyã %d\n", 
‰om
, 
to
);

481 ; 
‰om
 < 
to
; from++) {

482 i‡((
‰om
 & 15) == 0)

483 
	`Ârötf
(
o
, " %04x: ", 
‰om
);

484 
	`Ârötf
(
o
, "%02x ", 
b
->
d©a
[
‰om
]);

485 i‡((
‰om
 & 15) == 7)

486 
	`Ârötf
(
o
, "- ");

487 i‡(((
‰om
 & 15Ë=15Ë&& (‰om !
to
-1))

488 
	`Ârötf
(
o
, "\n");

490 
	`Ârötf
(
o
, "\n--\n");

491 
	}
}

	@src/cfgparse.c

13 
	~<°dio.h
>

14 
	~<°dlib.h
>

15 
	~<°rög.h
>

16 
	~<√tdb.h
>

17 
	~<˘y≥.h
>

18 
	~<pwd.h
>

19 
	~<gΩ.h
>

20 
	~<î∫o.h
>

21 
	~<sys/ty≥s.h
>

22 
	~<sys/°©.h
>

23 
	~<f˙é.h
>

24 
	~<uni°d.h
>

26 
	~<√töë/t˝.h
>

28 
	~<comm⁄/cfg∑r£.h
>

29 
	~<comm⁄/c⁄fig.h
>

30 
	~<comm⁄/îr‹s.h
>

31 
	~<comm⁄/mem‹y.h
>

32 
	~<comm⁄/°™d¨d.h
>

33 
	~<comm⁄/time.h
>

34 
	~<comm⁄/uri_auth.h
>

36 
	~<ty≥s/ˇ±uª.h
>

37 
	~<ty≥s/globÆ.h
>

39 
	~<¥Ÿo/a˛.h
>

40 
	~<¥Ÿo/auth.h
>

41 
	~<¥Ÿo/backíd.h
>

42 
	~<¥Ÿo/buf„rs.h
>

43 
	~<¥Ÿo/checks.h
>

44 
	~<¥Ÿo/dump°©s.h
>

45 
	~<¥Ÿo/hâ≥º.h
>

46 
	~<¥Ÿo/lb_chash.h
>

47 
	~<¥Ÿo/lb_fwlc.h
>

48 
	~<¥Ÿo/lb_fwº.h
>

49 
	~<¥Ÿo/lb_m≠.h
>

50 
	~<¥Ÿo/log.h
>

51 
	~<¥Ÿo/∑âîn.h
>

52 
	~<¥Ÿo/p‹t_ønge.h
>

53 
	~<¥Ÿo/¥Ÿocﬁs.h
>

54 
	~<¥Ÿo/¥Ÿo_t˝.h
>

55 
	~<¥Ÿo/¥Ÿo_hâp.h
>

56 
	~<¥Ÿo/¥oxy.h
>

57 
	~<¥Ÿo/£rvî.h
>

58 
	~<¥Ÿo/£ssi⁄.h
>

59 
	~<¥Ÿo/èsk.h
>

60 
	~<¥Ÿo/°ick_èbÀ.h
>

68 c⁄° 
	gs¶v3_˛õ¡_hñlo_pkt
[] = {

94 
	ekw_mod
 {

95 
	mKWM_STD
 = 0,

96 
	mKWM_NO
,

97 
	mKWM_DEF
,

101 
	scfg_›t
 {

102 c⁄° *
	m«me
;

103 
	mvÆ
;

104 
	mˇp
;

105 
	mchecks
;

106 
	mmode
;

110 c⁄° 
cfg_›t
 
	gcfg_›ts
[] =

112 { "ab‹t⁄˛o£", 
PR_O_ABRT_CLOSE
, 
PR_CAP_BE
, 0, 0 },

113 { "Ælbackups", 
PR_O_USE_ALL_BK
, 
PR_CAP_BE
, 0, 0 },

114 { "checkˇche", 
PR_O_CHK_CACHE
, 
PR_CAP_BE
, 0, 
PR_MODE_HTTP
 },

115 { "˛ô˝ka", 
PR_O_TCP_CLI_KA
, 
PR_CAP_FE
, 0, 0 },

116 { "c⁄t°©s", 
PR_O_CONTSTATS
, 
PR_CAP_FE
, 0, 0 },

117 { "d⁄éognuŒ", 
PR_O_NULLNOLOG
, 
PR_CAP_FE
, 0, 0 },

118 { "f‹˚˛o£", 
PR_O_FORCE_CLO
, 
PR_CAP_FE
 | 
PR_CAP_BE
, 0, 
PR_MODE_HTTP
 },

119 { "hâp_¥oxy", 
PR_O_HTTP_PROXY
, 
PR_CAP_FE
 | 
PR_CAP_BE
, 0, 
PR_MODE_HTTP
 },

120 { "hâp˛o£", 
PR_O_HTTP_CLOSE
, 
PR_CAP_FE
 | 
PR_CAP_BE
, 0, 
PR_MODE_HTTP
 },

121 { "kì∑live", 
PR_O_KEEPALIVE
, 
PR_CAP_NONE
, 0, 
PR_MODE_HTTP
 },

122 { "hâp-£rvî-˛o£", 
PR_O_SERVER_CLO
, 
PR_CAP_FE
 | 
PR_CAP_BE
, 0, 
PR_MODE_HTTP
 },

123 { "logaßp", 
PR_O_LOGASAP
, 
PR_CAP_FE
, 0, 0 },

124 { "nﬁögî", 
PR_O_TCP_NOLING
, 
PR_CAP_FE
 | 
PR_CAP_BE
, 0, 0 },

125 { "≥rsi°", 
PR_O_PERSIST
, 
PR_CAP_BE
, 0, 0 },

126 { "ªdi•©ch", 
PR_O_REDISP
, 
PR_CAP_BE
, 0, 0 },

127 { "§vt˝ka", 
PR_O_TCP_SRV_KA
, 
PR_CAP_BE
, 0, 0 },

128 #ifde‡
TPROXY


129 { "å™•¨ít", 
PR_O_TRANSP
, 
PR_CAP_BE
, 0, 0 },

132 { 
NULL
, 0, 0, 0, 0 }

136 c⁄° 
cfg_›t
 
	gcfg_›ts2
[] =

138 #ifde‡
CONFIG_HAP_LINUX_SPLICE


139 { "•li˚-ªque°", 
PR_O2_SPLIC_REQ
, 
PR_CAP_FE
|
PR_CAP_BE
, 0, 0 },

140 { "•li˚-ª•⁄£", 
PR_O2_SPLIC_RTR
, 
PR_CAP_FE
|
PR_CAP_BE
, 0, 0 },

141 { "•li˚-auto", 
PR_O2_SPLIC_AUT
, 
PR_CAP_FE
|
PR_CAP_BE
, 0, 0 },

143 { "ac˚±-övÆid-hâp-ªque°", 
PR_O2_REQBUG_OK
, 
PR_CAP_FE
, 0, 
PR_MODE_HTTP
 },

144 { "ac˚±-övÆid-hâp-ª•⁄£", 
PR_O2_RSPBUG_OK
, 
PR_CAP_BE
, 0, 
PR_MODE_HTTP
 },

145 { "d⁄éog-n‹mÆ", 
PR_O2_NOLOGNORM
, 
PR_CAP_FE
, 0, 0 },

146 { "log-£∑øã-îr‹s", 
PR_O2_LOGERRORS
, 
PR_CAP_FE
, 0, 0 },

147 { "log-hó…h-checks", 
PR_O2_LOGHCHKS
, 
PR_CAP_BE
, 0, 0 },

148 { "sockë-°©s", 
PR_O2_SOCKSTAT
, 
PR_CAP_FE
, 0, 0 },

149 { "t˝-sm¨t-ac˚±", 
PR_O2_SMARTACC
, 
PR_CAP_FE
, 0, 0 },

150 { "t˝-sm¨t-c⁄√˘", 
PR_O2_SMARTCON
, 
PR_CAP_BE
, 0, 0 },

151 { "ödïíd™t-°ªams", 
PR_O2_INDEPSTR
, 
PR_CAP_FE
|
PR_CAP_BE
, 0, 0 },

152 { "hâp-u£-¥oxy-hódî", 
PR_O2_USE_PXHDR
, 
PR_CAP_FE
, 0, 
PR_MODE_HTTP
 },

153 { "hâp-¥ëíd-kì∑live", 
PR_O2_FAKE_KA
, 
PR_CAP_FE
|
PR_CAP_BE
, 0, 
PR_MODE_HTTP
 },

154 { 
NULL
, 0, 0, 0 }

157 *
	gcur£˘i⁄
 = 
NULL
;

158 
¥oxy
 
	gdeÂroxy
;

159 
	gcfg_maxpc⁄n
 = 
DEFAULT_MAXCONN
;

160 
	gcfg_maxc⁄n
 = 0;

163 
cfg_kw_li°
 
	gcfg_keyw‹ds
 = {

164 .
li°
 = 
LIST_HEAD_INIT
(
cfg_keyw‹ds
.list)

176 
	$°r2li°íî
(*
°r
, 
¥oxy
 *
cuΩroxy
)

178 
li°íî
 *
l
;

179 *
c
, *
√xt
, *
ønge
, *
dup°r
;

180 
p‹t
, 
íd
;

182 
√xt
 = 
dup°r
 = 
	`°rdup
(
°r
);

184 
√xt
 && *next) {

185 
sockaddr_°‹age
 
ss
;

187 
°r
 = 
√xt
;

189 i‡((
√xt
 = 
	`°rchr
(
°r
, ',')Ë!
NULL
) {

190 *
√xt
++ = 0;

194 i‡((
ønge
 = 
	`°ºchr
(
°r
, ':')Ë=
NULL
) {

195 
	`AÀπ
("MissögÖ‹ànumbî: '%s'\n", 
°r
);

196 
Áû
;

199 *
ønge
++ = 0;

201 i‡(
	`°ºchr
(
°r
, ':'Ë!
NULL
) {

203 
	`mem£t
(&
ss
, 0, (ss));

204 
ss
.
ss_Ámûy
 = 
AF_INET6
;

206 i‡(!
	`öë_±⁄
(
ss
.
ss_Ámûy
, 
°r
, &((
sockaddr_ö6
 *)&ss)->
sö6_addr
)) {

207 
	`AÀπ
("InvÆid sîvîáddªss: '%s'\n", 
°r
);

208 
Áû
;

212 
	`mem£t
(&
ss
, 0, (ss));

213 
ss
.
ss_Ámûy
 = 
AF_INET
;

215 i‡(*
°r
 == '*' || *str == '\0') {

216 ((
sockaddr_ö
 *)&
ss
)->
sö_addr
.
s_addr
 = 
INADDR_ANY
;

218 i‡(!
	`öë_±⁄
(
ss
.
ss_Ámûy
, 
°r
, &((
sockaddr_ö
 *)&ss)->
sö_addr
)) {

219 
ho°ít
 *
he
;

221 i‡((
he
 = 
	`gëho°by«me
(
°r
)Ë=
NULL
) {

222 
	`AÀπ
("InvÆid sîvîÇame: '%s'\n", 
°r
);

223 
Áû
;

226 ((
sockaddr_ö
 *)&
ss
)->
sö_addr
 =

227 *(
ö_addr
 *Ë*(
he
->
h_addr_li°
);

232 i‡((
c
 = 
	`°rchr
(
ønge
, '-')Ë!
NULL
) {

233 *
c
++ = 0;

234 
íd
 = 
	`©ﬁ
(
c
);

237 
íd
 = 
	`©ﬁ
(
ønge
);

240 
p‹t
 = 
	`©ﬁ
(
ønge
);

242 i‡(
p‹t
 < 1 ||Öort > 65535) {

243 
	`AÀπ
("InvÆidÖ‹à'%d' s≥cifõd f‹áddªs†'%s'.\n", 
p‹t
, 
°r
);

244 
Áû
;

247 i‡(
íd
 < 1 ||Énd > 65535) {

248 
	`AÀπ
("InvÆidÖ‹à'%d' s≥cifõd f‹áddªs†'%s'.\n", 
íd
, 
°r
);

249 
Áû
;

252 ; 
p‹t
 <
íd
;Öort++) {

253 
l
 = (
li°íî
 *)
	`ˇŒoc
(1, (listener));

254 
l
->
√xt
 = 
cuΩroxy
->
li°í
;

255 
cuΩroxy
->
li°í
 = 
l
;

257 
l
->
fd
 = -1;

258 
l
->
addr
 = 
ss
;

259 
l
->
°©e
 = 
LI_INIT
;

261 i‡(
ss
.
ss_Ámûy
 =
AF_INET6
) {

262 ((
sockaddr_ö6
 *)(&
l
->
addr
))->
sö6_p‹t
 = 
	`ht⁄s
(
p‹t
);

263 
	`t˝v6_add_li°íî
(
l
);

265 ((
sockaddr_ö
 *)(&
l
->
addr
))->
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

266 
	`t˝v4_add_li°íî
(
l
);

269 
li°íîs
++;

272 
	`‰ì
(
dup°r
);

274 
Áû
:

275 
	`‰ì
(
dup°r
);

277 
	}
}

285 
	$w¨ni‚Ÿˇp
(
¥oxy
 *¥oxy, 
ˇp
, c⁄° *
fûe
, 
löe
, c⁄° *
¨g
, c⁄° *
höt
)

287 *
msg
;

289 
ˇp
) {

290 
PR_CAP_BE
: 
msg
 = "no backend"; ;

291 
PR_CAP_FE
: 
msg
 = "no frontend"; ;

292 
PR_CAP_RS
: 
msg
 = "noÑuleset"; ;

293 
PR_CAP_BE
|
PR_CAP_FE
: 
msg
 = "neither frontendÇor backend"; ;

294 : 
msg
 = "notÉnough"; ;

297 i‡(!(
¥oxy
->
ˇp
 & cap)) {

298 
	`W¨nög
("parsing [%s:%d] : '%s' ignored because %s '%s' has %s capability.%s\n",

299 
fûe
, 
löe
, 
¨g
, 
	`¥oxy_ty≥_°r
(
¥oxy
),Öroxy->
id
, 
msg
, 
höt
 ? hint : "");

303 
	}
}

308 
	$w¨nif_ruÀ_a·î_block
(
¥oxy
 *¥oxy, c⁄° *
fûe
, 
löe
, c⁄° *
¨g
)

310 i‡(!
	`LIST_ISEMPTY
(&
¥oxy
->
block_c⁄d
)) {

311 
	`W¨nög
("parsing [%s:%d] :á '%s'ÑuleÖlacedáfterá 'block'Ñule will still beÖrocessed before.\n",

312 
fûe
, 
löe
, 
¨g
);

316 
	}
}

321 
	$w¨nif_ruÀ_a·î_ªqxxx
(
¥oxy
 *¥oxy, c⁄° *
fûe
, 
löe
, c⁄° *
¨g
)

323 i‡(
¥oxy
->
ªq_exp
) {

324 
	`W¨nög
("parsing [%s:%d] :á '%s'ÑuleÖlacedáfterá 'reqxxx'Ñule will still beÖrocessed before.\n",

325 
fûe
, 
löe
, 
¨g
);

329 
	}
}

334 
	$w¨nif_ruÀ_a·î_ªqadd
(
¥oxy
 *¥oxy, c⁄° *
fûe
, 
löe
, c⁄° *
¨g
)

336 i‡(!
	`LIST_ISEMPTY
(&
¥oxy
->
ªq_add
)) {

337 
	`W¨nög
("parsing [%s:%d] :á '%s'ÑuleÖlacedáfterá 'reqadd'Ñule will still beÖrocessed before.\n",

338 
fûe
, 
löe
, 
¨g
);

342 
	}
}

347 
	$w¨nif_ruÀ_a·î_ªdúe˘
(
¥oxy
 *¥oxy, c⁄° *
fûe
, 
löe
, c⁄° *
¨g
)

349 i‡(!
	`LIST_ISEMPTY
(&
¥oxy
->
ªdúe˘_ruÀs
)) {

350 
	`W¨nög
("parsing [%s:%d] :á '%s'ÑuleÖlacedáfterá 'redirect'Ñule will still beÖrocessed before.\n",

351 
fûe
, 
löe
, 
¨g
);

355 
	}
}

360 
	$w¨nif_ruÀ_a·î_u£_backíd
(
¥oxy
 *¥oxy, c⁄° *
fûe
, 
löe
, c⁄° *
¨g
)

362 i‡(!
	`LIST_ISEMPTY
(&
¥oxy
->
swôchög_ruÀs
)) {

363 
	`W¨nög
("parsing [%s:%d] :á '%s'ÑuleÖlacedáfterá 'use_backend'Ñule will still beÖrocessed before.\n",

364 
fûe
, 
löe
, 
¨g
);

368 
	}
}

371 
	$w¨nif_mi•œ˚d_block
(
¥oxy
 *¥oxy, c⁄° *
fûe
, 
löe
, c⁄° *
¨g
)

373  
	`w¨nif_ruÀ_a·î_ªqxxx
(
¥oxy
, 
fûe
, 
löe
, 
¨g
) ||

374 
	`w¨nif_ruÀ_a·î_ªqadd
(
¥oxy
, 
fûe
, 
löe
, 
¨g
) ||

375 
	`w¨nif_ruÀ_a·î_ªdúe˘
(
¥oxy
, 
fûe
, 
löe
, 
¨g
) ||

376 
	`w¨nif_ruÀ_a·î_u£_backíd
(
¥oxy
, 
fûe
, 
löe
, 
¨g
);

377 
	}
}

380 
	$w¨nif_mi•œ˚d_ªqxxx
(
¥oxy
 *¥oxy, c⁄° *
fûe
, 
löe
, c⁄° *
¨g
)

382  
	`w¨nif_ruÀ_a·î_ªqadd
(
¥oxy
, 
fûe
, 
löe
, 
¨g
) ||

383 
	`w¨nif_ruÀ_a·î_ªdúe˘
(
¥oxy
, 
fûe
, 
löe
, 
¨g
) ||

384 
	`w¨nif_ruÀ_a·î_u£_backíd
(
¥oxy
, 
fûe
, 
löe
, 
¨g
);

385 
	}
}

388 
	$w¨nif_mi•œ˚d_ªqadd
(
¥oxy
 *¥oxy, c⁄° *
fûe
, 
löe
, c⁄° *
¨g
)

390  
	`w¨nif_ruÀ_a·î_ªdúe˘
(
¥oxy
, 
fûe
, 
löe
, 
¨g
) ||

391 
	`w¨nif_ruÀ_a·î_u£_backíd
(
¥oxy
, 
fûe
, 
löe
, 
¨g
);

392 
	}
}

398 
	$w¨nif_c⁄d_ªquúes_ª•
(c⁄° 
a˛_c⁄d
 *
c⁄d
, c⁄° *
fûe
, 
löe
)

400 
a˛
 *acl;

402 i‡(!
c⁄d
 || !(c⁄d->
ªquúes
 & 
ACL_USE_RTR_ANY
))

405 
a˛
 = 
	`c⁄d_föd_ªquúe
(
c⁄d
, 
ACL_USE_RTR_ANY
);

406 
	`W¨nög
("parsing [%s:%d] :ácl '%s' involves someÑesponse-only criteria which will be ignored.\n",

407 
fûe
, 
löe
, 
a˛
 ?á˛->
«me
 : "(unknown)");

408  
ERR_WARN
;

409 
	}
}

415 
	$w¨nif_c⁄d_ªquúes_ªq
(c⁄° 
a˛_c⁄d
 *
c⁄d
, c⁄° *
fûe
, 
löe
)

417 
a˛
 *acl;

419 i‡(!
c⁄d
 || !(c⁄d->
ªquúes
 & 
ACL_USE_REQ_VOLATILE
))

422 
a˛
 = 
	`c⁄d_föd_ªquúe
(
c⁄d
, 
ACL_USE_REQ_VOLATILE
);

423 
	`W¨nög
("parsing [%s:%d] :ácl '%s' involves some volatileÑequest-only criteria which will be ignored.\n",

424 
fûe
, 
löe
, 
a˛
 ?á˛->
«me
 : "(unknown)");

425  
ERR_WARN
;

426 
	}
}

439 
	$cfg_∑r£_globÆ
(c⁄° *
fûe
, 
löíum
, **
¨gs
, 
kwm
)

441 
îr_code
 = 0;

443 i‡(!
	`°rcmp
(
¨gs
[0], "global")) {

445 
out
;

447 i‡(!
	`°rcmp
(
¨gs
[0], "daemon")) {

448 
globÆ
.
mode
 |
MODE_DAEMON
;

450 i‡(!
	`°rcmp
(
¨gs
[0], "debug")) {

451 
globÆ
.
mode
 |
MODE_DEBUG
;

453 i‡(!
	`°rcmp
(
¨gs
[0], "noepoll")) {

454 
globÆ
.
tu√
.
›ti⁄s
 &~
GTUNE_USE_EPOLL
;

456 i‡(!
	`°rcmp
(
¨gs
[0], "nosepoll")) {

457 
globÆ
.
tu√
.
›ti⁄s
 &~
GTUNE_USE_SEPOLL
;

459 i‡(!
	`°rcmp
(
¨gs
[0], "nokqueue")) {

460 
globÆ
.
tu√
.
›ti⁄s
 &~
GTUNE_USE_KQUEUE
;

462 i‡(!
	`°rcmp
(
¨gs
[0], "nopoll")) {

463 
globÆ
.
tu√
.
›ti⁄s
 &~
GTUNE_USE_POLL
;

465 i‡(!
	`°rcmp
(
¨gs
[0], "nosplice")) {

466 
globÆ
.
tu√
.
›ti⁄s
 &~
GTUNE_USE_SPLICE
;

468 i‡(!
	`°rcmp
(
¨gs
[0], "quiet")) {

469 
globÆ
.
mode
 |
MODE_QUIET
;

471 i‡(!
	`°rcmp
(
¨gs
[0], "tune.maxpollevents")) {

472 i‡(
globÆ
.
tu√
.
maxpﬁÀvíts
 != 0) {

473 
	`AÀπ
("∑rsög [%s:%d] : '%s'áÃódy s≥cifõd. C⁄töuög.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

474 
îr_code
 |
ERR_ALERT
;

475 
out
;

477 i‡(*(
¨gs
[1]) == 0) {

478 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†™ i¡egîárgumít.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

479 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

480 
out
;

482 
globÆ
.
tu√
.
maxpﬁÀvíts
 = 
	`©ﬁ
(
¨gs
[1]);

484 i‡(!
	`°rcmp
(
¨gs
[0], "tune.maxaccept")) {

485 i‡(
globÆ
.
tu√
.
maxac˚±
 != 0) {

486 
	`AÀπ
("∑rsög [%s:%d] : '%s'áÃódy s≥cifõd. C⁄töuög.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

487 
îr_code
 |
ERR_ALERT
;

488 
out
;

490 i‡(*(
¨gs
[1]) == 0) {

491 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†™ i¡egîárgumít.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

492 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

493 
out
;

495 
globÆ
.
tu√
.
maxac˚±
 = 
	`©ﬁ
(
¨gs
[1]);

497 i‡(!
	`°rcmp
(
¨gs
[0], "tune.chksize")) {

498 i‡(*(
¨gs
[1]) == 0) {

499 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†™ i¡egîárgumít.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

500 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

501 
out
;

503 
globÆ
.
tu√
.
chksize
 = 
	`©ﬁ
(
¨gs
[1]);

505 i‡(!
	`°rcmp
(
¨gs
[0], "tune.bufsize")) {

506 i‡(*(
¨gs
[1]) == 0) {

507 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†™ i¡egîárgumít.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

508 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

509 
out
;

511 
globÆ
.
tu√
.
bufsize
 = 
	`©ﬁ
(
¨gs
[1]);

512 i‡(
globÆ
.
tu√
.
maxªwrôe
 >globÆ.tu√.
bufsize
 / 2)

513 
globÆ
.
tu√
.
maxªwrôe
 = globÆ.tu√.
bufsize
 / 2;

515 i‡(!
	`°rcmp
(
¨gs
[0], "tune.maxrewrite")) {

516 i‡(*(
¨gs
[1]) == 0) {

517 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†™ i¡egîárgumít.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

518 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

519 
out
;

521 
globÆ
.
tu√
.
maxªwrôe
 = 
	`©ﬁ
(
¨gs
[1]);

522 i‡(
globÆ
.
tu√
.
maxªwrôe
 >globÆ.tu√.
bufsize
 / 2)

523 
globÆ
.
tu√
.
maxªwrôe
 = globÆ.tu√.
bufsize
 / 2;

525 i‡(!
	`°rcmp
(
¨gs
[0], "tune.rcvbuf.client")) {

526 i‡(
globÆ
.
tu√
.
˛õ¡_rcvbuf
 != 0) {

527 
	`AÀπ
("∑rsög [%s:%d] : '%s'áÃódy s≥cifõd. C⁄töuög.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

528 
îr_code
 |
ERR_ALERT
;

529 
out
;

531 i‡(*(
¨gs
[1]) == 0) {

532 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†™ i¡egîárgumít.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

533 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

534 
out
;

536 
globÆ
.
tu√
.
˛õ¡_rcvbuf
 = 
	`©ﬁ
(
¨gs
[1]);

538 i‡(!
	`°rcmp
(
¨gs
[0], "tune.rcvbuf.server")) {

539 i‡(
globÆ
.
tu√
.
£rvî_rcvbuf
 != 0) {

540 
	`AÀπ
("∑rsög [%s:%d] : '%s'áÃódy s≥cifõd. C⁄töuög.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

541 
îr_code
 |
ERR_ALERT
;

542 
out
;

544 i‡(*(
¨gs
[1]) == 0) {

545 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†™ i¡egîárgumít.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

546 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

547 
out
;

549 
globÆ
.
tu√
.
£rvî_rcvbuf
 = 
	`©ﬁ
(
¨gs
[1]);

551 i‡(!
	`°rcmp
(
¨gs
[0], "tune.sndbuf.client")) {

552 i‡(
globÆ
.
tu√
.
˛õ¡_¢dbuf
 != 0) {

553 
	`AÀπ
("∑rsög [%s:%d] : '%s'áÃódy s≥cifõd. C⁄töuög.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

554 
îr_code
 |
ERR_ALERT
;

555 
out
;

557 i‡(*(
¨gs
[1]) == 0) {

558 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†™ i¡egîárgumít.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

559 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

560 
out
;

562 
globÆ
.
tu√
.
˛õ¡_¢dbuf
 = 
	`©ﬁ
(
¨gs
[1]);

564 i‡(!
	`°rcmp
(
¨gs
[0], "tune.sndbuf.server")) {

565 i‡(
globÆ
.
tu√
.
£rvî_¢dbuf
 != 0) {

566 
	`AÀπ
("∑rsög [%s:%d] : '%s'áÃódy s≥cifõd. C⁄töuög.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

567 
îr_code
 |
ERR_ALERT
;

568 
out
;

570 i‡(*(
¨gs
[1]) == 0) {

571 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†™ i¡egîárgumít.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

572 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

573 
out
;

575 
globÆ
.
tu√
.
£rvî_¢dbuf
 = 
	`©ﬁ
(
¨gs
[1]);

577 i‡(!
	`°rcmp
(
¨gs
[0], "uid")) {

578 i‡(
globÆ
.
uid
 != 0) {

579 
	`AÀπ
("∑rsög [%s:%d] : u£r/uidáÃódy s≥cifõd. C⁄töuög.\n", 
fûe
, 
löíum
);

580 
îr_code
 |
ERR_ALERT
;

581 
out
;

583 i‡(*(
¨gs
[1]) == 0) {

584 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†™ i¡egîárgumít.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

585 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

586 
out
;

588 
globÆ
.
uid
 = 
	`©ﬁ
(
¨gs
[1]);

590 i‡(!
	`°rcmp
(
¨gs
[0], "gid")) {

591 i‡(
globÆ
.
gid
 != 0) {

592 
	`AÀπ
("∑rsög [%s:%d] : group/gidáÃódy s≥cifõd. C⁄töuög.\n", 
fûe
, 
löíum
);

593 
îr_code
 |
ERR_ALERT
;

594 
out
;

596 i‡(*(
¨gs
[1]) == 0) {

597 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†™ i¡egîárgumít.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

598 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

599 
out
;

601 
globÆ
.
gid
 = 
	`©ﬁ
(
¨gs
[1]);

604 i‡(!
	`°rcmp
(
¨gs
[0], "user")) {

605 
∑sswd
 *
ha_u£r
;

606 i‡(
globÆ
.
uid
 != 0) {

607 
	`AÀπ
("∑rsög [%s:%d] : u£r/uidáÃódy s≥cifõd. C⁄töuög.\n", 
fûe
, 
löíum
);

608 
îr_code
 |
ERR_ALERT
;

609 
out
;

611 
î∫o
 = 0;

612 
ha_u£r
 = 
	`gëpw«m
(
¨gs
[1]);

613 i‡(
ha_u£r
 !
NULL
) {

614 
globÆ
.
uid
 = ()
ha_u£r
->
pw_uid
;

617 
	`AÀπ
("∑rsög [%s:%d] : c™nŸ föd u£∏id f‹ '%s' (%d:%s)\n", 
fûe
, 
löíum
, 
¨gs
[1], 
î∫o
, 
	`°ªº‹
(errno));

618 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

621 i‡(!
	`°rcmp
(
¨gs
[0], "group")) {

622 
group
 *
ha_group
;

623 i‡(
globÆ
.
gid
 != 0) {

624 
	`AÀπ
("∑rsög [%s:%d] : gid/grou∞wa†Æªady s≥cifõd. C⁄töuög.\n", 
fûe
, 
löíum
);

625 
îr_code
 |
ERR_ALERT
;

626 
out
;

628 
î∫o
 = 0;

629 
ha_group
 = 
	`gëg∫am
(
¨gs
[1]);

630 i‡(
ha_group
 !
NULL
) {

631 
globÆ
.
gid
 = ()
ha_group
->
gr_gid
;

634 
	`AÀπ
("∑rsög [%s:%d] : c™nŸ föd grou∞id f‹ '%s' (%d:%s)\n", 
fûe
, 
löíum
, 
¨gs
[1], 
î∫o
, 
	`°ªº‹
(errno));

635 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

639 i‡(!
	`°rcmp
(
¨gs
[0], "nbproc")) {

640 i‡(
globÆ
.
nb¥oc
 != 0) {

641 
	`AÀπ
("∑rsög [%s:%d] : '%s'áÃódy s≥cifõd. C⁄töuög.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

642 
îr_code
 |
ERR_ALERT
;

643 
out
;

645 i‡(*(
¨gs
[1]) == 0) {

646 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†™ i¡egîárgumít.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

647 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

648 
out
;

650 
globÆ
.
nb¥oc
 = 
	`©ﬁ
(
¨gs
[1]);

652 i‡(!
	`°rcmp
(
¨gs
[0], "maxconn")) {

653 i‡(
globÆ
.
maxc⁄n
 != 0) {

654 
	`AÀπ
("∑rsög [%s:%d] : '%s'áÃódy s≥cifõd. C⁄töuög.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

655 
îr_code
 |
ERR_ALERT
;

656 
out
;

658 i‡(*(
¨gs
[1]) == 0) {

659 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†™ i¡egîárgumít.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

660 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

661 
out
;

663 
globÆ
.
maxc⁄n
 = 
	`©ﬁ
(
¨gs
[1]);

664 #ifde‡
SYSTEM_MAXCONN


665 i‡(
globÆ
.
maxc⁄n
 > 
DEFAULT_MAXCONN
 && 
cfg_maxc⁄n
 <= DEFAULT_MAXCONN) {

666 
	`AÀπ
("∑rsög [%s:%d] : maxc⁄¿vÆuê%dÅoÿhigh f‹Åhi†sy°em.\nLimôögÅÿ%d. PÀa£ u£ '-n'Åÿf‹˚ÅhêvÆue.\n", 
fûe
, 
löíum
, 
globÆ
.
maxc⁄n
, 
DEFAULT_MAXCONN
);

667 
globÆ
.
maxc⁄n
 = 
DEFAULT_MAXCONN
;

668 
îr_code
 |
ERR_ALERT
;

672 i‡(!
	`°rcmp
(
¨gs
[0], "maxpipes")) {

673 i‡(
globÆ
.
maxpùes
 != 0) {

674 
	`AÀπ
("∑rsög [%s:%d] : '%s'áÃódy s≥cifõd. C⁄töuög.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

675 
îr_code
 |
ERR_ALERT
;

676 
out
;

678 i‡(*(
¨gs
[1]) == 0) {

679 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†™ i¡egîárgumít.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

680 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

681 
out
;

683 
globÆ
.
maxpùes
 = 
	`©ﬁ
(
¨gs
[1]);

685 i‡(!
	`°rcmp
(
¨gs
[0], "ulimit-n")) {

686 i‡(
globÆ
.
æimô_nofûe
 != 0) {

687 
	`AÀπ
("∑rsög [%s:%d] : '%s'áÃódy s≥cifõd. C⁄töuög.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

688 
îr_code
 |
ERR_ALERT
;

689 
out
;

691 i‡(*(
¨gs
[1]) == 0) {

692 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†™ i¡egîárgumít.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

693 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

694 
out
;

696 
globÆ
.
æimô_nofûe
 = 
	`©ﬁ
(
¨gs
[1]);

698 i‡(!
	`°rcmp
(
¨gs
[0], "chroot")) {

699 i‡(
globÆ
.
chroŸ
 !
NULL
) {

700 
	`AÀπ
("∑rsög [%s:%d] : '%s'áÃódy s≥cifõd. C⁄töuög.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

701 
îr_code
 |
ERR_ALERT
;

702 
out
;

704 i‡(*(
¨gs
[1]) == 0) {

705 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†®dúe˘‹yá†™árgumít.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

706 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

707 
out
;

709 
globÆ
.
chroŸ
 = 
	`°rdup
(
¨gs
[1]);

711 i‡(!
	`°rcmp
(
¨gs
[0], "description")) {

712 
i
, 
Àn
=0;

713 *
d
;

715 i‡(!*
¨gs
[1]) {

716 
	`AÀπ
("parsing [%s:%d]: '%s'Éxpectsá stringárgument.\n",

717 
fûe
, 
löíum
, 
¨gs
[0]);

718 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

719 
out
;

722 
i
=1; *
¨gs
[i]; i++)

723 
Àn
 +
	`°æí
(
¨gs
[
i
])+1;

725 i‡(
globÆ
.
desc
)

726 
	`‰ì
(
globÆ
.
desc
);

728 
globÆ
.
desc
 = 
d
 = (*)
	`ˇŒoc
(1, 
Àn
);

730 
d
 +
	`•rötf
(d, "%s", 
¨gs
[1]);

731 
i
=2; *
¨gs
[i]; i++)

732 
d
 +
	`•rötf
(d, " %s", 
¨gs
[
i
]);

734 i‡(!
	`°rcmp
(
¨gs
[0], "node")) {

735 
i
;

736 
c
;

738 
i
=0; 
¨gs
[1][i]; i++) {

739 
c
 = 
¨gs
[1][
i
];

740 i‡(!
	`isuµî
(()
c
Ë&& !
	`i¶owî
(()c) &&

741 !
	`isdigô
(()
c
) && c != '_' && c != '-' && c != '.')

745 i‡(!
i
 || 
¨gs
[1][i]) {

746 
	`AÀπ
("parsing [%s:%d]: '%s'Ñequires validÇodeÇame -Çon-empty string"

748 
fûe
, 
löíum
, 
¨gs
[0]);

749 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

750 
out
;

753 i‡(
globÆ
.
node
)

754 
	`‰ì
(
globÆ
.
node
);

756 
globÆ
.
node
 = 
	`°rdup
(
¨gs
[1]);

758 i‡(!
	`°rcmp
(
¨gs
[0], "pidfile")) {

759 i‡(
globÆ
.
pidfûe
 !
NULL
) {

760 
	`AÀπ
("∑rsög [%s:%d] : '%s'áÃódy s≥cifõd. C⁄töuög.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

761 
îr_code
 |
ERR_ALERT
;

762 
out
;

764 i‡(*(
¨gs
[1]) == 0) {

765 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†®fûê«mêa†™árgumít.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

766 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

767 
out
;

769 
globÆ
.
pidfûe
 = 
	`°rdup
(
¨gs
[1]);

771 i‡(!
	`°rcmp
(
¨gs
[0], "log")) {

772 
log§v
Üogsrv;

773 
Ácûôy
, 
Àvñ
, 
mölvl
;

775 i‡(*(
¨gs
[1]) == 0 || *(args[2]) == 0) {

776 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†<addªss>ánd <Ácûôy>á†¨gumíts.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

777 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

778 
out
;

781 
Ácûôy
 = 
	`gë_log_Ácûôy
(
¨gs
[2]);

782 i‡(
Ácûôy
 < 0) {

783 
	`AÀπ
("∑rsög [%s:%d] : unknow¿log facûôy '%s'\n", 
fûe
, 
löíum
, 
¨gs
[2]);

784 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

785 
Ácûôy
 = 0;

788 
Àvñ
 = 7;

789 i‡(*(
¨gs
[3])) {

790 
Àvñ
 = 
	`gë_log_Àvñ
(
¨gs
[3]);

791 i‡(
Àvñ
 < 0) {

792 
	`AÀπ
("∑rsög [%s:%d] : unknow¿›ti⁄ÆÜogÜevñ '%s'\n", 
fûe
, 
löíum
, 
¨gs
[3]);

793 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

794 
Àvñ
 = 0;

798 
mölvl
 = 0;

799 i‡(*(
¨gs
[4])) {

800 
mölvl
 = 
	`gë_log_Àvñ
(
¨gs
[4]);

801 i‡(
mölvl
 < 0) {

802 
	`AÀπ
("∑rsög [%s:%d] : unknow¿›ti⁄Æ möimumÜogÜevñ '%s'\n", 
fûe
, 
löíum
, 
¨gs
[4]);

803 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

804 
mölvl
 = 0;

808 i‡(
¨gs
[1][0] == '/') {

809 
sockaddr_un
 *
sk
 = 
	`°r2sun
(
¨gs
[1]);

810 i‡(!
sk
) {

811 
	`AÀπ
("∑rsög [%s:%d] : SockëÖ©h '%s'Åoÿl⁄g (max %d)\n", 
fûe
, 
löíum
,

812 
¨gs
[1], ()(
sk
->
sun_∑th
) - 1);

813 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

814 
out
;

816 
log§v
.
u
.
un
 = *
sk
;

817 
log§v
.
u
.
addr
.
ß_Ámûy
 = 
AF_UNIX
;

819 
sockaddr_ö
 *
sk
 = 
	`°r2ß
(
¨gs
[1]);

820 i‡(!
sk
) {

821 
	`AÀπ
("∑rsög [%s:%d] : Unknow¿ho° i¿'%s'\n", 
fûe
, 
löíum
, 
¨gs
[1]);

822 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

823 
out
;

825 
log§v
.
u
.
ö
 = *
sk
;

826 
log§v
.
u
.
addr
.
ß_Ámûy
 = 
AF_INET
;

827 i‡(!
log§v
.
u
.
ö
.
sö_p‹t
)

828 
log§v
.
u
.
ö
.
sö_p‹t
 = 
	`ht⁄s
(
SYSLOG_PORT
);

831 i‡(
globÆ
.
logÁc1
 == -1) {

832 
globÆ
.
log§v1
 = 
log§v
;

833 
globÆ
.
logÁc1
 = 
Ácûôy
;

834 
globÆ
.
logÀv1
 = 
Àvñ
;

835 
globÆ
.
mölvl1
 = 
mölvl
;

837 i‡(
globÆ
.
logÁc2
 == -1) {

838 
globÆ
.
log§v2
 = 
log§v
;

839 
globÆ
.
logÁc2
 = 
Ácûôy
;

840 
globÆ
.
logÀv2
 = 
Àvñ
;

841 
globÆ
.
mölvl2
 = 
mölvl
;

844 
	`AÀπ
("∑rsög [%s:%d] :Åoÿm™y sy¶og sîvîs\n", 
fûe
, 
löíum
);

845 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

848 i‡(!
	`°rcmp
(
¨gs
[0], "spread-checks")) {

849 i‡(
globÆ
.
•ªad_checks
 != 0) {

850 
	`AÀπ
("∑rsög [%s:%d]: s¥ód-check†Æªady s≥cifõd. C⁄töuög.\n", 
fûe
, 
löíum
);

851 
îr_code
 |
ERR_ALERT
;

852 
out
;

854 i‡(*(
¨gs
[1]) == 0) {

855 
	`AÀπ
("∑rsög [%s:%d]: '%s'Éx≥˘†™ i¡egîárgumíà(0..50).\n", 
fûe
, 
löíum
, 
¨gs
[0]);

856 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

857 
out
;

859 
globÆ
.
•ªad_checks
 = 
	`©ﬁ
(
¨gs
[1]);

860 i‡(
globÆ
.
•ªad_checks
 < 0 || global.spread_checks > 50) {

861 
	`AÀπ
("∑rsög [%s:%d]: '•ªad-checks'Çìd†®posôivêvÆuêöÑ™gê0..50.\n", 
fûe
, 
löíum
);

862 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

866 
cfg_kw_li°
 *
kwl
;

867 
ödex
;

868 
rc
;

870 
	`li°_f‹_óch_íåy
(
kwl
, &
cfg_keyw‹ds
.
li°
,Üist) {

871 
ödex
 = 0; 
kwl
->
kw
[ödex].kw !
NULL
; index++) {

872 i‡(
kwl
->
kw
[
ödex
].
£˘i⁄
 !
CFG_GLOBAL
)

874 i‡(
	`°rcmp
(
kwl
->
kw
[
ödex
].kw, 
¨gs
[0]) == 0) {

876 
	`¢¥ötf
(
åash
, (trash),

877 "îr‹Çó∏'%s' i¿'%s' se˘i⁄", 
¨gs
[0], "global");

878 
rc
 = 
kwl
->
kw
[
ödex
].
	`∑r£
(
¨gs
, 
CFG_GLOBAL
, 
NULL
, NULL, 
åash
, (trash));

879 i‡(
rc
 < 0) {

880 
	`AÀπ
("∑rsög [%s:%d] : %s\n", 
fûe
, 
löíum
, 
åash
);

881 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

883 i‡(
rc
 > 0) {

884 
	`W¨nög
("∑rsög [%s:%d] : %s\n", 
fûe
, 
löíum
, 
åash
);

885 
îr_code
 |
ERR_WARN
;

886 
out
;

888 
out
;

893 
	`AÀπ
("∑rsög [%s:%d] : unknow¿keyw‹d '%s' i¿'%s' se˘i⁄\n", 
fûe
, 
löíum
, 
¨gs
[0], "global");

894 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

897 
out
:

898  
îr_code
;

899 
	}
}

904 
	$öô_√w_¥oxy
(
¥oxy
 *
p
)

906 
	`mem£t
(
p
, 0, (
¥oxy
));

907 
	`LIST_INIT
(&
p
->
≥ndc⁄ns
);

908 
	`LIST_INIT
(&
p
->
a˛
);

909 
	`LIST_INIT
(&
p
->
ªq_a˛
);

910 
	`LIST_INIT
(&
p
->
block_c⁄d
);

911 
	`LIST_INIT
(&
p
->
ªdúe˘_ruÀs
);

912 
	`LIST_INIT
(&
p
->
m⁄_Áû_c⁄d
);

913 
	`LIST_INIT
(&
p
->
swôchög_ruÀs
);

914 
	`LIST_INIT
(&
p
->
≥rsi°_ruÀs
);

915 
	`LIST_INIT
(&
p
->
°ickög_ruÀs
);

916 
	`LIST_INIT
(&
p
->
°‹î•_ruÀs
);

917 
	`LIST_INIT
(&
p
->
t˝_ªq
.
ö•e˘_ruÀs
);

918 
	`LIST_INIT
(&
p
->
ªq_add
);

919 
	`LIST_INIT
(&
p
->
r•_add
);

922 
	`¥oxy_ª£t_timeouts
(
p
);

923 
	}
}

925 
	$öô_deÁu…_ö°™˚
()

927 
	`öô_√w_¥oxy
(&
deÂroxy
);

928 
deÂroxy
.
mode
 = 
PR_MODE_TCP
;

929 
deÂroxy
.
°©e
 = 
PR_STNEW
;

930 
deÂroxy
.
maxc⁄n
 = 
cfg_maxpc⁄n
;

931 
deÂroxy
.
c⁄n_ªåõs
 = 
CONN_RETRIES
;

932 
deÂroxy
.
logÁc1
 = deÂroxy.
logÁc2
 = -1;

934 
deÂroxy
.
def§v
.
öãr
 = 
DEF_CHKINTR
;

935 
deÂroxy
.
def§v
.
Á°öãr
 = 0;

936 
deÂroxy
.
def§v
.
downöãr
 = 0;

937 
deÂroxy
.
def§v
.
ri£
 = 
DEF_RISETIME
;

938 
deÂroxy
.
def§v
.
ÁŒ
 = 
DEF_FALLTIME
;

939 
deÂroxy
.
def§v
.
check_p‹t
 = 0;

940 
deÂroxy
.
def§v
.
maxqueue
 = 0;

941 
deÂroxy
.
def§v
.
möc⁄n
 = 0;

942 
deÂroxy
.
def§v
.
maxc⁄n
 = 0;

943 
deÂroxy
.
def§v
.
¶ow°¨t
 = 0;

944 
deÂroxy
.
def§v
.
⁄îr‹
 = 
DEF_HANA_ONERR
;

945 
deÂroxy
.
def§v
.
c⁄£cutive_îr‹s_limô
 = 
DEF_HANA_ERRLIMIT
;

946 
deÂroxy
.
def§v
.
uweight
 = deÂroxy.def§v.
iweight
 = 1;

947 
	}
}

950 
	$¸óã_c⁄d_ªgex_ruÀ
(c⁄° *
fûe
, 
löe
,

951 
¥oxy
 *
px
, 
dú
, 
a˘i⁄
, 
Êags
,

952 c⁄° *
cmd
, c⁄° *
ªg
, c⁄° *
ª∂
,

953 c⁄° **
c⁄d_°¨t
)

955 
ªgex_t
 *
¥eg
 = 
NULL
;

956 c⁄° *
îr
;

957 
îr_code
 = 0;

958 
a˛_c⁄d
 *
c⁄d
 = 
NULL
;

960 i‡(
px
 =&
deÂroxy
) {

961 
	`AÀπ
("∑rsög [%s:%d] : '%s'ÇŸáŒowed i¿'deÁu…s' se˘i⁄.\n", 
fûe
, 
löe
, 
cmd
);

962 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

963 
îr
;

966 i‡(*
ªg
 == 0) {

967 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†<ªgex>á†™árgumít.\n", 
fûe
, 
löe
, 
cmd
);

968 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

969 
îr
;

972 i‡(
	`w¨ni‚Ÿˇp
(
px
, 
PR_CAP_RS
, 
fûe
, 
löe
, 
cmd
, 
NULL
))

973 
îr_code
 |
ERR_WARN
;

975 i‡(
c⁄d_°¨t
 &&

976 (
	`°rcmp
(*
c⁄d_°¨t
, "if") == 0 || strcmp(*cond_start, "unless") == 0)) {

977 i‡((
c⁄d
 = 
	`buûd_a˛_c⁄d
(
fûe
, 
löe
, 
px
, 
c⁄d_°¨t
)Ë=
NULL
) {

978 
	`AÀπ
("parsing [%s:%d] :Érror detected whileÖarsingá '%s' condition.\n",

979 
fûe
, 
löe
, 
cmd
);

980 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

981 
îr
;

984 i‡(
c⁄d_°¨t
 && **cond_start) {

985 
	`AÀπ
("parsing [%s:%d] : '%s' : ExpectingÇothing, 'if', or 'unless', got '%s'.\n",

986 
fûe
, 
löe
, 
cmd
, *
c⁄d_°¨t
);

987 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

988 
îr
;

991 i‡(
dú
 =
ACL_DIR_REQ
)

992 
îr_code
 |
	`w¨nif_c⁄d_ªquúes_ª•
(
c⁄d
, 
fûe
, 
löe
);

994 
îr_code
 |
	`w¨nif_c⁄d_ªquúes_ªq
(
c⁄d
, 
fûe
, 
löe
);

996 
¥eg
 = 
	`ˇŒoc
(1, (
ªgex_t
));

997 i‡(!
¥eg
) {

998 
	`AÀπ
("∑rsög [%s:%d] : '%s' :ÇŸÉnough mem‹yÅÿbuûdÑegex.\n", 
fûe
, 
löe
, 
cmd
);

999 
îr_code
 = 
ERR_ALERT
 | 
ERR_FATAL
;

1000 
îr
;

1003 i‡(
	`ªgcomp
(
¥eg
, 
ªg
, 
REG_EXTENDED
 | 
Êags
) != 0) {

1004 
	`AÀπ
("∑rsög [%s:%d] : '%s' : badÑeguœ∏ex¥essi⁄ '%s'.\n", 
fûe
, 
löe
, 
cmd
, 
ªg
);

1005 
îr_code
 = 
ERR_ALERT
 | 
ERR_FATAL
;

1006 
îr
;

1009 
îr
 = 
	`chaö_ªgex
((
dú
 =
ACL_DIR_REQ
Ë? &
px
->
ªq_exp
 : &px->
r•_exp
,

1010 
¥eg
, 
a˘i⁄
, 
ª∂
 ? 
	`°rdup
‘ïlË: 
NULL
, 
c⁄d
);

1011 i‡(
ª∂
 && 
îr
) {

1012 
	`AÀπ
("parsing [%s:%d] : '%s' : invalid character or unterminated sequence inÑeplacement stringÇear '%c'.\n",

1013 
fûe
, 
löe
, 
cmd
, *
îr
);

1014 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1015 
îr
;

1018 i‡(
dú
 =
ACL_DIR_REQ
 && 
	`w¨nif_mi•œ˚d_ªqxxx
(
px
, 
fûe
, 
löe
, 
cmd
))

1019 
îr_code
 |
ERR_WARN
;

1021  
îr_code
;

1022 
îr
:

1023 
	`‰ì
(
¥eg
);

1024  
îr_code
;

1025 
	}
}

1037 
	$cfg_∑r£_li°í
(c⁄° *
fûe
, 
löíum
, **
¨gs
, 
kwm
)

1039 
¥oxy
 *
cuΩroxy
 = 
NULL
;

1040 
£rvî
 *
√w§v
 = 
NULL
;

1041 c⁄° *
îr
;

1042 
rc
;

1043 
vÆ
;

1044 
îr_code
 = 0;

1045 
a˛_c⁄d
 *
c⁄d
 = 
NULL
;

1047 i‡(!
	`°rcmp
(
¨gs
[0], "listen"))

1048 
rc
 = 
PR_CAP_LISTEN
;

1049 i‡(!
	`°rcmp
(
¨gs
[0], "frontend"))

1050 
rc
 = 
PR_CAP_FE
 | 
PR_CAP_RS
;

1051 i‡(!
	`°rcmp
(
¨gs
[0], "backend"))

1052 
rc
 = 
PR_CAP_BE
 | 
PR_CAP_RS
;

1053 i‡(!
	`°rcmp
(
¨gs
[0], "ruleset"))

1054 
rc
 = 
PR_CAP_RS
;

1056 
rc
 = 
PR_CAP_NONE
;

1058 i‡(
rc
 !
PR_CAP_NONE
) {

1059 i‡(!*
¨gs
[1]) {

1060 
	`AÀπ
("parsing [%s:%d] : '%s'Éxpectsán <id>árgumentánd\n"

1062 
fûe
, 
löíum
, 
¨gs
[0]);

1063 
îr_code
 |
ERR_ALERT
 | 
ERR_ABORT
;

1064 
out
;

1067 
îr
 = 
	`övÆid_ch¨
(
¨gs
[1]);

1068 i‡(
îr
) {

1069 
	`AÀπ
("parsing [%s:%d] : character '%c' isÇotÖermitted in '%s'Çame '%s'.\n",

1070 
fûe
, 
löíum
, *
îr
, 
¨gs
[0],árgs[1]);

1071 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1074 
cuΩroxy
 = 
¥oxy
; cuΩroxy !
NULL
; cuΩroxy = cuΩroxy->
√xt
) {

1086 i‡(!
	`°rcmp
(
cuΩroxy
->
id
, 
¨gs
[1]) &&

1087 (
rc
!=(
PR_CAP_FE
|
PR_CAP_RS
Ë|| 
cuΩroxy
->
ˇp
!=(
PR_CAP_BE
|PR_CAP_RS)) &&

1088 (
rc
!=(
PR_CAP_BE
|
PR_CAP_RS
Ë|| 
cuΩroxy
->
ˇp
!=(
PR_CAP_FE
|PR_CAP_RS))) {

1089 
	`W¨nög
("Parsing [%s:%d]: %s '%s' has sameÇameásánother %s (declaredát %s:%d).\n",

1090 
fûe
, 
löíum
, 
	`¥oxy_ˇp_°r
(
rc
), 
¨gs
[1], 
	`¥oxy_ty≥_°r
(
cuΩroxy
),

1091 
cuΩroxy
->
c⁄f
.
fûe
, cuΩroxy->c⁄f.
löe
);

1092 
îr_code
 |
ERR_WARN
;

1096 i‡((
cuΩroxy
 = (
¥oxy
 *)
	`ˇŒoc
(1, (¥oxy))Ë=
NULL
) {

1097 
	`AÀπ
("∑rsög [%s:%d] : ouào‡mem‹y.\n", 
fûe
, 
löíum
);

1098 
îr_code
 |
ERR_ALERT
 | 
ERR_ABORT
;

1099 
out
;

1102 
	`öô_√w_¥oxy
(
cuΩroxy
);

1103 
cuΩroxy
->
√xt
 = 
¥oxy
;

1104 
¥oxy
 = 
cuΩroxy
;

1105 
cuΩroxy
->
c⁄f
.
fûe
 = file;

1106 
cuΩroxy
->
c⁄f
.
löe
 = 
löíum
;

1107 
cuΩroxy
->
œ°_ch™ge
 = 
now
.
tv_£c
;

1108 
cuΩroxy
->
id
 = 
	`°rdup
(
¨gs
[1]);

1109 
cuΩroxy
->
ˇp
 = 
rc
;

1112 i‡((
cuΩroxy
->
ˇp
 & 
PR_CAP_FE
Ë&& *
¨gs
[2]) {

1113 
li°íî
 *
√w
, *
œ°
 = 
cuΩroxy
->
li°í
;

1114 i‡(!
	`°r2li°íî
(
¨gs
[2], 
cuΩroxy
)) {

1115 
îr_code
 |
ERR_FATAL
;

1116 
out
;

1118 
√w
 = 
cuΩroxy
->
li°í
;

1119 
√w
 !
œ°
) {

1120 
√w
->
c⁄f
.
fûe
 = file;

1121 
√w
->
c⁄f
.
löe
 = 
löíum
;

1122 
√w
 =Çew->
√xt
;

1124 
globÆ
.
maxsock
++;

1128 
	`mem˝y
(&
cuΩroxy
->
def§v
, &
deÂroxy
.defsrv, (curproxy->defsrv));

1129 
cuΩroxy
->
def§v
.
id
 = "default-server";

1131 
cuΩroxy
->
°©e
 = 
deÂroxy
.state;

1132 
cuΩroxy
->
›ti⁄s
 = 
deÂroxy
.options;

1133 
cuΩroxy
->
›ti⁄s2
 = 
deÂroxy
.options2;

1134 
cuΩroxy
->
no_›ti⁄s
 = 
deÂroxy
.no_options;

1135 
cuΩroxy
->
no_›ti⁄s2
 = 
deÂroxy
.no_options2;

1136 
cuΩroxy
->
böd_¥oc
 = 
deÂroxy
.bind_proc;

1137 
cuΩroxy
->
lb¥m
.
Ægo
 = 
deÂroxy
.lbprm.algo;

1138 
cuΩroxy
->
ex˚±_√t
 = 
deÂroxy
.except_net;

1139 
cuΩroxy
->
ex˚±_mask
 = 
deÂroxy
.except_mask;

1140 
cuΩroxy
->
ex˚±_to
 = 
deÂroxy
.except_to;

1141 
cuΩroxy
->
ex˚±_mask_to
 = 
deÂroxy
.except_mask_to;

1143 i‡(
deÂroxy
.
fwdf‹_hdr_Àn
) {

1144 
cuΩroxy
->
fwdf‹_hdr_Àn
 = 
deÂroxy
.fwdfor_hdr_len;

1145 
cuΩroxy
->
fwdf‹_hdr_«me
 = 
	`°rdup
(
deÂroxy
.fwdfor_hdr_name);

1148 i‡(
deÂroxy
.
‹gto_hdr_Àn
) {

1149 
cuΩroxy
->
‹gto_hdr_Àn
 = 
deÂroxy
.orgto_hdr_len;

1150 
cuΩroxy
->
‹gto_hdr_«me
 = 
	`°rdup
(
deÂroxy
.orgto_hdr_name);

1153 i‡(
cuΩroxy
->
ˇp
 & 
PR_CAP_FE
) {

1154 
cuΩroxy
->
maxc⁄n
 = 
deÂroxy
.maxconn;

1155 
cuΩroxy
->
backlog
 = 
deÂroxy
.backlog;

1156 
cuΩroxy
->
„_•s_lim
 = 
deÂroxy
.fe_sps_lim;

1159 
rc
 = 0;Ñ¯< 
HTTP_ERR_SIZE
;Ñc++)

1160 
	`chunk_dup
(&
cuΩroxy
->
îrmsg
[
rc
], &
deÂroxy
.errmsg[rc]);

1162 
cuΩroxy
->
to_log
 = 
deÂroxy
.to_log & ~
LW_COOKIE
 & ~
LW_REQHDR
 & ~ 
LW_RSPHDR
;

1165 i‡(
cuΩroxy
->
ˇp
 & 
PR_CAP_BE
) {

1166 
cuΩroxy
->
fuŒc⁄n
 = 
deÂroxy
.fullconn;

1167 
cuΩroxy
->
c⁄n_ªåõs
 = 
deÂroxy
.conn_retries;

1169 i‡(
deÂroxy
.
check_ªq
) {

1170 
cuΩroxy
->
check_ªq
 = 
	`ˇŒoc
(1, 
deÂroxy
.
check_Àn
);

1171 
	`mem˝y
(
cuΩroxy
->
check_ªq
, 
deÂroxy
.check_ªq, deÂroxy.
check_Àn
);

1173 
cuΩroxy
->
check_Àn
 = 
deÂroxy
.check_len;

1175 i‡(
deÂroxy
.
cookõ_«me
)

1176 
cuΩroxy
->
cookõ_«me
 = 
	`°rdup
(
deÂroxy
.cookie_name);

1177 
cuΩroxy
->
cookõ_Àn
 = 
deÂroxy
.cookie_len;

1178 i‡(
deÂroxy
.
cookõ_domaö
)

1179 
cuΩroxy
->
cookõ_domaö
 = 
	`°rdup
(
deÂroxy
.cookie_domain);

1181 i‡(
deÂroxy
.
cookõ_maxidÀ
)

1182 
cuΩroxy
->
cookõ_maxidÀ
 = 
deÂroxy
.cookie_maxidle;

1184 i‡(
deÂroxy
.
cookõ_maxli„
)

1185 
cuΩroxy
->
cookõ_maxli„
 = 
deÂroxy
.cookie_maxlife;

1187 i‡(
deÂroxy
.
rdp_cookõ_«me
)

1188 
cuΩroxy
->
rdp_cookõ_«me
 = 
	`°rdup
(
deÂroxy
.rdp_cookie_name);

1189 
cuΩroxy
->
rdp_cookõ_Àn
 = 
deÂroxy
.rdp_cookie_len;

1191 i‡(
deÂroxy
.
uæ_∑øm_«me
)

1192 
cuΩroxy
->
uæ_∑øm_«me
 = 
	`°rdup
(
deÂroxy
.url_param_name);

1193 
cuΩroxy
->
uæ_∑øm_Àn
 = 
deÂroxy
.url_param_len;

1195 i‡(
deÂroxy
.
hh_«me
)

1196 
cuΩroxy
->
hh_«me
 = 
	`°rdup
(
deÂroxy
.hh_name);

1197 
cuΩroxy
->
hh_Àn
 = 
deÂroxy
.hh_len;

1198 
cuΩroxy
->
hh_m©ch_domaö
 = 
deÂroxy
.hh_match_domain;

1200 i‡(
deÂroxy
.
iÁ˚_«me
)

1201 
cuΩroxy
->
iÁ˚_«me
 = 
	`°rdup
(
deÂroxy
.iface_name);

1202 
cuΩroxy
->
iÁ˚_Àn
 = 
deÂroxy
.iface_len;

1205 i‡(
cuΩroxy
->
ˇp
 & 
PR_CAP_FE
) {

1206 i‡(
deÂroxy
.
ˇ±uª_«me
)

1207 
cuΩroxy
->
ˇ±uª_«me
 = 
	`°rdup
(
deÂroxy
.capture_name);

1208 
cuΩroxy
->
ˇ±uª_«mñí
 = 
deÂroxy
.capture_namelen;

1209 
cuΩroxy
->
ˇ±uª_Àn
 = 
deÂroxy
.capture_len;

1212 i‡(
cuΩroxy
->
ˇp
 & 
PR_CAP_FE
) {

1213 
cuΩroxy
->
timeout
.
˛õ¡
 = 
deÂroxy
.timeout.client;

1214 
cuΩroxy
->
timeout
.
èΩô
 = 
deÂroxy
.timeout.tarpit;

1215 
cuΩroxy
->
timeout
.
hâ¥eq
 = 
deÂroxy
.timeout.httpreq;

1216 
cuΩroxy
->
timeout
.
hâpka
 = 
deÂroxy
.timeout.httpka;

1217 
cuΩroxy
->
uri_auth
 = 
deÂroxy
.uri_auth;

1218 
cuΩroxy
->
m⁄_√t
 = 
deÂroxy
.mon_net;

1219 
cuΩroxy
->
m⁄_mask
 = 
deÂroxy
.mon_mask;

1220 i‡(
deÂroxy
.
m⁄ô‹_uri
)

1221 
cuΩroxy
->
m⁄ô‹_uri
 = 
	`°rdup
(
deÂroxy
.monitor_uri);

1222 
cuΩroxy
->
m⁄ô‹_uri_Àn
 = 
deÂroxy
.monitor_uri_len;

1223 i‡(
deÂroxy
.
defbe
.
«me
)

1224 
cuΩroxy
->
defbe
.
«me
 = 
	`°rdup
(
deÂroxy
.defbe.name);

1227 i‡(
cuΩroxy
->
ˇp
 & 
PR_CAP_BE
) {

1228 
cuΩroxy
->
timeout
.
c⁄√˘
 = 
deÂroxy
.timeout.connect;

1229 
cuΩroxy
->
timeout
.
£rvî
 = 
deÂroxy
.timeout.server;

1230 
cuΩroxy
->
timeout
.
check
 = 
deÂroxy
.timeout.check;

1231 
cuΩroxy
->
timeout
.
queue
 = 
deÂroxy
.timeout.queue;

1232 
cuΩroxy
->
timeout
.
èΩô
 = 
deÂroxy
.timeout.tarpit;

1233 
cuΩroxy
->
timeout
.
hâ¥eq
 = 
deÂroxy
.timeout.httpreq;

1234 
cuΩroxy
->
timeout
.
hâpka
 = 
deÂroxy
.timeout.httpka;

1235 
cuΩroxy
->
sour˚_addr
 = 
deÂroxy
.source_addr;

1238 
cuΩroxy
->
mode
 = 
deÂroxy
.mode;

1239 
cuΩroxy
->
logÁc1
 = 
deÂroxy
.logfac1;

1240 
cuΩroxy
->
log§v1
 = 
deÂroxy
.logsrv1;

1241 
cuΩroxy
->
logÀv1
 = 
deÂroxy
.loglev1;

1242 
cuΩroxy
->
mölvl1
 = 
deÂroxy
.minlvl1;

1243 
cuΩroxy
->
logÁc2
 = 
deÂroxy
.logfac2;

1244 
cuΩroxy
->
log§v2
 = 
deÂroxy
.logsrv2;

1245 
cuΩroxy
->
logÀv2
 = 
deÂroxy
.loglev2;

1246 
cuΩroxy
->
mölvl2
 = 
deÂroxy
.minlvl2;

1247 
cuΩroxy
->
gø˚
 = 
deÂroxy
.grace;

1248 
cuΩroxy
->
c⁄f
.
u£d_li°íî_id
 = 
EB_ROOT
;

1249 
cuΩroxy
->
c⁄f
.
u£d_£rvî_id
 = 
EB_ROOT
;

1251 
out
;

1253 i‡(!
	`°rcmp
(
¨gs
[0], "defaults")) {

1258 
	`‰ì
(
deÂroxy
.
check_ªq
);

1259 
	`‰ì
(
deÂroxy
.
cookõ_«me
);

1260 
	`‰ì
(
deÂroxy
.
rdp_cookõ_«me
);

1261 
	`‰ì
(
deÂroxy
.
cookõ_domaö
);

1262 
	`‰ì
(
deÂroxy
.
uæ_∑øm_«me
);

1263 
	`‰ì
(
deÂroxy
.
hh_«me
);

1264 
	`‰ì
(
deÂroxy
.
ˇ±uª_«me
);

1265 
	`‰ì
(
deÂroxy
.
m⁄ô‹_uri
);

1266 
	`‰ì
(
deÂroxy
.
defbe
.
«me
);

1267 
	`‰ì
(
deÂroxy
.
iÁ˚_«me
);

1268 
	`‰ì
(
deÂroxy
.
fwdf‹_hdr_«me
);

1269 
deÂroxy
.
fwdf‹_hdr_Àn
 = 0;

1270 
	`‰ì
(
deÂroxy
.
‹gto_hdr_«me
);

1271 
deÂroxy
.
‹gto_hdr_Àn
 = 0;

1273 
rc
 = 0;Ñ¯< 
HTTP_ERR_SIZE
;Ñc++)

1274 
	`chunk_de°roy
(&
deÂroxy
.
îrmsg
[
rc
]);

1277 
	`öô_deÁu…_ö°™˚
();

1278 
cuΩroxy
 = &
deÂroxy
;

1279 
deÂroxy
.
ˇp
 = 
PR_CAP_LISTEN
;

1280 
out
;

1282 i‡(
cuΩroxy
 =
NULL
) {

1283 
	`AÀπ
("∑rsög [%s:%d] : 'li°í' o∏'deÁu…s'Éx≥˘ed.\n", 
fûe
, 
löíum
);

1284 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1285 
out
;

1290 i‡(!
	`°rcmp
(
¨gs
[0], "bind")) {

1291 
li°íî
 *
√w_li°í
, *
œ°_li°í
;

1292 
cur_¨g
;

1294 i‡(
cuΩroxy
 =&
deÂroxy
) {

1295 
	`AÀπ
("∑rsög [%s:%d] : '%s'ÇŸáŒowed i¿'deÁu…s' se˘i⁄.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

1296 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1297 
out
;

1299 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_FE
, 
fûe
, 
löíum
, 
¨gs
[0], 
NULL
))

1300 
îr_code
 |
ERR_WARN
;

1302 i‡(
	`°rchr
(
¨gs
[1], ':'Ë=
NULL
) {

1303 
	`AÀπ
("parsing [%s:%d] : '%s'Éxpects [addr1]:port1[-end1]{,[addr]:port[-end]}...ásárguments.\n",

1304 
fûe
, 
löíum
, 
¨gs
[0]);

1305 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1306 
out
;

1309 
œ°_li°í
 = 
cuΩroxy
->
li°í
;

1310 i‡(!
	`°r2li°íî
(
¨gs
[1], 
cuΩroxy
)) {

1311 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1312 
out
;

1315 
√w_li°í
 = 
cuΩroxy
->
li°í
;

1316 
√w_li°í
 !
œ°_li°í
) {

1317 
√w_li°í
->
c⁄f
.
fûe
 = file;

1318 
√w_li°í
->
c⁄f
.
löe
 = 
löíum
;

1319 
√w_li°í
 =Çew_li°í->
√xt
;

1322 
cur_¨g
 = 2;

1323 *(
¨gs
[
cur_¨g
])) {

1324 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "interface")) {

1325 #ifde‡
SO_BINDTODEVICE


1326 
li°íî
 *
l
;

1328 i‡(!*
¨gs
[
cur_¨g
 + 1]) {

1329 
	`AÀπ
("parsing [%s:%d] : '%s' : missing interfaceÇame.\n",

1330 
fûe
, 
löíum
, 
¨gs
[0]);

1331 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1332 
out
;

1335 
l
 = 
cuΩroxy
->
li°í
;Ü !
œ°_li°í
;Ü =Ü->
√xt
)

1336 
l
->
öãrÁ˚
 = 
	`°rdup
(
¨gs
[
cur_¨g
 + 1]);

1338 
globÆ
.
œ°_checks
 |
LSTCHK_NETADM
;

1340 
cur_¨g
 += 2;

1343 
	`AÀπ
("parsing [%s:%d] : '%s' : '%s' optionÇot implemented.\n",

1344 
fûe
, 
löíum
, 
¨gs
[0],árgs[
cur_¨g
]);

1345 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1346 
out
;

1349 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "mss")) {

1350 #ifde‡
TCP_MAXSEG


1351 
li°íî
 *
l
;

1352 
mss
;

1354 i‡(!*
¨gs
[
cur_¨g
 + 1]) {

1355 
	`AÀπ
("parsing [%s:%d] : '%s' : missing MSS value.\n",

1356 
fûe
, 
löíum
, 
¨gs
[0]);

1357 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1358 
out
;

1361 
mss
 = 
	`°r2uic
(
¨gs
[
cur_¨g
 + 1]);

1362 i‡(
mss
 < 1 || mss > 65535) {

1363 
	`AÀπ
("parsing [%s:%d]: %sÉxpectsán MSS value between 1ánd 65535.\n",

1364 
fûe
, 
löíum
, 
¨gs
[0]);

1365 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1366 
out
;

1369 
l
 = 
cuΩroxy
->
li°í
;Ü !
œ°_li°í
;Ü =Ü->
√xt
)

1370 
l
->
max£g
 = 
mss
;

1372 
cur_¨g
 += 2;

1375 
	`AÀπ
("parsing [%s:%d] : '%s' : '%s' optionÇot implemented.\n",

1376 
fûe
, 
löíum
, 
¨gs
[0],árgs[
cur_¨g
]);

1377 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1378 
out
;

1382 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "defer-accept")) {

1383 #ifde‡
TCP_DEFER_ACCEPT


1384 
li°íî
 *
l
;

1386 
l
 = 
cuΩroxy
->
li°í
;Ü !
œ°_li°í
;Ü =Ü->
√xt
)

1387 
l
->
›ti⁄s
 |
LI_O_DEF_ACCEPT
;

1389 
cur_¨g
 ++;

1392 
	`AÀπ
("parsing [%s:%d] : '%s' : '%s' optionÇot implemented.\n",

1393 
fûe
, 
löíum
, 
¨gs
[0],árgs[
cur_¨g
]);

1394 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1395 
out
;

1399 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "transparent")) {

1400 #ifde‡
CONFIG_HAP_LINUX_TPROXY


1401 
li°íî
 *
l
;

1403 
l
 = 
cuΩroxy
->
li°í
;Ü !
œ°_li°í
;Ü =Ü->
√xt
)

1404 
l
->
›ti⁄s
 |
LI_O_FOREIGN
;

1406 
cur_¨g
 ++;

1409 
	`AÀπ
("parsing [%s:%d] : '%s' : '%s' optionÇot implemented.\n",

1410 
fûe
, 
löíum
, 
¨gs
[0],árgs[
cur_¨g
]);

1411 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1412 
out
;

1416 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "name")) {

1417 
li°íî
 *
l
;

1419 
l
 = 
cuΩroxy
->
li°í
;Ü !
œ°_li°í
;Ü =Ü->
√xt
)

1420 
l
->
«me
 = 
	`°rdup
(
¨gs
[
cur_¨g
 + 1]);

1422 
cur_¨g
 += 2;

1426 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "id")) {

1427 
eb32_node
 *
node
;

1428 
li°íî
 *
l
;

1430 i‡(
cuΩroxy
->
li°í
->
√xt
 !
œ°_li°í
) {

1431 
	`AÀπ
("parsing [%s:%d]: '%s' can be only used withá single socket.\n",

1432 
fûe
, 
löíum
, 
¨gs
[
cur_¨g
]);

1433 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1434 
out
;

1437 i‡(!*
¨gs
[
cur_¨g
 + 1]) {

1438 
	`AÀπ
("parsing [%s:%d]: '%s'Éxpectsán integerárgument.\n",

1439 
fûe
, 
löíum
, 
¨gs
[
cur_¨g
]);

1440 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1441 
out
;

1444 
cuΩroxy
->
li°í
->
luid
 = 
	`©ﬁ
(
¨gs
[
cur_¨g
 + 1]);

1445 
cuΩroxy
->
li°í
->
c⁄f
.
id
.
key
 = cuΩroxy->li°í->
luid
;

1447 i‡(
cuΩroxy
->
li°í
->
luid
 <= 0) {

1448 
	`AÀπ
("parsing [%s:%d]: custom id hasÅo be > 0\n",

1449 
fûe
, 
löíum
);

1450 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1451 
out
;

1454 
node
 = 
	`eb32_lookup
(&
cuΩroxy
->
c⁄f
.
u£d_li°íî_id
, cuΩroxy->
li°í
->
luid
);

1455 i‡(
node
) {

1456 
l
 = 
	`c⁄èöî_of
(
node
, 
li°íî
, 
c⁄f
.
id
);

1457 
	`AÀπ
("parsing [%s:%d]: custom id %d for socket '%s'álready usedát %s:%d.\n",

1458 
fûe
, 
löíum
, 
l
->
luid
, 
¨gs
[1],Ü->
c⁄f
.fûe,Ü->c⁄f.
löe
);

1459 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1460 
out
;

1462 
	`eb32_ö£π
(&
cuΩroxy
->
c⁄f
.
u£d_li°íî_id
, &cuΩroxy->
li°í
->c⁄f.
id
);

1464 
cur_¨g
 += 2;

1468 
	`AÀπ
("parsing [%s:%d] : '%s' only supportsÅhe 'transparent', 'defer-accept', 'name', 'id', 'mss'ánd 'interface' options.\n",

1469 
fûe
, 
löíum
, 
¨gs
[0]);

1470 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1471 
out
;

1473 
globÆ
.
maxsock
++;

1474 
out
;

1476 i‡(!
	`°rcmp
(
¨gs
[0], "monitor-net")) {

1477 i‡(!*
¨gs
[1] || !
	`°r2√t
◊rgs[1], &
cuΩroxy
->
m⁄_√t
, &cuΩroxy->
m⁄_mask
)) {

1478 
	`AÀπ
("parsing [%s:%d] : '%s'Éxpectsáddress[/mask].\n",

1479 
fûe
, 
löíum
, 
¨gs
[0]);

1480 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1481 
out
;

1483 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_FE
, 
fûe
, 
löíum
, 
¨gs
[0], 
NULL
))

1484 
îr_code
 |
ERR_WARN
;

1487 
cuΩroxy
->
m⁄_√t
.
s_addr
 &cuΩroxy->
m⁄_mask
.s_addr;

1488 
out
;

1490 i‡(!
	`°rcmp
(
¨gs
[0], "monitor-uri")) {

1491 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_FE
, 
fûe
, 
löíum
, 
¨gs
[0], 
NULL
))

1492 
îr_code
 |
ERR_WARN
;

1494 i‡(!*
¨gs
[1]) {

1495 
	`AÀπ
("parsing [%s:%d] : '%s'Éxpectsán URI.\n",

1496 
fûe
, 
löíum
, 
¨gs
[0]);

1497 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1498 
out
;

1501 
	`‰ì
(
cuΩroxy
->
m⁄ô‹_uri
);

1502 
cuΩroxy
->
m⁄ô‹_uri_Àn
 = 
	`°æí
(
¨gs
[1]);

1503 
cuΩroxy
->
m⁄ô‹_uri
 = (*)
	`ˇŒoc
(1, cuΩroxy->
m⁄ô‹_uri_Àn
 + 1);

1504 
	`mem˝y
(
cuΩroxy
->
m⁄ô‹_uri
, 
¨gs
[1], cuΩroxy->
m⁄ô‹_uri_Àn
);

1505 
cuΩroxy
->
m⁄ô‹_uri
[cuΩroxy->
m⁄ô‹_uri_Àn
] = '\0';

1507 
out
;

1509 i‡(!
	`°rcmp
(
¨gs
[0], "mode")) {

1510 i‡(!
	`°rcmp
(
¨gs
[1], "hâp")Ë
cuΩroxy
->
mode
 = 
PR_MODE_HTTP
;

1511 i‡(!
	`°rcmp
(
¨gs
[1], "t˝")Ë
cuΩroxy
->
mode
 = 
PR_MODE_TCP
;

1512 i‡(!
	`°rcmp
(
¨gs
[1], "hó…h")Ë
cuΩroxy
->
mode
 = 
PR_MODE_HEALTH
;

1514 
	`AÀπ
("∑rsög [%s:%d] : unknow¿¥oxy modê'%s'.\n", 
fûe
, 
löíum
, 
¨gs
[1]);

1515 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1516 
out
;

1519 i‡(!
	`°rcmp
(
¨gs
[0], "id")) {

1520 
eb32_node
 *
node
;

1522 i‡(
cuΩroxy
 =&
deÂroxy
) {

1523 
	`AÀπ
("parsing [%s:%d]: '%s'Çotállowed in 'defaults' section.\n",

1524 
fûe
, 
löíum
, 
¨gs
[0]);

1525 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1526 
out
;

1529 i‡(!*
¨gs
[1]) {

1530 
	`AÀπ
("parsing [%s:%d]: '%s'Éxpectsán integerárgument.\n",

1531 
fûe
, 
löíum
, 
¨gs
[0]);

1532 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1533 
out
;

1536 
cuΩroxy
->
uuid
 = 
	`©ﬁ
(
¨gs
[1]);

1537 
cuΩroxy
->
c⁄f
.
id
.
key
 = cuΩroxy->
uuid
;

1539 i‡(
cuΩroxy
->
uuid
 <= 0) {

1540 
	`AÀπ
("parsing [%s:%d]: custom id hasÅo be > 0.\n",

1541 
fûe
, 
löíum
);

1542 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1543 
out
;

1546 
node
 = 
	`eb32_lookup
(&
u£d_¥oxy_id
, 
cuΩroxy
->
uuid
);

1547 i‡(
node
) {

1548 
¥oxy
 *
èrgë
 = 
	`c⁄èöî_of
(
node
, ¥oxy, 
c⁄f
.
id
);

1549 
	`AÀπ
("parsing [%s:%d]: %s %sÑeuses same custom idás %s %s (declaredát %s:%d).\n",

1550 
fûe
, 
löíum
, 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
,

1551 
	`¥oxy_ty≥_°r
(
èrgë
),Å¨gë->
id
,Å¨gë->
c⁄f
.
fûe
,Å¨gë->c⁄f.
löe
);

1552 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1553 
out
;

1555 
	`eb32_ö£π
(&
u£d_¥oxy_id
, &
cuΩroxy
->
c⁄f
.
id
);

1557 i‡(!
	`°rcmp
(
¨gs
[0], "description")) {

1558 
i
, 
Àn
=0;

1559 *
d
;

1561 i‡(
cuΩroxy
 =&
deÂroxy
) {

1562 
	`AÀπ
("parsing [%s:%d]: '%s'Çotállowed in 'defaults' section.\n",

1563 
fûe
, 
löíum
, 
¨gs
[0]);

1564 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1565 
out
;

1568 i‡(!*
¨gs
[1]) {

1569 
	`AÀπ
("parsing [%s:%d]: '%s'Éxpectsá stringárgument.\n",

1570 
fûe
, 
löíum
, 
¨gs
[0]);

1574 
i
=1; *
¨gs
[i]; i++)

1575 
Àn
 +
	`°æí
(
¨gs
[
i
])+1;

1577 
d
 = (*)
	`ˇŒoc
(1, 
Àn
);

1578 
cuΩroxy
->
desc
 = 
d
;

1580 
d
 +
	`•rötf
(d, "%s", 
¨gs
[1]);

1581 
i
=2; *
¨gs
[i]; i++)

1582 
d
 +
	`•rötf
(d, " %s", 
¨gs
[
i
]);

1585 i‡(!
	`°rcmp
(
¨gs
[0], "disabled")) {

1586 
cuΩroxy
->
°©e
 = 
PR_STSTOPPED
;

1588 i‡(!
	`°rcmp
(
¨gs
[0], "enabled")) {

1589 
cuΩroxy
->
°©e
 = 
PR_STNEW
;

1591 i‡(!
	`°rcmp
(
¨gs
[0], "bind-process")) {

1592 
cur_¨g
 = 1;

1593 
£t
 = 0;

1595 *
¨gs
[
cur_¨g
]) {

1596 
u
;

1597 i‡(
	`°rcmp
(
¨gs
[
cur_¨g
], "all") == 0) {

1598 
£t
 = 0;

1601 i‡(
	`°rcmp
(
¨gs
[
cur_¨g
], "odd") == 0) {

1602 
£t
 |= 0x55555555;

1604 i‡(
	`°rcmp
(
¨gs
[
cur_¨g
], "even") == 0) {

1605 
£t
 |= 0xAAAAAAAA;

1608 
u
 = 
	`°r2uic
(
¨gs
[
cur_¨g
]);

1609 i‡(
u
 < 1 || u > 32) {

1610 
	`AÀπ
("parsing [%s:%d]: %sÉxpects 'all', 'odd', 'even', orÖrocessÇumbers from 1Åo 32.\n",

1611 
fûe
, 
löíum
, 
¨gs
[0]);

1612 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1613 
out
;

1615 i‡(
u
 > 
globÆ
.
nb¥oc
) {

1616 
	`W¨nög
("parsing [%s:%d]: %sÑeferencesÖrocessÇumber higherÅhan global.nbproc.\n",

1617 
fûe
, 
löíum
, 
¨gs
[0]);

1618 
îr_code
 |
ERR_WARN
;

1620 
£t
 |1 << (
u
 - 1);

1622 
cur_¨g
++;

1624 
cuΩroxy
->
böd_¥oc
 = 
£t
;

1626 i‡(!
	`°rcmp
(
¨gs
[0], "acl")) {

1627 i‡(
cuΩroxy
 =&
deÂroxy
) {

1628 
	`AÀπ
("∑rsög [%s:%d] : '%s'ÇŸáŒowed i¿'deÁu…s' se˘i⁄.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

1629 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1630 
out
;

1633 
îr
 = 
	`övÆid_ch¨
(
¨gs
[1]);

1634 i‡(
îr
) {

1635 
	`AÀπ
("parsing [%s:%d] : character '%c' isÇotÖermitted ináclÇame '%s'.\n",

1636 
fûe
, 
löíum
, *
îr
, 
¨gs
[1]);

1637 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1640 i‡(
	`∑r£_a˛
((c⁄° **)
¨gs
 + 1, &
cuΩroxy
->
a˛
Ë=
NULL
) {

1641 
	`AÀπ
("parsing [%s:%d] :Érror detected whileÖarsing ACL '%s'.\n",

1642 
fûe
, 
löíum
, 
¨gs
[1]);

1643 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1644 
out
;

1647 i‡(!
	`°rcmp
(
¨gs
[0], "cookie")) {

1648 
cur_¨g
;

1650 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_BE
, 
fûe
, 
löíum
, 
¨gs
[0], 
NULL
))

1651 
îr_code
 |
ERR_WARN
;

1653 i‡(*(
¨gs
[1]) == 0) {

1654 
	`AÀπ
("parsing [%s:%d] : '%s'Éxpects <cookie_name>ásárgument.\n",

1655 
fûe
, 
löíum
, 
¨gs
[0]);

1656 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1657 
out
;

1660 
cuΩroxy
->
›ti⁄s
 &~
PR_O_COOK_ANY
;

1661 
cuΩroxy
->
›ti⁄s2
 &~
PR_O2_COOK_PSV
;

1662 
cuΩroxy
->
cookõ_maxidÀ
 = cuΩroxy->
cookõ_maxli„
 = 0;

1663 
	`‰ì
(
cuΩroxy
->
cookõ_domaö
); cuΩroxy->cookõ_domaö = 
NULL
;

1664 
	`‰ì
(
cuΩroxy
->
cookõ_«me
);

1665 
cuΩroxy
->
cookõ_«me
 = 
	`°rdup
(
¨gs
[1]);

1666 
cuΩroxy
->
cookõ_Àn
 = 
	`°æí
(cuΩroxy->
cookõ_«me
);

1668 
cur_¨g
 = 2;

1669 *(
¨gs
[
cur_¨g
])) {

1670 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "rewrite")) {

1671 
cuΩroxy
->
›ti⁄s
 |
PR_O_COOK_RW
;

1673 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "indirect")) {

1674 
cuΩroxy
->
›ti⁄s
 |
PR_O_COOK_IND
;

1676 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "insert")) {

1677 
cuΩroxy
->
›ti⁄s
 |
PR_O_COOK_INS
;

1679 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "nocache")) {

1680 
cuΩroxy
->
›ti⁄s
 |
PR_O_COOK_NOC
;

1682 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "postonly")) {

1683 
cuΩroxy
->
›ti⁄s
 |
PR_O_COOK_POST
;

1685 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "preserve")) {

1686 
cuΩroxy
->
›ti⁄s2
 |
PR_O2_COOK_PSV
;

1688 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "prefix")) {

1689 
cuΩroxy
->
›ti⁄s
 |
PR_O_COOK_PFX
;

1691 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "domain")) {

1692 i‡(!*
¨gs
[
cur_¨g
 + 1]) {

1693 
	`AÀπ
("parsing [%s:%d]: '%s'Éxpects <domain>ásárgument.\n",

1694 
fûe
, 
löíum
, 
¨gs
[
cur_¨g
]);

1695 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1696 
out
;

1699 i‡(*
¨gs
[
cur_¨g
 + 1] !'.' || !
	`°rchr
(args[cur_arg + 1] + 1, '.')) {

1701 
	`W¨nög
("parsing [%s:%d]: domain '%s' containsÇoÉmbedded"

1704 
fûe
, 
löíum
, 
¨gs
[
cur_¨g
 + 1]);

1705 
îr_code
 |
ERR_WARN
;

1708 
îr
 = 
	`övÆid_domaöch¨
(
¨gs
[
cur_¨g
 + 1]);

1709 i‡(
îr
) {

1710 
	`AÀπ
("parsing [%s:%d]: character '%c' isÇotÖermitted in domainÇame '%s'.\n",

1711 
fûe
, 
löíum
, *
îr
, 
¨gs
[
cur_¨g
 + 1]);

1712 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1713 
out
;

1716 i‡(!
cuΩroxy
->
cookõ_domaö
) {

1717 
cuΩroxy
->
cookõ_domaö
 = 
	`°rdup
(
¨gs
[
cur_¨g
 + 1]);

1723 *
√w_±r
;

1724 
√w_Àn
 = 
	`°æí
(
cuΩroxy
->
cookõ_domaö
) +

1725 
	`°æí
("; domaö="Ë+ såÀn(
¨gs
[
cur_¨g
 + 1]) + 1;

1726 
√w_±r
 = 
	`mÆloc
(
√w_Àn
);

1727 
	`¢¥ötf
(
√w_±r
, 
√w_Àn
, "%s; domaö=%s", 
cuΩroxy
->
cookõ_domaö
, 
¨gs
[
cur_¨g
+1]);

1728 
	`‰ì
(
cuΩroxy
->
cookõ_domaö
);

1729 
cuΩroxy
->
cookõ_domaö
 = 
√w_±r
;

1731 
cur_¨g
++;

1733 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "maxidle")) {

1734 
maxidÀ
;

1735 c⁄° *
ªs
;

1737 i‡(!*
¨gs
[
cur_¨g
 + 1]) {

1738 
	`AÀπ
("parsing [%s:%d]: '%s'Éxpects <idletime> in secondsásárgument.\n",

1739 
fûe
, 
löíum
, 
¨gs
[
cur_¨g
]);

1740 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1741 
out
;

1744 
ªs
 = 
	`∑r£_time_îr
(
¨gs
[
cur_¨g
 + 1], &
maxidÀ
, 
TIME_UNIT_S
);

1745 i‡(
ªs
) {

1746 
	`AÀπ
("parsing [%s:%d]: unexpected character '%c' inárgumentÅo <%s>.\n",

1747 
fûe
, 
löíum
, *
ªs
, 
¨gs
[
cur_¨g
]);

1748 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1749 
out
;

1751 
cuΩroxy
->
cookõ_maxidÀ
 = 
maxidÀ
;

1752 
cur_¨g
++;

1754 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "maxlife")) {

1755 
maxli„
;

1756 c⁄° *
ªs
;

1758 i‡(!*
¨gs
[
cur_¨g
 + 1]) {

1759 
	`AÀπ
("parsing [%s:%d]: '%s'Éxpects <lifetime> in secondsásárgument.\n",

1760 
fûe
, 
löíum
, 
¨gs
[
cur_¨g
]);

1761 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1762 
out
;

1765 
ªs
 = 
	`∑r£_time_îr
(
¨gs
[
cur_¨g
 + 1], &
maxli„
, 
TIME_UNIT_S
);

1766 i‡(
ªs
) {

1767 
	`AÀπ
("parsing [%s:%d]: unexpected character '%c' inárgumentÅo <%s>.\n",

1768 
fûe
, 
löíum
, *
ªs
, 
¨gs
[
cur_¨g
]);

1769 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1770 
out
;

1772 
cuΩroxy
->
cookõ_maxli„
 = 
maxli„
;

1773 
cur_¨g
++;

1776 
	`AÀπ
("parsing [%s:%d] : '%s' supports 'rewrite', 'insert', 'prefix', 'indirect', 'nocache', 'postonly', 'domain', 'maxidle,ánd 'maxlife' options.\n",

1777 
fûe
, 
löíum
, 
¨gs
[0]);

1778 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1779 
out
;

1781 
cur_¨g
++;

1783 i‡(!
	`POWEROF2
(
cuΩroxy
->
›ti⁄s
 & (
PR_O_COOK_RW
|
PR_O_COOK_IND
))) {

1784 
	`AÀπ
("parsing [%s:%d] : cookie 'rewrite'ánd 'indirect' modesáre incompatible.\n",

1785 
fûe
, 
löíum
);

1786 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1789 i‡(!
	`POWEROF2
(
cuΩroxy
->
›ti⁄s
 & (
PR_O_COOK_RW
|
PR_O_COOK_INS
|
PR_O_COOK_PFX
))) {

1790 
	`AÀπ
("parsing [%s:%d] : cookie 'rewrite', 'insert'ánd 'prefix' modesáre incompatible.\n",

1791 
fûe
, 
löíum
);

1792 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1795 i‡((
cuΩroxy
->
›ti⁄s2
 & 
PR_O2_COOK_PSV
Ë&& !(cuΩroxy->
›ti⁄s
 & (
PR_O_COOK_INS
|
PR_O_COOK_IND
))) {

1796 
	`AÀπ
("parsing [%s:%d] : cookie 'preserve'ÑequiresátÜeast 'insert' or 'indirect'.\n",

1797 
fûe
, 
löíum
);

1798 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1801 i‡(!
	`°rcmp
(
¨gs
[0], "persist")) {

1802 i‡(*(
¨gs
[1]) == 0) {

1803 
	`AÀπ
("parsing [%s:%d] : missingÖersist method.\n",

1804 
fûe
, 
löíum
);

1805 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1806 
out
;

1809 i‡(!
	`°∫cmp
(
¨gs
[1], "rdp-cookie", 10)) {

1810 
cuΩroxy
->
›ti⁄s2
 |
PR_O2_RDPC_PRST
;

1812 i‡(*(
¨gs
[1] + 10) == '(') {

1813 c⁄° *
beg
, *
íd
;

1815 
beg
 = 
¨gs
[1] + 11;

1816 
íd
 = 
	`°rchr
(
beg
, ')');

1818 i‡(!
íd
 ||Énd =
beg
) {

1819 
	`AÀπ
("parsing [%s:%d] :ÖersistÑdp-cookie(name)'ÑequiresánÑdp cookieÇame.\n",

1820 
fûe
, 
löíum
);

1821 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1822 
out
;

1825 
	`‰ì
(
cuΩroxy
->
rdp_cookõ_«me
);

1826 
cuΩroxy
->
rdp_cookõ_«me
 = 
	`my_°∫dup
(
beg
, 
íd
 - beg);

1827 
cuΩroxy
->
rdp_cookõ_Àn
 = 
íd
-
beg
;

1829 i‡(*(
¨gs
[1] + 10) == '\0') {

1830 
	`‰ì
(
cuΩroxy
->
rdp_cookõ_«me
);

1831 
cuΩroxy
->
rdp_cookõ_«me
 = 
	`°rdup
("msts");

1832 
cuΩroxy
->
rdp_cookõ_Àn
 = 
	`°æí
(cuΩroxy->
rdp_cookõ_«me
);

1835 
	`AÀπ
("parsing [%s:%d] :ÖersistÑdp-cookie(name)'ÑequiresánÑdp cookieÇame.\n",

1836 
fûe
, 
löíum
);

1837 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1838 
out
;

1842 
	`AÀπ
("parsing [%s:%d] : unknownÖersist method.\n",

1843 
fûe
, 
löíum
);

1844 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1845 
out
;

1848 i‡(!
	`°rcmp
(
¨gs
[0], "appsession")) {

1849 
cur_¨g
;

1851 i‡(
cuΩroxy
 =&
deÂroxy
) {

1852 
	`AÀπ
("∑rsög [%s:%d] : '%s'ÇŸáŒowed i¿'deÁu…s' se˘i⁄.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

1853 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1854 
out
;

1857 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_BE
, 
fûe
, 
löíum
, 
¨gs
[0], 
NULL
))

1858 
îr_code
 |
ERR_WARN
;

1860 i‡(*(
¨gs
[5]) == 0) {

1861 
	`AÀπ
("parsing [%s:%d] : '%s'Éxpects 'appsession' <cookie_name> 'len' <len> 'timeout' <timeout> [options*].\n",

1862 
fûe
, 
löíum
, 
¨gs
[0]);

1863 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1864 
out
;

1866 
have_≠p£ssi⁄
 = 1;

1867 
	`‰ì
(
cuΩroxy
->
≠p£ssi⁄_«me
);

1868 
cuΩroxy
->
≠p£ssi⁄_«me
 = 
	`°rdup
(
¨gs
[1]);

1869 
cuΩroxy
->
≠p£ssi⁄_«me_Àn
 = 
	`°æí
(cuΩroxy->
≠p£ssi⁄_«me
);

1870 
cuΩroxy
->
≠p£ssi⁄_Àn
 = 
	`©oi
(
¨gs
[3]);

1871 
îr
 = 
	`∑r£_time_îr
(
¨gs
[5], &
vÆ
, 
TIME_UNIT_MS
);

1872 i‡(
îr
) {

1873 
	`AÀπ
("parsing [%s:%d] : unexpected character '%c' in %sÅimeout.\n",

1874 
fûe
, 
löíum
, *
îr
, 
¨gs
[0]);

1875 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1876 
out
;

1878 
cuΩroxy
->
timeout
.
≠p£ssi⁄
 = 
vÆ
;

1880 i‡(
	`≠p£ssi⁄_hash_öô
(&(
cuΩroxy
->
htbl_¥oxy
), 
de°roy
) == 0) {

1881 
	`AÀπ
("∑rsög [%s:%d] : ouào‡mem‹y.\n", 
fûe
, 
löíum
);

1882 
îr_code
 |
ERR_ALERT
 | 
ERR_ABORT
;

1883 
out
;

1886 
cur_¨g
 = 6;

1887 
cuΩroxy
->
›ti⁄s2
 &~
PR_O2_AS_REQL
;

1888 
cuΩroxy
->
›ti⁄s2
 &~
PR_O2_AS_M_ANY
;

1889 
cuΩroxy
->
›ti⁄s2
 |
PR_O2_AS_M_PP
;

1890 *(
¨gs
[
cur_¨g
])) {

1891 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "request-learn")) {

1892 
cuΩroxy
->
›ti⁄s2
 |
PR_O2_AS_REQL
;

1893 } i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "prefix")) {

1894 
cuΩroxy
->
›ti⁄s2
 |
PR_O2_AS_PFX
;

1895 } i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "mode")) {

1896 i‡(!*
¨gs
[
cur_¨g
 + 1]) {

1897 
	`AÀπ
("parsing [%s:%d] : '%s': missingárgument for '%s'.\n",

1898 
fûe
, 
löíum
, 
¨gs
[0],árgs[
cur_¨g
]);

1899 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1900 
out
;

1903 
cur_¨g
++;

1904 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "query-string")) {

1905 
cuΩroxy
->
›ti⁄s2
 &~
PR_O2_AS_M_ANY
;

1906 
cuΩroxy
->
›ti⁄s2
 |
PR_O2_AS_M_QS
;

1907 } i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "path-parameters")) {

1908 
cuΩroxy
->
›ti⁄s2
 &~
PR_O2_AS_M_ANY
;

1909 
cuΩroxy
->
›ti⁄s2
 |
PR_O2_AS_M_PP
;

1911 
	`AÀπ
("∑rsög [%s:%d] : unknow¿modê'%s'\n", 
fûe
, 
löíum
, 
¨gs
[
cur_¨g
]);

1912 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1913 
out
;

1916 
cur_¨g
++;

1919 i‡(!
	`°rcmp
(
¨gs
[0], "capture")) {

1920 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_FE
, 
fûe
, 
löíum
, 
¨gs
[0], 
NULL
))

1921 
îr_code
 |
ERR_WARN
;

1923 i‡(!
	`°rcmp
(
¨gs
[1], "cookie")) {

1924 i‡(
cuΩroxy
 =&
deÂroxy
) {

1925 
	`AÀπ
("∑rsög [%s:%d] : '%†%s'ÇŸáŒowed i¿'deÁu…s' se˘i⁄.\n", 
fûe
, 
löíum
, 
¨gs
[0],árgs[1]);

1926 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1927 
out
;

1930 i‡(*(
¨gs
[4]) == 0) {

1931 
	`AÀπ
("parsing [%s:%d] : '%s'Éxpects 'cookie' <cookie_name> 'len' <len>.\n",

1932 
fûe
, 
löíum
, 
¨gs
[0]);

1933 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1934 
out
;

1936 
	`‰ì
(
cuΩroxy
->
ˇ±uª_«me
);

1937 
cuΩroxy
->
ˇ±uª_«me
 = 
	`°rdup
(
¨gs
[2]);

1938 
cuΩroxy
->
ˇ±uª_«mñí
 = 
	`°æí
(cuΩroxy->
ˇ±uª_«me
);

1939 
cuΩroxy
->
ˇ±uª_Àn
 = 
	`©ﬁ
(
¨gs
[4]);

1940 i‡(
cuΩroxy
->
ˇ±uª_Àn
 >
CAPTURE_LEN
) {

1941 
	`W¨nög
("parsing [%s:%d] :Åruncating captureÜengthÅo %d bytes.\n",

1942 
fûe
, 
löíum
, 
CAPTURE_LEN
 - 1);

1943 
îr_code
 |
ERR_WARN
;

1944 
cuΩroxy
->
ˇ±uª_Àn
 = 
CAPTURE_LEN
 - 1;

1946 
cuΩroxy
->
to_log
 |
LW_COOKIE
;

1948 i‡(!
	`°rcmp
(
¨gs
[1], "request") && !strcmp(args[2], "header")) {

1949 
ˇp_hdr
 *
hdr
;

1951 i‡(
cuΩroxy
 =&
deÂroxy
) {

1952 
	`AÀπ
("∑rsög [%s:%d] : '%†%s'ÇŸáŒowed i¿'deÁu…s' se˘i⁄.\n", 
fûe
, 
löíum
, 
¨gs
[0],árgs[1]);

1953 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1954 
out
;

1957 i‡(*(
¨gs
[3]Ë=0 || 
	`°rcmp
(args[4], "len") != 0 || *(args[5]) == 0) {

1958 
	`AÀπ
("parsing [%s:%d] : '%s %s'Éxpects 'header' <header_name> 'len' <len>.\n",

1959 
fûe
, 
löíum
, 
¨gs
[0],árgs[1]);

1960 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1961 
out
;

1964 
hdr
 = 
	`ˇŒoc
((
ˇp_hdr
), 1);

1965 
hdr
->
√xt
 = 
cuΩroxy
->
ªq_ˇp
;

1966 
hdr
->
«me
 = 
	`°rdup
(
¨gs
[3]);

1967 
hdr
->
«mñí
 = 
	`°æí
(
¨gs
[3]);

1968 
hdr
->
Àn
 = 
	`©ﬁ
(
¨gs
[5]);

1969 
hdr
->
poﬁ
 = 
	`¸óã_poﬁ
("ˇphdr", hdr->
Àn
 + 1, 
MEM_F_SHARED
);

1970 
hdr
->
ödex
 = 
cuΩroxy
->
nb_ªq_ˇp
++;

1971 
cuΩroxy
->
ªq_ˇp
 = 
hdr
;

1972 
cuΩroxy
->
to_log
 |
LW_REQHDR
;

1974 i‡(!
	`°rcmp
(
¨gs
[1], "response") && !strcmp(args[2], "header")) {

1975 
ˇp_hdr
 *
hdr
;

1977 i‡(
cuΩroxy
 =&
deÂroxy
) {

1978 
	`AÀπ
("∑rsög [%s:%d] : '%†%s'ÇŸáŒowed i¿'deÁu…s' se˘i⁄.\n", 
fûe
, 
löíum
, 
¨gs
[0],árgs[1]);

1979 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1980 
out
;

1983 i‡(*(
¨gs
[3]Ë=0 || 
	`°rcmp
(args[4], "len") != 0 || *(args[5]) == 0) {

1984 
	`AÀπ
("parsing [%s:%d] : '%s %s'Éxpects 'header' <header_name> 'len' <len>.\n",

1985 
fûe
, 
löíum
, 
¨gs
[0],árgs[1]);

1986 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

1987 
out
;

1989 
hdr
 = 
	`ˇŒoc
((
ˇp_hdr
), 1);

1990 
hdr
->
√xt
 = 
cuΩroxy
->
r•_ˇp
;

1991 
hdr
->
«me
 = 
	`°rdup
(
¨gs
[3]);

1992 
hdr
->
«mñí
 = 
	`°æí
(
¨gs
[3]);

1993 
hdr
->
Àn
 = 
	`©ﬁ
(
¨gs
[5]);

1994 
hdr
->
poﬁ
 = 
	`¸óã_poﬁ
("ˇphdr", hdr->
Àn
 + 1, 
MEM_F_SHARED
);

1995 
hdr
->
ödex
 = 
cuΩroxy
->
nb_r•_ˇp
++;

1996 
cuΩroxy
->
r•_ˇp
 = 
hdr
;

1997 
cuΩroxy
->
to_log
 |
LW_RSPHDR
;

2000 
	`AÀπ
("parsing [%s:%d] : '%s'Éxpects 'cookie' or 'request header' or 'response header'.\n",

2001 
fûe
, 
löíum
, 
¨gs
[0]);

2002 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2003 
out
;

2006 i‡(!
	`°rcmp
(
¨gs
[0], "retries")) {

2007 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_BE
, 
fûe
, 
löíum
, 
¨gs
[0], 
NULL
))

2008 
îr_code
 |
ERR_WARN
;

2010 i‡(*(
¨gs
[1]) == 0) {

2011 
	`AÀπ
("parsing [%s:%d] : '%s'Éxpectsán integerárgument (dispatch counts for one).\n",

2012 
fûe
, 
löíum
, 
¨gs
[0]);

2013 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2014 
out
;

2016 
cuΩroxy
->
c⁄n_ªåõs
 = 
	`©ﬁ
(
¨gs
[1]);

2018 i‡(!
	`°rcmp
(
¨gs
[0], "http-request")) {

2019 
ªq_a˛_ruÀ
 *
ªq_a˛
;

2021 i‡(
cuΩroxy
 =&
deÂroxy
) {

2022 
	`AÀπ
("∑rsög [%s:%d]: '%s'ÇŸáŒowed i¿'deÁu…s' se˘i⁄.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

2023 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2024 
out
;

2028 i‡(!
	`LIST_ISEMPTY
(&
cuΩroxy
->
ªq_a˛
Ë&& !
	`LIST_PREV
(&cuΩroxy->ªq_a˛, 
ªq_a˛_ruÀ
 *, 
li°
)->
c⁄d
) {

2029 
	`W¨nög
("parsing [%s:%d]:Örevious '%s'áction hasÇo conditionáttached, furtherÉntriesáre NOOP.\n",

2030 
fûe
, 
löíum
, 
¨gs
[0]);

2031 
îr_code
 |
ERR_WARN
;

2034 
ªq_a˛
 = 
	`∑r£_auth_c⁄d
((c⁄° **)
¨gs
 + 1, 
fûe
, 
löíum
, 
cuΩroxy
);

2036 i‡(!
ªq_a˛
) {

2037 
îr_code
 |
ERR_ALERT
 | 
ERR_ABORT
;

2038 
out
;

2041 
îr_code
 |
	`w¨nif_c⁄d_ªquúes_ª•
(
ªq_a˛
->
c⁄d
, 
fûe
, 
löíum
);

2042 
	`LIST_ADDQ
(&
cuΩroxy
->
ªq_a˛
, &ªq_a˛->
li°
);

2044 i‡(!
	`°rcmp
(
¨gs
[0], "block")) {

2045 i‡(
cuΩroxy
 =&
deÂroxy
) {

2046 
	`AÀπ
("∑rsög [%s:%d] : '%s'ÇŸáŒowed i¿'deÁu…s' se˘i⁄.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

2047 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2048 
out
;

2051 i‡(
	`°rcmp
(
¨gs
[1], "if") != 0 && strcmp(args[1], "unless") != 0) {

2052 
	`AÀπ
("parsing [%s:%d] : '%s'ÑequiresÉither 'if' or 'unless' followed byá condition.\n",

2053 
fûe
, 
löíum
, 
¨gs
[0]);

2054 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2055 
out
;

2058 i‡((
c⁄d
 = 
	`buûd_a˛_c⁄d
(
fûe
, 
löíum
, 
cuΩroxy
, (c⁄° **)
¨gs
 + 1)Ë=
NULL
) {

2059 
	`AÀπ
("parsing [%s:%d] :Érror detected whileÖarsing blocking condition.\n",

2060 
fûe
, 
löíum
);

2061 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2062 
out
;

2065 
	`LIST_ADDQ
(&
cuΩroxy
->
block_c⁄d
, &
c⁄d
->
li°
);

2066 
	`w¨nif_mi•œ˚d_block
(
cuΩroxy
, 
fûe
, 
löíum
, 
¨gs
[0]);

2068 i‡(!
	`°rcmp
(
¨gs
[0], "redirect")) {

2069 
ªdúe˘_ruÀ
 *
ruÀ
;

2070 
cur_¨g
;

2071 
ty≥
 = 
REDIRECT_TYPE_NONE
;

2072 
code
 = 302;

2073 *
de°ö©i⁄
 = 
NULL
;

2074 *
cookõ
 = 
NULL
;

2075 
cookõ_£t
 = 0;

2076 
Êags
 = 
REDIRECT_FLAG_NONE
;

2078 i‡(
cuΩroxy
 =&
deÂroxy
) {

2079 
	`AÀπ
("∑rsög [%s:%d] : '%s'ÇŸáŒowed i¿'deÁu…s' se˘i⁄.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

2080 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2081 
out
;

2084 
cur_¨g
 = 1;

2085 *(
¨gs
[
cur_¨g
])) {

2086 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "location")) {

2087 i‡(!*
¨gs
[
cur_¨g
 + 1]) {

2088 
	`AÀπ
("parsing [%s:%d] : '%s': missingárgument for '%s'.\n",

2089 
fûe
, 
löíum
, 
¨gs
[0],árgs[
cur_¨g
]);

2090 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2091 
out
;

2094 
ty≥
 = 
REDIRECT_TYPE_LOCATION
;

2095 
cur_¨g
++;

2096 
de°ö©i⁄
 = 
¨gs
[
cur_¨g
];

2098 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "prefix")) {

2099 i‡(!*
¨gs
[
cur_¨g
 + 1]) {

2100 
	`AÀπ
("parsing [%s:%d] : '%s': missingárgument for '%s'.\n",

2101 
fûe
, 
löíum
, 
¨gs
[0],árgs[
cur_¨g
]);

2102 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2103 
out
;

2106 
ty≥
 = 
REDIRECT_TYPE_PREFIX
;

2107 
cur_¨g
++;

2108 
de°ö©i⁄
 = 
¨gs
[
cur_¨g
];

2110 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "set-cookie")) {

2111 i‡(!*
¨gs
[
cur_¨g
 + 1]) {

2112 
	`AÀπ
("parsing [%s:%d] : '%s': missingárgument for '%s'.\n",

2113 
fûe
, 
löíum
, 
¨gs
[0],árgs[
cur_¨g
]);

2114 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2115 
out
;

2118 
cur_¨g
++;

2119 
cookõ
 = 
¨gs
[
cur_¨g
];

2120 
cookõ_£t
 = 1;

2122 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "clear-cookie")) {

2123 i‡(!*
¨gs
[
cur_¨g
 + 1]) {

2124 
	`AÀπ
("parsing [%s:%d] : '%s': missingárgument for '%s'.\n",

2125 
fûe
, 
löíum
, 
¨gs
[0],árgs[
cur_¨g
]);

2126 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2127 
out
;

2130 
cur_¨g
++;

2131 
cookõ
 = 
¨gs
[
cur_¨g
];

2132 
cookõ_£t
 = 0;

2134 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
],"code")) {

2135 i‡(!*
¨gs
[
cur_¨g
 + 1]) {

2136 
	`AÀπ
("parsing [%s:%d] : '%s': missing HTTP code.\n",

2137 
fûe
, 
löíum
, 
¨gs
[0]);

2138 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2139 
out
;

2141 
cur_¨g
++;

2142 
code
 = 
	`©ﬁ
(
¨gs
[
cur_¨g
]);

2143 i‡(
code
 < 301 || code > 303) {

2144 
	`AÀπ
("parsing [%s:%d] : '%s': unsupported HTTP code '%d'.\n",

2145 
fûe
, 
löíum
, 
¨gs
[0], 
code
);

2146 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2147 
out
;

2150 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
],"drop-query")) {

2151 
Êags
 |
REDIRECT_FLAG_DROP_QS
;

2153 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
],"append-slash")) {

2154 
Êags
 |
REDIRECT_FLAG_APPEND_SLASH
;

2156 i‡(
	`°rcmp
(
¨gs
[
cur_¨g
], "if") == 0 ||

2157 
	`°rcmp
(
¨gs
[
cur_¨g
], "unless") == 0) {

2158 
c⁄d
 = 
	`buûd_a˛_c⁄d
(
fûe
, 
löíum
, 
cuΩroxy
, (c⁄° **)
¨gs
 + 
cur_¨g
);

2159 i‡(!
c⁄d
) {

2160 
	`AÀπ
("parsing [%s:%d] : '%s':Érror detected whileÖarsingÑedirect condition.\n",

2161 
fûe
, 
löíum
, 
¨gs
[0]);

2162 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2163 
out
;

2168 
	`AÀπ
("parsing [%s:%d] : '%s'Éxpects 'code', 'prefix', 'location', 'set-cookie', 'clear-cookie', 'drop-query' or 'append-slash' (was '%s').\n",

2169 
fûe
, 
löíum
, 
¨gs
[0],árgs[
cur_¨g
]);

2170 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2171 
out
;

2173 
cur_¨g
++;

2176 i‡(
ty≥
 =
REDIRECT_TYPE_NONE
) {

2177 
	`AÀπ
("parsing [%s:%d] : '%s'ÉxpectsáÑedirectionÅype ('prefix' or 'location').\n",

2178 
fûe
, 
löíum
, 
¨gs
[0]);

2179 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2180 
out
;

2183 
ruÀ
 = (
ªdúe˘_ruÀ
 *)
	`ˇŒoc
(1, (*rule));

2184 
ruÀ
->
c⁄d
 = cond;

2185 
ruÀ
->
rdr_°r
 = 
	`°rdup
(
de°ö©i⁄
);

2186 
ruÀ
->
rdr_Àn
 = 
	`°æí
(
de°ö©i⁄
);

2187 i‡(
cookõ
) {

2191 
ruÀ
->
cookõ_Àn
 = 
	`°æí
(
cookõ
);

2192 i‡(
cookõ_£t
) {

2193 
ruÀ
->
cookõ_°r
 = 
	`mÆloc
‘uÀ->
cookõ_Àn
 + 10);

2194 
	`mem˝y
(
ruÀ
->
cookõ_°r
, 
cookõ
,ÑuÀ->
cookõ_Àn
);

2195 
	`mem˝y
(
ruÀ
->
cookõ_°r
 +ÑuÀ->
cookõ_Àn
, ";Öath=/;", 10);

2196 
ruÀ
->
cookõ_Àn
 += 9;

2198 
ruÀ
->
cookõ_°r
 = 
	`mÆloc
‘uÀ->
cookõ_Àn
 + 21);

2199 
	`mem˝y
(
ruÀ
->
cookõ_°r
, 
cookõ
,ÑuÀ->
cookõ_Àn
);

2200 
	`mem˝y
(
ruÀ
->
cookõ_°r
 +ÑuÀ->
cookõ_Àn
, ";Öath=/; Max-Age=0;", 21);

2201 
ruÀ
->
cookõ_Àn
 += 20;

2204 
ruÀ
->
ty≥
 =Åype;

2205 
ruÀ
->
code
 = code;

2206 
ruÀ
->
Êags
 = flags;

2207 
	`LIST_INIT
(&
ruÀ
->
li°
);

2208 
	`LIST_ADDQ
(&
cuΩroxy
->
ªdúe˘_ruÀs
, &
ruÀ
->
li°
);

2209 
	`w¨nif_ruÀ_a·î_u£_backíd
(
cuΩroxy
, 
fûe
, 
löíum
, 
¨gs
[0]);

2211 i‡(!
	`°rcmp
(
¨gs
[0], "use_backend")) {

2212 
swôchög_ruÀ
 *
ruÀ
;

2214 i‡(
cuΩroxy
 =&
deÂroxy
) {

2215 
	`AÀπ
("∑rsög [%s:%d] : '%s'ÇŸáŒowed i¿'deÁu…s' se˘i⁄.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

2216 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2217 
out
;

2220 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_FE
, 
fûe
, 
löíum
, 
¨gs
[0], 
NULL
))

2221 
îr_code
 |
ERR_WARN
;

2223 i‡(*(
¨gs
[1]) == 0) {

2224 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†®backídÇame.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

2225 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2226 
out
;

2229 i‡(
	`°rcmp
(
¨gs
[2], "if") != 0 && strcmp(args[2], "unless") != 0) {

2230 
	`AÀπ
("parsing [%s:%d] : '%s'ÑequiresÉither 'if' or 'unless' followed byá condition.\n",

2231 
fûe
, 
löíum
, 
¨gs
[0]);

2232 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2233 
out
;

2236 i‡((
c⁄d
 = 
	`buûd_a˛_c⁄d
(
fûe
, 
löíum
, 
cuΩroxy
, (c⁄° **)
¨gs
 + 2)Ë=
NULL
) {

2237 
	`AÀπ
("parsing [%s:%d] :Érror detected whileÖarsing switchingÑule.\n",

2238 
fûe
, 
löíum
);

2239 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2240 
out
;

2243 
îr_code
 |
	`w¨nif_c⁄d_ªquúes_ª•
(
c⁄d
, 
fûe
, 
löíum
);

2245 
ruÀ
 = (
swôchög_ruÀ
 *)
	`ˇŒoc
(1, (*rule));

2246 
ruÀ
->
c⁄d
 = cond;

2247 
ruÀ
->
be
.
«me
 = 
	`°rdup
(
¨gs
[1]);

2248 
	`W¨nög
("add swôchög_ruÀ be.«mê%s\n", 
ruÀ
->
be
.
«me
);

2249 
	`LIST_INIT
(&
ruÀ
->
li°
);

2250 
	`LIST_ADDQ
(&
cuΩroxy
->
swôchög_ruÀs
, &
ruÀ
->
li°
);

2252 i‡((!
	`°rcmp
(
¨gs
[0], "force-persist")) ||

2253 (!
	`°rcmp
(
¨gs
[0], "ignore-persist"))) {

2254 
≥rsi°_ruÀ
 *
ruÀ
;

2256 i‡(
cuΩroxy
 =&
deÂroxy
) {

2257 
	`AÀπ
("∑rsög [%s:%d] : '%s'ÇŸáŒowed i¿'deÁu…s' se˘i⁄.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

2258 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2259 
out
;

2262 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_FE
|
PR_CAP_BE
, 
fûe
, 
löíum
, 
¨gs
[0], 
NULL
))

2263 
îr_code
 |
ERR_WARN
;

2265 i‡(
	`°rcmp
(
¨gs
[1], "if") != 0 && strcmp(args[1], "unless") != 0) {

2266 
	`AÀπ
("parsing [%s:%d] : '%s'ÑequiresÉither 'if' or 'unless' followed byá condition.\n",

2267 
fûe
, 
löíum
, 
¨gs
[0]);

2268 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2269 
out
;

2272 i‡((
c⁄d
 = 
	`buûd_a˛_c⁄d
(
fûe
, 
löíum
, 
cuΩroxy
, (c⁄° **)
¨gs
 + 1)Ë=
NULL
) {

2273 
	`AÀπ
("parsing [%s:%d] :Érror detected whileÖarsingá '%s'Ñule.\n",

2274 
fûe
, 
löíum
, 
¨gs
[0]);

2275 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2276 
out
;

2279 
îr_code
 |
	`w¨nif_c⁄d_ªquúes_ª•
(
c⁄d
, 
fûe
, 
löíum
);

2281 
ruÀ
 = (
≥rsi°_ruÀ
 *)
	`ˇŒoc
(1, (*rule));

2282 
ruÀ
->
c⁄d
 = cond;

2283 i‡(!
	`°rcmp
(
¨gs
[0], "force-persist")) {

2284 
ruÀ
->
ty≥
 = 
PERSIST_TYPE_FORCE
;

2286 
ruÀ
->
ty≥
 = 
PERSIST_TYPE_IGNORE
;

2288 
	`LIST_INIT
(&
ruÀ
->
li°
);

2289 
	`LIST_ADDQ
(&
cuΩroxy
->
≥rsi°_ruÀs
, &
ruÀ
->
li°
);

2291 i‡(!
	`°rcmp
(
¨gs
[0], "stick-table")) {

2292 
myidx
 = 1;

2294 
cuΩroxy
->
èbÀ
.
ty≥
 = ()-1;

2295 *
¨gs
[
myidx
]) {

2296 c⁄° *
îr
;

2298 i‡(
	`°rcmp
(
¨gs
[
myidx
], "size") == 0) {

2299 
myidx
++;

2300 i‡(!*(
¨gs
[
myidx
])) {

2301 
	`AÀπ
("parsing [%s:%d] : stick-table: missingárgumentáfter '%s'.\n",

2302 
fûe
, 
löíum
, 
¨gs
[
myidx
-1]);

2303 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2304 
out
;

2306 i‡((
îr
 = 
	`∑r£_size_îr
(
¨gs
[
myidx
], &
cuΩroxy
->
èbÀ
.
size
))) {

2307 
	`AÀπ
("parsing [%s:%d] : stick-table: unexpected character '%c' inárgument of '%s'.\n",

2308 
fûe
, 
löíum
, *
îr
, 
¨gs
[
myidx
-1]);

2309 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2310 
out
;

2312 
myidx
++;

2314 i‡(
	`°rcmp
(
¨gs
[
myidx
], "expire") == 0) {

2315 
myidx
++;

2316 i‡(!*(
¨gs
[
myidx
])) {

2317 
	`AÀπ
("parsing [%s:%d] : stick-table: missingárgumentáfter '%s'.\n",

2318 
fûe
, 
löíum
, 
¨gs
[
myidx
-1]);

2319 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2320 
out
;

2322 
îr
 = 
	`∑r£_time_îr
(
¨gs
[
myidx
], &
vÆ
, 
TIME_UNIT_MS
);

2323 i‡(
îr
) {

2324 
	`AÀπ
("parsing [%s:%d] : stick-table: unexpected character '%c' inárgument of '%s'.\n",

2325 
fûe
, 
löíum
, *
îr
, 
¨gs
[
myidx
-1]);

2326 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2327 
out
;

2329 
cuΩroxy
->
èbÀ
.
expúe
 = 
vÆ
;

2330 
myidx
++;

2332 i‡(
	`°rcmp
(
¨gs
[
myidx
], "nopurge") == 0) {

2333 
cuΩroxy
->
èbÀ
.
n›urge
 = 1;

2334 
myidx
++;

2336 i‡(
	`°rcmp
(
¨gs
[
myidx
], "type") == 0) {

2337 
myidx
++;

2338 i‡(
	`°kèbÀ_∑r£_ty≥
(
¨gs
, &
myidx
, &
cuΩroxy
->
èbÀ
.
ty≥
, &cuΩroxy->èbÀ.
key_size
) != 0) {

2339 
	`AÀπ
("parsing [%s:%d] : stick-table: unknownÅype '%s'.\n",

2340 
fûe
, 
löíum
, 
¨gs
[
myidx
]);

2341 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2342 
out
;

2347 
	`AÀπ
("parsing [%s:%d] : stick-table: unknownárgument '%s'.\n",

2348 
fûe
, 
löíum
, 
¨gs
[
myidx
]);

2349 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2350 
out
;

2354 i‡(!
cuΩroxy
->
èbÀ
.
size
) {

2355 
	`AÀπ
("parsing [%s:%d] : stick-table: missing size.\n",

2356 
fûe
, 
löíum
);

2357 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2358 
out
;

2361 i‡(
cuΩroxy
->
èbÀ
.
ty≥
 == ()-1) {

2362 
	`AÀπ
("parsing [%s:%d] : stick-table: missingÅype.\n",

2363 
fûe
, 
löíum
);

2364 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2365 
out
;

2368 i‡(!
	`°rcmp
(
¨gs
[0], "stick")) {

2369 
°ickög_ruÀ
 *
ruÀ
;

2370 
∑âîn_ex¥
 *
ex¥
;

2371 
myidx
 = 0;

2372 c⁄° *
«me
 = 
NULL
;

2373 
Êags
;

2375 i‡(
cuΩroxy
 =&
deÂroxy
) {

2376 
	`AÀπ
("∑rsög [%s:%d] : '%s'ÇŸáŒowed i¿'deÁu…s' se˘i⁄.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

2377 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2378 
out
;

2381 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_BE
, 
fûe
, 
löíum
, 
¨gs
[0], 
NULL
)) {

2382 
îr_code
 |
ERR_WARN
;

2383 
out
;

2386 
myidx
++;

2387 i‡((
	`°rcmp
(
¨gs
[
myidx
], "store") == 0) ||

2388 (
	`°rcmp
(
¨gs
[
myidx
], "store-request") == 0)) {

2389 
myidx
++;

2390 
Êags
 = 
STK_IS_STORE
;

2392 i‡(
	`°rcmp
(
¨gs
[
myidx
], "store-response") == 0) {

2393 
myidx
++;

2394 
Êags
 = 
STK_IS_STORE
 | 
STK_ON_RSP
;

2396 i‡(
	`°rcmp
(
¨gs
[
myidx
], "match") == 0) {

2397 
myidx
++;

2398 
Êags
 = 
STK_IS_MATCH
;

2400 i‡(
	`°rcmp
(
¨gs
[
myidx
], "on") == 0) {

2401 
myidx
++;

2402 
Êags
 = 
STK_IS_MATCH
 | 
STK_IS_STORE
;

2405 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†'⁄', 'm©ch', o∏'°‹e'.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

2406 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2407 
out
;

2410 i‡(*(
¨gs
[
myidx
]) == 0) {

2411 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†®„tch mëhod.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

2412 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2413 
out
;

2416 
ex¥
 = 
	`∑âîn_∑r£_ex¥
(
¨gs
, &
myidx
);

2417 i‡(!
ex¥
) {

2418 
	`AÀπ
("∑rsög [%s:%d] : '%s': unknow¿„tch mëhod '%s'.\n", 
fûe
, 
löíum
, 
¨gs
[0],árgs[
myidx
]);

2419 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2420 
out
;

2423 i‡(
Êags
 & 
STK_ON_RSP
) {

2424 i‡(!(
ex¥
->
„tch
->
dú
 & 
PATTERN_FETCH_RTR
)) {

2425 
	`AÀπ
("parsing [%s:%d] : '%s': fetch method '%s' canÇot be used onÑesponse.\n",

2426 
fûe
, 
löíum
, 
¨gs
[0], 
ex¥
->
„tch
->
kw
);

2427 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2428 
out
;

2431 i‡(!(
ex¥
->
„tch
->
dú
 & 
PATTERN_FETCH_REQ
)) {

2432 
	`AÀπ
("parsing [%s:%d] : '%s': fetch method '%s' canÇot be used onÑequest.\n",

2433 
fûe
, 
löíum
, 
¨gs
[0], 
ex¥
->
„tch
->
kw
);

2434 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2435 
out
;

2439 i‡(
	`°rcmp
(
¨gs
[
myidx
], "table") == 0) {

2440 
myidx
++;

2441 
«me
 = 
¨gs
[
myidx
++];

2444 i‡(
	`°rcmp
(
¨gs
[
myidx
], "if") == 0 || strcmp(args[myidx], "unless") == 0) {

2445 i‡((
c⁄d
 = 
	`buûd_a˛_c⁄d
(
fûe
, 
löíum
, 
cuΩroxy
, (c⁄° **)
¨gs
 + 
myidx
)Ë=
NULL
) {

2446 
	`AÀπ
("parsing [%s:%d] : '%s':Érror detected whileÖarsing sticking condition.\n",

2447 
fûe
, 
löíum
, 
¨gs
[0]);

2448 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2449 
out
;

2452 i‡(*(
¨gs
[
myidx
])) {

2453 
	`AÀπ
("parsing [%s:%d] : '%s': unknown keyword '%s'.\n",

2454 
fûe
, 
löíum
, 
¨gs
[0],árgs[
myidx
]);

2455 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2456 
out
;

2459 
îr_code
 |
	`w¨nif_c⁄d_ªquúes_ª•
(
c⁄d
, 
fûe
, 
löíum
);

2461 
ruÀ
 = (
°ickög_ruÀ
 *)
	`ˇŒoc
(1, (*rule));

2462 
ruÀ
->
c⁄d
 = cond;

2463 
ruÀ
->
ex¥
 =Éxpr;

2464 
ruÀ
->
Êags
 = flags;

2465 
ruÀ
->
èbÀ
.
«me
 =Çamê? 
	`°rdup
“ameË: 
NULL
;

2466 
	`LIST_INIT
(&
ruÀ
->
li°
);

2467 i‡(
Êags
 & 
STK_ON_RSP
)

2468 
	`LIST_ADDQ
(&
cuΩroxy
->
°‹î•_ruÀs
, &
ruÀ
->
li°
);

2470 
	`LIST_ADDQ
(&
cuΩroxy
->
°ickög_ruÀs
, &
ruÀ
->
li°
);

2472 i‡(!
	`°rcmp
(
¨gs
[0], "stats")) {

2473 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_BE
, 
fûe
, 
löíum
, 
¨gs
[0], 
NULL
))

2474 
îr_code
 |
ERR_WARN
;

2476 i‡(
cuΩroxy
 !&
deÂroxy
 && cuΩroxy->
uri_auth
 == defproxy.uri_auth)

2477 
cuΩroxy
->
uri_auth
 = 
NULL
;

2479 i‡(!*
¨gs
[1]) {

2480 
°©s_îr‹_∑rsög
;

2481 } i‡(!
	`°rcmp
(
¨gs
[1], "admin")) {

2482 
°©s_admö_ruÀ
 *
ruÀ
;

2484 i‡(
cuΩroxy
 =&
deÂroxy
) {

2485 
	`AÀπ
("∑rsög [%s:%d]: '%†%s'ÇŸáŒowed i¿'deÁu…s' se˘i⁄.\n", 
fûe
, 
löíum
, 
¨gs
[0],árgs[1]);

2486 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2487 
out
;

2490 i‡(!
	`°©s_check_öô_uri_auth
(&
cuΩroxy
->
uri_auth
)) {

2491 
	`AÀπ
("∑rsög [%s:%d]: ouào‡mem‹y.\n", 
fûe
, 
löíum
);

2492 
îr_code
 |
ERR_ALERT
 | 
ERR_ABORT
;

2493 
out
;

2496 i‡(
	`°rcmp
(
¨gs
[2], "if") != 0 && strcmp(args[2], "unless") != 0) {

2497 
	`AÀπ
("parsing [%s:%d] : '%s %s'ÑequiresÉither 'if' or 'unless' followed byá condition.\n",

2498 
fûe
, 
löíum
, 
¨gs
[0],árgs[1]);

2499 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2500 
out
;

2502 i‡((
c⁄d
 = 
	`buûd_a˛_c⁄d
(
fûe
, 
löíum
, 
cuΩroxy
, (c⁄° **)
¨gs
 + 2)Ë=
NULL
) {

2503 
	`AÀπ
("parsing [%s:%d] :Érror detected whileÖarsingá '%s %s'Ñule.\n",

2504 
fûe
, 
löíum
, 
¨gs
[0],árgs[1]);

2505 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2506 
out
;

2509 
îr_code
 |
	`w¨nif_c⁄d_ªquúes_ª•
(
c⁄d
, 
fûe
, 
löíum
);

2511 
ruÀ
 = (
°©s_admö_ruÀ
 *)
	`ˇŒoc
(1, (*rule));

2512 
ruÀ
->
c⁄d
 = cond;

2513 
	`LIST_INIT
(&
ruÀ
->
li°
);

2514 
	`LIST_ADDQ
(&
cuΩroxy
->
uri_auth
->
admö_ruÀs
, &
ruÀ
->
li°
);

2515 } i‡(!
	`°rcmp
(
¨gs
[1], "uri")) {

2516 i‡(*(
¨gs
[2]) == 0) {

2517 
	`AÀπ
("∑rsög [%s:%d] : 'uri'Çìd†™ URIÖªfix.\n", 
fûe
, 
löíum
);

2518 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2519 
out
;

2520 } i‡(!
	`°©s_£t_uri
(&
cuΩroxy
->
uri_auth
, 
¨gs
[2])) {

2521 
	`AÀπ
("∑rsög [%s:%d] : ouào‡mem‹y.\n", 
fûe
, 
löíum
);

2522 
îr_code
 |
ERR_ALERT
 | 
ERR_ABORT
;

2523 
out
;

2525 } i‡(!
	`°rcmp
(
¨gs
[1], "realm")) {

2526 i‡(*(
¨gs
[2]) == 0) {

2527 
	`AÀπ
("∑rsög [%s:%d] : 'ªÆm'Çìd†™ÑólmÇame.\n", 
fûe
, 
löíum
);

2528 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2529 
out
;

2530 } i‡(!
	`°©s_£t_ªÆm
(&
cuΩroxy
->
uri_auth
, 
¨gs
[2])) {

2531 
	`AÀπ
("∑rsög [%s:%d] : ouào‡mem‹y.\n", 
fûe
, 
löíum
);

2532 
îr_code
 |
ERR_ALERT
 | 
ERR_ABORT
;

2533 
out
;

2535 } i‡(!
	`°rcmp
(
¨gs
[1], "refresh")) {

2536 
öãrvÆ
;

2538 
îr
 = 
	`∑r£_time_îr
(
¨gs
[2], &
öãrvÆ
, 
TIME_UNIT_S
);

2539 i‡(
îr
) {

2540 
	`AÀπ
("parsing [%s:%d] : unexpected character '%c' in statsÑefresh interval.\n",

2541 
fûe
, 
löíum
, *
îr
);

2542 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2543 
out
;

2544 } i‡(!
	`°©s_£t_ª‰esh
(&
cuΩroxy
->
uri_auth
, 
öãrvÆ
)) {

2545 
	`AÀπ
("∑rsög [%s:%d] : ouào‡mem‹y.\n", 
fûe
, 
löíum
);

2546 
îr_code
 |
ERR_ALERT
 | 
ERR_ABORT
;

2547 
out
;

2549 } i‡(!
	`°rcmp
(
¨gs
[1], "http-request")) {

2550 
ªq_a˛_ruÀ
 *
ªq_a˛
;

2552 i‡(
cuΩroxy
 =&
deÂroxy
) {

2553 
	`AÀπ
("∑rsög [%s:%d]: '%s'ÇŸáŒowed i¿'deÁu…s' se˘i⁄.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

2554 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2555 
out
;

2558 i‡(!
	`°©s_check_öô_uri_auth
(&
cuΩroxy
->
uri_auth
)) {

2559 
	`AÀπ
("∑rsög [%s:%d]: ouào‡mem‹y.\n", 
fûe
, 
löíum
);

2560 
îr_code
 |
ERR_ALERT
 | 
ERR_ABORT
;

2561 
out
;

2564 i‡(!
	`LIST_ISEMPTY
(&
cuΩroxy
->
uri_auth
->
ªq_a˛
) &&

2565 !
	`LIST_PREV
(&
cuΩroxy
->
uri_auth
->
ªq_a˛
, 
ªq_a˛_ruÀ
 *, 
li°
)->
c⁄d
) {

2566 
	`W¨nög
("parsing [%s:%d]:Örevious '%s'áction hasÇo conditionáttached, furtherÉntriesáre NOOP.\n",

2567 
fûe
, 
löíum
, 
¨gs
[0]);

2568 
îr_code
 |
ERR_WARN
;

2571 
ªq_a˛
 = 
	`∑r£_auth_c⁄d
((c⁄° **)
¨gs
 + 2, 
fûe
, 
löíum
, 
cuΩroxy
);

2573 i‡(!
ªq_a˛
) {

2574 
îr_code
 |
ERR_ALERT
 | 
ERR_ABORT
;

2575 
out
;

2578 
îr_code
 |
	`w¨nif_c⁄d_ªquúes_ª•
(
ªq_a˛
->
c⁄d
, 
fûe
, 
löíum
);

2579 
	`LIST_ADDQ
(&
cuΩroxy
->
uri_auth
->
ªq_a˛
, &ªq_a˛->
li°
);

2581 } i‡(!
	`°rcmp
(
¨gs
[1], "auth")) {

2582 i‡(*(
¨gs
[2]) == 0) {

2583 
	`AÀπ
("∑rsög [%s:%d] : 'auth'Çìd†®u£r:∑ssw‹dáccou¡.\n", 
fûe
, 
löíum
);

2584 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2585 
out
;

2586 } i‡(!
	`°©s_add_auth
(&
cuΩroxy
->
uri_auth
, 
¨gs
[2])) {

2587 
	`AÀπ
("∑rsög [%s:%d] : ouào‡mem‹y.\n", 
fûe
, 
löíum
);

2588 
îr_code
 |
ERR_ALERT
 | 
ERR_ABORT
;

2589 
out
;

2591 } i‡(!
	`°rcmp
(
¨gs
[1], "scope")) {

2592 i‡(*(
¨gs
[2]) == 0) {

2593 
	`AÀπ
("∑rsög [%s:%d] : 'sc›e'Çìd†®¥oxyÇame.\n", 
fûe
, 
löíum
);

2594 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2595 
out
;

2596 } i‡(!
	`°©s_add_sc›e
(&
cuΩroxy
->
uri_auth
, 
¨gs
[2])) {

2597 
	`AÀπ
("∑rsög [%s:%d] : ouào‡mem‹y.\n", 
fûe
, 
löíum
);

2598 
îr_code
 |
ERR_ALERT
 | 
ERR_ABORT
;

2599 
out
;

2601 } i‡(!
	`°rcmp
(
¨gs
[1], "enable")) {

2602 i‡(!
	`°©s_check_öô_uri_auth
(&
cuΩroxy
->
uri_auth
)) {

2603 
	`AÀπ
("∑rsög [%s:%d] : ouào‡mem‹y.\n", 
fûe
, 
löíum
);

2604 
îr_code
 |
ERR_ALERT
 | 
ERR_ABORT
;

2605 
out
;

2607 } i‡(!
	`°rcmp
(
¨gs
[1], "hide-version")) {

2608 i‡(!
	`°©s_£t_Êag
(&
cuΩroxy
->
uri_auth
, 
ST_HIDEVER
)) {

2609 
	`AÀπ
("∑rsög [%s:%d] : ouào‡mem‹y.\n", 
fûe
, 
löíum
);

2610 
îr_code
 |
ERR_ALERT
 | 
ERR_ABORT
;

2611 
out
;

2613 } i‡(!
	`°rcmp
(
¨gs
[1], "show-legends")) {

2614 i‡(!
	`°©s_£t_Êag
(&
cuΩroxy
->
uri_auth
, 
ST_SHLGNDS
)) {

2615 
	`AÀπ
("∑rsög [%s:%d]: ouào‡mem‹y.\n", 
fûe
, 
löíum
);

2616 
îr_code
 |
ERR_ALERT
 | 
ERR_ABORT
;

2617 
out
;

2619 } i‡(!
	`°rcmp
(
¨gs
[1], "show-node")) {

2621 i‡(*
¨gs
[2]) {

2622 
i
;

2623 
c
;

2625 
i
=0; 
¨gs
[2][i]; i++) {

2626 
c
 = 
¨gs
[2][
i
];

2627 i‡(!
	`isuµî
(()
c
Ë&& !
	`i¶owî
(()c) &&

2628 !
	`isdigô
(()
c
) && c != '_' && c != '-' && c != '.')

2632 i‡(!
i
 || 
¨gs
[2][i]) {

2633 
	`AÀπ
("parsing [%s:%d]: '%s %s' invalidÇodeÇame - should beá string"

2635 
fûe
, 
löíum
, 
¨gs
[0],árgs[1]);

2636 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2637 
out
;

2641 i‡(!
	`°©s_£t_node
(&
cuΩroxy
->
uri_auth
, 
¨gs
[2])) {

2642 
	`AÀπ
("∑rsög [%s:%d]: ouào‡mem‹y.\n", 
fûe
, 
löíum
);

2643 
îr_code
 |
ERR_ALERT
 | 
ERR_ABORT
;

2644 
out
;

2646 } i‡(!
	`°rcmp
(
¨gs
[1], "show-desc")) {

2647 *
desc
 = 
NULL
;

2649 i‡(*
¨gs
[2]) {

2650 
i
, 
Àn
=0;

2651 *
d
;

2653 
i
=2; *
¨gs
[i]; i++)

2654 
Àn
 +
	`°æí
(
¨gs
[
i
])+1;

2656 
desc
 = 
d
 = (*)
	`ˇŒoc
(1, 
Àn
);

2658 
d
 +
	`•rötf
(d, "%s", 
¨gs
[2]);

2659 
i
=3; *
¨gs
[i]; i++)

2660 
d
 +
	`•rötf
(d, " %s", 
¨gs
[
i
]);

2663 i‡(!*
¨gs
[2] && !
globÆ
.
desc
)

2664 
	`W¨nög
("parsing [%s:%d]: '%s'ÑequiresáÖarameter or 'desc'Åo be set inÅhe global section.\n",

2665 
fûe
, 
löíum
, 
¨gs
[1]);

2667 i‡(!
	`°©s_£t_desc
(&
cuΩroxy
->
uri_auth
, 
desc
)) {

2668 
	`‰ì
(
desc
);

2669 
	`AÀπ
("∑rsög [%s:%d]: ouào‡mem‹y.\n", 
fûe
, 
löíum
);

2670 
îr_code
 |
ERR_ALERT
 | 
ERR_ABORT
;

2671 
out
;

2673 
	`‰ì
(
desc
);

2676 
°©s_îr‹_∑rsög
:

2677 
	`AÀπ
("parsing [%s:%d]: %s '%s',Éxpects 'admin', 'uri', 'realm', 'auth', 'scope', 'enable', 'hide-version', 'show-node', 'show-desc' or 'show-legends'.\n",

2678 
fûe
, 
löíum
, *
¨gs
[1]?"unknown statsÖarameter":"missing keyword in",árgs[*args[1]?1:0]);

2679 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2680 
out
;

2683 i‡(!
	`°rcmp
(
¨gs
[0], "option")) {

2684 
›äum
;

2686 i‡(*(
¨gs
[1]) == '\0') {

2687 
	`AÀπ
("parsing [%s:%d]: '%s'Éxpectsán optionÇame.\n",

2688 
fûe
, 
löíum
, 
¨gs
[0]);

2689 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2690 
out
;

2693 
›äum
 = 0; 
cfg_›ts
[›äum].
«me
; optnum++) {

2694 i‡(!
	`°rcmp
(
¨gs
[1], 
cfg_›ts
[
›äum
].
«me
)) {

2695 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
cfg_›ts
[
›äum
].
ˇp
, 
fûe
, 
löíum
, 
¨gs
[1], 
NULL
)) {

2696 
îr_code
 |
ERR_WARN
;

2697 
out
;

2700 
cuΩroxy
->
no_›ti⁄s
 &~
cfg_›ts
[
›äum
].
vÆ
;

2701 
cuΩroxy
->
›ti⁄s
 &~
cfg_›ts
[
›äum
].
vÆ
;

2703 
kwm
) {

2704 
KWM_STD
:

2705 
cuΩroxy
->
›ti⁄s
 |
cfg_›ts
[
›äum
].
vÆ
;

2707 
KWM_NO
:

2708 
cuΩroxy
->
no_›ti⁄s
 |
cfg_›ts
[
›äum
].
vÆ
;

2710 
KWM_DEF
:

2714 
out
;

2718 
›äum
 = 0; 
cfg_›ts2
[›äum].
«me
; optnum++) {

2719 i‡(!
	`°rcmp
(
¨gs
[1], 
cfg_›ts2
[
›äum
].
«me
)) {

2720 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
cfg_›ts2
[
›äum
].
ˇp
, 
fûe
, 
löíum
, 
¨gs
[1], 
NULL
)) {

2721 
îr_code
 |
ERR_WARN
;

2722 
out
;

2725 
cuΩroxy
->
no_›ti⁄s2
 &~
cfg_›ts2
[
›äum
].
vÆ
;

2726 
cuΩroxy
->
›ti⁄s2
 &~
cfg_›ts2
[
›äum
].
vÆ
;

2728 
kwm
) {

2729 
KWM_STD
:

2730 
cuΩroxy
->
›ti⁄s2
 |
cfg_›ts2
[
›äum
].
vÆ
;

2732 
KWM_NO
:

2733 
cuΩroxy
->
no_›ti⁄s2
 |
cfg_›ts2
[
›äum
].
vÆ
;

2735 
KWM_DEF
:

2738 
out
;

2742 i‡(
kwm
 !
KWM_STD
) {

2743 
	`AÀπ
("parsing [%s:%d]:Çegation/default isÇot supported for option '%s'.\n",

2744 
fûe
, 
löíum
, 
¨gs
[1]);

2745 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2746 
out
;

2749 i‡(!
	`°rcmp
(
¨gs
[1], "httplog")) {

2751 
cuΩroxy
->
›ti⁄s2
 &~
PR_O2_CLFLOG
;

2752 
cuΩroxy
->
to_log
 |
LW_DATE
 | 
LW_CLIP
 | 
LW_SVID
 | 
LW_REQ
 | 
LW_PXID
 | 
LW_RESP
 | 
LW_BYTES
;

2753 i‡(*(
¨gs
[2]) != '\0') {

2754 i‡(!
	`°rcmp
(
¨gs
[2], "clf")) {

2755 
cuΩroxy
->
›ti⁄s2
 |
PR_O2_CLFLOG
;

2757 
	`AÀπ
("∑rsög [%s:%d] : keyw‹d '%s' o∆y suµ‹t†›ti⁄ '˛f'.\n", 
fûe
, 
löíum
, 
¨gs
[2]);

2758 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2759 
out
;

2763 i‡(!
	`°rcmp
(
¨gs
[1], "tcplog"))

2765 
cuΩroxy
->
to_log
 |
LW_DATE
 | 
LW_CLIP
 | 
LW_SVID
 | 
LW_PXID
 | 
LW_BYTES
;

2766 i‡(!
	`°rcmp
(
¨gs
[1], "tcpka")) {

2768 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_BE
 | 
PR_CAP_FE
, 
fûe
, 
löíum
, 
¨gs
[1], 
NULL
))

2769 
îr_code
 |
ERR_WARN
;

2771 i‡(
cuΩroxy
->
ˇp
 & 
PR_CAP_FE
)

2772 
cuΩroxy
->
›ti⁄s
 |
PR_O_TCP_CLI_KA
;

2773 i‡(
cuΩroxy
->
ˇp
 & 
PR_CAP_BE
)

2774 
cuΩroxy
->
›ti⁄s
 |
PR_O_TCP_SRV_KA
;

2776 i‡(!
	`°rcmp
(
¨gs
[1], "httpchk")) {

2777 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_BE
, 
fûe
, 
löíum
, 
¨gs
[1], 
NULL
))

2778 
îr_code
 |
ERR_WARN
;

2781 
	`‰ì
(
cuΩroxy
->
check_ªq
);

2782 
cuΩroxy
->
check_ªq
 = 
NULL
;

2783 
cuΩroxy
->
›ti⁄s
 &~
PR_O_SMTP_CHK
;

2784 
cuΩroxy
->
›ti⁄s2
 &~
PR_O2_SSL3_CHK
;

2785 
cuΩroxy
->
›ti⁄s2
 &~
PR_O2_MYSQL_CHK
;

2786 
cuΩroxy
->
›ti⁄s2
 &~
PR_O2_LDAP_CHK
;

2787 
cuΩroxy
->
›ti⁄s
 |
PR_O_HTTP_CHK
;

2788 i‡(!*
¨gs
[2]) {

2789 
cuΩroxy
->
check_ªq
 = 
	`°rdup
(
DEF_CHECK_REQ
);

2790 
cuΩroxy
->
check_Àn
 = 
	`°æí
(
DEF_CHECK_REQ
);

2791 } i‡(!*
¨gs
[3]) {

2792 
ªqÀn
 = 
	`°æí
(
¨gs
[2]) + strlen("OPTIONS HTTP/1.0\r\n") + 1;

2793 
cuΩroxy
->
check_ªq
 = (*)
	`mÆloc
(
ªqÀn
);

2794 
cuΩroxy
->
check_Àn
 = 
	`¢¥ötf
(cuΩroxy->
check_ªq
, 
ªqÀn
,

2795 "OPTIONS %†HTTP/1.0\r\n", 
¨gs
[2]);

2797 
ªqÀn
 = 
	`°æí
(
¨gs
[2]) + strlen(args[3]) + 3 + strlen("\r\n");

2798 i‡(*
¨gs
[4])

2799 
ªqÀn
 +
	`°æí
(
¨gs
[4]);

2801 
ªqÀn
 +
	`°æí
("HTTP/1.0");

2803 
cuΩroxy
->
check_ªq
 = (*)
	`mÆloc
(
ªqÀn
);

2804 
cuΩroxy
->
check_Àn
 = 
	`¢¥ötf
(cuΩroxy->
check_ªq
, 
ªqÀn
,

2805 "%†%†%s\r\n", 
¨gs
[2],árgs[3], *args[4]?args[4]:"HTTP/1.0");

2808 i‡(!
	`°rcmp
(
¨gs
[1], "ssl-hello-chk")) {

2810 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_BE
, 
fûe
, 
löíum
, 
¨gs
[1], 
NULL
))

2811 
îr_code
 |
ERR_WARN
;

2813 
	`‰ì
(
cuΩroxy
->
check_ªq
);

2814 
cuΩroxy
->
check_ªq
 = 
NULL
;

2815 
cuΩroxy
->
›ti⁄s
 &~
PR_O_HTTP_CHK
;

2816 
cuΩroxy
->
›ti⁄s
 &~
PR_O_SMTP_CHK
;

2817 
cuΩroxy
->
›ti⁄s2
 &~
PR_O2_MYSQL_CHK
;

2818 
cuΩroxy
->
›ti⁄s2
 &~
PR_O2_LDAP_CHK
;

2819 
cuΩroxy
->
›ti⁄s2
 |
PR_O2_SSL3_CHK
;

2821 i‡(!
	`°rcmp
(
¨gs
[1], "smtpchk")) {

2823 
	`‰ì
(
cuΩroxy
->
check_ªq
);

2824 
cuΩroxy
->
check_ªq
 = 
NULL
;

2825 
cuΩroxy
->
›ti⁄s
 &~
PR_O_HTTP_CHK
;

2826 
cuΩroxy
->
›ti⁄s2
 &~
PR_O2_SSL3_CHK
;

2827 
cuΩroxy
->
›ti⁄s2
 &~
PR_O2_MYSQL_CHK
;

2828 
cuΩroxy
->
›ti⁄s2
 &~
PR_O2_LDAP_CHK
;

2829 
cuΩroxy
->
›ti⁄s
 |
PR_O_SMTP_CHK
;

2831 i‡(!*
¨gs
[2] || !*args[3]) {

2832 
cuΩroxy
->
check_ªq
 = 
	`°rdup
(
DEF_SMTP_CHECK_REQ
);

2833 
cuΩroxy
->
check_Àn
 = 
	`°æí
(
DEF_SMTP_CHECK_REQ
);

2835 i‡(!
	`°rcmp
(
¨gs
[2], "EHLO") || !strcmp(args[2], "HELO")) {

2836 
ªqÀn
 = 
	`°æí
(
¨gs
[2]) + strlen(args[3]) + strlen(" \r\n") + 1;

2837 
cuΩroxy
->
check_ªq
 = (*)
	`mÆloc
(
ªqÀn
);

2838 
cuΩroxy
->
check_Àn
 = 
	`¢¥ötf
(cuΩroxy->
check_ªq
, 
ªqÀn
,

2839 "%†%s\r\n", 
¨gs
[2],árgs[3]);

2843 
cuΩroxy
->
check_ªq
 = 
	`°rdup
(
DEF_SMTP_CHECK_REQ
);

2844 
cuΩroxy
->
check_Àn
 = 
	`°æí
(
DEF_SMTP_CHECK_REQ
);

2848 i‡(!
	`°rcmp
(
¨gs
[1], "mysql-check")) {

2850 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_BE
, 
fûe
, 
löíum
, 
¨gs
[1], 
NULL
))

2851 
îr_code
 |
ERR_WARN
;

2853 
	`‰ì
(
cuΩroxy
->
check_ªq
);

2854 
cuΩroxy
->
check_ªq
 = 
NULL
;

2855 
cuΩroxy
->
›ti⁄s
 &~
PR_O_HTTP_CHK
;

2856 
cuΩroxy
->
›ti⁄s
 &~
PR_O_SMTP_CHK
;

2857 
cuΩroxy
->
›ti⁄s2
 &~
PR_O2_SSL3_CHK
;

2858 
cuΩroxy
->
›ti⁄s2
 &~
PR_O2_LDAP_CHK
;

2859 
cuΩroxy
->
›ti⁄s2
 |
PR_O2_MYSQL_CHK
;

2875 i‡(*(
¨gs
[2])) {

2876 
cur_¨g
 = 2;

2878 *(
¨gs
[
cur_¨g
])) {

2879 i‡(
	`°rcmp
(
¨gs
[
cur_¨g
], "user") == 0) {

2880 *
mysqlu£r
;

2881 
∑ckëÀn
, 
ªqÀn
, 
u£æí
;

2884 i‡(*(
¨gs
[
cur_¨g
+1]) == 0) {

2885 
	`AÀπ
("parsing [%s:%d] : '%s %s %s'Éxpects <username>ásárgument.\n",

2886 
fûe
, 
löíum
, 
¨gs
[0],árgs[1],árgs[
cur_¨g
]);

2887 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2888 
out
;

2890 
mysqlu£r
 = 
¨gs
[
cur_¨g
 + 1];

2891 
u£æí
 = 
	`°æí
(
mysqlu£r
);

2892 
∑ckëÀn
 = 
u£æí
 + 7;

2893 
ªqÀn
 = 
∑ckëÀn
 + 9;

2895 
	`‰ì
(
cuΩroxy
->
check_ªq
);

2896 
cuΩroxy
->
check_ªq
 = (*)
	`ˇŒoc
(1, 
ªqÀn
);

2897 
cuΩroxy
->
check_Àn
 = 
ªqÀn
;

2899 
	`¢¥ötf
(
cuΩroxy
->
check_ªq
, 4, "%c%c%c",

2900 ((Ë
∑ckëÀn
 & 0xff),

2901 ((Ë(
∑ckëÀn
 >> 8) & 0xff),

2902 ((Ë(
∑ckëÀn
 >> 16) & 0xff));

2904 
cuΩroxy
->
check_ªq
[3] = 1;

2905 
cuΩroxy
->
check_ªq
[8] = 1;

2906 
	`mem˝y
(&
cuΩroxy
->
check_ªq
[9], 
mysqlu£r
, 
u£æí
);

2907 
cuΩroxy
->
check_ªq
[9 + 
u£æí
 + 1 + 1] = 1;

2908 
cuΩroxy
->
check_ªq
[9 + 
u£æí
 + 1 + 1 + 4] = 1;

2909 
cur_¨g
 += 2;

2912 
	`AÀπ
("parsing [%s:%d] : '%s %s' only supports optional values: 'user'.\n",

2913 
fûe
, 
löíum
, 
¨gs
[0],árgs[1]);

2914 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2915 
out
;

2920 i‡(!
	`°rcmp
(
¨gs
[1], "ldap-check")) {

2922 
	`‰ì
(
cuΩroxy
->
check_ªq
);

2923 
cuΩroxy
->
check_ªq
 = 
NULL
;

2924 
cuΩroxy
->
›ti⁄s
 &~
PR_O_HTTP_CHK
;

2925 
cuΩroxy
->
›ti⁄s
 &~
PR_O_SMTP_CHK
;

2926 
cuΩroxy
->
›ti⁄s2
 &~
PR_O2_SSL3_CHK
;

2927 
cuΩroxy
->
›ti⁄s2
 &~
PR_O2_MYSQL_CHK
;

2928 
cuΩroxy
->
›ti⁄s2
 |
PR_O2_LDAP_CHK
;

2930 
cuΩroxy
->
check_ªq
 = (*Ë
	`mÆloc
((
DEF_LDAP_CHECK_REQ
) - 1);

2931 
	`mem˝y
(
cuΩroxy
->
check_ªq
, 
DEF_LDAP_CHECK_REQ
, (DEF_LDAP_CHECK_REQ) - 1);

2932 
cuΩroxy
->
check_Àn
 = (
DEF_LDAP_CHECK_REQ
) - 1;

2934 i‡(!
	`°rcmp
(
¨gs
[1], "forwardfor")) {

2935 
cur_¨g
;

2941 
cuΩroxy
->
›ti⁄s
 |
PR_O_FWDFOR
;

2943 
	`‰ì
(
cuΩroxy
->
fwdf‹_hdr_«me
);

2944 
cuΩroxy
->
fwdf‹_hdr_«me
 = 
	`°rdup
(
DEF_XFORWARDFOR_HDR
);

2945 
cuΩroxy
->
fwdf‹_hdr_Àn
 = 
	`°æí
(
DEF_XFORWARDFOR_HDR
);

2948 
cur_¨g
 = 2;

2949 *(
¨gs
[
cur_¨g
])) {

2950 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "except")) {

2952 i‡(!*(
¨gs
[
cur_¨g
+1]Ë|| !
	`°r2√t
◊rgs[cur_¨g+1], &
cuΩroxy
->
ex˚±_√t
, &cuΩroxy->
ex˚±_mask
)) {

2953 
	`AÀπ
("parsing [%s:%d] : '%s %s %s'Éxpects <address>[/mask]ásárgument.\n",

2954 
fûe
, 
löíum
, 
¨gs
[0],árgs[1],árgs[
cur_¨g
]);

2955 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2956 
out
;

2959 
cuΩroxy
->
ex˚±_√t
.
s_addr
 &cuΩroxy->
ex˚±_mask
.s_addr;

2960 
cur_¨g
 += 2;

2961 } i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "header")) {

2963 i‡(*(
¨gs
[
cur_¨g
+1]) == 0) {

2964 
	`AÀπ
("parsing [%s:%d] : '%s %s %s'Éxpects <header_name>ásárgument.\n",

2965 
fûe
, 
löíum
, 
¨gs
[0],árgs[1],árgs[
cur_¨g
]);

2966 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2967 
out
;

2969 
	`‰ì
(
cuΩroxy
->
fwdf‹_hdr_«me
);

2970 
cuΩroxy
->
fwdf‹_hdr_«me
 = 
	`°rdup
(
¨gs
[
cur_¨g
+1]);

2971 
cuΩroxy
->
fwdf‹_hdr_Àn
 = 
	`°æí
(cuΩroxy->
fwdf‹_hdr_«me
);

2972 
cur_¨g
 += 2;

2975 
	`AÀπ
("parsing [%s:%d] : '%s %s' only supports optional values: 'except'ánd 'header'.\n",

2976 
fûe
, 
löíum
, 
¨gs
[0],árgs[1]);

2977 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

2978 
out
;

2982 i‡(!
	`°rcmp
(
¨gs
[1], "originalto")) {

2983 
cur_¨g
;

2989 
cuΩroxy
->
›ti⁄s
 |
PR_O_ORGTO
;

2991 
	`‰ì
(
cuΩroxy
->
‹gto_hdr_«me
);

2992 
cuΩroxy
->
‹gto_hdr_«me
 = 
	`°rdup
(
DEF_XORIGINALTO_HDR
);

2993 
cuΩroxy
->
‹gto_hdr_Àn
 = 
	`°æí
(
DEF_XORIGINALTO_HDR
);

2996 
cur_¨g
 = 2;

2997 *(
¨gs
[
cur_¨g
])) {

2998 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "except")) {

3000 i‡(!*(
¨gs
[
cur_¨g
+1]Ë|| !
	`°r2√t
◊rgs[cur_¨g+1], &
cuΩroxy
->
ex˚±_to
, &cuΩroxy->
ex˚±_mask_to
)) {

3001 
	`AÀπ
("parsing [%s:%d] : '%s %s %s'Éxpects <address>[/mask]ásárgument.\n",

3002 
fûe
, 
löíum
, 
¨gs
[0],árgs[1],árgs[
cur_¨g
]);

3003 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3004 
out
;

3007 
cuΩroxy
->
ex˚±_to
.
s_addr
 &cuΩroxy->
ex˚±_mask_to
.s_addr;

3008 
cur_¨g
 += 2;

3009 } i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "header")) {

3011 i‡(*(
¨gs
[
cur_¨g
+1]) == 0) {

3012 
	`AÀπ
("parsing [%s:%d] : '%s %s %s'Éxpects <header_name>ásárgument.\n",

3013 
fûe
, 
löíum
, 
¨gs
[0],árgs[1],árgs[
cur_¨g
]);

3014 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3015 
out
;

3017 
	`‰ì
(
cuΩroxy
->
‹gto_hdr_«me
);

3018 
cuΩroxy
->
‹gto_hdr_«me
 = 
	`°rdup
(
¨gs
[
cur_¨g
+1]);

3019 
cuΩroxy
->
‹gto_hdr_Àn
 = 
	`°æí
(cuΩroxy->
‹gto_hdr_«me
);

3020 
cur_¨g
 += 2;

3023 
	`AÀπ
("parsing [%s:%d] : '%s %s' only supports optional values: 'except'ánd 'header'.\n",

3024 
fûe
, 
löíum
, 
¨gs
[0],árgs[1]);

3025 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3026 
out
;

3031 
	`AÀπ
("∑rsög [%s:%d] : unknow¿›ti⁄ '%s'.\n", 
fûe
, 
löíum
, 
¨gs
[1]);

3032 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3033 
out
;

3035 
out
;

3037 i‡(!
	`°rcmp
(
¨gs
[0], "default_backend")) {

3038 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_FE
, 
fûe
, 
löíum
, 
¨gs
[0], 
NULL
))

3039 
îr_code
 |
ERR_WARN
;

3041 i‡(*(
¨gs
[1]) == 0) {

3042 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†®backídÇame.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

3043 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3044 
out
;

3046 
	`‰ì
(
cuΩroxy
->
defbe
.
«me
);

3047 
cuΩroxy
->
defbe
.
«me
 = 
	`°rdup
(
¨gs
[1]);

3049 i‡(!
	`°rcmp
(
¨gs
[0], "redispatch") || !strcmp(args[0], "redisp")) {

3050 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_BE
, 
fûe
, 
löíum
, 
¨gs
[0], 
NULL
))

3051 
îr_code
 |
ERR_WARN
;

3053 
	`W¨nög
("parsing [%s:%d]: keyword '%s' is deprecated,Ölease use 'optionÑedispatch' instead.\n",

3054 
fûe
, 
löíum
, 
¨gs
[0]);

3055 
îr_code
 |
ERR_WARN
;

3057 
cuΩroxy
->
›ti⁄s
 |
PR_O_REDISP
;

3059 i‡(!
	`°rcmp
(
¨gs
[0], "http-check")) {

3060 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_BE
, 
fûe
, 
löíum
, 
¨gs
[0], 
NULL
))

3061 
îr_code
 |
ERR_WARN
;

3063 i‡(
	`°rcmp
(
¨gs
[1], "disable-on-404") == 0) {

3065 
cuΩroxy
->
›ti⁄s
 |
PR_O_DISABLE404
;

3067 i‡(
	`°rcmp
(
¨gs
[1], "send-state") == 0) {

3069 
cuΩroxy
->
›ti⁄s2
 |
PR_O2_CHK_SNDST
;

3071 i‡(
	`°rcmp
(
¨gs
[1], "expect") == 0) {

3072 c⁄° *
±r_¨g
;

3073 
cur_¨g
;

3075 i‡(
cuΩroxy
->
›ti⁄s2
 & 
PR_O2_EXP_TYPE
) {

3076 
	`AÀπ
("∑rsög [%s:%d] : '%†%s'áÃódy s≥cifõd.\n", 
fûe
, 
löíum
, 
¨gs
[0],árgs[1]);

3077 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3078 
out
;

3081 
cur_¨g
 = 2;

3083 *(
±r_¨g
 = 
¨gs
[
cur_¨g
])) {

3084 *
±r_¨g
 == '!') {

3085 
cuΩroxy
->
›ti⁄s2
 ^
PR_O2_EXP_INV
;

3086 
±r_¨g
++;

3088 i‡(*
±r_¨g
)

3090 
cur_¨g
++;

3095 i‡(
	`°rcmp
(
±r_¨g
, "status") == 0) {

3096 i‡(!*(
¨gs
[
cur_¨g
 + 1])) {

3097 
	`AÀπ
("parsing [%s:%d] : '%s %s %s'Éxpects <string>ásánárgument.\n",

3098 
fûe
, 
löíum
, 
¨gs
[0],árgs[1], 
±r_¨g
);

3099 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3100 
out
;

3102 
cuΩroxy
->
›ti⁄s2
 |
PR_O2_EXP_STS
;

3103 
cuΩroxy
->
ex≥˘_°r
 = 
	`°rdup
(
¨gs
[
cur_¨g
 + 1]);

3105 i‡(
	`°rcmp
(
±r_¨g
, "string") == 0) {

3106 i‡(!*(
¨gs
[
cur_¨g
 + 1])) {

3107 
	`AÀπ
("parsing [%s:%d] : '%s %s %s'Éxpects <string>ásánárgument.\n",

3108 
fûe
, 
löíum
, 
¨gs
[0],árgs[1], 
±r_¨g
);

3109 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3110 
out
;

3112 
cuΩroxy
->
›ti⁄s2
 |
PR_O2_EXP_STR
;

3113 
cuΩroxy
->
ex≥˘_°r
 = 
	`°rdup
(
¨gs
[
cur_¨g
 + 1]);

3115 i‡(
	`°rcmp
(
±r_¨g
, "rstatus") == 0) {

3116 i‡(!*(
¨gs
[
cur_¨g
 + 1])) {

3117 
	`AÀπ
("parsing [%s:%d] : '%s %s %s'Éxpects <regex>ásánárgument.\n",

3118 
fûe
, 
löíum
, 
¨gs
[0],árgs[1], 
±r_¨g
);

3119 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3120 
out
;

3122 
cuΩroxy
->
›ti⁄s2
 |
PR_O2_EXP_RSTS
;

3123 
cuΩroxy
->
ex≥˘_ªgex
 = 
	`ˇŒoc
(1, (
ªgex_t
));

3124 i‡(
	`ªgcomp
(
cuΩroxy
->
ex≥˘_ªgex
, 
¨gs
[
cur_¨g
 + 1], 
REG_EXTENDED
) != 0) {

3125 
	`AÀπ
("parsing [%s:%d] : '%s %s %s' : badÑegularÉxpression '%s'.\n",

3126 
fûe
, 
löíum
, 
¨gs
[0],árgs[1], 
±r_¨g
,árgs[
cur_¨g
 + 1]);

3127 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3128 
out
;

3131 i‡(
	`°rcmp
(
±r_¨g
, "rstring") == 0) {

3132 i‡(!*(
¨gs
[
cur_¨g
 + 1])) {

3133 
	`AÀπ
("parsing [%s:%d] : '%s %s %s'Éxpects <regex>ásánárgument.\n",

3134 
fûe
, 
löíum
, 
¨gs
[0],árgs[1], 
±r_¨g
);

3135 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3136 
out
;

3138 
cuΩroxy
->
›ti⁄s2
 |
PR_O2_EXP_RSTR
;

3139 
cuΩroxy
->
ex≥˘_ªgex
 = 
	`ˇŒoc
(1, (
ªgex_t
));

3140 i‡(
	`ªgcomp
(
cuΩroxy
->
ex≥˘_ªgex
, 
¨gs
[
cur_¨g
 + 1], 
REG_EXTENDED
) != 0) {

3141 
	`AÀπ
("parsing [%s:%d] : '%s %s %s' : badÑegularÉxpression '%s'.\n",

3142 
fûe
, 
löíum
, 
¨gs
[0],árgs[1], 
±r_¨g
,árgs[
cur_¨g
 + 1]);

3143 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3144 
out
;

3148 
	`AÀπ
("parsing [%s:%d] : '%s %s' only supports [!] 'status', 'string', 'rstatus', 'rstring', found '%s'.\n",

3149 
fûe
, 
löíum
, 
¨gs
[0],árgs[1], 
±r_¨g
);

3150 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3151 
out
;

3155 
	`AÀπ
("∑rsög [%s:%d] : '%s' o∆y suµ‹t†'dißbÀ-⁄-404', 'ex≥˘' .\n", 
fûe
, 
löíum
, 
¨gs
[0]);

3156 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3157 
out
;

3160 i‡(!
	`°rcmp
(
¨gs
[0], "monitor")) {

3161 i‡(
cuΩroxy
 =&
deÂroxy
) {

3162 
	`AÀπ
("∑rsög [%s:%d] : '%s'ÇŸáŒowed i¿'deÁu…s' se˘i⁄.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

3163 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3164 
out
;

3167 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_FE
, 
fûe
, 
löíum
, 
¨gs
[0], 
NULL
))

3168 
îr_code
 |
ERR_WARN
;

3170 i‡(
	`°rcmp
(
¨gs
[1], "fail") == 0) {

3172 i‡(
	`°rcmp
(
¨gs
[2], "if") != 0 && strcmp(args[2], "unless") != 0) {

3173 
	`AÀπ
("parsing [%s:%d] : '%s %s'ÑequiresÉither 'if' or 'unless' followed byá condition.\n",

3174 
fûe
, 
löíum
, 
¨gs
[0],árgs[1]);

3175 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3176 
out
;

3179 i‡((
c⁄d
 = 
	`buûd_a˛_c⁄d
(
fûe
, 
löíum
, 
cuΩroxy
, (c⁄° **)
¨gs
 + 2)Ë=
NULL
) {

3180 
	`AÀπ
("parsing [%s:%d] :Érror detected whileÖarsingá '%s %s' condition.\n",

3181 
fûe
, 
löíum
, 
¨gs
[0],árgs[1]);

3182 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3183 
out
;

3185 
	`LIST_ADDQ
(&
cuΩroxy
->
m⁄_Áû_c⁄d
, &
c⁄d
->
li°
);

3188 
	`AÀπ
("∑rsög [%s:%d] : '%s' o∆y suµ‹t†'Áû'.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

3189 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3190 
out
;

3193 #ifde‡
TPROXY


3194 i‡(!
	`°rcmp
(
¨gs
[0], "transparent")) {

3196 
cuΩroxy
->
›ti⁄s
 |
PR_O_TRANSP
;

3199 i‡(!
	`°rcmp
(
¨gs
[0], "maxconn")) {

3200 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_FE
, 
fûe
, 
löíum
, 
¨gs
[0], " Maybe you want 'fullconn' instead ?"))

3201 
îr_code
 |
ERR_WARN
;

3203 i‡(*(
¨gs
[1]) == 0) {

3204 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†™ i¡egîárgumít.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

3205 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3206 
out
;

3208 
cuΩroxy
->
maxc⁄n
 = 
	`©ﬁ
(
¨gs
[1]);

3210 i‡(!
	`°rcmp
(
¨gs
[0], "backlog")) {

3211 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_FE
, 
fûe
, 
löíum
, 
¨gs
[0], 
NULL
))

3212 
îr_code
 |
ERR_WARN
;

3214 i‡(*(
¨gs
[1]) == 0) {

3215 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†™ i¡egîárgumít.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

3216 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3217 
out
;

3219 
cuΩroxy
->
backlog
 = 
	`©ﬁ
(
¨gs
[1]);

3221 i‡(!
	`°rcmp
(
¨gs
[0], "fullconn")) {

3222 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_BE
, 
fûe
, 
löíum
, 
¨gs
[0], " Maybe you want 'maxconn' instead ?"))

3223 
îr_code
 |
ERR_WARN
;

3225 i‡(*(
¨gs
[1]) == 0) {

3226 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†™ i¡egîárgumít.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

3227 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3228 
out
;

3230 
cuΩroxy
->
fuŒc⁄n
 = 
	`©ﬁ
(
¨gs
[1]);

3232 i‡(!
	`°rcmp
(
¨gs
[0], "grace")) {

3233 i‡(*(
¨gs
[1]) == 0) {

3234 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†®timêö mûli£c⁄ds.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

3235 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3236 
out
;

3238 
îr
 = 
	`∑r£_time_îr
(
¨gs
[1], &
vÆ
, 
TIME_UNIT_MS
);

3239 i‡(
îr
) {

3240 
	`AÀπ
("parsing [%s:%d] : unexpected character '%c' in graceÅime.\n",

3241 
fûe
, 
löíum
, *
îr
);

3242 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3243 
out
;

3245 
cuΩroxy
->
gø˚
 = 
vÆ
;

3247 i‡(!
	`°rcmp
(
¨gs
[0], "dispatch")) {

3248 
sockaddr_ö
 *
sk
;

3249 i‡(
cuΩroxy
 =&
deÂroxy
) {

3250 
	`AÀπ
("∑rsög [%s:%d] : '%s'ÇŸáŒowed i¿'deÁu…s' se˘i⁄.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

3251 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3252 
out
;

3254 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_BE
, 
fûe
, 
löíum
, 
¨gs
[0], 
NULL
))

3255 
îr_code
 |
ERR_WARN
;

3257 i‡(
	`°rchr
(
¨gs
[1], ':'Ë=
NULL
) {

3258 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†<addr:p‹t>á†¨gumít.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

3259 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3260 
out
;

3262 
sk
 = 
	`°r2ß
(
¨gs
[1]);

3263 i‡(!
sk
) {

3264 
	`AÀπ
("∑rsög [%s:%d] : Unknow¿ho° i¿'%s'\n", 
fûe
, 
löíum
, 
¨gs
[1]);

3265 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3266 
out
;

3268 
cuΩroxy
->
di•©ch_addr
 = *
sk
;

3270 i‡(!
	`°rcmp
(
¨gs
[0], "balance")) {

3271 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_BE
, 
fûe
, 
löíum
, 
¨gs
[0], 
NULL
))

3272 
îr_code
 |
ERR_WARN
;

3274 
	`mem˝y
(
åash
, "errorÇear 'balance'", 21);

3275 i‡(
	`backíd_∑r£_bÆ™˚
((c⁄° **)
¨gs
 + 1, 
åash
, —øsh), 
cuΩroxy
) < 0) {

3276 
	`AÀπ
("∑rsög [%s:%d] : %s\n", 
fûe
, 
löíum
, 
åash
);

3277 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3278 
out
;

3281 i‡(!
	`°rcmp
(
¨gs
[0], "hash-type")) {

3282 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_BE
, 
fûe
, 
löíum
, 
¨gs
[0], 
NULL
))

3283 
îr_code
 |
ERR_WARN
;

3285 i‡(
	`°rcmp
(
¨gs
[1], "consistent") == 0) {

3286 
cuΩroxy
->
lb¥m
.
Ægo
 &~
BE_LB_HASH_TYPE
;

3287 
cuΩroxy
->
lb¥m
.
Ægo
 |
BE_LB_HASH_CONS
;

3289 i‡(
	`°rcmp
(
¨gs
[1], "map-based") == 0) {

3290 
cuΩroxy
->
lb¥m
.
Ægo
 &~
BE_LB_HASH_TYPE
;

3291 
cuΩroxy
->
lb¥m
.
Ægo
 |
BE_LB_HASH_MAP
;

3294 
	`AÀπ
("∑rsög [%s:%d] : '%s' o∆y suµ‹t†'c⁄si°ít'ánd 'm≠-ba£d'.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

3295 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3296 
out
;

3299 i‡(!
	`°rcmp
(
¨gs
[0], "server") || !strcmp(args[0], "default-server")) {

3300 
cur_¨g
;

3301 *
Ω‹t
, *
øddr
;

3302 
ªÆp‹t
 = 0;

3303 
do_check
 = 0, 
def§v
 = (*
¨gs
[0] == 'd');

3305 i‡(!
def§v
 && 
cuΩroxy
 =&
deÂroxy
) {

3306 
	`AÀπ
("∑rsög [%s:%d] : '%s'ÇŸáŒowed i¿'deÁu…s' se˘i⁄.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

3307 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3308 
out
;

3310 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_BE
, 
fûe
, 
löíum
, 
¨gs
[0], 
NULL
))

3311 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3313 i‡(!*
¨gs
[2]) {

3314 
	`AÀπ
("parsing [%s:%d] : '%s'Éxpects <name>ánd <addr>[:<port>]ásárguments.\n",

3315 
fûe
, 
löíum
, 
¨gs
[0]);

3316 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3317 
out
;

3320 
îr
 = 
	`övÆid_ch¨
(
¨gs
[1]);

3321 i‡(
îr
) {

3322 
	`AÀπ
("parsing [%s:%d] : character '%c' isÇotÖermitted in serverÇame '%s'.\n",

3323 
fûe
, 
löíum
, *
îr
, 
¨gs
[1]);

3324 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3325 
out
;

3328 i‡(!
def§v
) {

3329 
sockaddr_ö
 *
sk
;

3331 i‡((
√w§v
 = (
£rvî
 *)
	`ˇŒoc
(1, (£rvî))Ë=
NULL
) {

3332 
	`AÀπ
("∑rsög [%s:%d] : ouào‡mem‹y.\n", 
fûe
, 
löíum
);

3333 
îr_code
 |
ERR_ALERT
 | 
ERR_ABORT
;

3334 
out
;

3338 
√w§v
->
√xt
 = 
cuΩroxy
->
§v
;

3339 
cuΩroxy
->
§v
 = 
√w§v
;

3340 
√w§v
->
¥oxy
 = 
cuΩroxy
;

3341 
√w§v
->
c⁄f
.
fûe
 = file;

3342 
√w§v
->
c⁄f
.
löe
 = 
löíum
;

3344 
	`LIST_INIT
(&
√w§v
->
≥ndc⁄ns
);

3345 
do_check
 = 0;

3346 
√w§v
->
°©e
 = 
SRV_RUNNING
;

3347 
√w§v
->
œ°_ch™ge
 = 
now
.
tv_£c
;

3348 
√w§v
->
id
 = 
	`°rdup
(
¨gs
[1]);

3357 
øddr
 = 
	`°rdup
(
¨gs
[2]);

3358 
Ω‹t
 = 
	`°rchr
(
øddr
, ':');

3359 i‡(
Ω‹t
) {

3360 *
Ω‹t
++ = 0;

3361 
ªÆp‹t
 = 
	`©ﬁ
(
Ω‹t
);

3362 i‡(!
	`isdigô
(()*
Ω‹t
))

3363 
√w§v
->
°©e
 |
SRV_MAPPORTS
;

3365 
√w§v
->
°©e
 |
SRV_MAPPORTS
;

3367 
sk
 = 
	`°r2ß
(
øddr
);

3368 
	`‰ì
(
øddr
);

3369 i‡(!
sk
) {

3370 
	`AÀπ
("∑rsög [%s:%d] : Unknow¿ho° i¿'%s'\n", 
fûe
, 
löíum
, 
¨gs
[2]);

3371 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3372 
out
;

3374 
√w§v
->
addr
 = *
sk
;

3375 
√w§v
->
addr
.
sö_p‹t
 = 
	`ht⁄s
(
ªÆp‹t
);

3377 
√w§v
->
check_p‹t
 = 
cuΩroxy
->
def§v
.check_port;

3378 
√w§v
->
öãr
 = 
cuΩroxy
->
def§v
.inter;

3379 
√w§v
->
Á°öãr
 = 
cuΩroxy
->
def§v
.fastinter;

3380 
√w§v
->
downöãr
 = 
cuΩroxy
->
def§v
.downinter;

3381 
√w§v
->
ri£
 = 
cuΩroxy
->
def§v
.rise;

3382 
√w§v
->
ÁŒ
 = 
cuΩroxy
->
def§v
.fall;

3383 
√w§v
->
maxqueue
 = 
cuΩroxy
->
def§v
.maxqueue;

3384 
√w§v
->
möc⁄n
 = 
cuΩroxy
->
def§v
.minconn;

3385 
√w§v
->
maxc⁄n
 = 
cuΩroxy
->
def§v
.maxconn;

3386 
√w§v
->
¶ow°¨t
 = 
cuΩroxy
->
def§v
.slowstart;

3387 
√w§v
->
⁄îr‹
 = 
cuΩroxy
->
def§v
.onerror;

3388 
√w§v
->
c⁄£cutive_îr‹s_limô


3389 
cuΩroxy
->
def§v
.
c⁄£cutive_îr‹s_limô
;

3390 
√w§v
->
uweight
 =Çew§v->
iweight


3391 
cuΩroxy
->
def§v
.
iweight
;

3393 
√w§v
->
curfd
 = -1;

3394 
√w§v
->
hó…h
 =Çew§v->
ri£
;

3396 
cur_¨g
 = 3;

3398 
√w§v
 = &
cuΩroxy
->
def§v
;

3399 
cur_¨g
 = 1;

3402 *
¨gs
[
cur_¨g
]) {

3403 i‡(!
def§v
 && !
	`°rcmp
(
¨gs
[
cur_¨g
], "id")) {

3404 
eb32_node
 *
node
;

3406 i‡(!*
¨gs
[
cur_¨g
 + 1]) {

3407 
	`AÀπ
("parsing [%s:%d]: '%s'Éxpectsán integerárgument.\n",

3408 
fûe
, 
löíum
, 
¨gs
[
cur_¨g
]);

3409 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3410 
out
;

3413 
√w§v
->
puid
 = 
	`©ﬁ
(
¨gs
[
cur_¨g
 + 1]);

3414 
√w§v
->
c⁄f
.
id
.
key
 =Çew§v->
puid
;

3416 i‡(
√w§v
->
puid
 <= 0) {

3417 
	`AÀπ
("parsing [%s:%d]: custom id hasÅo be > 0.\n",

3418 
fûe
, 
löíum
);

3419 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3420 
out
;

3423 
node
 = 
	`eb32_lookup
(&
cuΩroxy
->
c⁄f
.
u£d_£rvî_id
, 
√w§v
->
puid
);

3424 i‡(
node
) {

3425 
£rvî
 *
èrgë
 = 
	`c⁄èöî_of
(
node
, £rvî, 
c⁄f
.
id
);

3426 
	`AÀπ
("parsing [%s:%d]: server %sÑeuses same custom idás server %s (declaredát %s:%d).\n",

3427 
fûe
, 
löíum
, 
√w§v
->
id
, 
èrgë
->id,Å¨gë->
c⁄f
.fûe,Å¨gë->c⁄f.
löe
);

3428 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3429 
out
;

3431 
	`eb32_ö£π
(&
cuΩroxy
->
c⁄f
.
u£d_£rvî_id
, &
√w§v
->c⁄f.
id
);

3432 
cur_¨g
 += 2;

3434 i‡(!
def§v
 && !
	`°rcmp
(
¨gs
[
cur_¨g
], "cookie")) {

3435 
√w§v
->
cookõ
 = 
	`°rdup
(
¨gs
[
cur_¨g
 + 1]);

3436 
√w§v
->
ckÀn
 = 
	`°æí
(
¨gs
[
cur_¨g
 + 1]);

3437 
cur_¨g
 += 2;

3439 i‡(!
def§v
 && !
	`°rcmp
(
¨gs
[
cur_¨g
], "redir")) {

3440 
√w§v
->
rdr_pfx
 = 
	`°rdup
(
¨gs
[
cur_¨g
 + 1]);

3441 
√w§v
->
rdr_Àn
 = 
	`°æí
(
¨gs
[
cur_¨g
 + 1]);

3442 
cur_¨g
 += 2;

3444 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "rise")) {

3445 i‡(!*
¨gs
[
cur_¨g
 + 1]) {

3446 
	`AÀπ
("parsing [%s:%d]: '%s'Éxpectsán integerárgument.\n",

3447 
fûe
, 
löíum
, 
¨gs
[
cur_¨g
]);

3448 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3449 
out
;

3452 
√w§v
->
ri£
 = 
	`©ﬁ
(
¨gs
[
cur_¨g
 + 1]);

3453 i‡(
√w§v
->
ri£
 <= 0) {

3454 
	`AÀπ
("parsing [%s:%d]: '%s' hasÅo be > 0.\n",

3455 
fûe
, 
löíum
, 
¨gs
[
cur_¨g
]);

3456 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3457 
out
;

3460 i‡(
√w§v
->
hó…h
)

3461 
√w§v
->
hó…h
 =Çew§v->
ri£
;

3462 
cur_¨g
 += 2;

3464 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "fall")) {

3465 
√w§v
->
ÁŒ
 = 
	`©ﬁ
(
¨gs
[
cur_¨g
 + 1]);

3467 i‡(!*
¨gs
[
cur_¨g
 + 1]) {

3468 
	`AÀπ
("parsing [%s:%d]: '%s'Éxpectsán integerárgument.\n",

3469 
fûe
, 
löíum
, 
¨gs
[
cur_¨g
]);

3470 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3471 
out
;

3474 i‡(
√w§v
->
ÁŒ
 <= 0) {

3475 
	`AÀπ
("parsing [%s:%d]: '%s' hasÅo be > 0.\n",

3476 
fûe
, 
löíum
, 
¨gs
[
cur_¨g
]);

3477 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3478 
out
;

3481 
cur_¨g
 += 2;

3483 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "inter")) {

3484 c⁄° *
îr
 = 
	`∑r£_time_îr
(
¨gs
[
cur_¨g
 + 1], &
vÆ
, 
TIME_UNIT_MS
);

3485 i‡(
îr
) {

3486 
	`AÀπ
("parsing [%s:%d] : unexpected character '%c' in 'inter'árgument of server %s.\n",

3487 
fûe
, 
löíum
, *
îr
, 
√w§v
->
id
);

3488 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3489 
out
;

3491 i‡(
vÆ
 <= 0) {

3492 
	`AÀπ
("parsing [%s:%d]: invalid value %d forárgument '%s' of server %s.\n",

3493 
fûe
, 
löíum
, 
vÆ
, 
¨gs
[
cur_¨g
], 
√w§v
->
id
);

3494 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3495 
out
;

3497 
√w§v
->
öãr
 = 
vÆ
;

3498 
cur_¨g
 += 2;

3500 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "fastinter")) {

3501 c⁄° *
îr
 = 
	`∑r£_time_îr
(
¨gs
[
cur_¨g
 + 1], &
vÆ
, 
TIME_UNIT_MS
);

3502 i‡(
îr
) {

3503 
	`AÀπ
("parsing [%s:%d]: unexpected character '%c' in 'fastinter'árgument of server %s.\n",

3504 
fûe
, 
löíum
, *
îr
, 
√w§v
->
id
);

3505 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3506 
out
;

3508 i‡(
vÆ
 <= 0) {

3509 
	`AÀπ
("parsing [%s:%d]: invalid value %d forárgument '%s' of server %s.\n",

3510 
fûe
, 
löíum
, 
vÆ
, 
¨gs
[
cur_¨g
], 
√w§v
->
id
);

3511 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3512 
out
;

3514 
√w§v
->
Á°öãr
 = 
vÆ
;

3515 
cur_¨g
 += 2;

3517 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "downinter")) {

3518 c⁄° *
îr
 = 
	`∑r£_time_îr
(
¨gs
[
cur_¨g
 + 1], &
vÆ
, 
TIME_UNIT_MS
);

3519 i‡(
îr
) {

3520 
	`AÀπ
("parsing [%s:%d]: unexpected character '%c' in 'downinter'árgument of server %s.\n",

3521 
fûe
, 
löíum
, *
îr
, 
√w§v
->
id
);

3522 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3523 
out
;

3525 i‡(
vÆ
 <= 0) {

3526 
	`AÀπ
("parsing [%s:%d]: invalid value %d forárgument '%s' of server %s.\n",

3527 
fûe
, 
löíum
, 
vÆ
, 
¨gs
[
cur_¨g
], 
√w§v
->
id
);

3528 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3529 
out
;

3531 
√w§v
->
downöãr
 = 
vÆ
;

3532 
cur_¨g
 += 2;

3534 i‡(!
def§v
 && !
	`°rcmp
(
¨gs
[
cur_¨g
], "addr")) {

3535 
sockaddr_ö
 *
sk
 = 
	`°r2ß
(
¨gs
[
cur_¨g
 + 1]);

3536 i‡(!
sk
) {

3537 
	`AÀπ
("∑rsög [%s:%d] : Unknow¿ho° i¿'%s'\n", 
fûe
, 
löíum
, 
¨gs
[
cur_¨g
 + 1]);

3538 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3539 
out
;

3541 
√w§v
->
check_addr
 = *
sk
;

3542 
cur_¨g
 += 2;

3544 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "port")) {

3545 
√w§v
->
check_p‹t
 = 
	`©ﬁ
(
¨gs
[
cur_¨g
 + 1]);

3546 
cur_¨g
 += 2;

3548 i‡(!
def§v
 && !
	`°rcmp
(
¨gs
[
cur_¨g
], "backup")) {

3549 
√w§v
->
°©e
 |
SRV_BACKUP
;

3550 
cur_¨g
 ++;

3552 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "weight")) {

3553 
w
;

3554 
w
 = 
	`©ﬁ
(
¨gs
[
cur_¨g
 + 1]);

3555 i‡(
w
 < 0 || w > 256) {

3556 
	`AÀπ
("parsing [%s:%d] : weight of server %s isÇot within 0ánd 256 (%d).\n",

3557 
fûe
, 
löíum
, 
√w§v
->
id
, 
w
);

3558 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3559 
out
;

3561 
√w§v
->
uweight
 =Çew§v->
iweight
 = 
w
;

3562 
cur_¨g
 += 2;

3564 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "minconn")) {

3565 
√w§v
->
möc⁄n
 = 
	`©ﬁ
(
¨gs
[
cur_¨g
 + 1]);

3566 
cur_¨g
 += 2;

3568 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "maxconn")) {

3569 
√w§v
->
maxc⁄n
 = 
	`©ﬁ
(
¨gs
[
cur_¨g
 + 1]);

3570 
cur_¨g
 += 2;

3572 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "maxqueue")) {

3573 
√w§v
->
maxqueue
 = 
	`©ﬁ
(
¨gs
[
cur_¨g
 + 1]);

3574 
cur_¨g
 += 2;

3576 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "slowstart")) {

3578 c⁄° *
îr
 = 
	`∑r£_time_îr
(
¨gs
[
cur_¨g
 + 1], &
vÆ
, 
TIME_UNIT_MS
);

3579 i‡(
îr
) {

3580 
	`AÀπ
("parsing [%s:%d] : unexpected character '%c' in 'slowstart'árgument of server %s.\n",

3581 
fûe
, 
löíum
, *
îr
, 
√w§v
->
id
);

3582 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3583 
out
;

3585 i‡(
vÆ
 < 0) {

3586 
	`AÀπ
("parsing [%s:%d]: invalid value %d forárgument '%s' of server %s.\n",

3587 
fûe
, 
löíum
, 
vÆ
, 
¨gs
[
cur_¨g
], 
√w§v
->
id
);

3588 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3589 
out
;

3591 
√w§v
->
¶ow°¨t
 = (
vÆ
 + 999) / 1000;

3592 
cur_¨g
 += 2;

3594 i‡(!
def§v
 && !
	`°rcmp
(
¨gs
[
cur_¨g
], "track")) {

3596 i‡(!*
¨gs
[
cur_¨g
 + 1]) {

3597 
	`AÀπ
("parsing [%s:%d]: 'track'Éxpects [<proxy>/]<server>ásárgument.\n",

3598 
fûe
, 
löíum
);

3599 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3600 
out
;

3603 
√w§v
->
åackô
 = 
	`°rdup
(
¨gs
[
cur_¨g
 + 1]);

3605 
cur_¨g
 += 2;

3607 i‡(!
def§v
 && !
	`°rcmp
(
¨gs
[
cur_¨g
], "check")) {

3608 
globÆ
.
maxsock
++;

3609 
do_check
 = 1;

3610 
cur_¨g
 += 1;

3612 i‡(!
def§v
 && !
	`°rcmp
(
¨gs
[
cur_¨g
], "disabled")) {

3613 
√w§v
->
°©e
 |
SRV_MAINTAIN
;

3614 
√w§v
->
°©e
 &~
SRV_RUNNING
;

3615 
√w§v
->
hó…h
 = 0;

3616 
cur_¨g
 += 1;

3618 i‡(!
def§v
 && !
	`°rcmp
(
¨gs
[
cur_¨g
], "observe")) {

3619 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
 + 1], "none"))

3620 
√w§v
->
ob£rve
 = 
HANA_OBS_NONE
;

3621 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
 + 1], "layer4"))

3622 
√w§v
->
ob£rve
 = 
HANA_OBS_LAYER4
;

3623 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
 + 1], "layer7")) {

3624 i‡(
cuΩroxy
->
mode
 !
PR_MODE_HTTP
) {

3625 
	`AÀπ
("parsing [%s:%d]: '%s' can only be used in httpÖroxies.\n",

3626 
fûe
, 
löíum
, 
¨gs
[
cur_¨g
 + 1]);

3627 
îr_code
 |
ERR_ALERT
;

3629 
√w§v
->
ob£rve
 = 
HANA_OBS_LAYER7
;

3632 
	`AÀπ
("parsing [%s:%d]: '%s'Éxpects one of 'none', "

3634 
fûe
, 
löíum
, 
¨gs
[
cur_¨g
],árgs[cur_arg + 1]);

3635 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3636 
out
;

3639 
cur_¨g
 += 2;

3641 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "on-error")) {

3642 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
 + 1], "fastinter"))

3643 
√w§v
->
⁄îr‹
 = 
HANA_ONERR_FASTINTER
;

3644 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
 + 1], "fail-check"))

3645 
√w§v
->
⁄îr‹
 = 
HANA_ONERR_FAILCHK
;

3646 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
 + 1], "sudden-death"))

3647 
√w§v
->
⁄îr‹
 = 
HANA_ONERR_SUDDTH
;

3648 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
 + 1], "mark-down"))

3649 
√w§v
->
⁄îr‹
 = 
HANA_ONERR_MARKDWN
;

3651 
	`AÀπ
("parsing [%s:%d]: '%s'Éxpects one of 'fastinter', "

3653 
fûe
, 
löíum
, 
¨gs
[
cur_¨g
],árgs[cur_arg + 1]);

3654 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3655 
out
;

3658 
cur_¨g
 += 2;

3660 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "error-limit")) {

3661 i‡(!*
¨gs
[
cur_¨g
 + 1]) {

3662 
	`AÀπ
("parsing [%s:%d]: '%s'Éxpectsán integerárgument.\n",

3663 
fûe
, 
löíum
, 
¨gs
[
cur_¨g
]);

3664 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3665 
out
;

3668 
√w§v
->
c⁄£cutive_îr‹s_limô
 = 
	`©oi
(
¨gs
[
cur_¨g
 + 1]);

3670 i‡(
√w§v
->
c⁄£cutive_îr‹s_limô
 <= 0) {

3671 
	`AÀπ
("parsing [%s:%d]: %s hasÅo be > 0.\n",

3672 
fûe
, 
löíum
, 
¨gs
[
cur_¨g
]);

3673 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3674 
out
;

3676 
cur_¨g
 += 2;

3678 i‡(!
def§v
 && !
	`°rcmp
(
¨gs
[
cur_¨g
], "source")) {

3679 
p‹t_low
, 
p‹t_high
;

3680 
sockaddr_ö
 *
sk
;

3682 i‡(!*
¨gs
[
cur_¨g
 + 1]) {

3683 #i‡
	`deföed
(
CONFIG_HAP_CTTPROXY
Ë|| deföed(
CONFIG_HAP_LINUX_TPROXY
)

3684 
	`AÀπ
("parsing [%s:%d] : '%s'Éxpects <addr>[:<port>[-<port>]],ánd optional '%s' <addr>ásárgument.\n",

3685 
fûe
, 
löíum
, "source", "usesrc");

3687 
	`AÀπ
("parsing [%s:%d] : '%s'Éxpects <addr>[:<port>[-<port>]]ásárgument.\n",

3688 
fûe
, 
löíum
, "source");

3690 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3691 
out
;

3693 
√w§v
->
°©e
 |
SRV_BIND_SRC
;

3694 
sk
 = 
	`°r2ß_ønge
(
¨gs
[
cur_¨g
 + 1], &
p‹t_low
, &
p‹t_high
);

3695 i‡(!
sk
) {

3696 
	`AÀπ
("∑rsög [%s:%d] : Unknow¿ho° i¿'%s'\n", 
fûe
, 
löíum
, 
¨gs
[
cur_¨g
 + 1]);

3697 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3698 
out
;

3700 
√w§v
->
sour˚_addr
 = *
sk
;

3702 i‡(
p‹t_low
 !
p‹t_high
) {

3703 
i
;

3704 i‡(
p‹t_low
 <= 0 ||Öort_low > 65535 ||

3705 
p‹t_high
 <= 0 ||Öort_high > 65535 ||

3706 
p‹t_low
 > 
p‹t_high
) {

3707 
	`AÀπ
("parsing [%s:%d] : invalid sourceÖortÑange %d-%d.\n",

3708 
fûe
, 
löíum
, 
p‹t_low
, 
p‹t_high
);

3709 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3710 
out
;

3712 
√w§v
->
•‹t_ønge
 = 
	`p‹t_ønge_Æloc_ønge
(
p‹t_high
 - 
p‹t_low
 + 1);

3713 
i
 = 0; i < 
√w§v
->
•‹t_ønge
->
size
; i++)

3714 
√w§v
->
•‹t_ønge
->
p‹ts
[
i
] = 
p‹t_low
 + i;

3717 
cur_¨g
 += 2;

3718 *(
¨gs
[
cur_¨g
])) {

3719 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "usesrc")) {

3720 #i‡
	`deföed
(
CONFIG_HAP_CTTPROXY
Ë|| deföed(
CONFIG_HAP_LINUX_TPROXY
)

3721 #i‡!
	`deföed
(
CONFIG_HAP_LINUX_TPROXY
)

3722 i‡(
√w§v
->
sour˚_addr
.
sö_addr
.
s_addr
 =
INADDR_ANY
) {

3723 
	`AÀπ
("parsing [%s:%d] : '%s'ÑequiresánÉxplicit '%s'áddress.\n",

3724 
fûe
, 
löíum
, "usesrc", "source");

3725 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3726 
out
;

3729 i‡(!*
¨gs
[
cur_¨g
 + 1]) {

3730 
	`AÀπ
("parsing [%s:%d] : '%s'Éxpects <addr>[:<port>], 'client', 'clientip', or 'hdr_ip(name,#)'ásárgument.\n",

3731 
fûe
, 
löíum
, "usesrc");

3732 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3733 
out
;

3735 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
 + 1], "client")) {

3736 
√w§v
->
°©e
 &~
SRV_TPROXY_MASK
;

3737 
√w§v
->
°©e
 |
SRV_TPROXY_CLI
;

3738 } i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
 + 1], "clientip")) {

3739 
√w§v
->
°©e
 &~
SRV_TPROXY_MASK
;

3740 
√w§v
->
°©e
 |
SRV_TPROXY_CIP
;

3741 } i‡(!
	`°∫cmp
(
¨gs
[
cur_¨g
 + 1], "hdr_ip(", 7)) {

3742 *
«me
, *
íd
;

3744 
«me
 = 
¨gs
[
cur_¨g
+1] + 7;

3745 
	`is•a˚
(*
«me
))

3746 
«me
++;

3748 
íd
 = 
«me
;

3749 *
íd
 && !
	`is•a˚
(*end) && *end != ',' && *end != ')')

3750 
íd
++;

3752 
√w§v
->
°©e
 &~
SRV_TPROXY_MASK
;

3753 
√w§v
->
°©e
 |
SRV_TPROXY_DYN
;

3754 
√w§v
->
böd_hdr_«me
 = 
	`ˇŒoc
(1, 
íd
 - 
«me
 + 1);

3755 
√w§v
->
böd_hdr_Àn
 = 
íd
 - 
«me
;

3756 
	`mem˝y
(
√w§v
->
böd_hdr_«me
, 
«me
, 
íd
 -Çame);

3757 
√w§v
->
böd_hdr_«me
[
íd
-
«me
] = '\0';

3758 
√w§v
->
böd_hdr_occ
 = -1;

3761 
	`is•a˚
(*
íd
))

3762 
íd
++;

3763 i‡(*
íd
 == ',') {

3764 
íd
++;

3765 
«me
 = 
íd
;

3766 i‡(*
íd
 == '-')

3767 
íd
++;

3768 
	`isdigô
(*
íd
))

3769 
íd
++;

3770 
√w§v
->
böd_hdr_occ
 = 
	`°æ2ic
(
«me
, 
íd
-name);

3773 i‡(
√w§v
->
böd_hdr_occ
 < -
MAX_HDR_HISTORY
) {

3774 
	`AÀπ
("parsing [%s:%d] : usesrc hdr_ip(name,num) doesÇot supportÇegative"

3776 
fûe
, 
löíum
, 
MAX_HDR_HISTORY
);

3777 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3778 
out
;

3781 
sockaddr_ö
 *
sk
 = 
	`°r2ß
(
¨gs
[
cur_¨g
 + 1]);

3782 i‡(!
sk
) {

3783 
	`AÀπ
("∑rsög [%s:%d] : Unknow¿ho° i¿'%s'\n", 
fûe
, 
löíum
, 
¨gs
[
cur_¨g
 + 1]);

3784 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3785 
out
;

3787 
√w§v
->
çroxy_addr
 = *
sk
;

3788 
√w§v
->
°©e
 |
SRV_TPROXY_ADDR
;

3790 
globÆ
.
œ°_checks
 |
LSTCHK_NETADM
;

3791 #i‡!
	`deföed
(
CONFIG_HAP_LINUX_TPROXY
)

3792 
globÆ
.
œ°_checks
 |
LSTCHK_CTTPROXY
;

3794 
cur_¨g
 += 2;

3797 
	`AÀπ
("parsing [%s:%d] : '%s'Çotállowed here because support for TPROXY wasÇot compiled in.\n",

3798 
fûe
, 
löíum
, "usesrc");

3799 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3800 
out
;

3804 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "interface")) {

3805 #ifde‡
SO_BINDTODEVICE


3806 i‡(!*
¨gs
[
cur_¨g
 + 1]) {

3807 
	`AÀπ
("parsing [%s:%d] : '%s' : missing interfaceÇame.\n",

3808 
fûe
, 
löíum
, 
¨gs
[0]);

3809 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3810 
out
;

3812 i‡(
√w§v
->
iÁ˚_«me
)

3813 
	`‰ì
(
√w§v
->
iÁ˚_«me
);

3815 
√w§v
->
iÁ˚_«me
 = 
	`°rdup
(
¨gs
[
cur_¨g
 + 1]);

3816 
√w§v
->
iÁ˚_Àn
 = 
	`°æí
“ew§v->
iÁ˚_«me
);

3817 
globÆ
.
œ°_checks
 |
LSTCHK_NETADM
;

3819 
	`AÀπ
("parsing [%s:%d] : '%s' : '%s' optionÇot implemented.\n",

3820 
fûe
, 
löíum
, 
¨gs
[0],árgs[
cur_¨g
]);

3821 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3822 
out
;

3824 
cur_¨g
 += 2;

3831 i‡(!
def§v
 && !
	`°rcmp
(
¨gs
[
cur_¨g
], "usesrc")) {

3832 
	`AÀπ
("parsing [%s:%d] : '%s' onlyállowedáfterá '%s' statement.\n",

3833 
fûe
, 
löíum
, "usesrc", "source");

3834 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3835 
out
;

3838 i‡(!
def§v
)

3839 
	`AÀπ
("parsing [%s:%d] : server %s only supports options 'backup', 'cookie', 'redir', 'observer', 'on-error', 'error-limit', 'check', 'disabled', 'track', 'id', 'inter', 'fastinter', 'downinter', 'rise', 'fall', 'addr', 'port', 'source', 'minconn', 'maxconn', 'maxqueue', 'slowstart'ánd 'weight'.\n",

3840 
fûe
, 
löíum
, 
√w§v
->
id
);

3842 
	`AÀπ
("parsing [%s:%d]: default-server only supports options 'on-error', 'error-limit', 'inter', 'fastinter', 'downinter', 'rise', 'fall', 'port', 'minconn', 'maxconn', 'maxqueue', 'slowstart'ánd 'weight'.\n",

3843 
fûe
, 
löíum
);

3845 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3846 
out
;

3850 i‡(
do_check
) {

3851 i‡(
√w§v
->
åackô
) {

3852 
	`AÀπ
("parsing [%s:%d]: unableÅoÉnable checksándÅrackingátÅhe sameÅime!\n",

3853 
fûe
, 
löíum
);

3854 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3855 
out
;

3858 i‡(!
√w§v
->
check_p‹t
 &&Çew§v->
check_addr
.
sö_p‹t
)

3859 
√w§v
->
check_p‹t
 =Çew§v->
check_addr
.
sö_p‹t
;

3861 i‡(!
√w§v
->
check_p‹t
 && !“ew§v->
°©e
 & 
SRV_MAPPORTS
))

3862 
√w§v
->
check_p‹t
 = 
ªÆp‹t
;

3863 i‡(!
√w§v
->
check_p‹t
) {

3868 
li°íî
 *
l
;

3869 
l
 = 
cuΩroxy
->
li°í
;

3870 i‡(
l
) {

3871 
p‹t
;

3872 
p‹t
 = (
l
->
addr
.
ss_Ámûy
 =
AF_INET6
)

3873 ? 
	`¡ohs
(((
sockaddr_ö6
 *)(&
l
->
addr
))->
sö6_p‹t
)

3874 : 
	`¡ohs
(((
sockaddr_ö
 *)(&
l
->
addr
))->
sö_p‹t
);

3875 
√w§v
->
check_p‹t
 = 
p‹t
;

3878 i‡(!
√w§v
->
check_p‹t
) {

3879 
	`AÀπ
("parsing [%s:%d] : server %s hasÇeither serviceÖortÇor checkÖort. Check has been disabled.\n",

3880 
fûe
, 
löíum
, 
√w§v
->
id
);

3881 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3882 
out
;

3886 i‡((
√w§v
->
check_d©a
 = 
	`ˇŒoc
(
globÆ
.
tu√
.
chksize
, ())Ë=
NULL
) {

3887 
	`AÀπ
("∑rsög [%s:%d] : ouào‡mem‹y whûêÆloˇtög check buf„r.\n", 
fûe
, 
löíum
);

3888 
îr_code
 |
ERR_ALERT
 | 
ERR_ABORT
;

3889 
out
;

3892 
√w§v
->
check_°©us
 = 
HCHK_STATUS_INI
;

3893 
√w§v
->
°©e
 |
SRV_CHECKED
;

3896 i‡(!
def§v
) {

3897 i‡(
√w§v
->
°©e
 & 
SRV_BACKUP
)

3898 
cuΩroxy
->
§v_bck
++;

3900 
cuΩroxy
->
§v_a˘
++;

3902 
√w§v
->
¥ev_°©e
 =Çew§v->
°©e
;

3905 i‡(!
	`°rcmp
(
¨gs
[0], "log")) {

3906 
log§v
Üogsrv;

3907 
Ácûôy
;

3909 i‡(*(
¨gs
[1]Ë&& *◊rgs[2]Ë=0 && !
	`°rcmp
(args[1], "global")) {

3910 
cuΩroxy
->
logÁc1
 = 
globÆ
.logfac1;

3911 
cuΩroxy
->
log§v1
 = 
globÆ
.logsrv1;

3912 
cuΩroxy
->
logÀv1
 = 
globÆ
.loglev1;

3913 
cuΩroxy
->
mölvl1
 = 
globÆ
.minlvl1;

3914 
cuΩroxy
->
logÁc2
 = 
globÆ
.logfac2;

3915 
cuΩroxy
->
log§v2
 = 
globÆ
.logsrv2;

3916 
cuΩroxy
->
logÀv2
 = 
globÆ
.loglev2;

3917 
cuΩroxy
->
mölvl2
 = 
globÆ
.minlvl2;

3919 i‡(*(
¨gs
[1]) && *(args[2])) {

3920 
Àvñ
, 
mölvl
;

3922 
Ácûôy
 = 
	`gë_log_Ácûôy
(
¨gs
[2]);

3923 i‡(
Ácûôy
 < 0) {

3924 
	`AÀπ
("∑rsög [%s:%d] : unknow¿log facûôy '%s'\n", 
fûe
, 
löíum
, 
¨gs
[2]);

3925 
	`exô
(1);

3928 
Àvñ
 = 7;

3929 i‡(*(
¨gs
[3])) {

3930 
Àvñ
 = 
	`gë_log_Àvñ
(
¨gs
[3]);

3931 i‡(
Àvñ
 < 0) {

3932 
	`AÀπ
("∑rsög [%s:%d] : unknow¿›ti⁄ÆÜogÜevñ '%s'\n", 
fûe
, 
löíum
, 
¨gs
[3]);

3933 
	`exô
(1);

3937 
mölvl
 = 0;

3938 i‡(*(
¨gs
[4])) {

3939 
mölvl
 = 
	`gë_log_Àvñ
(
¨gs
[4]);

3940 i‡(
Àvñ
 < 0) {

3941 
	`AÀπ
("∑rsög [%s:%d] : unknow¿›ti⁄Æ möimumÜogÜevñ '%s'\n", 
fûe
, 
löíum
, 
¨gs
[4]);

3942 
	`exô
(1);

3946 i‡(
¨gs
[1][0] == '/') {

3947 
sockaddr_un
 *
sk
 = 
	`°r2sun
(
¨gs
[1]);

3948 i‡(!
sk
) {

3949 
	`AÀπ
("∑rsög [%s:%d] : SockëÖ©h '%s'Åoÿl⁄g (max %d)\n", 
fûe
, 
löíum
,

3950 
¨gs
[1], ()(
sk
->
sun_∑th
) - 1);

3951 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3952 
out
;

3954 
log§v
.
u
.
un
 = *
sk
;

3955 
log§v
.
u
.
addr
.
ß_Ámûy
 = 
AF_UNIX
;

3957 
sockaddr_ö
 *
sk
 = 
	`°r2ß
(
¨gs
[1]);

3958 i‡(!
sk
) {

3959 
	`AÀπ
("∑rsög [%s:%d] : Unknow¿ho° i¿'%s'\n", 
fûe
, 
löíum
, 
¨gs
[1]);

3960 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3961 
out
;

3963 
log§v
.
u
.
ö
 = *
sk
;

3964 
log§v
.
u
.
addr
.
ß_Ámûy
 = 
AF_INET
;

3965 i‡(!
log§v
.
u
.
ö
.
sö_p‹t
) {

3966 
log§v
.
u
.
ö
.
sö_p‹t
 =

3967 
	`ht⁄s
(
SYSLOG_PORT
);

3971 i‡(
cuΩroxy
->
logÁc1
 == -1) {

3972 
cuΩroxy
->
log§v1
 = 
log§v
;

3973 
cuΩroxy
->
logÁc1
 = 
Ácûôy
;

3974 
cuΩroxy
->
logÀv1
 = 
Àvñ
;

3975 
cuΩroxy
->
mölvl1
 = 
mölvl
;

3977 i‡(
cuΩroxy
->
logÁc2
 == -1) {

3978 
cuΩroxy
->
log§v2
 = 
log§v
;

3979 
cuΩroxy
->
logÁc2
 = 
Ácûôy
;

3980 
cuΩroxy
->
logÀv2
 = 
Àvñ
;

3981 
cuΩroxy
->
mölvl2
 = 
mölvl
;

3984 
	`AÀπ
("∑rsög [%s:%d] :Åoÿm™y sy¶og sîvîs\n", 
fûe
, 
löíum
);

3985 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3986 
out
;

3990 
	`AÀπ
("parsing [%s:%d] : 'log'ÉxpectsÉither <address[:port]>ánd <facility> or 'global'ásárguments.\n",

3991 
fûe
, 
löíum
);

3992 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

3993 
out
;

3996 i‡(!
	`°rcmp
(
¨gs
[0], "source")) {

3997 
cur_¨g
;

3998 
sockaddr_ö
 *
sk
;

4000 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_BE
, 
fûe
, 
löíum
, 
¨gs
[0], 
NULL
))

4001 
îr_code
 |
ERR_WARN
;

4003 i‡(!*
¨gs
[1]) {

4004 
	`AÀπ
("parsing [%s:%d] : '%s'Éxpects <addr>[:<port>],ánd optionally '%s' <addr>,ánd '%s' <name>.\n",

4005 
fûe
, 
löíum
, "source", "usesrc", "interface");

4006 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4007 
out
;

4011 
cuΩroxy
->
›ti⁄s
 &~
PR_O_TPXY_MASK
;

4012 
	`‰ì
(
cuΩroxy
->
iÁ˚_«me
);

4013 
cuΩroxy
->
iÁ˚_«me
 = 
NULL
;

4014 
cuΩroxy
->
iÁ˚_Àn
 = 0;

4016 
sk
 = 
	`°r2ß
(
¨gs
[1]);

4017 i‡(!
sk
) {

4018 
	`AÀπ
("∑rsög [%s:%d] : Unknow¿ho° i¿'%s'\n", 
fûe
, 
löíum
, 
¨gs
[1]);

4019 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4020 
out
;

4022 
cuΩroxy
->
sour˚_addr
 = *
sk
;

4023 
cuΩroxy
->
›ti⁄s
 |
PR_O_BIND_SRC
;

4025 
cur_¨g
 = 2;

4026 *(
¨gs
[
cur_¨g
])) {

4027 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "usesrc")) {

4028 #i‡
	`deföed
(
CONFIG_HAP_CTTPROXY
Ë|| deföed(
CONFIG_HAP_LINUX_TPROXY
)

4029 #i‡!
	`deföed
(
CONFIG_HAP_LINUX_TPROXY
)

4030 i‡(
cuΩroxy
->
sour˚_addr
.
sö_addr
.
s_addr
 =
INADDR_ANY
) {

4031 
	`AÀπ
("parsing [%s:%d] : '%s'ÑequiresánÉxplicit 'source'áddress.\n",

4032 
fûe
, 
löíum
, "usesrc");

4033 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4034 
out
;

4037 i‡(!*
¨gs
[
cur_¨g
 + 1]) {

4038 
	`AÀπ
("parsing [%s:%d] : '%s'Éxpects <addr>[:<port>], 'client', or 'clientip'ásárgument.\n",

4039 
fûe
, 
löíum
, "usesrc");

4040 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4041 
out
;

4044 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
 + 1], "client")) {

4045 
cuΩroxy
->
›ti⁄s
 &~
PR_O_TPXY_MASK
;

4046 
cuΩroxy
->
›ti⁄s
 |
PR_O_TPXY_CLI
;

4047 } i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
 + 1], "clientip")) {

4048 
cuΩroxy
->
›ti⁄s
 &~
PR_O_TPXY_MASK
;

4049 
cuΩroxy
->
›ti⁄s
 |
PR_O_TPXY_CIP
;

4050 } i‡(!
	`°∫cmp
(
¨gs
[
cur_¨g
 + 1], "hdr_ip(", 7)) {

4051 *
«me
, *
íd
;

4053 
«me
 = 
¨gs
[
cur_¨g
+1] + 7;

4054 
	`is•a˚
(*
«me
))

4055 
«me
++;

4057 
íd
 = 
«me
;

4058 *
íd
 && !
	`is•a˚
(*end) && *end != ',' && *end != ')')

4059 
íd
++;

4061 
cuΩroxy
->
›ti⁄s
 &~
PR_O_TPXY_MASK
;

4062 
cuΩroxy
->
›ti⁄s
 |
PR_O_TPXY_DYN
;

4063 
cuΩroxy
->
böd_hdr_«me
 = 
	`ˇŒoc
(1, 
íd
 - 
«me
 + 1);

4064 
cuΩroxy
->
böd_hdr_Àn
 = 
íd
 - 
«me
;

4065 
	`mem˝y
(
cuΩroxy
->
böd_hdr_«me
, 
«me
, 
íd
 -Çame);

4066 
cuΩroxy
->
böd_hdr_«me
[
íd
-
«me
] = '\0';

4067 
cuΩroxy
->
böd_hdr_occ
 = -1;

4070 
	`is•a˚
(*
íd
))

4071 
íd
++;

4072 i‡(*
íd
 == ',') {

4073 
íd
++;

4074 
«me
 = 
íd
;

4075 i‡(*
íd
 == '-')

4076 
íd
++;

4077 
	`isdigô
(*
íd
))

4078 
íd
++;

4079 
cuΩroxy
->
böd_hdr_occ
 = 
	`°æ2ic
(
«me
, 
íd
-name);

4082 i‡(
cuΩroxy
->
böd_hdr_occ
 < -
MAX_HDR_HISTORY
) {

4083 
	`AÀπ
("parsing [%s:%d] : usesrc hdr_ip(name,num) doesÇot supportÇegative"

4085 
fûe
, 
löíum
, 
MAX_HDR_HISTORY
);

4086 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4087 
out
;

4090 
sockaddr_ö
 *
sk
 = 
	`°r2ß
(
¨gs
[
cur_¨g
 + 1]);

4091 i‡(!
sk
) {

4092 
	`AÀπ
("∑rsög [%s:%d] : Unknow¿ho° i¿'%s'\n", 
fûe
, 
löíum
, 
¨gs
[
cur_¨g
 + 1]);

4093 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4094 
out
;

4096 
cuΩroxy
->
çroxy_addr
 = *
sk
;

4097 
cuΩroxy
->
›ti⁄s
 |
PR_O_TPXY_ADDR
;

4099 
globÆ
.
œ°_checks
 |
LSTCHK_NETADM
;

4100 #i‡!
	`deföed
(
CONFIG_HAP_LINUX_TPROXY
)

4101 
globÆ
.
œ°_checks
 |
LSTCHK_CTTPROXY
;

4104 
	`AÀπ
("parsing [%s:%d] : '%s'Çotállowed here because support for TPROXY wasÇot compiled in.\n",

4105 
fûe
, 
löíum
, "usesrc");

4106 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4107 
out
;

4109 
cur_¨g
 += 2;

4113 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "interface")) {

4114 #ifde‡
SO_BINDTODEVICE


4115 i‡(!*
¨gs
[
cur_¨g
 + 1]) {

4116 
	`AÀπ
("parsing [%s:%d] : '%s' : missing interfaceÇame.\n",

4117 
fûe
, 
löíum
, 
¨gs
[0]);

4118 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4119 
out
;

4121 i‡(
cuΩroxy
->
iÁ˚_«me
)

4122 
	`‰ì
(
cuΩroxy
->
iÁ˚_«me
);

4124 
cuΩroxy
->
iÁ˚_«me
 = 
	`°rdup
(
¨gs
[
cur_¨g
 + 1]);

4125 
cuΩroxy
->
iÁ˚_Àn
 = 
	`°æí
(cuΩroxy->
iÁ˚_«me
);

4126 
globÆ
.
œ°_checks
 |
LSTCHK_NETADM
;

4128 
	`AÀπ
("parsing [%s:%d] : '%s' : '%s' optionÇot implemented.\n",

4129 
fûe
, 
löíum
, 
¨gs
[0],árgs[
cur_¨g
]);

4130 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4131 
out
;

4133 
cur_¨g
 += 2;

4136 
	`AÀπ
("parsing [%s:%d] : '%s' only supports optional keywords '%s'ánd '%s'.\n",

4137 
fûe
, 
löíum
, 
¨gs
[0], "inteface", "usesrc");

4138 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4139 
out
;

4142 i‡(!
	`°rcmp
(
¨gs
[0], "usesrc")) {

4143 
	`AÀπ
("parsing [%s:%d] : '%s' onlyállowedáfterá '%s' statement.\n",

4144 
fûe
, 
löíum
, "usesrc", "source");

4145 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4146 
out
;

4148 i‡(!
	`°rcmp
(
¨gs
[0], "cliexp") || !strcmp(args[0], "reqrep")) {

4149 i‡(*(
¨gs
[2]) == 0) {

4150 
	`AÀπ
("parsing [%s:%d] : '%s'Éxpects <search>ánd <replace>ásárguments.\n",

4151 
fûe
, 
löíum
, 
¨gs
[0]);

4152 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4153 
out
;

4156 
îr_code
 |
	`¸óã_c⁄d_ªgex_ruÀ
(
fûe
, 
löíum
, 
cuΩroxy
,

4157 
ACL_DIR_REQ
, 
ACT_REPLACE
, 0,

4158 
¨gs
[0],árgs[1],árgs[2], (const **)args+3);

4159 i‡(
îr_code
 & 
ERR_FATAL
)

4160 
out
;

4162 i‡(!
	`°rcmp
(
¨gs
[0], "reqdel")) {

4163 
îr_code
 |
	`¸óã_c⁄d_ªgex_ruÀ
(
fûe
, 
löíum
, 
cuΩroxy
,

4164 
ACL_DIR_REQ
, 
ACT_REMOVE
, 0,

4165 
¨gs
[0],árgs[1], 
NULL
, (const **)args+2);

4166 i‡(
îr_code
 & 
ERR_FATAL
)

4167 
out
;

4169 i‡(!
	`°rcmp
(
¨gs
[0], "reqdeny")) {

4170 
îr_code
 |
	`¸óã_c⁄d_ªgex_ruÀ
(
fûe
, 
löíum
, 
cuΩroxy
,

4171 
ACL_DIR_REQ
, 
ACT_DENY
, 0,

4172 
¨gs
[0],árgs[1], 
NULL
, (const **)args+2);

4173 i‡(
îr_code
 & 
ERR_FATAL
)

4174 
out
;

4176 i‡(!
	`°rcmp
(
¨gs
[0], "reqpass")) {

4177 
îr_code
 |
	`¸óã_c⁄d_ªgex_ruÀ
(
fûe
, 
löíum
, 
cuΩroxy
,

4178 
ACL_DIR_REQ
, 
ACT_PASS
, 0,

4179 
¨gs
[0],árgs[1], 
NULL
, (const **)args+2);

4180 i‡(
îr_code
 & 
ERR_FATAL
)

4181 
out
;

4183 i‡(!
	`°rcmp
(
¨gs
[0], "reqallow")) {

4184 
îr_code
 |
	`¸óã_c⁄d_ªgex_ruÀ
(
fûe
, 
löíum
, 
cuΩroxy
,

4185 
ACL_DIR_REQ
, 
ACT_ALLOW
, 0,

4186 
¨gs
[0],árgs[1], 
NULL
, (const **)args+2);

4187 i‡(
îr_code
 & 
ERR_FATAL
)

4188 
out
;

4190 i‡(!
	`°rcmp
(
¨gs
[0], "reqtarpit")) {

4191 
îr_code
 |
	`¸óã_c⁄d_ªgex_ruÀ
(
fûe
, 
löíum
, 
cuΩroxy
,

4192 
ACL_DIR_REQ
, 
ACT_TARPIT
, 0,

4193 
¨gs
[0],árgs[1], 
NULL
, (const **)args+2);

4194 i‡(
îr_code
 & 
ERR_FATAL
)

4195 
out
;

4197 i‡(!
	`°rcmp
(
¨gs
[0], "reqsetbe")) {

4198 
îr_code
 |
	`¸óã_c⁄d_ªgex_ruÀ
(
fûe
, 
löíum
, 
cuΩroxy
,

4199 
ACL_DIR_REQ
, 
ACT_SETBE
, 0,

4200 
¨gs
[0],árgs[1],árgs[2], (const **)args+3);

4201 i‡(
îr_code
 & 
ERR_FATAL
)

4202 
out
;

4204 i‡(!
	`°rcmp
(
¨gs
[0], "reqisetbe")) {

4205 
îr_code
 |
	`¸óã_c⁄d_ªgex_ruÀ
(
fûe
, 
löíum
, 
cuΩroxy
,

4206 
ACL_DIR_REQ
, 
ACT_SETBE
, 
REG_ICASE
,

4207 
¨gs
[0],árgs[1],árgs[2], (const **)args+3);

4208 i‡(
îr_code
 & 
ERR_FATAL
)

4209 
out
;

4211 i‡(!
	`°rcmp
(
¨gs
[0], "reqirep")) {

4212 i‡(*(
¨gs
[2]) == 0) {

4213 
	`AÀπ
("parsing [%s:%d] : '%s'Éxpects <search>ánd <replace>ásárguments.\n",

4214 
fûe
, 
löíum
, 
¨gs
[0]);

4215 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4216 
out
;

4219 
îr_code
 |
	`¸óã_c⁄d_ªgex_ruÀ
(
fûe
, 
löíum
, 
cuΩroxy
,

4220 
ACL_DIR_REQ
, 
ACT_REPLACE
, 
REG_ICASE
,

4221 
¨gs
[0],árgs[1],árgs[2], (const **)args+3);

4222 i‡(
îr_code
 & 
ERR_FATAL
)

4223 
out
;

4225 i‡(!
	`°rcmp
(
¨gs
[0], "reqidel")) {

4226 
îr_code
 |
	`¸óã_c⁄d_ªgex_ruÀ
(
fûe
, 
löíum
, 
cuΩroxy
,

4227 
ACL_DIR_REQ
, 
ACT_REMOVE
, 
REG_ICASE
,

4228 
¨gs
[0],árgs[1], 
NULL
, (const **)args+2);

4229 i‡(
îr_code
 & 
ERR_FATAL
)

4230 
out
;

4232 i‡(!
	`°rcmp
(
¨gs
[0], "reqideny")) {

4233 
îr_code
 |
	`¸óã_c⁄d_ªgex_ruÀ
(
fûe
, 
löíum
, 
cuΩroxy
,

4234 
ACL_DIR_REQ
, 
ACT_DENY
, 
REG_ICASE
,

4235 
¨gs
[0],árgs[1], 
NULL
, (const **)args+2);

4236 i‡(
îr_code
 & 
ERR_FATAL
)

4237 
out
;

4239 i‡(!
	`°rcmp
(
¨gs
[0], "reqipass")) {

4240 
îr_code
 |
	`¸óã_c⁄d_ªgex_ruÀ
(
fûe
, 
löíum
, 
cuΩroxy
,

4241 
ACL_DIR_REQ
, 
ACT_PASS
, 
REG_ICASE
,

4242 
¨gs
[0],árgs[1], 
NULL
, (const **)args+2);

4243 i‡(
îr_code
 & 
ERR_FATAL
)

4244 
out
;

4246 i‡(!
	`°rcmp
(
¨gs
[0], "reqiallow")) {

4247 
îr_code
 |
	`¸óã_c⁄d_ªgex_ruÀ
(
fûe
, 
löíum
, 
cuΩroxy
,

4248 
ACL_DIR_REQ
, 
ACT_ALLOW
, 
REG_ICASE
,

4249 
¨gs
[0],árgs[1], 
NULL
, (const **)args+2);

4250 i‡(
îr_code
 & 
ERR_FATAL
)

4251 
out
;

4253 i‡(!
	`°rcmp
(
¨gs
[0], "reqitarpit")) {

4254 
îr_code
 |
	`¸óã_c⁄d_ªgex_ruÀ
(
fûe
, 
löíum
, 
cuΩroxy
,

4255 
ACL_DIR_REQ
, 
ACT_TARPIT
, 
REG_ICASE
,

4256 
¨gs
[0],árgs[1], 
NULL
, (const **)args+2);

4257 i‡(
îr_code
 & 
ERR_FATAL
)

4258 
out
;

4260 i‡(!
	`°rcmp
(
¨gs
[0], "reqadd")) {

4261 
c⁄d_w‹dli°
 *
wl
;

4263 i‡(
cuΩroxy
 =&
deÂroxy
) {

4264 
	`AÀπ
("∑rsög [%s:%d] : '%s'ÇŸáŒowed i¿'deÁu…s' se˘i⁄.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

4265 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4266 
out
;

4268 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_RS
, 
fûe
, 
löíum
, 
¨gs
[0], 
NULL
))

4269 
îr_code
 |
ERR_WARN
;

4271 i‡(*(
¨gs
[1]) == 0) {

4272 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†<hódî>á†™árgumít.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

4273 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4274 
out
;

4277 i‡((
	`°rcmp
(
¨gs
[2], "if") == 0 || strcmp(args[2], "unless") == 0)) {

4278 i‡((
c⁄d
 = 
	`buûd_a˛_c⁄d
(
fûe
, 
löíum
, 
cuΩroxy
, (c⁄° **)
¨gs
+2)Ë=
NULL
) {

4279 
	`AÀπ
("parsing [%s:%d] :Érror detected whileÖarsingá '%s' condition.\n",

4280 
fûe
, 
löíum
, 
¨gs
[0]);

4281 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4282 
out
;

4284 
îr_code
 |
	`w¨nif_c⁄d_ªquúes_ª•
(
c⁄d
, 
fûe
, 
löíum
);

4286 i‡(*
¨gs
[2]) {

4287 
	`AÀπ
("parsing [%s:%d] : '%s' : ExpectingÇothing, 'if', or 'unless', got '%s'.\n",

4288 
fûe
, 
löíum
, 
¨gs
[0],árgs[2]);

4289 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4290 
out
;

4293 
wl
 = 
	`ˇŒoc
(1, (*wl));

4294 
wl
->
c⁄d
 = cond;

4295 
wl
->
s
 = 
	`°rdup
(
¨gs
[1]);

4296 
	`LIST_ADDQ
(&
cuΩroxy
->
ªq_add
, &
wl
->
li°
);

4297 
	`w¨nif_mi•œ˚d_ªqadd
(
cuΩroxy
, 
fûe
, 
löíum
, 
¨gs
[0]);

4299 i‡(!
	`°rcmp
(
¨gs
[0], "srvexp") || !strcmp(args[0], "rsprep")) {

4300 i‡(*(
¨gs
[2]) == 0) {

4301 
	`AÀπ
("parsing [%s:%d] : '%s'Éxpects <search>ánd <replace>ásárguments.\n",

4302 
fûe
, 
löíum
, 
¨gs
[0]);

4303 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4304 
out
;

4307 
îr_code
 |
	`¸óã_c⁄d_ªgex_ruÀ
(
fûe
, 
löíum
, 
cuΩroxy
,

4308 
ACL_DIR_RTR
, 
ACT_REPLACE
, 0,

4309 
¨gs
[0],árgs[1],árgs[2], (const **)args+3);

4310 i‡(
îr_code
 & 
ERR_FATAL
)

4311 
out
;

4313 i‡(!
	`°rcmp
(
¨gs
[0], "rspdel")) {

4314 
îr_code
 |
	`¸óã_c⁄d_ªgex_ruÀ
(
fûe
, 
löíum
, 
cuΩroxy
,

4315 
ACL_DIR_RTR
, 
ACT_REMOVE
, 0,

4316 
¨gs
[0],árgs[1], 
NULL
, (const **)args+2);

4317 i‡(
îr_code
 & 
ERR_FATAL
)

4318 
out
;

4320 i‡(!
	`°rcmp
(
¨gs
[0], "rspdeny")) {

4321 
îr_code
 |
	`¸óã_c⁄d_ªgex_ruÀ
(
fûe
, 
löíum
, 
cuΩroxy
,

4322 
ACL_DIR_RTR
, 
ACT_DENY
, 0,

4323 
¨gs
[0],árgs[1], 
NULL
, (const **)args+2);

4324 i‡(
îr_code
 & 
ERR_FATAL
)

4325 
out
;

4327 i‡(!
	`°rcmp
(
¨gs
[0], "rspirep")) {

4328 i‡(*(
¨gs
[2]) == 0) {

4329 
	`AÀπ
("parsing [%s:%d] : '%s'Éxpects <search>ánd <replace>ásárguments.\n",

4330 
fûe
, 
löíum
, 
¨gs
[0]);

4331 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4332 
out
;

4335 
îr_code
 |
	`¸óã_c⁄d_ªgex_ruÀ
(
fûe
, 
löíum
, 
cuΩroxy
,

4336 
ACL_DIR_RTR
, 
ACT_REPLACE
, 
REG_ICASE
,

4337 
¨gs
[0],árgs[1],árgs[2], (const **)args+3);

4338 i‡(
îr_code
 & 
ERR_FATAL
)

4339 
out
;

4341 i‡(!
	`°rcmp
(
¨gs
[0], "rspidel")) {

4342 
îr_code
 |
	`¸óã_c⁄d_ªgex_ruÀ
(
fûe
, 
löíum
, 
cuΩroxy
,

4343 
ACL_DIR_RTR
, 
ACT_REMOVE
, 
REG_ICASE
,

4344 
¨gs
[0],árgs[1], 
NULL
, (const **)args+2);

4345 i‡(
îr_code
 & 
ERR_FATAL
)

4346 
out
;

4348 i‡(!
	`°rcmp
(
¨gs
[0], "rspideny")) {

4349 
îr_code
 |
	`¸óã_c⁄d_ªgex_ruÀ
(
fûe
, 
löíum
, 
cuΩroxy
,

4350 
ACL_DIR_RTR
, 
ACT_DENY
, 
REG_ICASE
,

4351 
¨gs
[0],árgs[1], 
NULL
, (const **)args+2);

4352 i‡(
îr_code
 & 
ERR_FATAL
)

4353 
out
;

4355 i‡(!
	`°rcmp
(
¨gs
[0], "rspadd")) {

4356 
c⁄d_w‹dli°
 *
wl
;

4358 i‡(
cuΩroxy
 =&
deÂroxy
) {

4359 
	`AÀπ
("∑rsög [%s:%d] : '%s'ÇŸáŒowed i¿'deÁu…s' se˘i⁄.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

4360 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4361 
out
;

4363 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_RS
, 
fûe
, 
löíum
, 
¨gs
[0], 
NULL
))

4364 
îr_code
 |
ERR_WARN
;

4366 i‡(*(
¨gs
[1]) == 0) {

4367 
	`AÀπ
("∑rsög [%s:%d] : '%s'Éx≥˘†<hódî>á†™árgumít.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

4368 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4369 
out
;

4372 i‡((
	`°rcmp
(
¨gs
[2], "if") == 0 || strcmp(args[2], "unless") == 0)) {

4373 i‡((
c⁄d
 = 
	`buûd_a˛_c⁄d
(
fûe
, 
löíum
, 
cuΩroxy
, (c⁄° **)
¨gs
+2)Ë=
NULL
) {

4374 
	`AÀπ
("parsing [%s:%d] :Érror detected whileÖarsingá '%s' condition.\n",

4375 
fûe
, 
löíum
, 
¨gs
[0]);

4376 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4377 
out
;

4379 
îr_code
 |
	`w¨nif_c⁄d_ªquúes_ªq
(
c⁄d
, 
fûe
, 
löíum
);

4381 i‡(*
¨gs
[2]) {

4382 
	`AÀπ
("parsing [%s:%d] : '%s' : ExpectingÇothing, 'if', or 'unless', got '%s'.\n",

4383 
fûe
, 
löíum
, 
¨gs
[0],árgs[2]);

4384 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4385 
out
;

4388 
wl
 = 
	`ˇŒoc
(1, (*wl));

4389 
wl
->
c⁄d
 = cond;

4390 
wl
->
s
 = 
	`°rdup
(
¨gs
[1]);

4391 
	`LIST_ADDQ
(&
cuΩroxy
->
r•_add
, &
wl
->
li°
);

4393 i‡(!
	`°rcmp
(
¨gs
[0], "errorloc") ||

4394 !
	`°rcmp
(
¨gs
[0], "errorloc302") ||

4395 !
	`°rcmp
(
¨gs
[0], "errorloc303")) {

4396 
î∫um
, 
îæí
;

4397 *
îr
;

4399 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_FE
 | 
PR_CAP_BE
, 
fûe
, 
löíum
, 
¨gs
[0], 
NULL
))

4400 
îr_code
 |
ERR_WARN
;

4402 i‡(*(
¨gs
[2]) == 0) {

4403 
	`AÀπ
("∑rsög [%s:%d] : <%s>Éx≥˘†<°©us_code>ánd <uæ>á†¨gumíts.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

4404 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4405 
out
;

4408 
î∫um
 = 
	`©ﬁ
(
¨gs
[1]);

4409 i‡(!
	`°rcmp
(
¨gs
[0], "errorloc303")) {

4410 
îr
 = 
	`mÆloc
(
	`°æí
(
HTTP_303
Ë+ såÀn(
¨gs
[2]) + 5);

4411 
îæí
 = 
	`•rötf
(
îr
, "%s%s\r\n\r\n", 
HTTP_303
, 
¨gs
[2]);

4413 
îr
 = 
	`mÆloc
(
	`°æí
(
HTTP_302
Ë+ såÀn(
¨gs
[2]) + 5);

4414 
îæí
 = 
	`•rötf
(
îr
, "%s%s\r\n\r\n", 
HTTP_302
, 
¨gs
[2]);

4417 
rc
 = 0;Ñ¯< 
HTTP_ERR_SIZE
;Ñc++) {

4418 i‡(
hâp_îr_codes
[
rc
] =
î∫um
) {

4419 
	`chunk_de°roy
(&
cuΩroxy
->
îrmsg
[
rc
]);

4420 
	`chunk_öôÀn
(&
cuΩroxy
->
îrmsg
[
rc
], 
îr
, 
îæí
,Érrlen);

4425 i‡(
rc
 >
HTTP_ERR_SIZE
) {

4426 
	`W¨nög
("parsing [%s:%d] : status code %dÇot handled,ÉrrorÑelocation will be ignored.\n",

4427 
fûe
, 
löíum
, 
î∫um
);

4428 
	`‰ì
(
îr
);

4431 i‡(!
	`°rcmp
(
¨gs
[0], "errorfile")) {

4432 
î∫um
, 
îæí
, 
fd
;

4433 *
îr
;

4434 
°©
 stat;

4436 i‡(
	`w¨ni‚Ÿˇp
(
cuΩroxy
, 
PR_CAP_FE
 | 
PR_CAP_BE
, 
fûe
, 
löíum
, 
¨gs
[0], 
NULL
))

4437 
îr_code
 |
ERR_WARN
;

4439 i‡(*(
¨gs
[2]) == 0) {

4440 
	`AÀπ
("∑rsög [%s:%d] : <%s>Éx≥˘†<°©us_code>ánd <fûe>á†¨gumíts.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

4441 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4442 
out
;

4445 
fd
 = 
	`›í
(
¨gs
[2], 
O_RDONLY
);

4446 i‡((
fd
 < 0Ë|| (
	`f°©
(fd, &
°©
) < 0)) {

4447 
	`AÀπ
("parsing [%s:%d] :Érror opening file <%s> for customÉrror message <%s>.\n",

4448 
fûe
, 
löíum
, 
¨gs
[2],árgs[1]);

4449 i‡(
fd
 >= 0)

4450 
	`˛o£
(
fd
);

4451 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4452 
out
;

4455 i‡(
°©
.
°_size
 <
globÆ
.
tu√
.
bufsize
) {

4456 
îæí
 = 
°©
.
°_size
;

4458 
	`W¨nög
("parsing [%s:%d] : customÉrror message file <%s>ÜargerÅhan %d bytes. Truncating.\n",

4459 
fûe
, 
löíum
, 
¨gs
[2], 
globÆ
.
tu√
.
bufsize
);

4460 
îr_code
 |
ERR_WARN
;

4461 
îæí
 = 
globÆ
.
tu√
.
bufsize
;

4464 
îr
 = 
	`mÆloc
(
îæí
);

4465 
î∫um
 = 
	`ªad
(
fd
, 
îr
, 
îæí
);

4466 i‡(
î∫um
 !
îæí
) {

4467 
	`AÀπ
("parsing [%s:%d] :ÉrrorÑeading file <%s> for customÉrror message <%s>.\n",

4468 
fûe
, 
löíum
, 
¨gs
[2],árgs[1]);

4469 
	`˛o£
(
fd
);

4470 
	`‰ì
(
îr
);

4471 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4472 
out
;

4474 
	`˛o£
(
fd
);

4476 
î∫um
 = 
	`©ﬁ
(
¨gs
[1]);

4477 
rc
 = 0;Ñ¯< 
HTTP_ERR_SIZE
;Ñc++) {

4478 i‡(
hâp_îr_codes
[
rc
] =
î∫um
) {

4479 
	`chunk_de°roy
(&
cuΩroxy
->
îrmsg
[
rc
]);

4480 
	`chunk_öôÀn
(&
cuΩroxy
->
îrmsg
[
rc
], 
îr
, 
îæí
,Érrlen);

4485 i‡(
rc
 >
HTTP_ERR_SIZE
) {

4486 
	`W¨nög
("parsing [%s:%d] : status code %dÇot handled,Érror customization will be ignored.\n",

4487 
fûe
, 
löíum
, 
î∫um
);

4488 
îr_code
 |
ERR_WARN
;

4489 
	`‰ì
(
îr
);

4493 
cfg_kw_li°
 *
kwl
;

4494 
ödex
;

4496 
	`li°_f‹_óch_íåy
(
kwl
, &
cfg_keyw‹ds
.
li°
,Üist) {

4497 
ödex
 = 0; 
kwl
->
kw
[ödex].kw !
NULL
; index++) {

4498 i‡(
kwl
->
kw
[
ödex
].
£˘i⁄
 !
CFG_LISTEN
)

4500 i‡(
	`°rcmp
(
kwl
->
kw
[
ödex
].kw, 
¨gs
[0]) == 0) {

4502 
	`¢¥ötf
(
åash
, (trash),

4503 "îr‹Çó∏'%s' i¿%†£˘i⁄", 
¨gs
[0], 
cur£˘i⁄
);

4504 
rc
 = 
kwl
->
kw
[
ödex
].
	`∑r£
(
¨gs
, 
CFG_LISTEN
, 
cuΩroxy
, &
deÂroxy
, 
åash
, (trash));

4505 i‡(
rc
 < 0) {

4506 
	`AÀπ
("∑rsög [%s:%d] : %s\n", 
fûe
, 
löíum
, 
åash
);

4507 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4508 
out
;

4510 i‡(
rc
 > 0) {

4511 
	`W¨nög
("∑rsög [%s:%d] : %s\n", 
fûe
, 
löíum
, 
åash
);

4512 
îr_code
 |
ERR_WARN
;

4513 
out
;

4515 
out
;

4520 
	`AÀπ
("∑rsög [%s:%d] : unknow¿keyw‹d '%s' i¿'%s' se˘i⁄\n", 
fûe
, 
löíum
, 
¨gs
[0], 
cur£˘i⁄
);

4521 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4522 
out
;

4524 
out
:

4525  
îr_code
;

4526 
	}
}

4529 
	$cfg_∑r£_u£rs
(c⁄° *
fûe
, 
löíum
, **
¨gs
, 
kwm
)

4532 
îr_code
 = 0;

4533 c⁄° *
îr
;

4535 i‡(!
	`°rcmp
(
¨gs
[0], "userlist")) {

4536 
u£æi°
 *
√wul
;

4538 i‡(!*
¨gs
[1]) {

4539 
	`AÀπ
("parsing [%s:%d]: '%s'Éxpects <name>ásárguments.\n",

4540 
fûe
, 
löíum
, 
¨gs
[0]);

4541 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4542 
out
;

4545 
îr
 = 
	`övÆid_ch¨
(
¨gs
[1]);

4546 i‡(
îr
) {

4547 
	`AÀπ
("parsing [%s:%d]: character '%c' isÇotÖermitted in '%s'Çame '%s'.\n",

4548 
fûe
, 
löíum
, *
îr
, 
¨gs
[0],árgs[1]);

4549 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4550 
out
;

4553 
√wul
 = 
u£æi°
;Çewul;Çewu»√wul->
√xt
)

4554 i‡(!
	`°rcmp
(
√wul
->
«me
, 
¨gs
[1])) {

4555 
	`W¨nög
("parsing [%s:%d]: ignoring duplicated userlist '%s'.\n",

4556 
fûe
, 
löíum
, 
¨gs
[1]);

4557 
îr_code
 |
ERR_WARN
;

4558 
out
;

4561 
√wul
 = (
u£æi°
 *)
	`ˇŒoc
(1, (userlist));

4562 i‡(!
√wul
) {

4563 
	`AÀπ
("∑rsög [%s:%d]: ouào‡mem‹y.\n", 
fûe
, 
löíum
);

4564 
îr_code
 |
ERR_ALERT
 | 
ERR_ABORT
;

4565 
out
;

4568 
√wul
->
groupu£rs
 = 
	`ˇŒoc
(
MAX_AUTH_GROUPS
, (*));

4569 
√wul
->
«me
 = 
	`°rdup
(
¨gs
[1]);

4571 i‡(!
√wul
->
groupu£rs
 | !√wul->
«me
) {

4572 
	`AÀπ
("∑rsög [%s:%d]: ouào‡mem‹y.\n", 
fûe
, 
löíum
);

4573 
îr_code
 |
ERR_ALERT
 | 
ERR_ABORT
;

4574 
out
;

4577 
√wul
->
√xt
 = 
u£æi°
;

4578 
u£æi°
 = 
√wul
;

4580 } i‡(!
	`°rcmp
(
¨gs
[0], "group")) {

4581 
cur_¨g
, 
i
;

4582 c⁄° *
îr
;

4584 i‡(!*
¨gs
[1]) {

4585 
	`AÀπ
("parsing [%s:%d]: '%s'Éxpects <name>ásárguments.\n",

4586 
fûe
, 
löíum
, 
¨gs
[0]);

4587 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4588 
out
;

4591 
îr
 = 
	`övÆid_ch¨
(
¨gs
[1]);

4592 i‡(
îr
) {

4593 
	`AÀπ
("parsing [%s:%d]: character '%c' isÇotÖermitted in '%s'Çame '%s'.\n",

4594 
fûe
, 
löíum
, *
îr
, 
¨gs
[0],árgs[1]);

4595 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4596 
out
;

4599 
i
 = 0; i < 
u£æi°
->
gΩ˙t
; i++)

4600 i‡(!
	`°rcmp
(
u£æi°
->
groups
[
i
], 
¨gs
[1])) {

4601 
	`W¨nög
("parsing [%s:%d]: ignoring duplicated group '%s' in userlist '%s'.\n",

4602 
fûe
, 
löíum
, 
¨gs
[1], 
u£æi°
->
«me
);

4603 
îr_code
 |
ERR_ALERT
;

4604 
out
;

4607 i‡(
u£æi°
->
gΩ˙t
 >
MAX_AUTH_GROUPS
) {

4608 
	`AÀπ
("parsing [%s:%d]:Åoo many groups (%u) in in userlist '%s' whileádding group '%s'.\n",

4609 
fûe
, 
löíum
, 
MAX_AUTH_GROUPS
, 
u£æi°
->
«me
, 
¨gs
[1]);

4610 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4611 
out
;

4614 
cur_¨g
 = 2;

4616 *
¨gs
[
cur_¨g
]) {

4617 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "users")) {

4618 
u£æi°
->
groupu£rs
[u£æi°->
gΩ˙t
] = 
	`°rdup
(
¨gs
[
cur_¨g
 + 1]);

4619 
cur_¨g
 += 2;

4622 
	`AÀπ
("parsing [%s:%d]: '%s' only supports 'users' option.\n",

4623 
fûe
, 
löíum
, 
¨gs
[0]);

4624 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4625 
out
;

4629 
u£æi°
->
groups
[u£æi°->
gΩ˙t
++] = 
	`°rdup
(
¨gs
[1]);

4630 } i‡(!
	`°rcmp
(
¨gs
[0], "user")) {

4631 
auth_u£rs
 *
√wu£r
;

4632 
cur_¨g
;

4634 i‡(!*
¨gs
[1]) {

4635 
	`AÀπ
("parsing [%s:%d]: '%s'Éxpects <name>ásárguments.\n",

4636 
fûe
, 
löíum
, 
¨gs
[0]);

4637 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4638 
out
;

4641 
√wu£r
 = 
u£æi°
->
u£rs
;Çewu£r;Çewu£∏√wu£r->
√xt
)

4642 i‡(!
	`°rcmp
(
√wu£r
->
u£r
, 
¨gs
[1])) {

4643 
	`W¨nög
("parsing [%s:%d]: ignoring duplicated user '%s' in userlist '%s'.\n",

4644 
fûe
, 
löíum
, 
¨gs
[1], 
u£æi°
->
«me
);

4645 
îr_code
 |
ERR_ALERT
;

4646 
out
;

4649 
√wu£r
 = (
auth_u£rs
 *)
	`ˇŒoc
(1, (auth_users));

4650 i‡(!
√wu£r
) {

4651 
	`AÀπ
("∑rsög [%s:%d]: ouào‡mem‹y.\n", 
fûe
, 
löíum
);

4652 
îr_code
 |
ERR_ALERT
 | 
ERR_ABORT
;

4653 
out
;

4656 
√wu£r
->
u£r
 = 
	`°rdup
(
¨gs
[1]);

4658 
√wu£r
->
√xt
 = 
u£æi°
->
u£rs
;

4659 
u£æi°
->
u£rs
 = 
√wu£r
;

4661 
cur_¨g
 = 2;

4663 *
¨gs
[
cur_¨g
]) {

4664 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "password")) {

4665 #i‚de‡
CONFIG_HAP_CRYPT


4666 
	`W¨nög
("parsing [%s:%d]:Ço crypt(3) support compiled,ÉncryptedÖasswords willÇot work.\n",

4667 
fûe
, 
löíum
);

4668 
îr_code
 |
ERR_ALERT
;

4670 
√wu£r
->
∑ss
 = 
	`°rdup
(
¨gs
[
cur_¨g
 + 1]);

4671 
cur_¨g
 += 2;

4673 } i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "insecure-password")) {

4674 
√wu£r
->
∑ss
 = 
	`°rdup
(
¨gs
[
cur_¨g
 + 1]);

4675 
√wu£r
->
Êags
 |
AU_O_INSECURE
;

4676 
cur_¨g
 += 2;

4678 } i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "groups")) {

4679 
√wu£r
->
u
.
groups
 = 
	`°rdup
(
¨gs
[
cur_¨g
 + 1]);

4680 
cur_¨g
 += 2;

4683 
	`AÀπ
("parsing [%s:%d]: '%s' only supports 'password', 'insecure-password'ánd 'groups' options.\n",

4684 
fûe
, 
löíum
, 
¨gs
[0]);

4685 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4686 
out
;

4690 
	`AÀπ
("∑rsög [%s:%d]: unknow¿keyw‹d '%s' i¿'%s' se˘i⁄\n", 
fûe
, 
löíum
, 
¨gs
[0], "users");

4691 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4694 
out
:

4695  
îr_code
;

4696 
	}
}

4708 
	$ªadcfgfûe
(c⁄° *
fûe
)

4710 
thi¶öe
[
LINESIZE
];

4711 
FILE
 *
f
;

4712 
löíum
 = 0;

4713 
c⁄f£˘
 = 
CFG_NONE
;

4714 
îr_code
 = 0;

4716 i‡((
f
=
	`f›í
(
fûe
,"r")Ë=
NULL
)

4719 
	`fgës
(
thi¶öe
, —hi¶öe), 
f
Ë!
NULL
) {

4720 
¨g
, 
kwm
 = 
KWM_STD
;

4721 *
íd
;

4722 *
¨gs
[
MAX_LINE_ARGS
 + 1];

4723 *
löe
 = 
thi¶öe
;

4725 
löíum
++;

4727 
íd
 = 
löe
 + 
	`°æí
(line);

4729 i‡(
íd
-
löe
 =(
thi¶öe
)-1 && *(end-1) != '\n') {

4733 
	`AÀπ
("parsing [%s:%d]:ÜineÅooÜong,Üimit: %d.\n",

4734 
fûe
, 
löíum
, ()(
thi¶öe
)-1);

4735 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4739 
	`is•a˚
(()*
löe
))

4740 
löe
++;

4742 
¨g
 = 0;

4743 
¨gs
[
¨g
] = 
löe
;

4745 *
löe
 && 
¨g
 < 
MAX_LINE_ARGS
) {

4749 i‡(*
löe
 == '\\') {

4750 
skù
 = 0;

4751 i‡(
löe
[1] == ' ' ||Üine[1] == '\\' ||Üine[1] == '#') {

4752 *
löe
 =Üine[1];

4753 
skù
 = 1;

4755 i‡(
löe
[1] == 'r') {

4756 *
löe
 = '\r';

4757 
skù
 = 1;

4759 i‡(
löe
[1] == 'n') {

4760 *
löe
 = '\n';

4761 
skù
 = 1;

4763 i‡(
löe
[1] == 't') {

4764 *
löe
 = '\t';

4765 
skù
 = 1;

4767 i‡(
löe
[1] == 'x') {

4768 i‡((
löe
 + 3 < 
íd
Ë&& 
	`ishex
(line[2]) && ishex(line[3])) {

4769 
hex1
, 
hex2
;

4770 
hex1
 = 
	`touµî
(
löe
[2]) - '0';

4771 
hex2
 = 
	`touµî
(
löe
[3]) - '0';

4772 i‡(
hex1
 > 9) hex1 -= 'A' - '9' - 1;

4773 i‡(
hex2
 > 9) hex2 -= 'A' - '9' - 1;

4774 *
löe
 = (
hex1
<<4Ë+ 
hex2
;

4775 
skù
 = 3;

4778 
	`AÀπ
("∑rsög [%s:%d] : invÆid o∏öcom∂ëê'\\x' sequí˚ i¿'%s'.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

4779 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4782 i‡(
skù
) {

4783 
	`memmove
(
löe
 + 1,Üöê+ 1 + 
skù
, 
íd
 - (line + skip));

4784 
íd
 -
skù
;

4786 
löe
++;

4788 i‡(*
löe
 == '#' || *line == '\n' || *line == '\r') {

4790 *
löe
 = 0;

4793 i‡(
	`is•a˚
(()*
löe
)) {

4795 *
löe
++ = '\0';

4796 
	`is•a˚
(()*
löe
))

4797 
löe
++;

4798 
¨gs
[++
¨g
] = 
löe
;

4801 
löe
++;

4806 i‡(!**
¨gs
)

4809 i‡(*
löe
) {

4814 *
löe
 && *line != '#' && *line != '\n' && *line != '\r')

4815 
löe
++;

4816 *
löe
 = '\0';

4818 
	`AÀπ
("parsing [%s:%d]:ÜineÅooÜong,Åruncatingát word %d,Öosition %ld: <%s>.\n",

4819 
fûe
, 
löíum
, 
¨g
 + 1, ()(
¨gs
[¨g] - 
thi¶öe
 + 1),árgs[arg]);

4820 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4821 
¨gs
[
¨g
] = 
löe
;

4827 ++
¨g
 <
MAX_LINE_ARGS
) {

4828 
¨gs
[
¨g
] = 
löe
;

4832 i‡(!
	`°rcmp
(
¨gs
[0], "no")) {

4833 
kwm
 = 
KWM_NO
;

4834 
¨g
=0; *
¨gs
[arg+1];árg++)

4835 
¨gs
[
¨g
] =árgs[arg+1];

4837 i‡(!
	`°rcmp
(
¨gs
[0], "default")) {

4838 
kwm
 = 
KWM_DEF
;

4839 
¨g
=0; *
¨gs
[arg+1];árg++)

4840 
¨gs
[
¨g
] =árgs[arg+1];

4843 i‡(
kwm
 !
KWM_STD
 && 
	`°rcmp
(
¨gs
[0], "option") != 0) {

4844 
	`AÀπ
("∑rsög [%s:%d]:Çeg©i⁄/deÁu… cuºíéy suµ‹ãd o∆y f‹ o±i⁄s.\n", 
fûe
, 
löíum
);

4845 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4848 i‡(!
	`°rcmp
(
¨gs
[0], "listen") ||

4849 !
	`°rcmp
(
¨gs
[0], "frontend") ||

4850 !
	`°rcmp
(
¨gs
[0], "backend") ||

4851 !
	`°rcmp
(
¨gs
[0], "ruleset") ||

4852 !
	`°rcmp
(
¨gs
[0], "defaults")) {

4853 
c⁄f£˘
 = 
CFG_LISTEN
;

4854 
	`‰ì
(
cur£˘i⁄
);

4855 
cur£˘i⁄
 = 
	`°rdup
(
¨gs
[0]);

4857 i‡(!
	`°rcmp
(
¨gs
[0], "global")) {

4858 
c⁄f£˘
 = 
CFG_GLOBAL
;

4859 
	`‰ì
(
cur£˘i⁄
);

4860 
cur£˘i⁄
 = 
	`°rdup
(
¨gs
[0]);

4861 } i‡(!
	`°rcmp
(
¨gs
[0], "userlist")) {

4862 
c⁄f£˘
 = 
CFG_USERLIST
;

4863 
	`‰ì
(
cur£˘i⁄
);

4864 
cur£˘i⁄
 = 
	`°rdup
(
¨gs
[0]);

4868 
c⁄f£˘
) {

4869 
CFG_LISTEN
:

4870 
îr_code
 |
	`cfg_∑r£_li°í
(
fûe
, 
löíum
, 
¨gs
, 
kwm
);

4872 
CFG_GLOBAL
:

4873 
îr_code
 |
	`cfg_∑r£_globÆ
(
fûe
, 
löíum
, 
¨gs
, 
kwm
);

4875 
CFG_USERLIST
:

4876 
îr_code
 |
	`cfg_∑r£_u£rs
(
fûe
, 
löíum
, 
¨gs
, 
kwm
);

4879 
	`AÀπ
("∑rsög [%s:%d]: unknow¿keyw‹d '%s' ouào‡£˘i⁄.\n", 
fûe
, 
löíum
, 
¨gs
[0]);

4880 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4883 i‡(
îr_code
 & 
ERR_ABORT
)

4886 
	`‰ì
(
cur£˘i⁄
);

4887 
cur£˘i⁄
 = 
NULL
;

4888 
	`f˛o£
(
f
);

4889  
îr_code
;

4890 
	}
}

4901 
	$check_c⁄fig_vÆidôy
()

4903 
cfgîr
 = 0;

4904 
¥oxy
 *
cuΩroxy
 = 
NULL
;

4905 
£rvî
 *
√w§v
 = 
NULL
;

4906 
u£æi°
 *
curu£æi°
 = 
NULL
;

4907 
îr_code
 = 0;

4908 
√xt_pxid
 = 1;

4915 
	`tv_upd©e_d©e
(0,1);

4918 
cuΩroxy
 = 
NULL
;

4919 
¥oxy
) {

4920 
¥oxy
 *
√xt
;

4922 
√xt
 = 
¥oxy
->next;

4923 
¥oxy
->
√xt
 = 
cuΩroxy
;

4924 
cuΩroxy
 = 
¥oxy
;

4925 i‡(!
√xt
)

4927 
¥oxy
 = 
√xt
;

4930 i‡((
cuΩroxy
 = 
¥oxy
Ë=
NULL
) {

4931 
	`AÀπ
("config :Ço <listen>Üine. NothingÅo do !\n");

4932 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

4933 
out
;

4936 
cuΩroxy
 !
NULL
) {

4937 
swôchög_ruÀ
 *
ruÀ
;

4938 
°ickög_ruÀ
 *
mruÀ
;

4939 
li°íî
 *listener;

4940 
√xt_id
;

4942 i‡(!
cuΩroxy
->
uuid
) {

4946 
√xt_pxid
 = 
	`gë_√xt_id
(&
u£d_¥oxy_id
,Çext_pxid);

4947 
cuΩroxy
->
c⁄f
.
id
.
key
 = cuΩroxy->
uuid
 = 
√xt_pxid
;

4948 
	`eb32_ö£π
(&
u£d_¥oxy_id
, &
cuΩroxy
->
c⁄f
.
id
);

4950 
√xt_pxid
++;

4953 i‡(
cuΩroxy
->
°©e
 =
PR_STSTOPPED
) {

4955 
	`°›_¥oxy
(
cuΩroxy
);

4956 
cuΩroxy
 = cuΩroxy->
√xt
;

4960 
cuΩroxy
->
mode
) {

4961 
PR_MODE_HEALTH
:

4962 
cfgîr
 +
	`¥oxy_cfg_ísuª_no_hâp
(
cuΩroxy
);

4963 i‡(!(
cuΩroxy
->
ˇp
 & 
PR_CAP_FE
)) {

4964 
	`AÀπ
("config : %s '%s' cannot be in health modeás it hasÇo frontend capability.\n",

4965 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
);

4966 
cfgîr
++;

4969 i‡(
cuΩroxy
->
§v
 !
NULL
)

4970 
	`W¨nög
("config : servers will be ignored for %s '%s'.\n",

4971 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
);

4974 
PR_MODE_TCP
:

4975 
cfgîr
 +
	`¥oxy_cfg_ísuª_no_hâp
(
cuΩroxy
);

4978 
PR_MODE_HTTP
:

4979 
cuΩroxy
->
a˛_ªquúes
 |
ACL_USE_L7_ANY
;

4980 i‡((
cuΩroxy
->
cookõ_«me
 !
NULL
Ë&& (cuΩroxy->
§v
 == NULL)) {

4981 
	`AÀπ
("config : HTTPÖroxy %s hasá cookie butÇo serverÜist !\n",

4982 
cuΩroxy
->
id
);

4983 
cfgîr
++;

4988 i‡((
cuΩroxy
->
ˇp
 & 
PR_CAP_FE
Ë&& (cuΩroxy->
li°í
 =
NULL
)) {

4989 
	`AÀπ
("config : %s '%s' hasÇoÜistenáddress. PleaseÉither specifyá validáddress onÅhe <listen>Üine, or useÅhe <bind> keyword.\n",

4990 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
);

4991 
cfgîr
++;

4994 i‡((
cuΩroxy
->
ˇp
 & 
PR_CAP_BE
Ë&& (cuΩroxy->
mode
 !
PR_MODE_HEALTH
)) {

4995 i‡(
cuΩroxy
->
lb¥m
.
Ægo
 & 
BE_LB_KIND
) {

4996 i‡(
cuΩroxy
->
›ti⁄s
 & 
PR_O_TRANSP
) {

4997 
	`AÀπ
("config : %s '%s' cannot use bothÅransparentánd balance mode.\n",

4998 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
);

4999 
cfgîr
++;

5001 #ifde‡
WE_DONT_SUPPORT_SERVERLESS_LISTENERS


5002 i‡(
cuΩroxy
->
§v
 =
NULL
) {

5003 
	`AÀπ
("config : %s '%s'ÇeedsátÜeast 1 server in balance mode.\n",

5004 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
);

5005 
cfgîr
++;

5008 i‡(*(*)&
cuΩroxy
->
di•©ch_addr
.
sö_addr
 != 0) {

5009 
	`W¨nög
("config : dispatcháddress of %s '%s' will be ignored in balance mode.\n",

5010 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
);

5011 
îr_code
 |
ERR_WARN
;

5014 i‡(!(
cuΩroxy
->
›ti⁄s
 & (
PR_O_TRANSP
 | 
PR_O_HTTP_PROXY
)) &&

5015 (*(*)&
cuΩroxy
->
di•©ch_addr
.
sö_addr
 == 0)) {

5020 
cuΩroxy
->
lb¥m
.
Ægo
 &~
BE_LB_ALGO
;

5021 
cuΩroxy
->
lb¥m
.
Ægo
 |
BE_LB_ALGO_RR
;

5025 i‡((
cuΩroxy
->
›ti⁄s
 & 
PR_O_DISABLE404
Ë&& !(cuΩroxy->›ti⁄†& 
PR_O_HTTP_CHK
)) {

5026 
cuΩroxy
->
›ti⁄s
 &~
PR_O_DISABLE404
;

5027 
	`W¨nög
("config : '%s' will be ignored for %s '%s' (requires 'option httpchk').\n",

5028 "dißbÀ-⁄-404", 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
);

5029 
îr_code
 |
ERR_WARN
;

5032 i‡((
cuΩroxy
->
›ti⁄s2
 & 
PR_O2_CHK_SNDST
Ë&& !(cuΩroxy->
›ti⁄s
 & 
PR_O_HTTP_CHK
)) {

5033 
cuΩroxy
->
›ti⁄s
 &~
PR_O2_CHK_SNDST
;

5034 
	`W¨nög
("config : '%s' will be ignored for %s '%s' (requires 'option httpchk').\n",

5035 "£nd-°©e", 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
);

5036 
îr_code
 |
ERR_WARN
;

5040 i‡(
cuΩroxy
->
defbe
.
«me
) {

5041 
¥oxy
 *
èrgë
;

5043 
èrgë
 = 
	`föd¥oxy_mode
(
cuΩroxy
->
defbe
.
«me
, cuΩroxy->
mode
, 
PR_CAP_BE
);

5044 i‡(!
èrgë
) {

5045 
	`AÀπ
("Proxy '%s': unableÅo findÑequired default_backend: '%s'.\n",

5046 
cuΩroxy
->
id
, cuΩroxy->
defbe
.
«me
);

5047 
cfgîr
++;

5048 } i‡(
èrgë
 =
cuΩroxy
) {

5049 
	`AÀπ
("Proxy '%s':Üoop detected for default_backend: '%s'.\n",

5050 
cuΩroxy
->
id
, cuΩroxy->
defbe
.
«me
);

5051 
cfgîr
++;

5053 
	`‰ì
(
cuΩroxy
->
defbe
.
«me
);

5054 
cuΩroxy
->
defbe
.
be
 = 
èrgë
;

5058 
èrgë
->
böd_¥oc
 = 
cuΩroxy
->bind_proc ?

5059 (
èrgë
->
böd_¥oc
 | 
cuΩroxy
->bind_proc) : 0;

5064 i‡(
cuΩroxy
->
mode
 =
PR_MODE_HTTP
 && cuΩroxy->
ªq_exp
 !
NULL
) {

5066 
hdr_exp
 *
exp
;

5067 
exp
 = 
cuΩroxy
->
ªq_exp
;Éx∞!
NULL
;Éx∞exp->
√xt
) {

5068 
¥oxy
 *
èrgë
;

5070 i‡(
exp
->
a˘i⁄
 !
ACT_SETBE
)

5073 
èrgë
 = 
	`föd¥oxy_mode
(
exp
->
ª∂a˚
, 
PR_MODE_HTTP
, 
PR_CAP_BE
);

5074 i‡(!
èrgë
) {

5075 
	`AÀπ
("Proxy '%s': unableÅo findÑequired setbe: '%s'.\n",

5076 
cuΩroxy
->
id
, 
exp
->
ª∂a˚
);

5077 
cfgîr
++;

5078 } i‡(
èrgë
 =
cuΩroxy
) {

5079 
	`AÀπ
("Proxy '%s':Üoop detected for setbe: '%s'.\n",

5080 
cuΩroxy
->
id
, 
exp
->
ª∂a˚
);

5081 
cfgîr
++;

5083 
	`‰ì
((*)
exp
->
ª∂a˚
);

5084 
exp
->
ª∂a˚
 = (c⁄° *)
èrgë
;

5088 
èrgë
->
böd_¥oc
 = 
cuΩroxy
->bind_proc ?

5089 (
èrgë
->
böd_¥oc
 | 
cuΩroxy
->bind_proc) : 0;

5095 
	`li°_f‹_óch_íåy
(
ruÀ
, &
cuΩroxy
->
swôchög_ruÀs
, 
li°
) {

5096 
¥oxy
 *
èrgë
;

5098 
èrgë
 = 
	`föd¥oxy_mode
(
ruÀ
->
be
.
«me
, 
cuΩroxy
->
mode
, 
PR_CAP_BE
);

5100 i‡(!
èrgë
) {

5101 
	`AÀπ
("Proxy '%s': unableÅo findÑequired use_backend: '%s'.\n",

5102 
cuΩroxy
->
id
, 
ruÀ
->
be
.
«me
);

5103 
cfgîr
++;

5104 } i‡(
èrgë
 =
cuΩroxy
) {

5105 
	`AÀπ
("Proxy '%s':Üoop detected for use_backend: '%s'.\n",

5106 
cuΩroxy
->
id
, 
ruÀ
->
be
.
«me
);

5107 
cfgîr
++;

5109 
	`W¨nög
("backíd(%pËfound f‹ backíd_«me(%s)(swôchögÑuÀ)\n", 
èrgë
, 
ruÀ
->
be
.
«me
);

5110 
	`‰ì
((*)
ruÀ
->
be
.
«me
);

5111 
ruÀ
->
be
.
backíd
 = 
èrgë
;

5115 
èrgë
->
böd_¥oc
 = 
cuΩroxy
->bind_proc ?

5116 (
èrgë
->
böd_¥oc
 | 
cuΩroxy
->bind_proc) : 0;

5121 
	`li°_f‹_óch_íåy
(
mruÀ
, &
cuΩroxy
->
°ickög_ruÀs
, 
li°
) {

5122 
¥oxy
 *
èrgë
;

5124 
cuΩroxy
->
be_ªq_™a
 |
AN_REQ_STICKING_RULES
;

5125 i‡(
mruÀ
->
Êags
 & 
STK_IS_STORE
)

5126 
cuΩroxy
->
be_r•_™a
 |
AN_RES_STORE_RULES
;

5128 i‡(
mruÀ
->
èbÀ
.
«me
)

5129 
èrgë
 = 
	`föd¥oxy
(
mruÀ
->
èbÀ
.
«me
, 
PR_CAP_BE
);

5131 
èrgë
 = 
cuΩroxy
;

5133 i‡(!
èrgë
) {

5134 
	`AÀπ
("Proxy '%s': unableÅo find stick-table '%s'.\n",

5135 
cuΩroxy
->
id
, 
mruÀ
->
èbÀ
.
«me
);

5136 
cfgîr
++;

5138 i‡(
èrgë
->
èbÀ
.
size
 == 0) {

5139 
	`AÀπ
("Proxy '%s': stick-table '%s' used butÇot configured.\n",

5140 
cuΩroxy
->
id
, 
mruÀ
->
èbÀ
.
«me
 ? mrule->table.name : curproxy->id);

5141 
cfgîr
++;

5143 i‡(
	`∑âîn_nŸußbÀ_key
(
mruÀ
->
ex¥
, 
èrgë
->
èbÀ
.
ty≥
)) {

5144 
	`AÀπ
("Proxy '%s':Åype ofÖatternÇot usable withÅype of stick-table '%s'.\n",

5145 
cuΩroxy
->
id
, 
mruÀ
->
èbÀ
.
«me
 ? mrule->table.name : curproxy->id);

5146 
cfgîr
++;

5149 
	`‰ì
((*)
mruÀ
->
èbÀ
.
«me
);

5150 
mruÀ
->
èbÀ
.
t
 = &(
èrgë
->table);

5155 
	`li°_f‹_óch_íåy
(
mruÀ
, &
cuΩroxy
->
°‹î•_ruÀs
, 
li°
) {

5156 
¥oxy
 *
èrgë
;

5158 
cuΩroxy
->
be_r•_™a
 |
AN_RES_STORE_RULES
;

5160 i‡(
mruÀ
->
èbÀ
.
«me
)

5161 
èrgë
 = 
	`föd¥oxy
(
mruÀ
->
èbÀ
.
«me
, 
PR_CAP_BE
);

5163 
èrgë
 = 
cuΩroxy
;

5165 i‡(!
èrgë
) {

5166 
	`AÀπ
("Proxy '%s': unableÅo find storeÅable '%s'.\n",

5167 
cuΩroxy
->
id
, 
mruÀ
->
èbÀ
.
«me
);

5168 
cfgîr
++;

5170 i‡(
èrgë
->
èbÀ
.
size
 == 0) {

5171 
	`AÀπ
("Proxy '%s': stick-table '%s' used butÇot configured.\n",

5172 
cuΩroxy
->
id
, 
mruÀ
->
èbÀ
.
«me
 ? mrule->table.name : curproxy->id);

5173 
cfgîr
++;

5175 i‡(
	`∑âîn_nŸußbÀ_key
(
mruÀ
->
ex¥
, 
èrgë
->
èbÀ
.
ty≥
)) {

5176 
	`AÀπ
("Proxy '%s':Åype ofÖatternÇot usable withÅype of stick-table '%s'.\n",

5177 
cuΩroxy
->
id
, 
mruÀ
->
èbÀ
.
«me
 ? mrule->table.name : curproxy->id);

5178 
cfgîr
++;

5181 
	`‰ì
((*)
mruÀ
->
èbÀ
.
«me
);

5182 
mruÀ
->
èbÀ
.
t
 = &(
èrgë
->table);

5186 i‡(
cuΩroxy
->
uri_auth
 && !(cuΩroxy->uri_auth->
Êags
 & 
ST_CONVDONE
) &&

5187 !
	`LIST_ISEMPTY
(&
cuΩroxy
->
uri_auth
->
ªq_a˛
) &&

5188 (
cuΩroxy
->
uri_auth
->
u£æi°
 || cuΩroxy->uri_auth->
auth_ªÆm
 )) {

5189 
	`AÀπ
("%s '%s': stats 'auth'/'realm'ánd 'http-request' can't be usedátÅhe sameÅime.\n",

5190 "¥oxy", 
cuΩroxy
->
id
);

5191 
cfgîr
++;

5192 
out_uri_auth_com∑t
;

5195 i‡(
cuΩroxy
->
uri_auth
 && cuΩroxy->uri_auth->
u£æi°
 && !(cuΩroxy->uri_auth->
Êags
 & 
ST_CONVDONE
)) {

5196 c⁄° *
uri_auth_com∑t_ªq
[10];

5197 
ªq_a˛_ruÀ
 *
ªq_a˛
;

5198 
i
 = 0;

5201 
uri_auth_com∑t_ªq
[
i
++] = "auth";

5203 i‡(
cuΩroxy
->
uri_auth
->
auth_ªÆm
) {

5204 
uri_auth_com∑t_ªq
[
i
++] = "realm";

5205 
uri_auth_com∑t_ªq
[
i
++] = 
cuΩroxy
->
uri_auth
->
auth_ªÆm
;

5208 
uri_auth_com∑t_ªq
[
i
++] = "unless";

5209 
uri_auth_com∑t_ªq
[
i
++] = "{";

5210 
uri_auth_com∑t_ªq
[
i
++] = "http_auth(.internal-stats-userlist)";

5211 
uri_auth_com∑t_ªq
[
i
++] = "}";

5212 
uri_auth_com∑t_ªq
[
i
++] = "";

5214 
ªq_a˛
 = 
	`∑r£_auth_c⁄d
(
uri_auth_com∑t_ªq
, "öã∫Æ-°©s-auth-com∑t", 0, 
cuΩroxy
);

5215 i‡(!
ªq_a˛
) {

5216 
cfgîr
++;

5220 
	`LIST_ADDQ
(&
cuΩroxy
->
uri_auth
->
ªq_a˛
, &ªq_a˛->
li°
);

5222 i‡(
cuΩroxy
->
uri_auth
->
auth_ªÆm
) {

5223 
	`‰ì
(
cuΩroxy
->
uri_auth
->
auth_ªÆm
);

5224 
cuΩroxy
->
uri_auth
->
auth_ªÆm
 = 
NULL
;

5227 
cuΩroxy
->
uri_auth
->
Êags
 |
ST_CONVDONE
;

5229 
out_uri_auth_com∑t
:

5231 
cfgîr
 +
	`a˛_föd_èrgës
(
cuΩroxy
);

5233 i‡((
cuΩroxy
->
mode
 =
PR_MODE_TCP
 || cuΩroxy->modê=
PR_MODE_HTTP
) &&

5234 (((
cuΩroxy
->
ˇp
 & 
PR_CAP_FE
Ë&& !cuΩroxy->
timeout
.
˛õ¡
) ||

5235 ((
cuΩroxy
->
ˇp
 & 
PR_CAP_BE
Ë&& (cuΩroxy->
§v
) &&

5236 (!
cuΩroxy
->
timeout
.
c⁄√˘
 || !cuΩroxy->timeout.
£rvî
)))) {

5237 
	`W¨nög
("config : missingÅimeouts for %s '%s'.\n"

5241 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
);

5242 
îr_code
 |
ERR_WARN
;

5249 i‡(
cuΩroxy
 !&
deÂroxy
) {

5250 i‡(!
cuΩroxy
->
timeout
.
èΩô
 ||

5251 
cuΩroxy
->
timeout
.
èΩô
 =
deÂroxy
.timeout.tarpit) {

5255 i‡(
deÂroxy
.
timeout
.
èΩô
)

5256 
cuΩroxy
->
timeout
.
èΩô
 = 
deÂroxy
.timeout.tarpit;

5257 i‡(
cuΩroxy
->
timeout
.
c⁄√˘
)

5258 
cuΩroxy
->
timeout
.
èΩô
 = cuΩroxy->timeout.
c⁄√˘
;

5259 i‡(
deÂroxy
.
timeout
.
c⁄√˘
)

5260 
cuΩroxy
->
timeout
.
èΩô
 = 
deÂroxy
.timeout.
c⁄√˘
;

5262 i‡((
cuΩroxy
->
ˇp
 & 
PR_CAP_BE
) &&

5263 (!
cuΩroxy
->
timeout
.
queue
 ||

5264 
cuΩroxy
->
timeout
.
queue
 =
deÂroxy
.timeout.queue)) {

5268 i‡(
deÂroxy
.
timeout
.
queue
)

5269 
cuΩroxy
->
timeout
.
queue
 = 
deÂroxy
.timeout.queue;

5270 i‡(
cuΩroxy
->
timeout
.
c⁄√˘
)

5271 
cuΩroxy
->
timeout
.
queue
 = cuΩroxy->timeout.
c⁄√˘
;

5272 i‡(
deÂroxy
.
timeout
.
c⁄√˘
)

5273 
cuΩroxy
->
timeout
.
queue
 = 
deÂroxy
.timeout.
c⁄√˘
;

5277 i‡(
cuΩroxy
->
›ti⁄s2
 & 
PR_O2_SSL3_CHK
) {

5278 
cuΩroxy
->
check_Àn
 = (
s¶v3_˛õ¡_hñlo_pkt
) - 1;

5279 
cuΩroxy
->
check_ªq
 = (*)
	`mÆloc
(cuΩroxy->
check_Àn
);

5280 
	`mem˝y
(
cuΩroxy
->
check_ªq
, 
s¶v3_˛õ¡_hñlo_pkt
, cuΩroxy->
check_Àn
);

5284 i‡(
cuΩroxy
->
nb_ªq_ˇp
)

5285 
cuΩroxy
->
ªq_ˇp_poﬁ
 = 
	`¸óã_poﬁ
("ptrcap",

5286 
cuΩroxy
->
nb_ªq_ˇp
 * (*),

5287 
MEM_F_SHARED
);

5288 i‡(
cuΩroxy
->
nb_r•_ˇp
)

5289 
cuΩroxy
->
r•_ˇp_poﬁ
 = 
	`¸óã_poﬁ
("ptrcap",

5290 
cuΩroxy
->
nb_r•_ˇp
 * (*),

5291 
MEM_F_SHARED
);

5293 
cuΩroxy
->
hdr_idx_poﬁ
 = 
	`¸óã_poﬁ
("hdr_idx",

5294 
MAX_HTTP_HDR
 * (
hdr_idx_ñem
),

5295 
MEM_F_SHARED
);

5301 i‡(!
cuΩroxy
->
fuŒc⁄n
)

5302 
cuΩroxy
->
fuŒc⁄n
 = cuΩroxy->
maxc⁄n
;

5305 
√w§v
 = 
NULL
;

5306 
cuΩroxy
->
§v
) {

5307 
£rvî
 *
√xt
;

5309 
√xt
 = 
cuΩroxy
->
§v
->next;

5310 
cuΩroxy
->
§v
->
√xt
 = 
√w§v
;

5311 
√w§v
 = 
cuΩroxy
->
§v
;

5312 i‡(!
√xt
)

5314 
cuΩroxy
->
§v
 = 
√xt
;

5318 
√xt_id
 = 1;

5319 
√w§v
 = 
cuΩroxy
->
§v
;

5320 
√w§v
 !
NULL
) {

5321 i‡(!
√w§v
->
puid
) {

5325 
√xt_id
 = 
	`gë_√xt_id
(&
cuΩroxy
->
c⁄f
.
u£d_£rvî_id
,Çext_id);

5326 
√w§v
->
c⁄f
.
id
.
key
 =Çew§v->
puid
 = 
√xt_id
;

5327 
	`eb32_ö£π
(&
cuΩroxy
->
c⁄f
.
u£d_£rvî_id
, &
√w§v
->c⁄f.
id
);

5329 
√xt_id
++;

5330 
√w§v
 =Çew§v->
√xt
;

5333 
cuΩroxy
->
lb¥m
.
wmu…
 = 1;

5334 
cuΩroxy
->
lb¥m
.
wdiv
 = 1;

5340 
cuΩroxy
->
lb¥m
.
Ægo
 &~(
BE_LB_LKUP
 | 
BE_LB_PROP_DYN
);

5341 
cuΩroxy
->
lb¥m
.
Ægo
 & 
BE_LB_KIND
) {

5342 
BE_LB_KIND_RR
:

5343 i‡((
cuΩroxy
->
lb¥m
.
Ægo
 & 
BE_LB_PARM
Ë=
BE_LB_RR_STATIC
) {

5344 
cuΩroxy
->
lb¥m
.
Ægo
 |
BE_LB_LKUP_MAP
;

5345 
	`öô_£rvî_m≠
(
cuΩroxy
);

5347 
cuΩroxy
->
lb¥m
.
Ægo
 |
BE_LB_LKUP_RRTREE
 | 
BE_LB_PROP_DYN
;

5348 
	`fwº_öô_£rvî_groups
(
cuΩroxy
);

5352 
BE_LB_KIND_LC
:

5353 
cuΩroxy
->
lb¥m
.
Ægo
 |
BE_LB_LKUP_LCTREE
 | 
BE_LB_PROP_DYN
;

5354 
	`fwlc_öô_£rvî_åì
(
cuΩroxy
);

5357 
BE_LB_KIND_HI
:

5358 i‡((
cuΩroxy
->
lb¥m
.
Ægo
 & 
BE_LB_HASH_TYPE
Ë=
BE_LB_HASH_CONS
) {

5359 
cuΩroxy
->
lb¥m
.
Ægo
 |
BE_LB_LKUP_CHTREE
 | 
BE_LB_PROP_DYN
;

5360 
	`chash_öô_£rvî_åì
(
cuΩroxy
);

5362 
cuΩroxy
->
lb¥m
.
Ægo
 |
BE_LB_LKUP_MAP
;

5363 
	`öô_£rvî_m≠
(
cuΩroxy
);

5368 i‡(
cuΩroxy
->
›ti⁄s
 & 
PR_O_LOGASAP
)

5369 
cuΩroxy
->
to_log
 &~
LW_BYTES
;

5371 i‡((
cuΩroxy
->
mode
 =
PR_MODE_TCP
 || cuΩroxy->modê=
PR_MODE_HTTP
) &&

5372 (
cuΩroxy
->
ˇp
 & 
PR_CAP_FE
Ë&& cuΩroxy->
to_log
 && cuΩroxy->
logÁc1
 < 0) {

5373 
	`W¨nög
("config :Üog format ignored for %s '%s' since it hasÇoÜogáddress.\n",

5374 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
);

5375 
îr_code
 |
ERR_WARN
;

5378 i‡(
cuΩroxy
->
mode
 !
PR_MODE_HTTP
) {

5379 
›äum
;

5381 i‡(
cuΩroxy
->
›ti⁄s
 & 
PR_O_COOK_ANY
) {

5382 
	`W¨nög
("config : 'cookie' statement ignored for %s '%s'ás itÑequires HTTP mode.\n",

5383 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
);

5384 
îr_code
 |
ERR_WARN
;

5387 i‡(
cuΩroxy
->
uri_auth
) {

5388 
	`W¨nög
("config : 'stats' statement ignored for %s '%s'ás itÑequires HTTP mode.\n",

5389 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
);

5390 
îr_code
 |
ERR_WARN
;

5391 
cuΩroxy
->
uri_auth
 = 
NULL
;

5394 i‡(
cuΩroxy
->
›ti⁄s
 & 
PR_O_FWDFOR
) {

5395 
	`W¨nög
("config : 'option %s' ignored for %s '%s'ás itÑequires HTTP mode.\n",

5396 "f‹w¨df‹", 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
);

5397 
îr_code
 |
ERR_WARN
;

5398 
cuΩroxy
->
›ti⁄s
 &~
PR_O_FWDFOR
;

5401 i‡(
cuΩroxy
->
›ti⁄s
 & 
PR_O_ORGTO
) {

5402 
	`W¨nög
("config : 'option %s' ignored for %s '%s'ás itÑequires HTTP mode.\n",

5403 "‹igöÆto", 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
);

5404 
îr_code
 |
ERR_WARN
;

5405 
cuΩroxy
->
›ti⁄s
 &~
PR_O_ORGTO
;

5408 
›äum
 = 0; 
cfg_›ts
[›äum].
«me
; optnum++) {

5409 i‡(
cfg_›ts
[
›äum
].
mode
 =
PR_MODE_HTTP
 &&

5410 (
cuΩroxy
->
ˇp
 & 
cfg_›ts
[
›äum
].cap) &&

5411 (
cuΩroxy
->
›ti⁄s
 & 
cfg_›ts
[
›äum
].
vÆ
)) {

5412 
	`W¨nög
("config : 'option %s' ignored for %s '%s'ás itÑequires HTTP mode.\n",

5413 
cfg_›ts
[
›äum
].
«me
, 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
);

5414 
îr_code
 |
ERR_WARN
;

5415 
cuΩroxy
->
›ti⁄s
 &~
cfg_›ts
[
›äum
].
vÆ
;

5419 
›äum
 = 0; 
cfg_›ts2
[›äum].
«me
; optnum++) {

5420 i‡(
cfg_›ts2
[
›äum
].
mode
 =
PR_MODE_HTTP
 &&

5421 (
cuΩroxy
->
ˇp
 & 
cfg_›ts2
[
›äum
].cap) &&

5422 (
cuΩroxy
->
›ti⁄s2
 & 
cfg_›ts2
[
›äum
].
vÆ
)) {

5423 
	`W¨nög
("config : 'option %s' ignored for %s '%s'ás itÑequires HTTP mode.\n",

5424 
cfg_›ts2
[
›äum
].
«me
, 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
);

5425 
îr_code
 |
ERR_WARN
;

5426 
cuΩroxy
->
›ti⁄s2
 &~
cfg_›ts2
[
›äum
].
vÆ
;

5430 #i‡
	`deföed
(
CONFIG_HAP_CTTPROXY
Ë|| deföed(
CONFIG_HAP_LINUX_TPROXY
)

5431 i‡(
cuΩroxy
->
böd_hdr_occ
) {

5432 
cuΩroxy
->
böd_hdr_occ
 = 0;

5433 
	`W¨nög
("config : %s '%s' : ignoring use of header %sás source IP inÇon-HTTP mode.\n",

5434 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
, cuΩroxy->
böd_hdr_«me
);

5435 
îr_code
 |
ERR_WARN
;

5443 
√w§v
 = 
cuΩroxy
->
§v
;

5444 
√w§v
 !
NULL
) {

5445 i‡((
cuΩroxy
->
mode
 !
PR_MODE_HTTP
Ë&& (
√w§v
->
rdr_Àn
 ||Çew§v->
ckÀn
)) {

5446 
	`AÀπ
("config : %s '%s' : server cannot have cookie orÑedirectÖrefix inÇon-HTTP mode.\n",

5447 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
);

5448 
cfgîr
++;

5451 #i‡
	`deföed
(
CONFIG_HAP_CTTPROXY
Ë|| deföed(
CONFIG_HAP_LINUX_TPROXY
)

5452 i‡(
cuΩroxy
->
mode
 !
PR_MODE_HTTP
 && 
√w§v
->
böd_hdr_occ
) {

5453 
√w§v
->
böd_hdr_occ
 = 0;

5454 
	`W¨nög
("config : %s '%s' : server %s cannot use header %sás source IP inÇon-HTTP mode.\n",

5455 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
, 
√w§v
->id,Çew§v->
böd_hdr_«me
);

5456 
îr_code
 |
ERR_WARN
;

5459 
√w§v
 =Çew§v->
√xt
;

5467 
√w§v
 = 
cuΩroxy
->
§v
;

5468 
√w§v
 !
NULL
) {

5469 i‡(
√w§v
->
möc⁄n
 >Çew§v->
maxc⁄n
) {

5474 
√w§v
->
maxc⁄n
 =Çew§v->
möc⁄n
;

5475 } i‡(
√w§v
->
maxc⁄n
 && !√w§v->
möc⁄n
) {

5477 
√w§v
->
möc⁄n
 =Çew§v->
maxc⁄n
;

5478 } i‡(
√w§v
->
möc⁄n
 !√w§v->
maxc⁄n
 && !
cuΩroxy
->
fuŒc⁄n
) {

5479 
	`AÀπ
("config : %s '%s' : fullconn is mandatory when minconn is set oná server.\n",

5480 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
);

5481 
cfgîr
++;

5484 i‡(
√w§v
->
åackô
) {

5485 
¥oxy
 *
px
;

5486 
£rvî
 *
§v
;

5487 *
≤ame
, *
¢ame
;

5489 
≤ame
 = 
√w§v
->
åackô
;

5490 
¢ame
 = 
	`°ºchr
(
≤ame
, '/');

5492 i‡(
¢ame
)

5493 *
¢ame
++ = '\0';

5495 
¢ame
 = 
≤ame
;

5496 
≤ame
 = 
NULL
;

5499 i‡(
≤ame
) {

5500 
px
 = 
	`föd¥oxy
(
≤ame
, 
PR_CAP_BE
);

5501 i‡(!
px
) {

5502 
	`AÀπ
("config : %s '%s', server '%s': unableÅo findÑequiredÖroxy '%s' forÅracking.\n",

5503 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
,

5504 
√w§v
->
id
, 
≤ame
);

5505 
cfgîr
++;

5506 
√xt_§v
;

5509 
px
 = 
cuΩroxy
;

5511 
§v
 = 
	`föd£rvî
(
px
, 
¢ame
);

5512 i‡(!
§v
) {

5513 
	`AÀπ
("config : %s '%s', server '%s': unableÅo findÑequired server '%s' forÅracking.\n",

5514 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
,

5515 
√w§v
->
id
, 
¢ame
);

5516 
cfgîr
++;

5517 
√xt_§v
;

5520 i‡(!(
§v
->
°©e
 & 
SRV_CHECKED
)) {

5521 
	`AÀπ
("config : %s '%s', server '%s': unableÅo use %s/%s for "

5523 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
,

5524 
√w§v
->
id
, 
px
->id, 
§v
->id);

5525 
cfgîr
++;

5526 
√xt_§v
;

5529 i‡(
cuΩroxy
 !
px
 &&

5530 (
cuΩroxy
->
›ti⁄s
 & 
PR_O_DISABLE404
Ë!(
px
->options & PR_O_DISABLE404)) {

5531 
	`AÀπ
("config : %s '%s', server '%s': unableÅo use %s/%s for"

5533 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
,

5534 
√w§v
->
id
, 
px
->id, 
§v
->id);

5535 
cfgîr
++;

5536 
√xt_§v
;

5539 
√w§v
->
åacked
 = 
§v
;

5540 
√w§v
->
åack√xt
 = 
§v
->tracknext;

5541 
§v
->
åack√xt
 = 
√w§v
;

5543 
	`‰ì
(
√w§v
->
åackô
);

5545 
√xt_§v
:

5546 
√w§v
 =Çew§v->
√xt
;

5549 i‡(
cuΩroxy
->
ˇp
 & 
PR_CAP_FE
) {

5550 i‡(
cuΩroxy
->
t˝_ªq
.
ö•e˘_dñay
 ||

5551 !
	`LIST_ISEMPTY
(&
cuΩroxy
->
t˝_ªq
.
ö•e˘_ruÀs
))

5552 
cuΩroxy
->
„_ªq_™a
 |
AN_REQ_INSPECT
;

5554 i‡(
cuΩroxy
->
mode
 =
PR_MODE_HTTP
) {

5555 
cuΩroxy
->
„_ªq_™a
 |
AN_REQ_WAIT_HTTP
 | 
AN_REQ_HTTP_PROCESS_FE
;

5556 
cuΩroxy
->
„_r•_™a
 |
AN_RES_WAIT_HTTP
 | 
AN_RES_HTTP_PROCESS_FE
;

5560 
cuΩroxy
->
„_ªq_™a
 |
AN_REQ_SWITCHING_RULES
;

5563 i‡(
cuΩroxy
->
ˇp
 & 
PR_CAP_BE
) {

5564 i‡(
cuΩroxy
->
mode
 =
PR_MODE_HTTP
) {

5565 
cuΩroxy
->
be_ªq_™a
 |
AN_REQ_WAIT_HTTP
 | 
AN_REQ_HTTP_INNER
 | 
AN_REQ_HTTP_PROCESS_BE
;

5566 
cuΩroxy
->
be_r•_™a
 |
AN_RES_WAIT_HTTP
 | 
AN_RES_HTTP_PROCESS_BE
;

5570 
	`°kèbÀ_öô
(&
cuΩroxy
->
èbÀ
);

5575 i‡(
cuΩroxy
->
›ti⁄s2
 & 
PR_O2_RDPC_PRST
)

5576 
cuΩroxy
->
be_ªq_™a
 |
AN_REQ_PRST_RDP_COOKIE
;

5579 
li°íî
 = 
NULL
;

5580 
cuΩroxy
->
li°í
) {

5581 
li°íî
 *
√xt
;

5583 
√xt
 = 
cuΩroxy
->
li°í
->next;

5584 
cuΩroxy
->
li°í
->
√xt
 = 
li°íî
;

5585 
li°íî
 = 
cuΩroxy
->
li°í
;

5587 i‡(!
√xt
)

5590 
cuΩroxy
->
li°í
 = 
√xt
;

5594 
√xt_id
 = 1;

5595 
li°íî
 = 
cuΩroxy
->
li°í
;

5596 
li°íî
) {

5597 i‡(!
li°íî
->
luid
) {

5601 
√xt_id
 = 
	`gë_√xt_id
(&
cuΩroxy
->
c⁄f
.
u£d_li°íî_id
,Çext_id);

5602 
li°íî
->
c⁄f
.
id
.
key
 =Üi°íî->
luid
 = 
√xt_id
;

5603 
	`eb32_ö£π
(&
cuΩroxy
->
c⁄f
.
u£d_li°íî_id
, &
li°íî
->c⁄f.
id
);

5605 
√xt_id
++;

5608 i‡(
cuΩroxy
->
›ti⁄s2
 & 
PR_O2_SOCKSTAT
) {

5609 
li°íî
->
cou¡îs
 = (
licou¡îs
 *)
	`ˇŒoc
(1, (licounters));

5610 i‡(!
li°íî
->
«me
) {

5611 
	`•rötf
(
åash
, "sock-%d", 
li°íî
->
luid
);

5612 
li°íî
->
«me
 = 
	`°rdup
(
åash
);

5616 i‡(
cuΩroxy
->
›ti⁄s
 & 
PR_O_TCP_NOLING
)

5617 
li°íî
->
›ti⁄s
 |
LI_O_NOLINGER
;

5618 
li°íî
->
maxc⁄n
 = 
cuΩroxy
->maxconn;

5619 
li°íî
->
backlog
 = 
cuΩroxy
->backlog;

5620 
li°íî
->
timeout
 = &
cuΩroxy
->timeout.
˛õ¡
;

5621 
li°íî
->
ac˚±
 = 
evít_ac˚±
;

5622 
li°íî
->
¥iv©e
 = 
cuΩroxy
;

5623 
li°íî
->
h™dÀr
 = 
¥o˚ss_£ssi⁄
;

5624 
li°íî
->
™Æy£rs
 |
cuΩroxy
->
„_ªq_™a
;

5627 i‡((
cuΩroxy
->
›ti⁄s2
 & 
PR_O2_SMARTACC
) ||

5628 (
cuΩroxy
->
mode
 =
PR_MODE_HTTP
 &&

5629 !(
cuΩroxy
->
no_›ti⁄s2
 & 
PR_O2_SMARTACC
)))

5630 
li°íî
->
›ti⁄s
 |
LI_O_NOQUICKACK
;

5633 
li°íî
 =Üi°íî->
√xt
;

5636 
cuΩroxy
 = cuΩroxy->
√xt
;

5639 
curu£æi°
 = 
u£æi°
; curu£æi°; curu£æi° = curu£æi°->
√xt
) {

5640 
auth_u£rs
 *
curu£r
;

5641 
g
;

5643 
curu£r
 = 
curu£æi°
->
u£rs
; curu£r; curu£∏curu£r->
√xt
) {

5644 
group_mask
 = 0;

5645 *
group
 = 
NULL
;

5647 i‡(!
curu£r
->
u
.
groups
)

5650 (
group
 = 
	`°πok
(group?
NULL
:
curu£r
->
u
.
groups
, ","))) {

5652 
g
 = 0; g < 
curu£æi°
->
gΩ˙t
; g++)

5653 i‡(!
	`°rcmp
(
curu£æi°
->
groups
[
g
], 
group
))

5656 i‡(
g
 =
curu£æi°
->
gΩ˙t
) {

5657 
	`AÀπ
("userlist '%s':Ço such group '%s' specified in user '%s'\n",

5658 
curu£æi°
->
«me
, 
group
, 
curu£r
->
u£r
);

5659 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

5660 
out
;

5663 
group_mask
 |(1 << 
g
);

5666 
	`‰ì
(
curu£r
->
u
.
groups
);

5667 
curu£r
->
u
.
group_mask
 = group_mask;

5670 
g
 = 0; g < 
curu£æi°
->
gΩ˙t
; g++) {

5671 *
u£r
 = 
NULL
;

5673 i‡(!
curu£æi°
->
groupu£rs
[
g
])

5676 (
u£r
 = 
	`°πok
(u£r?
NULL
:
curu£æi°
->
groupu£rs
[
g
], ","))) {

5677 
curu£r
 = 
curu£æi°
->
u£rs
; curu£r; curu£∏curu£r->
√xt
)

5678 i‡(!
	`°rcmp
(
curu£r
->
u£r
, user))

5681 i‡(!
curu£r
) {

5682 
	`AÀπ
("userlist '%s':Ço such user '%s' specified in group '%s'\n",

5683 
curu£æi°
->
«me
, 
u£r
, curu£æi°->
groups
[
g
]);

5684 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

5685 
out
;

5688 
curu£r
->
u
.
group_mask
 |(1 << 
g
);

5691 
	`‰ì
(
curu£æi°
->
groupu£rs
[
g
]);

5694 
	`‰ì
(
curu£æi°
->
groupu£rs
);

5696 #ifde‡
DEBUG_AUTH


5697 
g
 = 0; g < 
curu£æi°
->
gΩ˙t
; g++) {

5698 
	`Ârötf
(
°dîr
, "grou∞%s, id %d, mask %08X, u£rs:", 
curu£æi°
->
groups
[
g
], g , 1 << g);

5700 
curu£r
 = 
curu£æi°
->
u£rs
; curu£r; curu£∏curu£r->
√xt
) {

5701 i‡(
curu£r
->
group_mask
 & (1 << 
g
))

5702 
	`Ârötf
(
°dîr
, " %s", 
curu£r
->
u£r
);

5705 
	`Ârötf
(
°dîr
, "\n");

5715 
cuΩroxy
=
¥oxy
; cuΩroxy; cuΩroxy=cuΩroxy->
√xt
) {

5716 
›äum
;

5718 
›äum
 = 0; 
cfg_›ts
[›äum].
«me
; optnum++)

5719 i‡(
cuΩroxy
->
›ti⁄s
 & 
cfg_›ts
[
›äum
].
vÆ
)

5720 
globÆ
.
œ°_checks
 |
cfg_›ts
[
›äum
].
checks
;

5722 
›äum
 = 0; 
cfg_›ts2
[›äum].
«me
; optnum++)

5723 i‡(
cuΩroxy
->
›ti⁄s2
 & 
cfg_›ts2
[
›äum
].
vÆ
)

5724 
globÆ
.
œ°_checks
 |
cfg_›ts2
[
›äum
].
checks
;

5727 i‡(
cfgîr
 > 0)

5728 
îr_code
 |
ERR_ALERT
 | 
ERR_FATAL
;

5729 
out
:

5730  
îr_code
;

5731 
	}
}

5737 
	$cfg_ªgi°î_keyw‹ds
(
cfg_kw_li°
 *
kwl
)

5739 
	`LIST_ADDQ
(&
cfg_keyw‹ds
.
li°
, &
kwl
->list);

5740 
	}
}

5745 
	$cfg_uƒegi°î_keyw‹ds
(
cfg_kw_li°
 *
kwl
)

5747 
	`LIST_DEL
(&
kwl
->
li°
);

5748 
	`LIST_INIT
(&
kwl
->
li°
);

5749 
	}
}

	@src/checks.c

14 
	~<as£π.h
>

15 
	~<˘y≥.h
>

16 
	~<î∫o.h
>

17 
	~<f˙é.h
>

18 
	~<°dio.h
>

19 
	~<°dlib.h
>

20 
	~<°rög.h
>

21 
	~<time.h
>

22 
	~<uni°d.h
>

23 
	~<sys/sockë.h
>

24 
	~<sys/ty≥s.h
>

25 
	~<√töë/ö.h
>

26 
	~<√töë/t˝.h
>

27 
	~<¨∑/öë.h
>

29 
	~<comm⁄/com∑t.h
>

30 
	~<comm⁄/c⁄fig.h
>

31 
	~<comm⁄/möi-˛i°.h
>

32 
	~<comm⁄/°™d¨d.h
>

33 
	~<comm⁄/time.h
>

35 
	~<ty≥s/globÆ.h
>

37 
	~<¥Ÿo/backíd.h
>

38 
	~<¥Ÿo/checks.h
>

39 
	~<¥Ÿo/buf„rs.h
>

40 
	~<¥Ÿo/fd.h
>

41 
	~<¥Ÿo/log.h
>

42 
	~<¥Ÿo/queue.h
>

43 
	~<¥Ÿo/p‹t_ønge.h
>

44 
	~<¥Ÿo/¥Ÿo_hâp.h
>

45 
	~<¥Ÿo/¥Ÿo_t˝.h
>

46 
	~<¥Ÿo/¥oxy.h
>

47 
	~<¥Ÿo/£rvî.h
>

48 
	~<¥Ÿo/èsk.h
>

50 
hâpchk_ex≥˘
(
£rvî
 *
s
, 
d⁄e
);

52 c⁄° 
check_°©us
 
	gcheck_°©u£s
[
HCHK_STATUS_SIZE
] = {

53 [
HCHK_STATUS_UNKNOWN
] = { 
SRV_CHK_UNKNOWN
, "UNK", "Unknown" },

54 [
HCHK_STATUS_INI
] = { 
SRV_CHK_UNKNOWN
, "INI", "Initializing" },

55 [
HCHK_STATUS_START
] = { },

57 [
HCHK_STATUS_HANA
] = { 
SRV_CHK_ERROR
, "HANA", "Healthánalyze" },

59 [
HCHK_STATUS_SOCKERR
] = { 
SRV_CHK_ERROR
, "SOCKERR", "SocketÉrror" },

61 [
HCHK_STATUS_L4OK
] = { 
SRV_CHK_RUNNING
, "L4OK", "Layer4 checkÖassed" },

62 [
HCHK_STATUS_L4TOUT
] = { 
SRV_CHK_ERROR
, "L4TOUT", "Layer4Åimeout" },

63 [
HCHK_STATUS_L4CON
] = { 
SRV_CHK_ERROR
, "L4CON", "Layer4 connectionÖroblem" },

65 [
HCHK_STATUS_L6OK
] = { 
SRV_CHK_RUNNING
, "L6OK", "Layer6 checkÖassed" },

66 [
HCHK_STATUS_L6TOUT
] = { 
SRV_CHK_ERROR
, "L6TOUT", "Layer6Åimeout" },

67 [
HCHK_STATUS_L6RSP
] = { 
SRV_CHK_ERROR
, "L6RSP", "Layer6 invalidÑesponse" },

69 [
HCHK_STATUS_L7TOUT
] = { 
SRV_CHK_ERROR
, "L7TOUT", "Layer7Åimeout" },

70 [
HCHK_STATUS_L7RSP
] = { 
SRV_CHK_ERROR
, "L7RSP", "Layer7 invalidÑesponse" },

72 [
HCHK_STATUS_L57DATA
] = { },

74 [
HCHK_STATUS_L7OKD
] = { 
SRV_CHK_RUNNING
, "L7OK", "Layer7 checkÖassed" },

75 [
HCHK_STATUS_L7OKCD
] = { 
SRV_CHK_RUNNING
 | 
SRV_CHK_DISABLE
, "L7OKC", "Layer7 check conditionallyÖassed" },

76 [
HCHK_STATUS_L7STS
] = { 
SRV_CHK_ERROR
, "L7STS", "Layer7 wrong status" },

79 c⁄° 
™Æyze_°©us
 
	g™Æyze_°©u£s
[
HANA_STATUS_SIZE
] = {

80 [
HANA_STATUS_UNKNOWN
] = { "Unknown", { 0, 0 }},

82 [
HANA_STATUS_L4_OK
] = { "L4 successful connection", { 2, 0 }},

83 [
HANA_STATUS_L4_ERR
] = { "L4 unsuccessful connection", { 1, 1 }},

85 [
HANA_STATUS_HTTP_OK
] = { "Correct httpÑesponse", { 0, 2 }},

86 [
HANA_STATUS_HTTP_STS
] = { "Wrong httpÑesponse", { 0, 1 }},

87 [
HANA_STATUS_HTTP_HDRRSP
] = { "Invalid httpÑesponse (headers)", { 0, 1 }},

88 [
HANA_STATUS_HTTP_RSP
] = { "Invalid httpÑesponse", { 0, 1 }},

90 [
HANA_STATUS_HTTP_READ_ERROR
] = { "ReadÉrror (http)", { 0, 1 }},

91 [
HANA_STATUS_HTTP_READ_TIMEOUT
] = { "ReadÅimeout (http)", { 0, 1 }},

92 [
HANA_STATUS_HTTP_BROKEN_PIPE
] = { "Close from server (http)", { 0, 1 }},

98 c⁄° *
	$gë_check_°©us_des¸ùti⁄
(
check_°©us
) {

100 c⁄° *
desc
;

102 i‡(
check_°©us
 < 
HCHK_STATUS_SIZE
)

103 
desc
 = 
check_°©u£s
[
check_°©us
].desc;

105 
desc
 = 
NULL
;

107 i‡(
desc
 && *desc)

108  
desc
;

110  
check_°©u£s
[
HCHK_STATUS_UNKNOWN
].
desc
;

111 
	}
}

116 c⁄° *
	$gë_check_°©us_öfo
(
check_°©us
) {

118 c⁄° *
öfo
;

120 i‡(
check_°©us
 < 
HCHK_STATUS_SIZE
)

121 
öfo
 = 
check_°©u£s
[
check_°©us
].info;

123 
öfo
 = 
NULL
;

125 i‡(
öfo
 && *info)

126  
öfo
;

128  
check_°©u£s
[
HCHK_STATUS_UNKNOWN
].
öfo
;

129 
	}
}

131 c⁄° *
	$gë_™Æyze_°©us
(
™Æyze_°©us
) {

133 c⁄° *
desc
;

135 i‡(
™Æyze_°©us
 < 
HANA_STATUS_SIZE
)

136 
desc
 = 
™Æyze_°©u£s
[
™Æyze_°©us
].desc;

138 
desc
 = 
NULL
;

140 i‡(
desc
 && *desc)

141  
desc
;

143  
™Æyze_°©u£s
[
HANA_STATUS_UNKNOWN
].
desc
;

144 
	}
}

146 
	#SSP_O_HCHK
 0x0002

	)

148 
	$£rvî_°©us_¥ötf
(
chunk
 *
msg
, 
£rvî
 *
s
, 
›ti⁄s
, 
x„ºed
) {

150 i‡(
s
->
åacked
)

151 
	`chunk_¥ötf
(
msg
, " via %s/%s",

152 
s
->
åacked
->
¥oxy
->
id
, s->tracked->id);

154 i‡(
›ti⁄s
 & 
SSP_O_HCHK
) {

155 
	`chunk_¥ötf
(
msg
, ",Ñós⁄: %s", 
	`gë_check_°©us_des¸ùti⁄
(
s
->
check_°©us
));

157 i‡(
s
->
check_°©us
 >
HCHK_STATUS_L57DATA
)

158 
	`chunk_¥ötf
(
msg
, ", code: %d", 
s
->
check_code
);

160 i‡(*
s
->
check_desc
) {

161 
chunk
 
§c
;

163 
	`chunk_¥ötf
(
msg
, ", info: \"");

165 
	`chunk_öôÀn
(&
§c
, 
s
->
check_desc
, 0, 
	`°æí
(s->check_desc));

166 
	`chunk_asciõncode
(
msg
, &
§c
, '"');

168 
	`chunk_¥ötf
(
msg
, "\"");

171 i‡(
s
->
check_duøti⁄
 >= 0)

172 
	`chunk_¥ötf
(
msg
, ", check duøti⁄: %ldms", 
s
->
check_duøti⁄
);

175 i‡(
x„ºed
 >= 0) {

176 i‡(!(
s
->
°©e
 & 
SRV_RUNNING
))

177 
	`chunk_¥ötf
(
msg
, ". %dáctiveánd %d backup serversÜeft.%s"

179 
s
->
¥oxy
->
§v_a˘
, s->¥oxy->
§v_bck
,

180 (
s
->
¥oxy
->
§v_bck
 && !s->¥oxy->
§v_a˘
) ? " Running on backup." : "",

181 
s
->
cur_£ss
, 
x„ºed
, s->
nb≥nd
);

183 
	`chunk_¥ötf
(
msg
, ". %dáctiveánd %d backup servers online.%s"

185 
s
->
¥oxy
->
§v_a˘
, s->¥oxy->
§v_bck
,

186 (
s
->
¥oxy
->
§v_bck
 && !s->¥oxy->
§v_a˘
) ? " Running on backup." : "",

187 
x„ºed
, 
s
->
nb≥nd
);

189 
	}
}

198 
	$£t_£rvî_check_°©us
(
£rvî
 *
s
, 
°©us
, *
desc
) {

200 
chunk
 
msg
;

202 i‡(
°©us
 =
HCHK_STATUS_START
) {

203 
s
->
ªsu…
 = 
SRV_CHK_UNKNOWN
;

204 
s
->
check_desc
[0] = '\0';

205 
s
->
check_°¨t
 = 
now
;

209 i‡(!
s
->
check_°©us
)

212 i‡(
desc
 && *desc) {

213 
	`°∫˝y
(
s
->
check_desc
, 
desc
, 
HCHK_DESC_LEN
-1);

214 
s
->
check_desc
[
HCHK_DESC_LEN
-1] = '\0';

216 
s
->
check_desc
[0] = '\0';

218 
s
->
check_°©us
 = 
°©us
;

219 i‡(
check_°©u£s
[
°©us
].
ªsu…
)

220 
s
->
ªsu…
 = 
check_°©u£s
[
°©us
].result;

222 i‡(
°©us
 =
HCHK_STATUS_HANA
)

223 
s
->
check_duøti⁄
 = -1;

224 i‡(!
	`tv_iszîo
(&
s
->
check_°¨t
)) {

226 
s
->
check_duøti⁄
 = 
	`tv_ms_ñ≠£d
(&s->
check_°¨t
, &
now
);

227 
	`tv_zîo
(&
s
->
check_°¨t
);

230 i‡(
s
->
¥oxy
->
›ti⁄s2
 & 
PR_O2_LOGHCHKS
 &&

231 (((
s
->
hó…h
 !0Ë&& (s->
ªsu…
 & 
SRV_CHK_ERROR
)) ||

232 ((
s
->
hó…h
 !s->
ri£
 + s->
ÁŒ
 - 1Ë&& (s->
ªsu…
 & 
SRV_CHK_RUNNING
)) ||

233 ((
s
->
°©e
 & 
SRV_GOINGDOWN
Ë&& !(s->
ªsu…
 & 
SRV_CHK_DISABLE
)) ||

234 (!(
s
->
°©e
 & 
SRV_GOINGDOWN
Ë&& (s->
ªsu…
 & 
SRV_CHK_DISABLE
)))) {

236 
hó…h
, 
ri£
, 
ÁŒ
, 
°©e
;

238 
	`chunk_öô
(&
msg
, 
åash
, (trash));

241 
hó…h
 = 
s
->health;

242 
ri£
 = 
s
->rise;

243 
ÁŒ
 = 
s
->fall;

244 
°©e
 = 
s
->state;

246 i‡(
s
->
ªsu…
 & 
SRV_CHK_ERROR
) {

247 i‡(
hó…h
 > 
ri£
) {

248 
hó…h
--;

250 i‡(
hó…h
 =
ri£
)

251 
°©e
 &~(
SRV_RUNNING
 | 
SRV_GOINGDOWN
);

253 
hó…h
 = 0;

257 i‡(
s
->
ªsu…
 & 
SRV_CHK_RUNNING
) {

258 i‡(
hó…h
 < 
ri£
 + 
ÁŒ
 - 1) {

259 
hó…h
++;

261 i‡(
hó…h
 =
ri£
)

262 
°©e
 |
SRV_RUNNING
;

264 i‡(
hó…h
 >
ri£
)

265 
hó…h
 = 
ri£
 + 
ÁŒ
 - 1;

269 i‡(
s
->
⁄îr‹
)

270 
s
->
c⁄£cutive_îr‹s
 = 0;

274 
	`chunk_¥ötf
(&
msg
,

276 
s
->
°©e
 & 
SRV_BACKUP
 ? "backup " : "",

277 
s
->
¥oxy
->
id
, s->id,

278 (
s
->
ªsu…
 & 
SRV_CHK_DISABLE
)?"conditionally ":"",

279 (
s
->
ªsu…
 & 
SRV_CHK_RUNNING
)?"succeeded":"failed");

281 
	`£rvî_°©us_¥ötf
(&
msg
, 
s
, 
SSP_O_HCHK
, -1);

283 
	`chunk_¥ötf
(&
msg
, ", status: %d/%d %s",

284 (
°©e
 & 
SRV_RUNNING
Ë? (
hó…h
 - 
ri£
 + 1) : (health),

285 (
°©e
 & 
SRV_RUNNING
Ë? (
ÁŒ
Ë: (
ri£
),

286 (
°©e
 & 
SRV_RUNNING
)?"UP":"DOWN");

288 
	`W¨nög
("%s.\n", 
åash
);

289 
	`£nd_log
(
s
->
¥oxy
, 
LOG_NOTICE
, "%s.\n", 
åash
);

291 
	}
}

296 
	$£t_backíd_down
(
¥oxy
 *
be
)

298 
be
->
œ°_ch™ge
 = 
now
.
tv_£c
;

299 
be
->
down_å™s
++;

301 
	`AÀπ
("%†'%s' ha†nÿ£rvîávaûabÀ!\n", 
	`¥oxy_ty≥_°r
(
be
), be->
id
);

302 
	`£nd_log
(
be
, 
LOG_EMERG
, "%†%†ha†nÿ£rvîávaûabÀ!\n", 
	`¥oxy_ty≥_°r
(be), be->
id
);

303 
	}
}

308 
	$ªdi°ribuã_≥ndög
(
£rvî
 *
s
)

310 
≥ndc⁄n
 *
pc
, *
pc_bck
, *
pc_íd
;

311 
x„ºed
 = 0;

313 
	`FOREACH_ITEM_SAFE
(
pc
, 
pc_bck
, &
s
->
≥ndc⁄ns
, 
pc_íd
, 
≥ndc⁄n
 *, 
li°
) {

314 
£ssi⁄
 *
£ss
 = 
pc
->sess;

315 i‡((
£ss
->
be
->
›ti⁄s
 & (
PR_O_REDISP
|
PR_O_PERSIST
)) == PR_O_REDISP &&

316 !(
£ss
->
Êags
 & 
SN_FORCE_PRST
)) {

322 
£ss
->
Êags
 &~(
SN_DIRECT
 | 
SN_ASSIGNED
 | 
SN_ADDR_SET
);

324 
	`≥ndc⁄n_‰ì
(
pc
);

325 
	`èsk_wakeup
(
£ss
->
èsk
, 
TASK_WOKEN_RES
);

326 
x„ºed
++;

329  
x„ºed
;

330 
	}
}

337 
	$check_f‹_≥ndög
(
£rvî
 *
s
)

339 
x„ºed
;

341 i‡(!
s
->
eweight
)

344 
x„ºed
 = 0; !
s
->
maxc⁄n
 || x„ºed < 
	`§v_dy«mic_maxc⁄n
(s); xferred++) {

345 
£ssi⁄
 *
£ss
;

346 
≥ndc⁄n
 *
p
;

348 
p
 = 
	`≥ndc⁄n_‰om_px
(
s
->
¥oxy
);

349 i‡(!
p
)

351 
p
->
£ss
->
§v
 = 
s
;

352 
£ss
 = 
p
->sess;

353 
	`≥ndc⁄n_‰ì
(
p
);

354 
	`èsk_wakeup
(
£ss
->
èsk
, 
TASK_WOKEN_RES
);

356  
x„ºed
;

357 
	}
}

364 
	$£t_£rvî_down
(
£rvî
 *
s
)

366 
£rvî
 *
§v
;

367 
chunk
 
msg
;

368 
x„ºed
;

370 i‡(
s
->
°©e
 & 
SRV_MAINTAIN
) {

371 
s
->
hó…h
 = s->
ri£
;

374 i‡(
s
->
hó…h
 =s->
ri£
 || s->
åacked
) {

375 
§v_was_∑u£d
 = 
s
->
°©e
 & 
SRV_GOINGDOWN
;

376 
¥ev_§v_cou¡
 = 
s
->
¥oxy
->
§v_bck
 + s->¥oxy->
§v_a˘
;

378 
s
->
œ°_ch™ge
 = 
now
.
tv_£c
;

379 
s
->
°©e
 &~(
SRV_RUNNING
 | 
SRV_GOINGDOWN
);

380 
s
->
¥oxy
->
lb¥m
.
	`£t_£rvî_°©us_down
(s);

386 
x„ºed
 = 
	`ªdi°ribuã_≥ndög
(
s
);

388 
	`chunk_öô
(&
msg
, 
åash
, (trash));

390 i‡(
s
->
°©e
 & 
SRV_MAINTAIN
) {

391 
	`chunk_¥ötf
(&
msg
,

392 "%sSîvî %s/%†i†DOWN f‹ maöã«n˚", 
s
->
°©e
 & 
SRV_BACKUP
 ? "Backup " : "",

393 
s
->
¥oxy
->
id
, s->id);

395 
	`chunk_¥ötf
(&
msg
,

396 "%sSîvî %s/%†i†DOWN", 
s
->
°©e
 & 
SRV_BACKUP
 ? "Backup " : "",

397 
s
->
¥oxy
->
id
, s->id);

399 
	`£rvî_°©us_¥ötf
(&
msg
, 
s
,

400 ((!
s
->
åacked
 && !(s->
¥oxy
->
›ti⁄s2
 & 
PR_O2_LOGHCHKS
))?
SSP_O_HCHK
:0),

401 
x„ºed
);

403 
	`W¨nög
("%s.\n", 
åash
);

406 i‡(
§v_was_∑u£d
)

407 
	`£nd_log
(
s
->
¥oxy
, 
LOG_NOTICE
, "%s.\n", 
åash
);

409 
	`£nd_log
(
s
->
¥oxy
, 
LOG_ALERT
, "%s.\n", 
åash
);

411 i‡(
¥ev_§v_cou¡
 && 
s
->
¥oxy
->
§v_bck
 =0 && s->¥oxy->
§v_a˘
 == 0)

412 
	`£t_backíd_down
(
s
->
¥oxy
);

414 
s
->
cou¡îs
.
down_å™s
++;

416 i‡(
s
->
°©e
 & 
SRV_CHECKED
)

417 
§v
 = 
s
->
åack√xt
; srv; srv = srv->tracknext)

418 i‡(! (
§v
->
°©e
 & 
SRV_MAINTAIN
))

420 
	`£t_£rvî_down
(
§v
);

423 
s
->
hó…h
 = 0;

424 
	}
}

426 
	$£t_£rvî_up
(
£rvî
 *
s
) {

428 
£rvî
 *
§v
;

429 
chunk
 
msg
;

430 
x„ºed
;

432 i‡(
s
->
°©e
 & 
SRV_MAINTAIN
) {

433 
s
->
hó…h
 = s->
ri£
;

436 i‡(
s
->
hó…h
 =s->
ri£
 || s->
åacked
) {

437 i‡(
s
->
¥oxy
->
§v_bck
 =0 && s->¥oxy->
§v_a˘
 == 0) {

438 i‡(
s
->
¥oxy
->
œ°_ch™ge
 < 
now
.
tv_£c
)

439 
s
->
¥oxy
->
down_time
 +
now
.
tv_£c
 - s->¥oxy->
œ°_ch™ge
;

440 
s
->
¥oxy
->
œ°_ch™ge
 = 
now
.
tv_£c
;

443 i‡(
s
->
œ°_ch™ge
 < 
now
.
tv_£c
)

444 
s
->
down_time
 +
now
.
tv_£c
 - s->
œ°_ch™ge
;

446 
s
->
œ°_ch™ge
 = 
now
.
tv_£c
;

447 
s
->
°©e
 |
SRV_RUNNING
;

449 i‡(
s
->
¶ow°¨t
 > 0) {

450 
s
->
°©e
 |
SRV_WARMINGUP
;

451 i‡(
s
->
¥oxy
->
lb¥m
.
Ægo
 & 
BE_LB_PROP_DYN
) {

455 
s
->
eweight
 = s->
uweight
;

456 i‡(
s
->
¥oxy
->
lb¥m
.
upd©e_£rvî_eweight
)

457 
s
->
¥oxy
->
lb¥m
.
	`upd©e_£rvî_eweight
(s);

460 
s
->
¥oxy
->
lb¥m
.
	`£t_£rvî_°©us_up
(s);

465 
x„ºed
 = 
	`check_f‹_≥ndög
(
s
);

467 
	`chunk_öô
(&
msg
, 
åash
, (trash));

469 i‡(
s
->
°©e
 & 
SRV_MAINTAIN
) {

470 
	`chunk_¥ötf
(&
msg
,

471 "%sSîvî %s/%†i†UP (Àavög maöã«n˚)", 
s
->
°©e
 & 
SRV_BACKUP
 ? "Backup " : "",

472 
s
->
¥oxy
->
id
, s->id);

474 
	`chunk_¥ötf
(&
msg
,

475 "%sSîvî %s/%†i†UP", 
s
->
°©e
 & 
SRV_BACKUP
 ? "Backup " : "",

476 
s
->
¥oxy
->
id
, s->id);

478 
	`£rvî_°©us_¥ötf
(&
msg
, 
s
,

479 ((!
s
->
åacked
 && !(s->
¥oxy
->
›ti⁄s2
 & 
PR_O2_LOGHCHKS
))?
SSP_O_HCHK
:0),

480 
x„ºed
);

483 
	`W¨nög
("%s.\n", 
åash
);

484 
	`£nd_log
(
s
->
¥oxy
, 
LOG_NOTICE
, "%s.\n", 
åash
);

486 i‡(
s
->
°©e
 & 
SRV_CHECKED
)

487 
§v
 = 
s
->
åack√xt
; srv; srv = srv->tracknext)

488 i‡(! (
§v
->
°©e
 & 
SRV_MAINTAIN
))

490 
	`£t_£rvî_up
(
§v
);

492 
s
->
°©e
 &~
SRV_MAINTAIN
;

495 i‡(
s
->
hó…h
 >s->
ri£
)

496 
s
->
hó…h
 = s->
ri£
 + s->
ÁŒ
 - 1;

498 
	}
}

500 
	$£t_£rvî_dißbÀd
(
£rvî
 *
s
) {

502 
£rvî
 *
§v
;

503 
chunk
 
msg
;

504 
x„ºed
;

506 
s
->
°©e
 |
SRV_GOINGDOWN
;

507 
s
->
¥oxy
->
lb¥m
.
	`£t_£rvî_°©us_down
(s);

513 
x„ºed
 = 
	`ªdi°ribuã_≥ndög
(
s
);

515 
	`chunk_öô
(&
msg
, 
åash
, (trash));

517 
	`chunk_¥ötf
(&
msg
,

519 
s
->
°©e
 & 
SRV_BACKUP
 ? "Backup " : "",

520 
s
->
¥oxy
->
id
, s->id);

522 
	`£rvî_°©us_¥ötf
(&
msg
, 
s
,

523 ((!
s
->
åacked
 && !(s->
¥oxy
->
›ti⁄s2
 & 
PR_O2_LOGHCHKS
))?
SSP_O_HCHK
:0),

524 
x„ºed
);

526 
	`W¨nög
("%s.\n", 
åash
);

527 
	`£nd_log
(
s
->
¥oxy
, 
LOG_NOTICE
, "%s.\n", 
åash
);

529 i‡(!
s
->
¥oxy
->
§v_bck
 && !s->¥oxy->
§v_a˘
)

530 
	`£t_backíd_down
(
s
->
¥oxy
);

532 i‡(
s
->
°©e
 & 
SRV_CHECKED
)

533 
§v
 = 
s
->
åack√xt
; srv; srv = srv->tracknext)

534 
	`£t_£rvî_dißbÀd
(
§v
);

535 
	}
}

537 
	$£t_£rvî_íabÀd
(
£rvî
 *
s
) {

539 
£rvî
 *
§v
;

540 
chunk
 
msg
;

541 
x„ºed
;

543 
s
->
°©e
 &~
SRV_GOINGDOWN
;

544 
s
->
¥oxy
->
lb¥m
.
	`£t_£rvî_°©us_up
(s);

549 
x„ºed
 = 
	`check_f‹_≥ndög
(
s
);

551 
	`chunk_öô
(&
msg
, 
åash
, (trash));

553 
	`chunk_¥ötf
(&
msg
,

555 
s
->
°©e
 & 
SRV_BACKUP
 ? "Backup " : "",

556 
s
->
¥oxy
->
id
, s->id);

558 
	`£rvî_°©us_¥ötf
(&
msg
, 
s
,

559 ((!
s
->
åacked
 && !(s->
¥oxy
->
›ti⁄s2
 & 
PR_O2_LOGHCHKS
))?
SSP_O_HCHK
:0),

560 
x„ºed
);

562 
	`W¨nög
("%s.\n", 
åash
);

563 
	`£nd_log
(
s
->
¥oxy
, 
LOG_NOTICE
, "%s.\n", 
åash
);

565 i‡(
s
->
°©e
 & 
SRV_CHECKED
)

566 
§v
 = 
s
->
åack√xt
; srv; srv = srv->tracknext)

567 
	`£t_£rvî_íabÀd
(
§v
);

568 
	}
}

570 
	$hó…h_adju°
(
£rvî
 *
s
, 
°©us
) {

572 
Áûed
;

573 
expúe
;

576 i‡(!
s
->
ob£rve
 || !s->
check
)

579 i‡(
s
->
ob£rve
 >
HANA_OBS_SIZE
)

582 i‡(
°©us
 >
HCHK_STATUS_SIZE
 || !
™Æyze_°©u£s
[°©us].
desc
)

585 
™Æyze_°©u£s
[
°©us
].
Ã
[
s
->
ob£rve
 - 1]) {

587 
Áûed
 = 1;

591 
Áûed
 = 0;

598 i‡(!
Áûed
) {

600 
s
->
c⁄£cutive_îr‹s
 = 0;

604 
s
->
c⁄£cutive_îr‹s
++;

606 i‡(
s
->
c⁄£cutive_îr‹s
 < s->
c⁄£cutive_îr‹s_limô
)

609 
	`•rötf
(
åash
, "Detected %d consecutiveÉrrors,Üast one was: %s",

610 
s
->
c⁄£cutive_îr‹s
, 
	`gë_™Æyze_°©us
(
°©us
));

612 
s
->
⁄îr‹
) {

613 
HANA_ONERR_FASTINTER
:

617 
HANA_ONERR_SUDDTH
:

619 i‡(
s
->
hó…h
 > s->
ri£
)

620 
s
->
hó…h
 = s->
ri£
 + 1;

624 
HANA_ONERR_FAILCHK
:

626 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_HANA
, 
åash
);

628 i‡(
s
->
hó…h
 > s->
ri£
) {

629 
s
->
hó…h
--;

630 
s
->
cou¡îs
.
Áûed_checks
++;

633 
	`£t_£rvî_down
(
s
);

637 
HANA_ONERR_MARKDWN
:

639 
s
->
hó…h
 = s->
ri£
;

640 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_HANA
, 
åash
);

641 
	`£t_£rvî_down
(
s
);

650 
s
->
c⁄£cutive_îr‹s
 = 0;

651 
s
->
cou¡îs
.
Áûed_h™a
++;

653 i‡(
s
->
Á°öãr
) {

654 
expúe
 = 
	`tick_add
(
now_ms
, 
	`MS_TO_TICKS
(
s
->
Á°öãr
));

655 i‡(
s
->
check
->
expúe
 >Éxpire)

656 
s
->
check
->
expúe
 =Éxpire;

658 
	}
}

660 
	$hâpchk_buûd_°©us_hódî
(
£rvî
 *
s
, *
buf„r
)

662 
sv_°©e
;

663 
øtio
;

664 
hÀn
 = 0;

665 c⁄° *
§v_h…_°
[7] = { "DOWN", "DOWN %d/%d",

670 
	`mem˝y
(
buf„r
 + 
hÀn
, "X-Haproxy-Server-State: ", 24);

671 
hÀn
 += 24;

673 i‡(!(
s
->
°©e
 & 
SRV_CHECKED
))

674 
sv_°©e
 = 6;

675 i‡(
s
->
°©e
 & 
SRV_RUNNING
) {

676 i‡(
s
->
hó…h
 =s->
ri£
 + s->
ÁŒ
 - 1)

677 
sv_°©e
 = 3;

679 
sv_°©e
 = 2;

681 i‡(
s
->
°©e
 & 
SRV_GOINGDOWN
)

682 
sv_°©e
 += 2;

684 i‡(
s
->
hó…h
)

685 
sv_°©e
 = 1;

687 
sv_°©e
 = 0;

690 
hÀn
 +
	`•rötf
(
buf„r
 + hlen,

691 
§v_h…_°
[
sv_°©e
],

692 (
s
->
°©e
 & 
SRV_RUNNING
Ë? (s->
hó…h
 - s->
ri£
 + 1) : (s->health),

693 (
s
->
°©e
 & 
SRV_RUNNING
Ë? (s->
ÁŒ
Ë: (s->
ri£
));

695 
hÀn
 +
	`•rötf
(
buf„r
 + hlen, ";Çame=%s/%s;Çode=%s; weight=%d/%d; scur=%d/%d; qcur=%d",

696 
s
->
¥oxy
->
id
, s->id,

697 
globÆ
.
node
,

698 (
s
->
eweight
 * s->
¥oxy
->
lb¥m
.
wmu…
 + s->¥oxy->lb¥m.
wdiv
 - 1) / s->proxy->lbprm.wdiv,

699 (
s
->
¥oxy
->
lb¥m
.
tŸ_weight
 * s->¥oxy->lb¥m.
wmu…
 + s->¥oxy->lb¥m.
wdiv
 - 1) / s->proxy->lbprm.wdiv,

700 
s
->
cur_£ss
, s->
¥oxy
->
bec⁄n
 - s->¥oxy->
nb≥nd
,

701 
s
->
nb≥nd
);

703 i‡((
s
->
°©e
 & 
SRV_WARMINGUP
) &&

704 
now
.
tv_£c
 < 
s
->
œ°_ch™ge
 + s->
¶ow°¨t
 &&

705 
now
.
tv_£c
 >
s
->
œ°_ch™ge
) {

706 
øtio
 = 
	`MAX
(1, 100 * (
now
.
tv_£c
 - 
s
->
œ°_ch™ge
Ë/ s->
¶ow°¨t
);

707 
hÀn
 +
	`•rötf
(
buf„r
 + hÀn, ";ÅhrŸée=%d%%", 
øtio
);

710 
buf„r
[
hÀn
++] = '\r';

711 
buf„r
[
hÀn
++] = '\n';

713  
hÀn
;

714 
	}
}

724 
	$evít_§v_chk_w
(
fd
)

726 
__œbñ__
 
out_wakeup
, 
out_nowake
, 
out_pﬁl
, 
out_îr‹
;

727 
èsk
 *
t
 = 
fdèb
[
fd
].
ow√r
;

728 
£rvî
 *
s
 = 
t
->
c⁄ãxt
;

731 i‡(
	`u∆ikñy
(
fdèb
[
fd
].
°©e
 =
FD_STERROR
 || (fdèb[fd].
ev
 & 
FD_POLL_ERR
))) {

732 
skîr
, 
îr
 = 
î∫o
;

733 
sockÀn_t
 
lskîr
 = (
skîr
);

735 i‡(!
	`gësock›t
(
fd
, 
SOL_SOCKET
, 
SO_ERROR
, &
skîr
, &
lskîr
) && skerr)

736 
îr
 = 
skîr
;

738 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L4CON
, 
	`°ªº‹
(
îr
));

739 
out_îr‹
;

744 i‡(!(
s
->
ªsu…
 & 
SRV_CHK_ERROR
)) {

746 i‡((
s
->
¥oxy
->
›ti⁄s
 & 
PR_O_HTTP_CHK
) ||

747 (
s
->
¥oxy
->
›ti⁄s
 & 
PR_O_SMTP_CHK
) ||

748 (
s
->
¥oxy
->
›ti⁄s2
 & 
PR_O2_SSL3_CHK
) ||

749 (
s
->
¥oxy
->
›ti⁄s2
 & 
PR_O2_MYSQL_CHK
) ||

750 (
s
->
¥oxy
->
›ti⁄s2
 & 
PR_O2_LDAP_CHK
)) {

751 
ªt
;

752 c⁄° *
check_ªq
 = 
s
->
¥oxy
->check_req;

753 
check_Àn
 = 
s
->
¥oxy
->check_len;

759 i‡(
s
->
¥oxy
->
›ti⁄s2
 & 
PR_O2_SSL3_CHK
) {

761 
gmt_time
 = 
	`ht⁄l
(
d©e
.
tv_£c
);

762 
	`mem˝y
(
s
->
¥oxy
->
check_ªq
 + 11, &
gmt_time
, 4);

764 i‡(
s
->
¥oxy
->
›ti⁄s
 & 
PR_O_HTTP_CHK
) {

765 
	`mem˝y
(
åash
, 
check_ªq
, 
check_Àn
);

767 i‡(
s
->
¥oxy
->
›ti⁄s2
 & 
PR_O2_CHK_SNDST
)

768 
check_Àn
 +
	`hâpchk_buûd_°©us_hódî
(
s
, 
åash
 + check_len);

770 
åash
[
check_Àn
++] = '\r';

771 
åash
[
check_Àn
++] = '\n';

772 
åash
[
check_Àn
] = '\0';

773 
check_ªq
 = 
åash
;

776 
ªt
 = 
	`£nd
(
fd
, 
check_ªq
, 
check_Àn
, 
MSG_DONTWAIT
 | 
MSG_NOSIGNAL
);

777 i‡(
ªt
 =
check_Àn
) {

779 i‡(
s
->
¥oxy
->
timeout
.
check
)

780 
t
->
expúe
 = 
	`tick_add_if£t
(
now_ms
, 
s
->
¥oxy
->
timeout
.
check
);

781 
	`EV_FD_SET
(
fd
, 
DIR_RD
);

782 
out_nowake
;

784 i‡(
ªt
 =0 || 
î∫o
 =
EAGAIN
)

785 
out_pﬁl
;

787 
î∫o
) {

788 
ECONNREFUSED
:

789 
ENETUNREACH
:

790 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L4CON
, 
	`°ªº‹
(
î∫o
));

794 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_SOCKERR
, 
	`°ªº‹
(
î∫o
));

797 
out_îr‹
;

811 
sockaddr_ö
 
ß
;

813 
ß
 = (
s
->
check_addr
.
sö_addr
.
s_addr
Ë? s->check_add∏: s->
addr
;

814 
ß
.
sö_p‹t
 = 
	`ht⁄s
(
s
->
check_p‹t
);

816 i‡(
	`c⁄√˘
(
fd
, (
sockaddr
 *)&
ß
, (sa)) == 0)

817 
î∫o
 = 0;

819 i‡(
î∫o
 =
EALREADY
 ||Éºnÿ=
EINPROGRESS
)

820 
out_pﬁl
;

822 i‡(
î∫o
 &&Éºnÿ!
EISCONN
) {

823 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L4CON
, 
	`°ªº‹
(
î∫o
));

824 
out_îr‹
;

828 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L4OK
, 
NULL
);

829 
out_wakeup
;

832 
out_wakeup
:

833 
	`èsk_wakeup
(
t
, 
TASK_WOKEN_IO
);

834 
out_nowake
:

835 
	`EV_FD_CLR
(
fd
, 
DIR_WR
);

836 
fdèb
[
fd
].
ev
 &~
FD_POLL_OUT
;

838 
out_pﬁl
:

841 
fdèb
[
fd
].
ev
 &~
FD_POLL_OUT
;

843 
out_îr‹
:

844 
fdèb
[
fd
].
°©e
 = 
FD_STERROR
;

845 
out_wakeup
;

846 
	}
}

866 
	$evít_§v_chk_r
(
fd
)

868 
__œbñ__
 
out_wakeup
;

869 
Àn
;

870 
èsk
 *
t
 = 
fdèb
[
fd
].
ow√r
;

871 
£rvî
 *
s
 = 
t
->
c⁄ãxt
;

872 *
desc
;

873 
d⁄e
;

874 
msgÀn
;

876 i‡(
	`u∆ikñy
((
s
->
ªsu…
 & 
SRV_CHK_ERROR
Ë|| (
fdèb
[
fd
].
°©e
 =
FD_STERROR
))) {

878 i‡(!(
s
->
ªsu…
 & 
SRV_CHK_ERROR
))

879 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_SOCKERR
, 
NULL
);

881 
out_wakeup
;

894 
d⁄e
 = 0;

895 
Àn
 = 0; 
s
->
check_d©a_Àn
 < 
globÆ
.
tu√
.
chksize
; s->check_data_len +=Üen) {

896 
Àn
 = 
	`ªcv
(
fd
, 
s
->
check_d©a
 + s->
check_d©a_Àn
, 
globÆ
.
tu√
.
chksize
 - s->check_data_len, 0);

897 i‡(
Àn
 <= 0)

901 i‡(
Àn
 == 0)

902 
d⁄e
 = 1;

903 i‡(
Àn
 < 0 && 
î∫o
 !
EAGAIN
) {

909 
d⁄e
 = 1;

910 i‡(!
s
->
check_d©a_Àn
) {

911 i‡(!(
s
->
ªsu…
 & 
SRV_CHK_ERROR
))

912 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_SOCKERR
, 
NULL
);

913 
out_wakeup
;

920 i‡(
s
->
check_d©a_Àn
 < 
globÆ
.
tu√
.
chksize
)

921 
s
->
check_d©a
[s->
check_d©a_Àn
] = '\0';

923 
s
->
check_d©a
[s->
check_d©a_Àn
 - 1] = '\0';

924 
d⁄e
 = 1;

928 i‡(
s
->
¥oxy
->
›ti⁄s
 & 
PR_O_HTTP_CHK
) {

929 i‡(!
d⁄e
 && 
s
->
check_d©a_Àn
 < 
	`°æí
("HTTP/1.0 000\r"))

930 
waô_m‹e_d©a
;

933 i‡((
s
->
check_d©a_Àn
 < 
	`°æí
("HTTP/1.0 000\r")) ||

934 (
	`memcmp
(
s
->
check_d©a
, "HTTP/1.", 7) != 0 ||

935 (*(
s
->
check_d©a
 + 12) != ' ' && *(s->check_data + 12) != '\r')) ||

936 !
	`isdigô
((Ë*(
s
->
check_d©a
 + 9)) || !isdigit(() *(s->check_data + 10)) ||

937 !
	`isdigô
((Ë*(
s
->
check_d©a
 + 11))) {

938 
	`cut_¸lf
(
s
->
check_d©a
);

939 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L7RSP
, s->
check_d©a
);

941 
out_wakeup
;

944 
s
->
check_code
 = 
	`°r2uic
(s->
check_d©a
 + 9);

945 
desc
 = 
	`…rim
(
s
->
check_d©a
 + 12, ' ');

947 i‡((
s
->
¥oxy
->
›ti⁄s
 & 
PR_O_DISABLE404
) &&

948 (
s
->
°©e
 & 
SRV_RUNNING
Ë&& (s->
check_code
 == 404)) {

950 
	`cut_¸lf
(
desc
);

951 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L7OKCD
, 
desc
);

953 i‡(
s
->
¥oxy
->
›ti⁄s2
 & 
PR_O2_EXP_TYPE
) {

955 i‡(!
	`hâpchk_ex≥˘
(
s
, 
d⁄e
))

956 
waô_m‹e_d©a
;

959 i‡(*(
s
->
check_d©a
 + 9) == '2' || *(s->check_data + 9) == '3') {

960 
	`cut_¸lf
(
desc
);

961 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L7OKD
, 
desc
);

964 
	`cut_¸lf
(
desc
);

965 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L7STS
, 
desc
);

968 i‡(
s
->
¥oxy
->
›ti⁄s2
 & 
PR_O2_SSL3_CHK
) {

969 i‡(!
d⁄e
 && 
s
->
check_d©a_Àn
 < 5)

970 
waô_m‹e_d©a
;

973 i‡((
s
->
check_d©a_Àn
 >5Ë&& (*s->
check_d©a
 == 0x15 || *s->check_data == 0x16))

974 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L6OK
, 
NULL
);

976 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L6RSP
, 
NULL
);

978 i‡(
s
->
¥oxy
->
›ti⁄s
 & 
PR_O_SMTP_CHK
) {

979 i‡(!
d⁄e
 && 
s
->
check_d©a_Àn
 < 
	`°æí
("000\r"))

980 
waô_m‹e_d©a
;

983 i‡((
s
->
check_d©a_Àn
 < 
	`°æí
("000\r")) ||

984 (*(
s
->
check_d©a
 + 3) != ' ' && *(s->check_data + 3) != '\r') ||

985 !
	`isdigô
((Ë*
s
->
check_d©a
) || !isdigit(() *(s->check_data + 1)) ||

986 !
	`isdigô
((Ë*(
s
->
check_d©a
 + 2))) {

987 
	`cut_¸lf
(
s
->
check_d©a
);

988 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L7RSP
, s->
check_d©a
);

990 
out_wakeup
;

993 
s
->
check_code
 = 
	`°r2uic
(s->
check_d©a
);

995 
desc
 = 
	`…rim
(
s
->
check_d©a
 + 3, ' ');

996 
	`cut_¸lf
(
desc
);

999 i‡(*
s
->
check_d©a
 == '2')

1000 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L7OKD
, 
desc
);

1002 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L7STS
, 
desc
);

1004 i‡(
s
->
¥oxy
->
›ti⁄s2
 & 
PR_O2_MYSQL_CHK
) {

1005 i‡(!
d⁄e
 && 
s
->
check_d©a_Àn
 < 5)

1006 
waô_m‹e_d©a
;

1008 i‡(
s
->
¥oxy
->
check_Àn
 == 0) {

1009 i‡(*(
s
->
check_d©a
 + 4) != '\xff') {

1014 i‡(
s
->
check_d©a_Àn
 > 51) {

1015 
desc
 = 
	`…rim
(
s
->
check_d©a
 + 5, ' ');

1016 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L7OKD
, 
desc
);

1019 i‡(!
d⁄e
)

1020 
waô_m‹e_d©a
;

1024 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L7RSP
, s->
check_d©a
);

1029 
desc
 = 
	`…rim
(
s
->
check_d©a
 + 7, ' ');

1030 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L7STS
, 
desc
);

1033 
fú°_∑ckë_Àn
 = ((Ë*
s
->
check_d©a
) +

1034 (((Ë*(
s
->
check_d©a
 + 1)) << 8) +

1035 (((Ë*(
s
->
check_d©a
 + 2)) << 16);

1037 i‡(
s
->
check_d©a_Àn
 =
fú°_∑ckë_Àn
 + 4) {

1039 i‡(*(
s
->
check_d©a
 + 4) != '\xff') {

1043 i‡(!
d⁄e
 && 
s
->
check_d©a_Àn
 < 
fú°_∑ckë_Àn
 + 5)

1044 
waô_m‹e_d©a
;

1050 
desc
 = &
s
->
check_d©a
[7];

1052 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L7STS
, 
desc
);

1054 } i‡(
s
->
check_d©a_Àn
 > 
fú°_∑ckë_Àn
 + 4) {

1055 
£c⁄d_∑ckë_Àn
 = ((Ë*(
s
->
check_d©a
 + 
fú°_∑ckë_Àn
 + 4)) +

1056 (((Ë*(
s
->
check_d©a
 + 
fú°_∑ckë_Àn
 + 5)) << 8) +

1057 (((Ë*(
s
->
check_d©a
 + 
fú°_∑ckë_Àn
 + 6)) << 16);

1059 i‡(
s
->
check_d©a_Àn
 =
fú°_∑ckë_Àn
 + 4 + 
£c⁄d_∑ckë_Àn
 + 4 ) {

1062 i‡(*(
s
->
check_d©a
 + 
fú°_∑ckë_Àn
 + 8) != '\xff') {

1065 
desc
 = &
s
->
check_d©a
[5];

1067 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L7OKD
, 
desc
);

1073 
desc
 = &
s
->
check_d©a
[
fú°_∑ckë_Àn
+11];

1075 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L7STS
, 
desc
);

1080 i‡(!
d⁄e
)

1081 
waô_m‹e_d©a
;

1085 
desc
 = &
s
->
check_d©a
[5];

1087 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L7RSP
, 
desc
);

1091 i‡(
s
->
¥oxy
->
›ti⁄s2
 & 
PR_O2_LDAP_CHK
) {

1092 i‡(!
d⁄e
 && 
s
->
check_d©a_Àn
 < 14)

1093 
waô_m‹e_d©a
;

1103 i‡((
s
->
check_d©a_Àn
 < 14Ë|| (*(s->
check_d©a
) != '\x30')) {

1104 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L7RSP
, "Not LDAPv3Örotocol");

1108 
msgÀn
 = (*(
s
->
check_d©a
 + 1) & 0x80) ? (*(s->check_data + 1) & 0x7f) : 0;

1114 i‡((
msgÀn
 > 2) ||

1115 (
	`memcmp
(
s
->
check_d©a
 + 2 + 
msgÀn
, "\x02\x01\x01\x61", 4) != 0)) {

1116 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L7RSP
, "Not LDAPv3Örotocol");

1118 
out_wakeup
;

1122 
msgÀn
 +(*(
s
->
check_d©a
 + msglen + 6) & 0x80) ? (*(s->check_data + msglen + 6) & 0x7f) : 0;

1127 i‡((
msgÀn
 > 4) ||

1128 (
	`memcmp
(
s
->
check_d©a
 + 7 + 
msgÀn
, "\x0a\x01", 2) != 0)) {

1129 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L7RSP
, "Not LDAPv3Örotocol");

1131 
out_wakeup
;

1137 
s
->
check_code
 = *(s->
check_d©a
 + 
msgÀn
 + 9);

1138 i‡(
s
->
check_code
) {

1139 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L7STS
, "See RFC: http://tools.ietf.org/html/rfc4511#section-4.1.9");

1141 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L7OKD
, "Success");

1147 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L4OK
, 
NULL
);

1150 
out_wakeup
:

1151 i‡(
s
->
ªsu…
 & 
SRV_CHK_ERROR
)

1152 
fdèb
[
fd
].
°©e
 = 
FD_STERROR
;

1155 *
s
->
check_d©a
 = '\0';

1156 
s
->
check_d©a_Àn
 = 0;

1159 
	`shutdown
(
fd
, 
SHUT_RDWR
);

1160 
	`EV_FD_CLR
(
fd
, 
DIR_RD
);

1161 
	`èsk_wakeup
(
t
, 
TASK_WOKEN_IO
);

1162 
fdèb
[
fd
].
ev
 &~
FD_POLL_IN
;

1165 
waô_m‹e_d©a
:

1166 
fdèb
[
fd
].
ev
 &~
FD_POLL_IN
;

1168 
	}
}

1174 
èsk
 *
	$¥o˚ss_chk
(
èsk
 *
t
)

1176 
©ãm±s
 = 0;

1177 
£rvî
 *
s
 = 
t
->
c⁄ãxt
;

1178 
sockaddr_ö
 
ß
;

1179 
fd
;

1180 
rv
;

1184 
√w_chk
:

1185 i‡(
©ãm±s
++ > 0) {

1187 
	`tick_is_expúed
(
t
->
expúe
, 
now_ms
))

1188 
t
->
expúe
 = 
	`tick_add
—->expúe, 
	`MS_TO_TICKS
(
s
->
öãr
));

1189  
t
;

1191 
fd
 = 
s
->
curfd
;

1192 i‡(
fd
 < 0) {

1194 i‡(!
	`tick_is_expúed
(
t
->
expúe
, 
now_ms
))

1195  
t
;

1200 i‡(!(
s
->
°©e
 & 
SRV_CHECKED
Ë|| s->
¥oxy
->°©ê=
PR_STSTOPPED
 || (s->°©ê& 
SRV_MAINTAIN
)) {

1201 
	`tick_is_expúed
(
t
->
expúe
, 
now_ms
))

1202 
t
->
expúe
 = 
	`tick_add
—->expúe, 
	`MS_TO_TICKS
(
s
->
öãr
));

1203  
t
;

1207 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_START
, 
NULL
);

1208 i‡((
fd
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 
IPPROTO_TCP
)) != -1) {

1209 i‡((
fd
 < 
globÆ
.
maxsock
) &&

1210 (
	`f˙é
(
fd
, 
F_SETFL
, 
O_NONBLOCK
) != -1) &&

1211 (
	`£tsock›t
(
fd
, 
IPPROTO_TCP
, 
TCP_NODELAY
, (*Ë&
⁄e
, (one)) != -1)) {

1214 i‡(
s
->
¥oxy
->
›ti⁄s
 & 
PR_O_TCP_NOLING
) {

1216 
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_LINGER
, (
lögî
 *Ë&
nﬁögî
, (linger));

1219 i‡(
s
->
check_addr
.
sö_addr
.
s_addr
)

1221 
ß
 = 
s
->
check_addr
;

1224 
ß
 = 
s
->
addr
;

1227 
ß
.
sö_p‹t
 = 
	`ht⁄s
(
s
->
check_p‹t
);

1233 i‡(
s
->
°©e
 & 
SRV_BIND_SRC
) {

1234 
sockaddr_ö
 *
ªmŸe
 = 
NULL
;

1235 
ªt
, 
Êags
 = 0;

1237 #i‡
	`deföed
(
CONFIG_HAP_CTTPROXY
Ë|| deföed(
CONFIG_HAP_LINUX_TPROXY
)

1238 i‡((
s
->
°©e
 & 
SRV_TPROXY_MASK
Ë=
SRV_TPROXY_ADDR
) {

1239 
ªmŸe
 = (
sockaddr_ö
 *)&
s
->
çroxy_addr
;

1240 
Êags
 = 3;

1243 #ifde‡
SO_BINDTODEVICE


1245 i‡(
s
->
iÁ˚_«me
)

1246 
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_BINDTODEVICE
,

1247 
s
->
iÁ˚_«me
, s->
iÁ˚_Àn
 + 1);

1249 i‡(
s
->
•‹t_ønge
) {

1250 
böd_©ãm±s
 = 10;

1251 
sockaddr_ö
 
§c
;

1253 
ªt
 = 1;

1254 
§c
 = 
s
->
sour˚_addr
;

1260 
	`p‹t_ønge_ªÀa£_p‹t
(
fdöfo
[
fd
].
p‹t_ønge
, fdöfo[fd].
loˇl_p‹t
);

1261 
fdöfo
[
fd
].
p‹t_ønge
 = 
NULL
;

1263 i‡(!
böd_©ãm±s
)

1265 
böd_©ãm±s
--;

1267 
fdöfo
[
fd
].
loˇl_p‹t
 = 
	`p‹t_ønge_Æloc_p‹t
(
s
->
•‹t_ønge
);

1268 i‡(!
fdöfo
[
fd
].
loˇl_p‹t
)

1271 
fdöfo
[
fd
].
p‹t_ønge
 = 
s
->
•‹t_ønge
;

1272 
§c
.
sö_p‹t
 = 
	`ht⁄s
(
fdöfo
[
fd
].
loˇl_p‹t
);

1274 
ªt
 = 
	`t˝v4_böd_sockë
(
fd
, 
Êags
, &
§c
, 
ªmŸe
);

1275 } 
ªt
 != 0);

1278 
ªt
 = 
	`t˝v4_böd_sockë
(
fd
, 
Êags
, &
s
->
sour˚_addr
, 
ªmŸe
);

1281 i‡(
ªt
) {

1282 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_SOCKERR
, 
NULL
);

1283 
ªt
) {

1285 
	`AÀπ
("Cannot bindÅo sourceáddress before connect() for server %s/%s. Aborting.\n",

1286 
s
->
¥oxy
->
id
, s->id);

1289 
	`AÀπ
("Cannot bindÅoÅproxy sourceáddress before connect() for server %s/%s. Aborting.\n",

1290 
s
->
¥oxy
->
id
, s->id);

1295 i‡(
s
->
¥oxy
->
›ti⁄s
 & 
PR_O_BIND_SRC
) {

1296 
sockaddr_ö
 *
ªmŸe
 = 
NULL
;

1297 
ªt
, 
Êags
 = 0;

1299 #i‡
	`deföed
(
CONFIG_HAP_CTTPROXY
Ë|| deföed(
CONFIG_HAP_LINUX_TPROXY
)

1300 i‡((
s
->
¥oxy
->
›ti⁄s
 & 
PR_O_TPXY_MASK
Ë=
PR_O_TPXY_ADDR
) {

1301 
ªmŸe
 = (
sockaddr_ö
 *)&
s
->
¥oxy
->
çroxy_addr
;

1302 
Êags
 = 3;

1305 #ifde‡
SO_BINDTODEVICE


1307 i‡(
s
->
¥oxy
->
iÁ˚_«me
)

1308 
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_BINDTODEVICE
,

1309 
s
->
¥oxy
->
iÁ˚_«me
, s->¥oxy->
iÁ˚_Àn
 + 1);

1311 
ªt
 = 
	`t˝v4_böd_sockë
(
fd
, 
Êags
, &
s
->
¥oxy
->
sour˚_addr
, 
ªmŸe
);

1312 i‡(
ªt
) {

1313 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_SOCKERR
, 
NULL
);

1314 
ªt
) {

1316 
	`AÀπ
("Cannot bindÅo sourceáddress before connect() for %s '%s'. Aborting.\n",

1317 
	`¥oxy_ty≥_°r
(
s
->
¥oxy
), s->¥oxy->
id
);

1320 
	`AÀπ
("Cannot bindÅoÅproxy sourceáddress before connect() for %s '%s'. Aborting.\n",

1321 
	`¥oxy_ty≥_°r
(
s
->
¥oxy
), s->¥oxy->
id
);

1327 i‡(
s
->
ªsu…
 =
SRV_CHK_UNKNOWN
) {

1328 #i‡
	`deföed
(
TCP_QUICKACK
)

1333 i‡(
s
->
¥oxy
->
›ti⁄s2
 & 
PR_O2_SMARTCON
)

1334 
	`£tsock›t
(
fd
, 
IPPROTO_TCP
, 
TCP_QUICKACK
, (*Ë&
zîo
, (zero));

1336 i‡((
	`c⁄√˘
(
fd
, (
sockaddr
 *)&
ß
, (ß)Ë!-1Ë|| (
î∫o
 =
EINPROGRESS
)) {

1341 
s
->
curfd
 = 
fd
;

1342 
	`fd_ö£π
(
fd
);

1343 
fdèb
[
fd
].
ow√r
 = 
t
;

1344 
fdèb
[
fd
].
cb
[
DIR_RD
].
f
 = &
evít_§v_chk_r
;

1345 
fdèb
[
fd
].
cb
[
DIR_RD
].
b
 = 
NULL
;

1346 
fdèb
[
fd
].
cb
[
DIR_WR
].
f
 = &
evít_§v_chk_w
;

1347 
fdèb
[
fd
].
cb
[
DIR_WR
].
b
 = 
NULL
;

1348 
fdöfo
[
fd
].
≥îaddr
 = (
sockaddr
 *)&
ß
;

1349 
fdöfo
[
fd
].
≥îÀn
 = (
ß
);

1350 
fdèb
[
fd
].
°©e
 = 
FD_STCONN
;

1351 
fdèb
[
fd
].
Êags
 = 
FD_FL_TCP
 | 
FD_FL_TCP_NODELAY
;

1352 
	`EV_FD_SET
(
fd
, 
DIR_WR
);

1353 #ifde‡
DEBUG_FULL


1354 
	`as£π
 (!
	`EV_FD_ISSET
(
fd
, 
DIR_RD
));

1361 
t
->
expúe
 = 
	`tick_add
(
now_ms
, 
	`MS_TO_TICKS
(
s
->
öãr
));

1363 i‡(
s
->
¥oxy
->
timeout
.
check
 && s->¥oxy->timeout.
c⁄√˘
) {

1364 
t_c⁄
 = 
	`tick_add
(
now_ms
, 
s
->
¥oxy
->
timeout
.
c⁄√˘
);

1365 
t
->
expúe
 = 
	`tick_fú°
—->expúe, 
t_c⁄
);

1367  
t
;

1369 i‡(
î∫o
 !
EALREADY
 &&Éºnÿ!
EISCONN
 &&Éºnÿ!
EAGAIN
) {

1372 
î∫o
) {

1374 
ECONNREFUSED
:

1375 
ENETUNREACH
:

1376 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L4CON
, 
	`°ªº‹
(
î∫o
));

1380 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_SOCKERR
, 
	`°ªº‹
(
î∫o
));

1385 
	`p‹t_ønge_ªÀa£_p‹t
(
fdöfo
[
fd
].
p‹t_ønge
, fdöfo[fd].
loˇl_p‹t
);

1386 
fdöfo
[
fd
].
p‹t_ønge
 = 
NULL
;

1387 
	`˛o£
(
fd
);

1390 i‡(
s
->
ªsu…
 =
SRV_CHK_UNKNOWN
) {

1392 
	`tick_is_expúed
(
t
->
expúe
, 
now_ms
))

1393 
t
->
expúe
 = 
	`tick_add
—->expúe, 
	`MS_TO_TICKS
(
s
->
öãr
));

1394 
√w_chk
;

1398 i‡(
s
->
hó…h
 > s->
ri£
) {

1399 
s
->
hó…h
--;

1400 
s
->
cou¡îs
.
Áûed_checks
++;

1403 
	`£t_£rvî_down
(
s
);

1410 
	`tick_is_expúed
(
t
->
expúe
, 
now_ms
)) {

1411 
t_c⁄
;

1413 
t_c⁄
 = 
	`tick_add
(
t
->
expúe
, 
s
->
¥oxy
->
timeout
.
c⁄√˘
);

1414 
t
->
expúe
 = 
	`tick_add
—->expúe, 
	`MS_TO_TICKS
(
s
->
öãr
));

1416 i‡(
s
->
¥oxy
->
timeout
.
check
)

1417 
t
->
expúe
 = 
	`tick_fú°
—->expúe, 
t_c⁄
);

1419 
√w_chk
;

1424 i‡((
s
->
ªsu…
 & (
SRV_CHK_ERROR
|
SRV_CHK_RUNNING
)) == SRV_CHK_RUNNING) {

1427 i‡(
s
->
°©e
 & 
SRV_WARMINGUP
) {

1428 i‡(
now
.
tv_£c
 < 
s
->
œ°_ch™ge
 ||Çow.tv_£¯>s->œ°_ch™gê+ s->
¶ow°¨t
) {

1429 
s
->
°©e
 &~
SRV_WARMINGUP
;

1430 i‡(
s
->
¥oxy
->
lb¥m
.
Ægo
 & 
BE_LB_PROP_DYN
)

1431 
s
->
eweight
 = s->
uweight
 * 
BE_WEIGHT_SCALE
;

1432 i‡(
s
->
¥oxy
->
lb¥m
.
upd©e_£rvî_eweight
)

1433 
s
->
¥oxy
->
lb¥m
.
	`upd©e_£rvî_eweight
(s);

1435 i‡(
s
->
¥oxy
->
lb¥m
.
Ægo
 & 
BE_LB_PROP_DYN
) {

1437 
s
->
eweight
 = (
BE_WEIGHT_SCALE
 * (
now
.
tv_£c
 - s->
œ°_ch™ge
) +

1438 
s
->
¶ow°¨t
 - 1) / s->slowstart;

1439 
s
->
eweight
 *s->
uweight
;

1440 i‡(
s
->
¥oxy
->
lb¥m
.
upd©e_£rvî_eweight
)

1441 
s
->
¥oxy
->
lb¥m
.
	`upd©e_£rvî_eweight
(s);

1444 
	`check_f‹_≥ndög
(
s
);

1448 i‡((
s
->
°©e
 & 
SRV_RUNNING
Ë&& (s->
¥oxy
->
›ti⁄s
 & 
PR_O_DISABLE404
)) {

1449 i‡((
s
->
°©e
 & 
SRV_GOINGDOWN
) &&

1450 ((
s
->
ªsu…
 & (
SRV_CHK_RUNNING
|
SRV_CHK_DISABLE
)) == SRV_CHK_RUNNING))

1451 
	`£t_£rvî_íabÀd
(
s
);

1452 i‡(!(
s
->
°©e
 & 
SRV_GOINGDOWN
) &&

1453 ((
s
->
ªsu…
 & (
SRV_CHK_RUNNING
 | 
SRV_CHK_DISABLE
)) ==

1454 (
SRV_CHK_RUNNING
 | 
SRV_CHK_DISABLE
)))

1455 
	`£t_£rvî_dißbÀd
(
s
);

1458 i‡(
s
->
hó…h
 < s->
ri£
 + s->
ÁŒ
 - 1) {

1459 
s
->
hó…h
++;

1461 
	`£t_£rvî_up
(
s
);

1463 
s
->
curfd
 = -1;

1464 
	`fd_dñëe
(
fd
);

1466 
rv
 = 0;

1467 i‡(
globÆ
.
•ªad_checks
 > 0) {

1468 
rv
 = 
	`§v_gëöãr
(
s
Ë* 
globÆ
.
•ªad_checks
 / 100;

1469 
rv
 -(Ë(2 *Ñv * (
	`ønd
(Ë/ (
RAND_MAX
 + 1.0)));

1472 
t
->
expúe
 = 
	`tick_add
(
now_ms
, 
	`MS_TO_TICKS
(
	`§v_gëöãr
(
s
Ë+ 
rv
));

1473 
√w_chk
;

1475 i‡((
s
->
ªsu…
 & 
SRV_CHK_ERROR
Ë|| 
	`tick_is_expúed
(
t
->
expúe
, 
now_ms
)) {

1476 i‡(!(
s
->
ªsu…
 & 
SRV_CHK_ERROR
)) {

1477 i‡(!
	`EV_FD_ISSET
(
fd
, 
DIR_RD
)) {

1478 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L4TOUT
, 
NULL
);

1480 i‡(
s
->
¥oxy
->
›ti⁄s2
 & 
PR_O2_SSL3_CHK
)

1481 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L6TOUT
, 
NULL
);

1483 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L7TOUT
, 
NULL
);

1489 i‡(
s
->
hó…h
 > s->
ri£
) {

1490 
s
->
hó…h
--;

1491 
s
->
cou¡îs
.
Áûed_checks
++;

1494 
	`£t_£rvî_down
(
s
);

1495 
s
->
curfd
 = -1;

1496 
	`fd_dñëe
(
fd
);

1498 
rv
 = 0;

1499 i‡(
globÆ
.
•ªad_checks
 > 0) {

1500 
rv
 = 
	`§v_gëöãr
(
s
Ë* 
globÆ
.
•ªad_checks
 / 100;

1501 
rv
 -(Ë(2 *Ñv * (
	`ønd
(Ë/ (
RAND_MAX
 + 1.0)));

1504 
t
->
expúe
 = 
	`tick_add
(
now_ms
, 
	`MS_TO_TICKS
(
	`§v_gëöãr
(
s
Ë+ 
rv
));

1505 
√w_chk
;

1510 
s
->
ªsu…
 = 
SRV_CHK_UNKNOWN
;

1511  
t
;

1512 
	}
}

1518 
	$°¨t_checks
() {

1520 
¥oxy
 *
px
;

1521 
£rvî
 *
s
;

1522 
èsk
 *
t
;

1523 
nbchk
=0, 
mööãr
=0, 
§vpos
=0;

1532 
px
 = 
¥oxy
;Öx;Öx =Öx->
√xt
) {

1533 
s
 = 
px
->
§v
; s; s = s->
√xt
) {

1534 i‡(!(
s
->
°©e
 & 
SRV_CHECKED
))

1537 i‡((
	`§v_gëöãr
(
s
Ë>
SRV_CHK_INTER_THRES
) &&

1538 (!
mööãr
 || mööã∏> 
	`§v_gëöãr
(
s
)))

1539 
mööãr
 = 
	`§v_gëöãr
(
s
);

1541 
nbchk
++;

1545 i‡(!
nbchk
)

1548 
	`§™d
(()
	`time
(
NULL
));

1555 
px
 = 
¥oxy
;Öx;Öx =Öx->
√xt
) {

1556 
s
 = 
px
->
§v
; s; s = s->
√xt
) {

1557 i‡(!(
s
->
°©e
 & 
SRV_CHECKED
))

1560 i‡((
t
 = 
	`èsk_√w
()Ë=
NULL
) {

1561 
	`AÀπ
("Sèπög [%s:%s] check: ouào‡mem‹y.\n", 
px
->
id
, 
s
->id);

1565 
s
->
check
 = 
t
;

1566 
t
->
¥o˚ss
 = 
¥o˚ss_chk
;

1567 
t
->
c⁄ãxt
 = 
s
;

1570 
t
->
expúe
 = 
	`tick_add
(
now_ms
,

1571 
	`MS_TO_TICKS
(((
mööãr
 && mööã∏>
	`§v_gëöãr
(
s
)) ?

1572 
mööãr
 : 
	`§v_gëöãr
(
s
)Ë* 
§vpos
 / 
nbchk
));

1573 
s
->
check_°¨t
 = 
now
;

1574 
	`èsk_queue
(
t
);

1576 
§vpos
++;

1580 
	}
}

1589 
	$hâpchk_ex≥˘
(
£rvî
 *
s
, 
d⁄e
)

1591 
°©us_msg
[] = "HTTP status checkÑeturned code <000>";

1592 
°©us_code
[] = "000";

1593 *
c⁄ã¡±r
;

1594 
¸lf
;

1595 
ªt
;

1597 
s
->
¥oxy
->
›ti⁄s2
 & 
PR_O2_EXP_TYPE
) {

1598 
PR_O2_EXP_STS
:

1599 
PR_O2_EXP_RSTS
:

1600 
	`mem˝y
(
°©us_code
, 
s
->
check_d©a
 + 9, 3);

1601 
	`mem˝y
(
°©us_msg
 + 
	`°æí
(°©us_msgË- 4, 
s
->
check_d©a
 + 9, 3);

1603 i‡((
s
->
¥oxy
->
›ti⁄s2
 & 
PR_O2_EXP_TYPE
Ë=
PR_O2_EXP_STS
)

1604 
ªt
 = 
	`°∫cmp
(
s
->
¥oxy
->
ex≥˘_°r
, 
°©us_code
, 3) == 0;

1606 
ªt
 = 
	`ªgexec
(
s
->
¥oxy
->
ex≥˘_ªgex
, 
°©us_code
, 
MAX_MATCH
, 
pm©ch
, 0) == 0;

1609 i‡(
s
->
¥oxy
->
›ti⁄s2
 & 
PR_O2_EXP_INV
)

1610 
ªt
 = !ret;

1612 
	`£t_£rvî_check_°©us
(
s
, 
ªt
 ? 
HCHK_STATUS_L7OKD
 : 
HCHK_STATUS_L7STS
, 
°©us_msg
);

1615 
PR_O2_EXP_STR
:

1616 
PR_O2_EXP_RSTR
:

1621 
¸lf
 = 0;

1622 
c⁄ã¡±r
 = 
s
->
check_d©a
; *contentptr; contentptr++) {

1623 i‡(
¸lf
 >= 2)

1625 i‡(*
c⁄ã¡±r
 == '\r')

1627 i‡(*
c⁄ã¡±r
 == '\n')

1628 
¸lf
++;

1630 
¸lf
 = 0;

1634 i‡(
¸lf
 < 2) {

1635 i‡(!
d⁄e
)

1638 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L7RSP
,

1644 i‡(*
c⁄ã¡±r
 == '\0') {

1645 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L7RSP
,

1652 i‡((
s
->
¥oxy
->
›ti⁄s2
 & 
PR_O2_EXP_TYPE
Ë=
PR_O2_EXP_STR
)

1653 
ªt
 = 
	`°r°r
(
c⁄ã¡±r
, 
s
->
¥oxy
->
ex≥˘_°r
Ë!
NULL
;

1655 
ªt
 = 
	`ªgexec
(
s
->
¥oxy
->
ex≥˘_ªgex
, 
c⁄ã¡±r
, 
MAX_MATCH
, 
pm©ch
, 0) == 0;

1658 i‡(!
ªt
 && !
d⁄e
)

1661 i‡(
ªt
) {

1663 i‡(
s
->
¥oxy
->
›ti⁄s2
 & 
PR_O2_EXP_INV
)

1664 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L7RSP
,

1667 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L7OKD
,

1671 i‡(
s
->
¥oxy
->
›ti⁄s2
 & 
PR_O2_EXP_INV
)

1672 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L7OKD
,

1675 
	`£t_£rvî_check_°©us
(
s
, 
HCHK_STATUS_L7RSP
,

1681 
	}
}

	@src/client.c

13 
	~<î∫o.h
>

14 
	~<f˙é.h
>

15 
	~<°dio.h
>

16 
	~<°dlib.h
>

17 
	~<°rög.h
>

19 
	~<sys/sockë.h
>

20 
	~<sys/°©.h
>

21 
	~<sys/ty≥s.h
>

23 
	~<comm⁄/com∑t.h
>

24 
	~<comm⁄/c⁄fig.h
>

25 
	~<comm⁄/time.h
>

27 
	~<ty≥s/globÆ.h
>

29 
	~<¥Ÿo/a˛.h
>

30 
	~<¥Ÿo/buf„rs.h
>

31 
	~<¥Ÿo/˛õ¡.h
>

32 
	~<¥Ÿo/fd.h
>

33 
	~<¥Ÿo/log.h
>

34 
	~<¥Ÿo/hdr_idx.h
>

35 
	~<¥Ÿo/∑âîn.h
>

36 
	~<¥Ÿo/¥Ÿocﬁs.h
>

37 
	~<¥Ÿo/¥Ÿo_t˝.h
>

38 
	~<¥Ÿo/¥Ÿo_hâp.h
>

39 
	~<¥Ÿo/¥oxy.h
>

40 
	~<¥Ÿo/£ssi⁄.h
>

41 
	~<¥Ÿo/°ªam_öãrÁ˚.h
>

42 
	~<¥Ÿo/°ªam_sock.h
>

43 
	~<¥Ÿo/èsk.h
>

49 
	$gë_‰t_addr
(
£ssi⁄
 *
s
)

51 
sockÀn_t
 
«mñí
 = (
s
->
‰t_addr
);

53 i‡(
	`gë_‹igöÆ_d°
(
s
->
si
[0].
fd
, (
sockaddr_ö
 *)&s->
‰t_addr
, &
«mñí
) == -1)

54 
	`gësock«me
(
s
->
si
[0].
fd
, (
sockaddr
 *)&s->
‰t_addr
, &
«mñí
);

55 
s
->
Êags
 |
SN_FRT_ADDR_SET
;

56 
	}
}

67 
	$evít_ac˚±
(
fd
) {

68 
li°íî
 *
l
 = 
fdèb
[
fd
].
ow√r
;

69 
¥oxy
 *
p
 = (¥oxy *)
l
->
¥iv©e
;

70 
£ssi⁄
 *
s
;

71 
hâp_txn
 *
txn
;

72 
èsk
 *
t
;

73 
cfd
;

74 
max_ac˚±
 = 
globÆ
.
tu√
.
maxac˚±
;

76 i‡(
p
->
„_•s_lim
) {

77 
max
 = 
	`‰eq_˘r_ªmaö
(&
p
->
„_£ss_≥r_£c
,Ö->
„_•s_lim
, 0);

78 i‡(
max_ac˚±
 > 
max
)

79 
max_ac˚±
 = 
max
;

82 
p
->
„c⁄n
 <Ö->
maxc⁄n
 && 
a˘c⁄n
 < 
globÆ
.maxc⁄¿&& 
max_ac˚±
--) {

83 
sockaddr_°‹age
 
addr
;

84 
sockÀn_t
 
œddr
 = (
addr
);

86 i‡((
cfd
 = 
	`ac˚±
(
fd
, (
sockaddr
 *)&
addr
, &
œddr
)) == -1) {

87 
î∫o
) {

88 
EAGAIN
:

89 
EINTR
:

90 
ECONNABORTED
:

92 
ENFILE
:

93 
	`£nd_log
(
p
, 
LOG_EMERG
,

95 
p
->
id
, 
maxfd
);

97 
EMFILE
:

98 
	`£nd_log
(
p
, 
LOG_EMERG
,

100 
p
->
id
, 
maxfd
);

102 
ENOBUFS
:

103 
ENOMEM
:

104 
	`£nd_log
(
p
, 
LOG_EMERG
,

106 
p
->
id
, 
maxfd
);

113 i‡(
l
->
nbc⁄n
 >l->
maxc⁄n
) {

120 
out_˛o£
;

123 i‡((
s
 = 
	`poﬁ_Æloc2
(
poﬁ2_£ssi⁄
)Ë=
NULL
) {

124 
	`AÀπ
("out of memory inÉvent_accept().\n");

125 
	`dißbÀ_li°íî
(
l
);

126 
p
->
°©e
 = 
PR_STIDLE
;

127 
out_˛o£
;

130 
	`LIST_INIT
(&
s
->
back_ªfs
);

132 
s
->
Êags
 = 0;

133 
s
->
ãrm_åa˚
 = 0;

138 i‡(
addr
.
ss_Ámûy
 =
AF_INET
 &&

139 
p
->
m⁄_mask
.
s_addr
 &&

140 (((
sockaddr_ö
 *)&
addr
)->
sö_addr
.
s_addr
 & 
p
->
m⁄_mask
.s_addrË=p->
m⁄_√t
.s_addr) {

141 i‡(
p
->
mode
 =
PR_MODE_TCP
) {

142 
	`˛o£
(
cfd
);

143 
	`poﬁ_‰ì2
(
poﬁ2_£ssi⁄
, 
s
);

146 
s
->
Êags
 |
SN_MONITOR
;

149 
	`LIST_ADDQ
(&
£ssi⁄s
, &
s
->
li°
);

151 i‡((
t
 = 
	`èsk_√w
()Ë=
NULL
) {

152 
	`AÀπ
("out of memory inÉvent_accept().\n");

153 
	`dißbÀ_li°íî
(
l
);

154 
p
->
°©e
 = 
PR_STIDLE
;

155 
out_‰ì_£ssi⁄
;

158 
s
->
˛i_addr
 = 
addr
;

159 i‡(
cfd
 >
globÆ
.
maxsock
) {

160 
	`AÀπ
("accept():ÇotÉnough free sockets. Raise -nárgument. Giving up.\n");

161 
out_‰ì_èsk
;

164 i‡((
	`f˙é
(
cfd
, 
F_SETFL
, 
O_NONBLOCK
) == -1) ||

165 (
	`£tsock›t
(
cfd
, 
IPPROTO_TCP
, 
TCP_NODELAY
,

166 (*Ë&
⁄e
, (one)) == -1)) {

167 
	`AÀπ
("accept(): cannot setÅhe socket inÇon blocking mode. Giving up\n");

168 
out_‰ì_èsk
;

171 i‡(
p
->
›ti⁄s
 & 
PR_O_TCP_CLI_KA
)

172 
	`£tsock›t
(
cfd
, 
SOL_SOCKET
, 
SO_KEEPALIVE
, (*Ë&
⁄e
, (one));

174 i‡(
p
->
›ti⁄s
 & 
PR_O_TCP_NOLING
)

175 
	`£tsock›t
(
cfd
, 
SOL_SOCKET
, 
SO_LINGER
, (
lögî
 *Ë&
nﬁögî
, (linger));

177 i‡(
globÆ
.
tu√
.
˛õ¡_¢dbuf
)

178 
	`£tsock›t
(
cfd
, 
SOL_SOCKET
, 
SO_SNDBUF
, &
globÆ
.
tu√
.
˛õ¡_¢dbuf
, (global.tune.client_sndbuf));

180 i‡(
globÆ
.
tu√
.
˛õ¡_rcvbuf
)

181 
	`£tsock›t
(
cfd
, 
SOL_SOCKET
, 
SO_RCVBUF
, &
globÆ
.
tu√
.
˛õ¡_rcvbuf
, (global.tune.client_rcvbuf));

183 
t
->
¥o˚ss
 = 
l
->
h™dÀr
;

184 
t
->
c⁄ãxt
 = 
s
;

185 
t
->
ni˚
 = 
l
->nice;

187 
s
->
èsk
 = 
t
;

188 
s
->
li°íî
 = 
l
;

194 
s
->
be
 = s->
„
 = 
p
;

196 
s
->
ªq
 = s->
ªp
 = 
NULL
;

198 
s
->
si
[0].
°©e
 = s->si[0].
¥ev_°©e
 = 
SI_ST_EST
;

199 
s
->
si
[0].
îr_ty≥
 = 
SI_ET_NONE
;

200 
s
->
si
[0].
îr_loc
 = 
NULL
;

201 
s
->
si
[0].
ow√r
 = 
t
;

202 
s
->
si
[0].
upd©e
 = 
°ªam_sock_d©a_föish
;

203 
s
->
si
[0].
shuå
 = 
°ªam_sock_shuå
;

204 
s
->
si
[0].
shutw
 = 
°ªam_sock_shutw
;

205 
s
->
si
[0].
chk_rcv
 = 
°ªam_sock_chk_rcv
;

206 
s
->
si
[0].
chk_¢d
 = 
°ªam_sock_chk_¢d
;

207 
s
->
si
[0].
c⁄√˘
 = 
NULL
;

208 
s
->
si
[0].
ioh™dÀr
 = 
NULL
;

209 
s
->
si
[0].
fd
 = 
cfd
;

210 
s
->
si
[0].
Êags
 = 
SI_FL_NONE
 | 
SI_FL_CAP_SPLTCP
;

211 i‡(
s
->
„
->
›ti⁄s2
 & 
PR_O2_INDEPSTR
)

212 
s
->
si
[0].
Êags
 |
SI_FL_INDEP_STR
;

213 
s
->
si
[0].
exp
 = 
TICK_ETERNITY
;

215 
s
->
si
[1].
°©e
 = s->si[1].
¥ev_°©e
 = 
SI_ST_INI
;

216 
s
->
si
[1].
îr_ty≥
 = 
SI_ET_NONE
;

217 
s
->
si
[1].
îr_loc
 = 
NULL
;

218 
s
->
si
[1].
ow√r
 = 
t
;

219 
s
->
si
[1].
upd©e
 = 
°ªam_sock_d©a_föish
;

220 
s
->
si
[1].
shuå
 = 
°ªam_sock_shuå
;

221 
s
->
si
[1].
shutw
 = 
°ªam_sock_shutw
;

222 
s
->
si
[1].
chk_rcv
 = 
°ªam_sock_chk_rcv
;

223 
s
->
si
[1].
chk_¢d
 = 
°ªam_sock_chk_¢d
;

224 
s
->
si
[1].
c⁄√˘
 = 
t˝v4_c⁄√˘_£rvî
;

225 
s
->
si
[1].
ioh™dÀr
 = 
NULL
;

226 
s
->
si
[1].
exp
 = 
TICK_ETERNITY
;

227 
s
->
si
[1].
fd
 = -1;

228 
s
->
si
[1].
Êags
 = 
SI_FL_NONE
;

229 i‡(
s
->
be
->
›ti⁄s2
 & 
PR_O2_INDEPSTR
)

230 
s
->
si
[1].
Êags
 |
SI_FL_INDEP_STR
;

232 
s
->
§v
 = s->
¥ev_§v
 = s->
§v_c⁄n
 = 
NULL
;

233 
s
->
≥nd_pos
 = 
NULL
;

234 
s
->
c⁄n_ªåõs
 = s->
be
->conn_retries;

237 
s
->
°‹e_cou¡
 = 0;

243 i‡(
s
->
Êags
 & 
SN_MONITOR
)

244 
s
->
logs
.
logwaô
 = 0;

246 
s
->
logs
.
logwaô
 = 
p
->
to_log
;

248 i‡(
s
->
logs
.
logwaô
 & 
LW_REQ
)

249 
s
->
do_log
 = 
hâp_£ss_log
;

251 
s
->
do_log
 = 
t˝_£ss_log
;

254 
s
->
§v_îr‹
 = 
deÁu…_§v_îr‹
;

256 
s
->
logs
.
ac˚±_d©e
 = 
d©e
;

257 
s
->
logs
.
tv_ac˚±
 = 
now
;

258 
	`tv_zîo
(&
s
->
logs
.
tv_ªque°
);

259 
s
->
logs
.
t_queue
 = -1;

260 
s
->
logs
.
t_c⁄√˘
 = -1;

261 
s
->
logs
.
t_d©a
 = -1;

262 
s
->
logs
.
t_˛o£
 = 0;

263 
s
->
logs
.
byãs_ö
 = s->logs.
byãs_out
 = 0;

264 
s
->
logs
.
¥x_queue_size
 = 0;

265 
s
->
logs
.
§v_queue_size
 = 0;

267 
s
->
d©a_sour˚
 = 
DATA_SRC_NONE
;

269 
s
->
uniq_id
 = 
tŸÆc⁄n
;

270 
	`¥oxy_öc_„_˘r
(
l
, 
p
);

272 
txn
 = &
s
->txn;

277 
txn
->
£ssid
 = 
NULL
;

278 
txn
->
§v_cookõ
 = 
NULL
;

279 
txn
->
˛i_cookõ
 = 
NULL
;

280 
txn
->
uri
 = 
NULL
;

281 
txn
->
ªq
.
ˇp
 = 
NULL
;

282 
txn
->
r•
.
ˇp
 = 
NULL
;

283 
txn
->
hdr_idx
.
v
 = 
NULL
;

284 
txn
->
hdr_idx
.
size
 =Åxn->hdr_idx.
u£d
 = 0;

286 i‡(
p
->
mode
 =
PR_MODE_HTTP
) {

288 i‡(
p
->
nb_ªq_ˇp
 > 0 &&

289 (
txn
->
ªq
.
ˇp
 = 
	`poﬁ_Æloc2
(
p
->
ªq_ˇp_poﬁ
)Ë=
NULL
)

290 
out_Áû_ªqˇp
;

292 i‡(
p
->
nb_r•_ˇp
 > 0 &&

293 (
txn
->
r•
.
ˇp
 = 
	`poﬁ_Æloc2
(
p
->
r•_ˇp_poﬁ
)Ë=
NULL
)

294 
out_Áû_r•ˇp
;

297 i‡(
p
->
a˛_ªquúes
 & 
ACL_USE_L7_ANY
) {

302 
txn
->
hdr_idx
.
size
 = 
MAX_HTTP_HDR
;

304 i‡((
txn
->
hdr_idx
.
v
 = 
	`poﬁ_Æloc2
(
p
->
hdr_idx_poﬁ
)Ë=
NULL
)

305 
out_Áû_idx
;

308 
	`hâp_öô_txn
(
s
);

311 i‡((
p
->
mode
 =
PR_MODE_TCP
 ||Ö->modê=
PR_MODE_HTTP
)

312 && (
p
->
logÁc1
 >0 ||Ö->
logÁc2
 >= 0)) {

313 i‡(
p
->
to_log
) {

315 i‡(
s
->
logs
.
logwaô
 & 
LW_CLIP
)

316 i‡(!(
s
->
logs
.
logwaô
 &~
LW_CLIP
))

317 
s
->
	`do_log
(s);

319 i‡(
s
->
˛i_addr
.
ss_Ámûy
 =
AF_INET
) {

320 
≤
[
INET_ADDRSTRLEN
], 
¢
[INET_ADDRSTRLEN];

322 i‡(!(
s
->
Êags
 & 
SN_FRT_ADDR_SET
))

323 
	`gë_‰t_addr
(
s
);

325 i‡(
	`öë_¡›
(
AF_INET
, (c⁄° *)&((
sockaddr_ö
 *)&
s
->
‰t_addr
)->
sö_addr
,

326 
¢
, (sn)) &&

327 
	`öë_¡›
(
AF_INET
, (c⁄° *)&((
sockaddr_ö
 *)&
s
->
˛i_addr
)->
sö_addr
,

328 
≤
, (pn))) {

329 
	`£nd_log
(
p
, 
LOG_INFO
, "Connect from %s:%dÅo %s:%d (%s/%s)\n",

330 
≤
, 
	`¡ohs
(((
sockaddr_ö
 *)&
s
->
˛i_addr
)->
sö_p‹t
),

331 
¢
, 
	`¡ohs
(((
sockaddr_ö
 *)&
s
->
‰t_addr
)->
sö_p‹t
),

332 
p
->
id
, (p->
mode
 =
PR_MODE_HTTP
) ? "HTTP" : "TCP");

336 
≤
[
INET6_ADDRSTRLEN
], 
¢
[INET6_ADDRSTRLEN];

338 i‡(!(
s
->
Êags
 & 
SN_FRT_ADDR_SET
))

339 
	`gë_‰t_addr
(
s
);

341 i‡(
	`öë_¡›
(
AF_INET6
, (c⁄° *)&((
sockaddr_ö6
 *)&
s
->
‰t_addr
)->
sö6_addr
,

342 
¢
, (sn)) &&

343 
	`öë_¡›
(
AF_INET6
, (c⁄° *)&((
sockaddr_ö6
 *)&
s
->
˛i_addr
)->
sö6_addr
,

344 
≤
, (pn))) {

345 
	`£nd_log
(
p
, 
LOG_INFO
, "Connect from %s:%dÅo %s:%d (%s/%s)\n",

346 
≤
, 
	`¡ohs
(((
sockaddr_ö6
 *)&
s
->
˛i_addr
)->
sö6_p‹t
),

347 
¢
, 
	`¡ohs
(((
sockaddr_ö6
 *)&
s
->
‰t_addr
)->
sö6_p‹t
),

348 
p
->
id
, (p->
mode
 =
PR_MODE_HTTP
) ? "HTTP" : "TCP");

353 i‡((
globÆ
.
mode
 & 
MODE_DEBUG
Ë&& (!(globÆ.modê& 
MODE_QUIET
Ë|| (globÆ.modê& 
MODE_VERBOSE
))) {

354 
Àn
;

356 i‡(!(
s
->
Êags
 & 
SN_FRT_ADDR_SET
))

357 
	`gë_‰t_addr
(
s
);

359 i‡(
s
->
˛i_addr
.
ss_Ámûy
 =
AF_INET
) {

360 
≤
[
INET_ADDRSTRLEN
];

361 
	`öë_¡›
(
AF_INET
,

362 (c⁄° *)&((
sockaddr_ö
 *)&
s
->
˛i_addr
)->
sö_addr
,

363 
≤
, (pn));

365 
Àn
 = 
	`•rötf
(
åash
, "%08x:%s.accept(%04x)=%04x from [%s:%d]\n",

366 
s
->
uniq_id
, 
p
->
id
, ()
fd
, ()
cfd
,

367 
≤
, 
	`¡ohs
(((
sockaddr_ö
 *)&
s
->
˛i_addr
)->
sö_p‹t
));

370 
≤
[
INET6_ADDRSTRLEN
];

371 
	`öë_¡›
(
AF_INET6
,

372 (c⁄° *)&((
sockaddr_ö6
 *)(&
s
->
˛i_addr
))->
sö6_addr
,

373 
≤
, (pn));

375 
Àn
 = 
	`•rötf
(
åash
, "%08x:%s.accept(%04x)=%04x from [%s:%d]\n",

376 
s
->
uniq_id
, 
p
->
id
, ()
fd
, ()
cfd
,

377 
≤
, 
	`¡ohs
(((
sockaddr_ö6
 *)(&
s
->
˛i_addr
))->
sö6_p‹t
));

380 
	`wrôe
(1, 
åash
, 
Àn
);

383 i‡((
s
->
ªq
 = 
	`poﬁ_Æloc2
(
poﬁ2_buf„r
)Ë=
NULL
)

384 
out_Áû_ªq
;

386 
s
->
ªq
->
size
 = 
globÆ
.
tu√
.
bufsize
;

387 
	`buf„r_öô
(
s
->
ªq
);

388 
s
->
ªq
->
¥od
 = &s->
si
[0];

389 
s
->
ªq
->
c⁄s
 = &s->
si
[1];

390 
s
->
si
[0].
ib
 = s->si[1].
ob
 = s->
ªq
;

392 
s
->
ªq
->
Êags
 |
BF_READ_ATTACHED
;

394 i‡(
p
->
mode
 =
PR_MODE_HTTP
)

395 
s
->
ªq
->
Êags
 |
BF_READ_DONTWAIT
;

398 
s
->
ªq
->
™Æy£rs
 = 
l
->analysers;

401 i‡(!
s
->
ªq
->
™Æy£rs
) {

402 
	`buf„r_auto_c⁄√˘
(
s
->
ªq
);

403 
	`buf„r_auto_˛o£
(
s
->
ªq
);

406 
s
->
ªq
->
πo
 = s->
„
->
timeout
.
˛õ¡
;

407 
s
->
ªq
->
wto
 = s->
be
->
timeout
.
£rvî
;

408 
s
->
ªq
->
˘o
 = s->
be
->
timeout
.
c⁄√˘
;

410 i‡((
s
->
ªp
 = 
	`poﬁ_Æloc2
(
poﬁ2_buf„r
)Ë=
NULL
)

411 
out_Áû_ªp
;

413 
s
->
ªp
->
size
 = 
globÆ
.
tu√
.
bufsize
;

414 
	`buf„r_öô
(
s
->
ªp
);

415 
s
->
ªp
->
¥od
 = &s->
si
[1];

416 
s
->
ªp
->
c⁄s
 = &s->
si
[0];

417 
s
->
si
[0].
ob
 = s->si[1].
ib
 = s->
ªp
;

418 
s
->
ªp
->
™Æy£rs
 = 0;

420 
s
->
ªp
->
πo
 = s->
be
->
timeout
.
£rvî
;

421 
s
->
ªp
->
wto
 = s->
„
->
timeout
.
˛õ¡
;

422 
s
->
ªp
->
˘o
 = 
TICK_ETERNITY
;

424 
s
->
ªq
->
ªx
 = 
TICK_ETERNITY
;

425 
s
->
ªq
->
wex
 = 
TICK_ETERNITY
;

426 
s
->
ªq
->
™Æy£_exp
 = 
TICK_ETERNITY
;

427 
s
->
ªp
->
ªx
 = 
TICK_ETERNITY
;

428 
s
->
ªp
->
wex
 = 
TICK_ETERNITY
;

429 
s
->
ªp
->
™Æy£_exp
 = 
TICK_ETERNITY
;

430 
t
->
expúe
 = 
TICK_ETERNITY
;

432 
	`fd_ö£π
(
cfd
);

433 
fdèb
[
cfd
].
ow√r
 = &
s
->
si
[0];

434 
fdèb
[
cfd
].
°©e
 = 
FD_STREADY
;

435 
fdèb
[
cfd
].
Êags
 = 
FD_FL_TCP
 | 
FD_FL_TCP_NODELAY
;

436 i‡(
p
->
›ti⁄s
 & 
PR_O_TCP_NOLING
)

437 
fdèb
[
cfd
].
Êags
 |
FD_FL_TCP_NOLING
;

439 
fdèb
[
cfd
].
cb
[
DIR_RD
].
f
 = 
l
->
¥Ÿo
->
ªad
;

440 
fdèb
[
cfd
].
cb
[
DIR_RD
].
b
 = 
s
->
ªq
;

441 
fdèb
[
cfd
].
cb
[
DIR_WR
].
f
 = 
l
->
¥Ÿo
->
wrôe
;

442 
fdèb
[
cfd
].
cb
[
DIR_WR
].
b
 = 
s
->
ªp
;

443 
fdöfo
[
cfd
].
≥îaddr
 = (
sockaddr
 *)&
s
->
˛i_addr
;

444 
fdöfo
[
cfd
].
≥îÀn
 = (
s
->
˛i_addr
);

446 i‡((
p
->
mode
 =
PR_MODE_HTTP
 && (
s
->
Êags
 & 
SN_MONITOR
)) ||

447 (
p
->
mode
 =
PR_MODE_HEALTH
 && (p->
›ti⁄s
 & 
PR_O_HTTP_CHK
))) {

452 
chunk
 
msg
;

453 
	`chunk_öô°r
(&
msg
, "HTTP/1.0 200 OK\r\n\r\n");

454 
	`°ªam_öt_ªä˛o£
(&
s
->
si
[0], &
msg
);

455 
s
->
ªq
->
™Æy£rs
 = 0;

456 
t
->
expúe
 = 
s
->
ªp
->
wex
;

458 i‡(
p
->
mode
 =
PR_MODE_HEALTH
) {

459 
chunk
 
msg
;

460 
	`chunk_öô°r
(&
msg
, "OK\n");

461 
	`°ªam_öt_ªä˛o£
(&
s
->
si
[0], &
msg
);

462 
s
->
ªq
->
™Æy£rs
 = 0;

463 
t
->
expúe
 = 
s
->
ªp
->
wex
;

466 
	`EV_FD_SET
(
cfd
, 
DIR_RD
);

473 
	`èsk_wakeup
(
t
, 
TASK_WOKEN_INIT
);

475 
l
->
nbc⁄n
++;

476 i‡(
l
->
nbc⁄n
 >l->
maxc⁄n
) {

477 
	`EV_FD_CLR
(
l
->
fd
, 
DIR_RD
);

478 
l
->
°©e
 = 
LI_FULL
;

481 
p
->
„c⁄n
++;

482 i‡(
p
->
„c⁄n
 >Ö->
cou¡îs
.
„c⁄n_max
)

483 
p
->
cou¡îs
.
„c⁄n_max
 =Ö->
„c⁄n
;

485 i‡(
l
->
cou¡îs
) {

486 i‡(
l
->
nbc⁄n
 >Ü->
cou¡îs
->
c⁄n_max
)

487 
l
->
cou¡îs
->
c⁄n_max
 =Ü->
nbc⁄n
;

490 
a˘c⁄n
++;

491 
tŸÆc⁄n
++;

498 
out_Áû_ªp
:

499 
	`poﬁ_‰ì2
(
poﬁ2_buf„r
, 
s
->
ªq
);

500 
out_Áû_ªq
:

501 
	`poﬁ_‰ì2
(
p
->
hdr_idx_poﬁ
, 
txn
->
hdr_idx
.
v
);

502 
out_Áû_idx
:

503 
	`poﬁ_‰ì2
(
p
->
r•_ˇp_poﬁ
, 
txn
->
r•
.
ˇp
);

504 
out_Áû_r•ˇp
:

505 
	`poﬁ_‰ì2
(
p
->
ªq_ˇp_poﬁ
, 
txn
->
ªq
.
ˇp
);

506 
out_Áû_ªqˇp
:

507 
out_‰ì_èsk
:

508 
	`èsk_‰ì
(
t
);

509 
out_‰ì_£ssi⁄
:

510 
	`LIST_DEL
(&
s
->
li°
);

511 
	`poﬁ_‰ì2
(
poﬁ2_£ssi⁄
, 
s
);

512 
out_˛o£
:

513 
	`˛o£
(
cfd
);

515 
	}
}

525 
	$a˛_„tch_§c
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

526 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

528 
ã°
->
i
 = 
l4
->
˛i_addr
.
ss_Ámûy
;

529 i‡(
ã°
->
i
 =
AF_INET
)

530 
ã°
->
±r
 = (*)&((
sockaddr_ö
 *)&
l4
->
˛i_addr
)->
sö_addr
;

532 
ã°
->
±r
 = (*)&((
sockaddr_ö6
 *)(&
l4
->
˛i_addr
))->
sö6_addr
;

533 
ã°
->
Êags
 = 
ACL_TEST_F_READ_ONLY
;

535 
	}
}

539 
	$∑âîn_„tch_§c
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

540 c⁄° *
¨g
, 
¨g_Àn
, 
∑âîn_d©a
 *
d©a
)

542 
d©a
->
ù
.
s_addr
 = ((
sockaddr_ö
 *)&
l4
->
˛i_addr
)->
sö_addr
.s_addr;

544 
	}
}

549 
	$a˛_„tch_•‹t
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

550 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

552 i‡(
l4
->
˛i_addr
.
ss_Ámûy
 =
AF_INET
)

553 
ã°
->
i
 = 
	`¡ohs
(((
sockaddr_ö
 *)&
l4
->
˛i_addr
)->
sö_p‹t
);

555 
ã°
->
i
 = 
	`¡ohs
(((
sockaddr_ö6
 *)(&
l4
->
˛i_addr
))->
sö6_p‹t
);

556 
ã°
->
Êags
 = 0;

558 
	}
}

563 
	$a˛_„tch_d°
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

564 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

566 i‡(!(
l4
->
Êags
 & 
SN_FRT_ADDR_SET
))

567 
	`gë_‰t_addr
(
l4
);

569 
ã°
->
i
 = 
l4
->
‰t_addr
.
ss_Ámûy
;

570 i‡(
ã°
->
i
 =
AF_INET
)

571 
ã°
->
±r
 = (*)&((
sockaddr_ö
 *)&
l4
->
‰t_addr
)->
sö_addr
;

573 
ã°
->
±r
 = (*)&((
sockaddr_ö6
 *)(&
l4
->
‰t_addr
))->
sö6_addr
;

574 
ã°
->
Êags
 = 
ACL_TEST_F_READ_ONLY
;

576 
	}
}

581 
	$∑âîn_„tch_d°
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

582 c⁄° *
¨g
, 
¨g_Àn
, 
∑âîn_d©a
 *
d©a
)

584 i‡(!(
l4
->
Êags
 & 
SN_FRT_ADDR_SET
))

585 
	`gë_‰t_addr
(
l4
);

587 
d©a
->
ù
.
s_addr
 = ((
sockaddr_ö
 *)&
l4
->
‰t_addr
)->
sö_addr
.s_addr;

589 
	}
}

593 
	$a˛_„tch_dp‹t
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

594 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

596 i‡(!(
l4
->
Êags
 & 
SN_FRT_ADDR_SET
))

597 
	`gë_‰t_addr
(
l4
);

599 i‡(
l4
->
‰t_addr
.
ss_Ámûy
 =
AF_INET
)

600 
ã°
->
i
 = 
	`¡ohs
(((
sockaddr_ö
 *)&
l4
->
‰t_addr
)->
sö_p‹t
);

602 
ã°
->
i
 = 
	`¡ohs
(((
sockaddr_ö6
 *)(&
l4
->
‰t_addr
))->
sö6_p‹t
);

603 
ã°
->
Êags
 = 0;

605 
	}
}

608 
	$∑âîn_„tch_dp‹t
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

609 c⁄° *
¨g
, 
¨g_Àn
, 
∑âîn_d©a
 *
d©a
)

612 i‡(!(
l4
->
Êags
 & 
SN_FRT_ADDR_SET
))

613 
	`gë_‰t_addr
(
l4
);

615 
d©a
->
öãgî
 = 
	`¡ohs
(((
sockaddr_ö
 *)&
l4
->
‰t_addr
)->
sö_p‹t
);

617 
	}
}

621 
	$a˛_„tch_dc⁄n
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

622 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

624 
ã°
->
i
 = 
l4
->
li°íî
->
nbc⁄n
;

626 
	}
}

630 
	$a˛_„tch_„_id
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

631 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
) {

633 
ã°
->
Êags
 = 
ACL_TEST_F_READ_ONLY
;

635 
ã°
->
i
 = 
l4
->
„
->
uuid
;

638 
	}
}

642 
	$a˛_„tch_so_id
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

643 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
) {

645 
ã°
->
Êags
 = 
ACL_TEST_F_READ_ONLY
;

647 
ã°
->
i
 = 
l4
->
li°íî
->
luid
;

650 
	}
}

654 
a˛_kw_li°
 
	ga˛_kws
 = {{ },{

655 { "§c_p‹t", 
a˛_∑r£_öt
, 
a˛_„tch_•‹t
, 
a˛_m©ch_öt
, 
ACL_USE_TCP_PERMANENT
 },

656 { "§c", 
a˛_∑r£_ù
, 
a˛_„tch_§c
, 
a˛_m©ch_ù
, 
ACL_USE_TCP4_PERMANENT
|
ACL_MAY_LOOKUP
 },

657 { "d°", 
a˛_∑r£_ù
, 
a˛_„tch_d°
, 
a˛_m©ch_ù
, 
ACL_USE_TCP4_PERMANENT
|
ACL_MAY_LOOKUP
 },

658 { "d°_p‹t", 
a˛_∑r£_öt
, 
a˛_„tch_dp‹t
, 
a˛_m©ch_öt
, 
ACL_USE_TCP_PERMANENT
 },

660 { "§c_limô", 
a˛_∑r£_öt
, 
a˛_„tch_sc⁄n
, 
a˛_m©ch_öt
 },

662 { "d°_c⁄n", 
a˛_∑r£_öt
, 
a˛_„tch_dc⁄n
, 
a˛_m©ch_öt
, 
ACL_USE_NOTHING
 },

663 { "„_id", 
a˛_∑r£_öt
, 
a˛_„tch_„_id
, 
a˛_m©ch_öt
, 
ACL_USE_NOTHING
 },

664 { "so_id", 
a˛_∑r£_öt
, 
a˛_„tch_so_id
, 
a˛_m©ch_öt
, 
ACL_USE_NOTHING
 },

665 { 
NULL
, NULL, NULL, NULL },

670 
∑âîn_„tch_kw_li°
 
	g∑âîn_„tch_keyw‹ds
 = {{ },{

671 { "§c", 
∑âîn_„tch_§c
, 
PATTERN_TYPE_IP
, 
PATTERN_FETCH_REQ
 },

672 { "d°", 
∑âîn_„tch_d°
, 
PATTERN_TYPE_IP
, 
PATTERN_FETCH_REQ
 },

673 { "d°_p‹t", 
∑âîn_„tch_dp‹t
, 
PATTERN_TYPE_INTEGER
, 
PATTERN_FETCH_REQ
 },

674 { 
NULL
, NULL, 0, 0 },

678 
__©åibuã__
((
c⁄°ru˘‹
))

679 
	$__˛õ¡_öô
()

681 
	`a˛_ªgi°î_keyw‹ds
(&
a˛_kws
);

682 
	`∑âîn_ªgi°î_„tches
(&
∑âîn_„tch_keyw‹ds
);

683 
	}
}

	@src/cttproxy.c

14 
	~<î∫o.h
>

15 
	~<f˙é.h
>

16 
	~<°dio.h
>

17 
	~<°dlib.h
>

18 
	~<°rög.h
>

20 
	~<sys/sockë.h
>

21 
	~<sys/°©.h
>

22 
	~<sys/ty≥s.h
>

24 
	~<comm⁄/com∑t.h
>

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<comm⁄/time.h
>

28 
	~<imp‹t/ù_çroxy.h
>

34 
	$check_˘çroxy_vîsi⁄
() {

35 
ö_çroxy
 
ôp1
;

36 
fd
, 
ªt
;

38 
	`mem£t
(&
ôp1
, 0, (itp1));

40 
fd
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

41 i‡(
fd
 == -1)

44 
ôp1
.
›
 = 
TPROXY_VERSION
;

45 
ôp1
.
v
.
vîsi⁄
 = 0x02000000;

47 
ªt
 = 0;

48 i‡(
	`£tsock›t
(
fd
, 
SOL_IP
, 
IP_TPROXY
, &
ôp1
, (itp1)) == -1) {

49 i‡(
î∫o
 =-
EINVAL
)

50 
ªt
 = -1;

52 
ªt
 = -2;

54 
	`˛o£
(
fd
);

55  
ªt
;

56 
	}
}

	@src/dumpstats.c

14 
	~<˘y≥.h
>

15 
	~<î∫o.h
>

16 
	~<f˙é.h
>

17 
	~<°dio.h
>

18 
	~<°dlib.h
>

19 
	~<°rög.h
>

20 
	~<pwd.h
>

21 
	~<gΩ.h
>

23 
	~<sys/sockë.h
>

24 
	~<sys/°©.h
>

25 
	~<sys/ty≥s.h
>

27 
	~<comm⁄/cfg∑r£.h
>

28 
	~<comm⁄/com∑t.h
>

29 
	~<comm⁄/c⁄fig.h
>

30 
	~<comm⁄/debug.h
>

31 
	~<comm⁄/mem‹y.h
>

32 
	~<comm⁄/möi-˛i°.h
>

33 
	~<comm⁄/°™d¨d.h
>

34 
	~<comm⁄/ticks.h
>

35 
	~<comm⁄/time.h
>

36 
	~<comm⁄/uri_auth.h
>

37 
	~<comm⁄/vîsi⁄.h
>

39 
	~<ty≥s/globÆ.h
>

41 
	~<¥Ÿo/backíd.h
>

42 
	~<¥Ÿo/buf„rs.h
>

43 
	~<¥Ÿo/checks.h
>

44 
	~<¥Ÿo/dump°©s.h
>

45 
	~<¥Ÿo/fd.h
>

46 
	~<¥Ÿo/‰eq_˘r.h
>

47 
	~<¥Ÿo/pùe.h
>

48 
	~<¥Ÿo/¥Ÿo_ux°.h
>

49 
	~<¥Ÿo/¥oxy.h
>

50 
	~<¥Ÿo/£ssi⁄.h
>

51 
	~<¥Ÿo/£rvî.h
>

52 
	~<¥Ÿo/°ªam_öãrÁ˚.h
>

53 
	~<¥Ÿo/èsk.h
>

55 c⁄° 
	g°©s_sock_ußge_msg
[] =

72 c⁄° 
	g°©s_≥rmissi⁄_díõd_msg
[] =

79 
¥oxy
 *
	$Æloc_°©s_„
(c⁄° *
«me
)

81 
¥oxy
 *
„
;

83 
„
 = (
¥oxy
 *)
	`ˇŒoc
(1, (proxy));

84 i‡(!
„
)

85  
NULL
;

87 
	`LIST_INIT
(&
„
->
≥ndc⁄ns
);

88 
	`LIST_INIT
(&
„
->
a˛
);

89 
	`LIST_INIT
(&
„
->
block_c⁄d
);

90 
	`LIST_INIT
(&
„
->
ªdúe˘_ruÀs
);

91 
	`LIST_INIT
(&
„
->
m⁄_Áû_c⁄d
);

92 
	`LIST_INIT
(&
„
->
swôchög_ruÀs
);

93 
	`LIST_INIT
(&
„
->
t˝_ªq
.
ö•e˘_ruÀs
);

98 
	`¥oxy_ª£t_timeouts
(
„
);

100 
„
->
œ°_ch™ge
 = 
now
.
tv_£c
;

101 
„
->
id
 = 
	`°rdup
("GLOBAL");

102 
„
->
ˇp
 = 
PR_CAP_FE
;

103  
„
;

104 
	}
}

112 
	$°©s_∑r£_globÆ
(**
¨gs
, 
£˘i⁄_ty≥
, 
¥oxy
 *
cuΩx
,

113 
¥oxy
 *
deÂx
, *
îr
, 
îæí
)

115 
¨gs
++;

116 i‡(!
	`°rcmp
(
¨gs
[0], "socket")) {

117 
sockaddr_un
 
su
;

118 
cur_¨g
;

120 i‡(*
¨gs
[1] == 0) {

121 
	`¢¥ötf
(
îr
, 
îæí
, "'stats socket' in global sectionÉxpectsáÖathÅoá UNIX socket");

125 i‡(
globÆ
.
°©s_sock
.
°©e
 !
LI_NEW
) {

126 
	`¢¥ötf
(
îr
, 
îæí
, "'stats socket'álready specified in global section");

130 
su
.
sun_Ámûy
 = 
AF_UNIX
;

131 
	`°∫˝y
(
su
.
sun_∑th
, 
¨gs
[1], (su.sun_path));

132 
su
.
sun_∑th
[(su.sun_path) - 1] = 0;

133 
	`mem˝y
(&
globÆ
.
°©s_sock
.
addr
, &
su
, (su));

135 i‡(!
globÆ
.
°©s_„
) {

136 i‡((
globÆ
.
°©s_„
 = 
	`Æloc_°©s_„
("GLOBAL")Ë=
NULL
) {

137 
	`¢¥ötf
(
îr
, 
îæí
, "out of memory");

140 
globÆ
.
°©s_„
->
timeout
.
˛õ¡
 = 
	`MS_TO_TICKS
(10000);

143 
globÆ
.
°©s_sock
.
°©e
 = 
LI_INIT
;

144 
globÆ
.
°©s_sock
.
›ti⁄s
 = 
LI_O_NONE
;

145 
globÆ
.
°©s_sock
.
ac˚±
 = 
ux°_evít_ac˚±
;

146 
globÆ
.
°©s_sock
.
h™dÀr
 = 
¥o˚ss_£ssi⁄
;

147 
globÆ
.
°©s_sock
.
™Æy£rs
 = 0;

148 
globÆ
.
°©s_sock
.
ni˚
 = -64;

149 
globÆ
.
°©s_sock
.
¥iv©e
 = globÆ.
°©s_„
;

150 
globÆ
.
°©s_sock
.
≥rm
.
ux
.
Àvñ
 = 
ACCESS_LVL_OPER
;

151 
globÆ
.
°©s_sock
.
timeout
 = &globÆ.
°©s_„
->timeout.
˛õ¡
;

153 
globÆ
.
°©s_sock
.
√xt
 = globÆ.
°©s_„
->
li°í
;

154 
globÆ
.
°©s_„
->
li°í
 = &globÆ.
°©s_sock
;

156 
cur_¨g
 = 2;

157 *
¨gs
[
cur_¨g
]) {

158 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "uid")) {

159 
globÆ
.
°©s_sock
.
≥rm
.
ux
.
uid
 = 
	`©ﬁ
(
¨gs
[
cur_¨g
 + 1]);

160 
cur_¨g
 += 2;

162 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "gid")) {

163 
globÆ
.
°©s_sock
.
≥rm
.
ux
.
gid
 = 
	`©ﬁ
(
¨gs
[
cur_¨g
 + 1]);

164 
cur_¨g
 += 2;

166 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "mode")) {

167 
globÆ
.
°©s_sock
.
≥rm
.
ux
.
mode
 = 
	`°πﬁ
(
¨gs
[
cur_¨g
 + 1], 
NULL
, 8);

168 
cur_¨g
 += 2;

170 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "user")) {

171 
∑sswd
 *
u£r
;

172 
u£r
 = 
	`gëpw«m
(
¨gs
[
cur_¨g
 + 1]);

173 i‡(!
u£r
) {

174 
	`¢¥ötf
(
îr
, 
îæí
, "unknown user '%s' in 'global' section ('stats user')",

175 
¨gs
[
cur_¨g
 + 1]);

178 
globÆ
.
°©s_sock
.
≥rm
.
ux
.
uid
 = 
u£r
->
pw_uid
;

179 
cur_¨g
 += 2;

181 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "group")) {

182 
group
 *group;

183 
group
 = 
	`gëg∫am
(
¨gs
[
cur_¨g
 + 1]);

184 i‡(!
group
) {

185 
	`¢¥ötf
(
îr
, 
îæí
, "unknown group '%s' in 'global' section ('stats group')",

186 
¨gs
[
cur_¨g
 + 1]);

189 
globÆ
.
°©s_sock
.
≥rm
.
ux
.
gid
 = 
group
->
gr_gid
;

190 
cur_¨g
 += 2;

192 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
], "level")) {

193 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
+1], "user"))

194 
globÆ
.
°©s_sock
.
≥rm
.
ux
.
Àvñ
 = 
ACCESS_LVL_USER
;

195 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
+1], "operator"))

196 
globÆ
.
°©s_sock
.
≥rm
.
ux
.
Àvñ
 = 
ACCESS_LVL_OPER
;

197 i‡(!
	`°rcmp
(
¨gs
[
cur_¨g
+1], "admin"))

198 
globÆ
.
°©s_sock
.
≥rm
.
ux
.
Àvñ
 = 
ACCESS_LVL_ADMIN
;

200 
	`¢¥ötf
(
îr
, 
îæí
, "'stats socketÜevel' only supports 'user', 'operator',ánd 'admin'");

203 
cur_¨g
 += 2;

206 
	`¢¥ötf
(
îr
, 
îæí
, "'stats socket' only supports 'user', 'uid', 'group', 'gid', 'level',ánd 'mode'");

211 
	`ux°_add_li°íî
(&
globÆ
.
°©s_sock
);

212 
globÆ
.
maxsock
++;

214 i‡(!
	`°rcmp
(
¨gs
[0], "timeout")) {

215 
timeout
;

216 c⁄° *
ªs
 = 
	`∑r£_time_îr
(
¨gs
[1], &
timeout
, 
TIME_UNIT_MS
);

218 i‡(
ªs
) {

219 
	`¢¥ötf
(
îr
, 
îæí
, "u√x≥˘ed ch¨a˘î '%c' i¿'°©†timeout' i¿'globÆ' se˘i⁄", *
ªs
);

223 i‡(!
timeout
) {

224 
	`¢¥ötf
(
îr
, 
îæí
, "aÖositive value isÉxpected for 'statsÅimeout' in 'global section'");

227 i‡(!
globÆ
.
°©s_„
) {

228 i‡((
globÆ
.
°©s_„
 = 
	`Æloc_°©s_„
("GLOBAL")Ë=
NULL
) {

229 
	`¢¥ötf
(
îr
, 
îæí
, "out of memory");

233 
globÆ
.
°©s_„
->
timeout
.
˛õ¡
 = 
	`MS_TO_TICKS
(timeout);

235 i‡(!
	`°rcmp
(
¨gs
[0], "maxconn")) {

236 
maxc⁄n
 = 
	`©ﬁ
(
¨gs
[1]);

238 i‡(
maxc⁄n
 <= 0) {

239 
	`¢¥ötf
(
îr
, 
îæí
, "aÖositive value isÉxpected for 'stats maxconn' in 'global section'");

242 
globÆ
.
maxsock
 -globÆ.
°©s_sock
.
maxc⁄n
;

243 
globÆ
.
°©s_sock
.
maxc⁄n
 = maxconn;

244 
globÆ
.
maxsock
 +globÆ.
°©s_sock
.
maxc⁄n
;

247 
	`¢¥ötf
(
îr
, 
îæí
, "'stats' only supports 'socket', 'maxconn'ánd 'timeout' in 'global' section");

251 
	}
}

253 
	$¥öt_csv_hódî
(
chunk
 *
msg
)

255  
	`chunk_¥ötf
(
msg
,

272 
	}
}

280 
	$°©s_sock_∑r£_ªque°
(
°ªam_öãrÁ˚
 *
si
, *
löe
)

282 
£ssi⁄
 *
s
 = 
si
->
¥iv©e
;

283 *
¨gs
[
MAX_STATS_ARGS
 + 1];

284 
¨g
;

286 
	`is•a˚
(()*
löe
))

287 
löe
++;

289 
¨g
 = 0;

290 
¨gs
[
¨g
] = 
löe
;

292 *
löe
 && 
¨g
 < 
MAX_STATS_ARGS
) {

293 i‡(
	`is•a˚
(()*
löe
)) {

294 *
löe
++ = '\0';

296 
	`is•a˚
(()*
löe
))

297 
löe
++;

299 
¨gs
[++
¨g
] = 
löe
;

303 
löe
++;

306 ++
¨g
 <
MAX_STATS_ARGS
)

307 
¨gs
[
¨g
] = 
löe
;

309 
s
->
d©a_˘x
.
°©s
.
Êags
 = 0;

310 i‡(
	`°rcmp
(
¨gs
[0], "show") == 0) {

311 i‡(
	`°rcmp
(
¨gs
[1], "stat") == 0) {

312 i‡(*
¨gs
[2] && *args[3] && *args[4]) {

313 
s
->
d©a_˘x
.
°©s
.
Êags
 |
STAT_BOUND
;

314 
s
->
d©a_˘x
.
°©s
.
iid
 = 
	`©oi
(
¨gs
[2]);

315 
s
->
d©a_˘x
.
°©s
.
ty≥
 = 
	`©oi
(
¨gs
[3]);

316 
s
->
d©a_˘x
.
°©s
.
sid
 = 
	`©oi
(
¨gs
[4]);

319 
s
->
d©a_˘x
.
°©s
.
Êags
 |
STAT_SHOW_STAT
;

320 
s
->
d©a_˘x
.
°©s
.
Êags
 |
STAT_FMT_CSV
;

321 
s
->
d©a_°©e
 = 
DATA_ST_INIT
;

322 
si
->
°0
 = 
STAT_CLI_O_INFO
;

324 i‡(
	`°rcmp
(
¨gs
[1], "info") == 0) {

325 
s
->
d©a_˘x
.
°©s
.
Êags
 |
STAT_SHOW_INFO
;

326 
s
->
d©a_˘x
.
°©s
.
Êags
 |
STAT_FMT_CSV
;

327 
s
->
d©a_°©e
 = 
DATA_ST_INIT
;

328 
si
->
°0
 = 
STAT_CLI_O_INFO
;

330 i‡(
	`°rcmp
(
¨gs
[1], "sess") == 0) {

331 
s
->
d©a_°©e
 = 
DATA_ST_INIT
;

332 i‡(
s
->
li°íî
->
≥rm
.
ux
.
Àvñ
 < 
ACCESS_LVL_OPER
) {

333 
s
->
d©a_˘x
.
˛i
.
msg
 = 
°©s_≥rmissi⁄_díõd_msg
;

334 
si
->
°0
 = 
STAT_CLI_PRINT
;

337 i‡(*
¨gs
[2])

338 
s
->
d©a_˘x
.
£ss
.
èrgë
 = (*)
	`°πoul
(
¨gs
[2], 
NULL
, 0);

340 
s
->
d©a_˘x
.
£ss
.
èrgë
 = 
NULL
;

341 
s
->
d©a_˘x
.
£ss
.
£˘i⁄
 = 0;

342 
s
->
d©a_˘x
.
£ss
.
pos
 = 0;

343 
si
->
°0
 = 
STAT_CLI_O_SESS
;

345 i‡(
	`°rcmp
(
¨gs
[1], "errors") == 0) {

346 i‡(
s
->
li°íî
->
≥rm
.
ux
.
Àvñ
 < 
ACCESS_LVL_OPER
) {

347 
s
->
d©a_˘x
.
˛i
.
msg
 = 
°©s_≥rmissi⁄_díõd_msg
;

348 
si
->
°0
 = 
STAT_CLI_PRINT
;

351 i‡(*
¨gs
[2])

352 
s
->
d©a_˘x
.
îr‹s
.
iid
 = 
	`©oi
(
¨gs
[2]);

354 
s
->
d©a_˘x
.
îr‹s
.
iid
 = -1;

355 
s
->
d©a_˘x
.
îr‹s
.
px
 = 
NULL
;

356 
s
->
d©a_°©e
 = 
DATA_ST_INIT
;

357 
si
->
°0
 = 
STAT_CLI_O_ERR
;

363 i‡(
	`°rcmp
(
¨gs
[0], "clear") == 0) {

364 i‡(
	`°rcmp
(
¨gs
[1], "counters") == 0) {

365 
¥oxy
 *
px
;

366 
£rvî
 *
sv
;

367 
li°íî
 *
li
;

368 
˛øŒ
 = 0;

370 i‡(
	`°rcmp
(
¨gs
[2], "all") == 0)

371 
˛øŒ
 = 1;

374 i‡(
s
->
li°íî
->
≥rm
.
ux
.
Àvñ
 < 
ACCESS_LVL_OPER
 ||

375 (
˛øŒ
 && 
s
->
li°íî
->
≥rm
.
ux
.
Àvñ
 < 
ACCESS_LVL_ADMIN
)) {

376 
s
->
d©a_˘x
.
˛i
.
msg
 = 
°©s_≥rmissi⁄_díõd_msg
;

377 
si
->
°0
 = 
STAT_CLI_PRINT
;

381 
px
 = 
¥oxy
;Öx;Öx =Öx->
√xt
) {

382 i‡(
˛øŒ
)

383 
	`mem£t
(&
px
->
cou¡îs
, 0, (px->counters));

385 
px
->
cou¡îs
.
„c⁄n_max
 = 0;

386 
px
->
cou¡îs
.
bec⁄n_max
 = 0;

387 
px
->
cou¡îs
.
„_Ωs_max
 = 0;

388 
px
->
cou¡îs
.
„_•s_max
 = 0;

389 
px
->
cou¡îs
.
be_•s_max
 = 0;

390 
px
->
cou¡îs
.
nb≥nd_max
 = 0;

393 
sv
 = 
px
->
§v
; sv; sv = sv->
√xt
)

394 i‡(
˛øŒ
)

395 
	`mem£t
(&
sv
->
cou¡îs
, 0, (sv->counters));

397 
sv
->
cou¡îs
.
cur_£ss_max
 = 0;

398 
sv
->
cou¡îs
.
nb≥nd_max
 = 0;

399 
sv
->
cou¡îs
.
•s_max
 = 0;

402 
li
 = 
px
->
li°í
;Üi;Üòli->
√xt
)

403 i‡(
li
->
cou¡îs
) {

404 i‡(
˛øŒ
)

405 
	`mem£t
(
li
->
cou¡îs
, 0, (*li->counters));

407 
li
->
cou¡îs
->
c⁄n_max
 = 0;

417 i‡(
	`°rcmp
(
¨gs
[0], "get") == 0) {

418 i‡(
	`°rcmp
(
¨gs
[1], "weight") == 0) {

419 
¥oxy
 *
px
;

420 
£rvî
 *
sv
;

423 
löe
 = 
¨gs
[2]; *line;Üine++)

424 i‡(*
löe
 == '/') {

425 *
löe
++ = '\0';

429 i‡(!*
löe
) {

430 
s
->
d©a_˘x
.
˛i
.
msg
 = "Require 'backend/server'.\n";

431 
si
->
°0
 = 
STAT_CLI_PRINT
;

435 i‡(!
	`gë_backíd_£rvî
(
¨gs
[2], 
löe
, &
px
, &
sv
)) {

436 
s
->
d©a_˘x
.
˛i
.
msg
 = 
px
 ? "No such server.\n" : "No such backend.\n";

437 
si
->
°0
 = 
STAT_CLI_PRINT
;

442 
	`¢¥ötf
(
åash
, —øsh), "%d (öôü»%d)\n", 
sv
->
uweight
, sv->
iweight
);

443 
	`buf„r_„ed
(
si
->
ib
, 
åash
);

450 i‡(
	`°rcmp
(
¨gs
[0], "set") == 0) {

451 i‡(
	`°rcmp
(
¨gs
[1], "weight") == 0) {

452 
¥oxy
 *
px
;

453 
£rvî
 *
sv
;

454 
w
;

456 i‡(
s
->
li°íî
->
≥rm
.
ux
.
Àvñ
 < 
ACCESS_LVL_ADMIN
) {

457 
s
->
d©a_˘x
.
˛i
.
msg
 = 
°©s_≥rmissi⁄_díõd_msg
;

458 
si
->
°0
 = 
STAT_CLI_PRINT
;

463 
löe
 = 
¨gs
[2]; *line;Üine++)

464 i‡(*
löe
 == '/') {

465 *
löe
++ = '\0';

469 i‡(!*
löe
 || !*
¨gs
[3]) {

470 
s
->
d©a_˘x
.
˛i
.
msg
 = "Require 'backend/server'ánd 'weight' or 'weight%'.\n";

471 
si
->
°0
 = 
STAT_CLI_PRINT
;

475 i‡(!
	`gë_backíd_£rvî
(
¨gs
[2], 
löe
, &
px
, &
sv
)) {

476 
s
->
d©a_˘x
.
˛i
.
msg
 = 
px
 ? "No such server.\n" : "No such backend.\n";

477 
si
->
°0
 = 
STAT_CLI_PRINT
;

484 
w
 = 
	`©oi
(
¨gs
[3]);

485 i‡(
	`°rchr
(
¨gs
[3], '%'Ë!
NULL
) {

486 i‡(
w
 < 0 || w > 100) {

487 
s
->
d©a_˘x
.
˛i
.
msg
 = "Relative weight can only be set between 0ánd 100% inclusive.\n";

488 
si
->
°0
 = 
STAT_CLI_PRINT
;

491 
w
 = 
sv
->
iweight
 * w / 100;

494 i‡(
w
 < 0 || w > 256) {

495 
s
->
d©a_˘x
.
˛i
.
msg
 = "Absolute weight can only be between 0ánd 256 inclusive.\n";

496 
si
->
°0
 = 
STAT_CLI_PRINT
;

501 i‡(
w
 && w !
sv
->
iweight
 && !(
px
->
lb¥m
.
Ægo
 & 
BE_LB_PROP_DYN
)) {

502 
s
->
d©a_˘x
.
˛i
.
msg
 = "Backend is usingá static LBálgorithmánd onlyáccepts weights '0%'ánd '100%'.\n";

503 
si
->
°0
 = 
STAT_CLI_PRINT
;

507 
sv
->
uweight
 = 
w
;

509 i‡(
px
->
lb¥m
.
Ægo
 & 
BE_LB_PROP_DYN
) {

511 i‡((
sv
->
°©e
 & 
SRV_WARMINGUP
Ë&& (
px
->
lb¥m
.
Ægo
 & 
BE_LB_PROP_DYN
))

512 
sv
->
eweight
 = (
BE_WEIGHT_SCALE
 * (
now
.
tv_£c
 - sv->
œ°_ch™ge
Ë+ sv->
¶ow°¨t
 - 1) / sv->slowstart;

514 
sv
->
eweight
 = 
BE_WEIGHT_SCALE
;

515 
sv
->
eweight
 *sv->
uweight
;

517 
sv
->
eweight
 = sv->
uweight
;

521 i‡(
px
->
lb¥m
.
upd©e_£rvî_eweight
)

522 
px
->
lb¥m
.
	`upd©e_£rvî_eweight
(
sv
);

523 i‡(
sv
->
eweight
)

524 
px
->
lb¥m
.
	`£t_£rvî_°©us_up
(
sv
);

526 
px
->
lb¥m
.
	`£t_£rvî_°©us_down
(
sv
);

530 i‡(
	`°rcmp
(
¨gs
[1], "timeout") == 0) {

531 i‡(
	`°rcmp
(
¨gs
[2], "cli") == 0) {

532 
timeout
;

533 c⁄° *
ªs
;

535 i‡(!*
¨gs
[3]) {

536 
s
->
d©a_˘x
.
˛i
.
msg
 = "Expectsán integer value.\n";

537 
si
->
°0
 = 
STAT_CLI_PRINT
;

541 
ªs
 = 
	`∑r£_time_îr
(
¨gs
[3], &
timeout
, 
TIME_UNIT_S
);

542 i‡(
ªs
 || 
timeout
 < 1) {

543 
s
->
d©a_˘x
.
˛i
.
msg
 = "InvalidÅimeout value.\n";

544 
si
->
°0
 = 
STAT_CLI_PRINT
;

548 
s
->
ªq
->
πo
 = s->
ªp
->
wto
 = 1 + 
	`MS_TO_TICKS
(
timeout
*1000);

552 
s
->
d©a_˘x
.
˛i
.
msg
 = "'setÅimeout' only supports 'cli'.\n";

553 
si
->
°0
 = 
STAT_CLI_PRINT
;

561 i‡(
	`°rcmp
(
¨gs
[0], "enable") == 0) {

562 i‡(
	`°rcmp
(
¨gs
[1], "server") == 0) {

563 
¥oxy
 *
px
;

564 
£rvî
 *
sv
;

566 i‡(
s
->
li°íî
->
≥rm
.
ux
.
Àvñ
 < 
ACCESS_LVL_ADMIN
) {

567 
s
->
d©a_˘x
.
˛i
.
msg
 = 
°©s_≥rmissi⁄_díõd_msg
;

568 
si
->
°0
 = 
STAT_CLI_PRINT
;

573 
löe
 = 
¨gs
[2]; *line;Üine++)

574 i‡(*
löe
 == '/') {

575 *
löe
++ = '\0';

579 i‡(!*
löe
 || !*
¨gs
[2]) {

580 
s
->
d©a_˘x
.
˛i
.
msg
 = "Require 'backend/server'.\n";

581 
si
->
°0
 = 
STAT_CLI_PRINT
;

585 i‡(!
	`gë_backíd_£rvî
(
¨gs
[2], 
löe
, &
px
, &
sv
)) {

586 
s
->
d©a_˘x
.
˛i
.
msg
 = 
px
 ? "No such server.\n" : "No such backend.\n";

587 
si
->
°0
 = 
STAT_CLI_PRINT
;

591 i‡(
sv
->
°©e
 & 
SRV_MAINTAIN
) {

593 i‡(
sv
->
åacked
) {

597 i‡(
sv
->
åacked
->
°©e
 & 
SRV_RUNNING
) {

598 
	`£t_£rvî_up
(
sv
);

599 
sv
->
hó…h
 = sv->
ri£
;

601 
sv
->
°©e
 &~
SRV_MAINTAIN
;

602 
	`£t_£rvî_down
(
sv
);

605 
	`£t_£rvî_up
(
sv
);

606 
sv
->
hó…h
 = sv->
ri£
;

616 i‡(
	`°rcmp
(
¨gs
[0], "disable") == 0) {

617 i‡(
	`°rcmp
(
¨gs
[1], "server") == 0) {

618 
¥oxy
 *
px
;

619 
£rvî
 *
sv
;

621 i‡(
s
->
li°íî
->
≥rm
.
ux
.
Àvñ
 < 
ACCESS_LVL_ADMIN
) {

622 
s
->
d©a_˘x
.
˛i
.
msg
 = 
°©s_≥rmissi⁄_díõd_msg
;

623 
si
->
°0
 = 
STAT_CLI_PRINT
;

628 
löe
 = 
¨gs
[2]; *line;Üine++)

629 i‡(*
löe
 == '/') {

630 *
löe
++ = '\0';

634 i‡(!*
löe
 || !*
¨gs
[2]) {

635 
s
->
d©a_˘x
.
˛i
.
msg
 = "Require 'backend/server'.\n";

636 
si
->
°0
 = 
STAT_CLI_PRINT
;

640 i‡(!
	`gë_backíd_£rvî
(
¨gs
[2], 
löe
, &
px
, &
sv
)) {

641 
s
->
d©a_˘x
.
˛i
.
msg
 = 
px
 ? "No such server.\n" : "No such backend.\n";

642 
si
->
°0
 = 
STAT_CLI_PRINT
;

646 i‡(! (
sv
->
°©e
 & 
SRV_MAINTAIN
)) {

648 
sv
->
°©e
 |
SRV_MAINTAIN
;

649 
	`£t_£rvî_down
(
sv
);

662 
	}
}

672 
	$°©s_io_h™dÀr
(
°ªam_öãrÁ˚
 *
si
)

674 
£ssi⁄
 *
s
 = 
si
->
¥iv©e
;

675 
buf„r
 *
ªq
 = 
si
->
ob
;

676 
buf„r
 *
ªs
 = 
si
->
ib
;

677 
ªql
;

678 
Àn
;

680 i‡(
	`u∆ikñy
(
si
->
°©e
 =
SI_ST_DIS
 || si->°©ê=
SI_ST_CLO
))

681 
out
;

684 i‡(
si
->
°0
 =
STAT_CLI_INIT
) {

686 
	`mem£t
(&
s
->
d©a_˘x
.
°©s
, 0, (s->data_ctx.stats));

687 
s
->
d©a_sour˚
 = 
DATA_SRC_STATS
;

688 
si
->
°0
 = 
STAT_CLI_GETREQ
;

690 i‡(
si
->
°0
 =
STAT_CLI_END
) {

694 
si
->
	`shutw
(si);

697 i‡(
si
->
°0
 =
STAT_CLI_GETREQ
) {

701 i‡(
	`buf„r_Æmo°_fuŒ
(
si
->
ib
))

704 
ªql
 = 
	`buf„r_si_≥eklöe
(
si
->
ob
, 
åash
, (trash));

705 i‡(
ªql
 <= 0) {

706 i‡(
ªql
 == 0)

708 
si
->
°0
 = 
STAT_CLI_END
;

715 
Àn
 = 0;Üí < 
ªql
;Üen++)

716 i‡(
åash
[
Àn
] == ';') {

717 
åash
[
Àn
] = '\n';

718 
ªql
 = 
Àn
 + 1;

726 
Àn
 = 
ªql
 - 1;

727 i‡(
åash
[
Àn
] != '\n') {

728 
si
->
°0
 = 
STAT_CLI_END
;

732 i‡(
Àn
 && 
åash
[len-1] == '\r')

733 
Àn
--;

735 
åash
[
Àn
] = '\0';

737 
si
->
°0
 = 
STAT_CLI_PROMPT
;

738 i‡(
Àn
) {

739 i‡(
	`°rcmp
(
åash
, "quit") == 0) {

740 
si
->
°0
 = 
STAT_CLI_END
;

743 i‡(
	`°rcmp
(
åash
, "prompt") == 0)

744 
si
->
°1
 = !si->st1;

745 i‡(
	`°rcmp
(
åash
, "help") == 0 ||

746 !
	`°©s_sock_∑r£_ªque°
(
si
, 
åash
)) {

747 
s
->
d©a_˘x
.
˛i
.
msg
 = 
°©s_sock_ußge_msg
;

748 
si
->
°0
 = 
STAT_CLI_PRINT
;

754 i‡(!
si
->
°1
) {

759 
s
->
d©a_˘x
.
˛i
.
msg
 = 
°©s_sock_ußge_msg
;

760 
si
->
°0
 = 
STAT_CLI_PRINT
;

764 
	`buf„r_skù
(
si
->
ob
, 
ªql
);

765 
ªq
->
Êags
 |
BF_READ_DONTWAIT
;

768 i‡(
ªs
->
Êags
 & (
BF_SHUTR_NOW
|
BF_SHUTR
)) {

769 
si
->
°0
 = 
STAT_CLI_END
;

773 
si
->
°0
) {

774 
STAT_CLI_PRINT
:

775 i‡(
	`buf„r_„ed
(
si
->
ib
, 
s
->
d©a_˘x
.
˛i
.
msg
) < 0)

776 
si
->
°0
 = 
STAT_CLI_PROMPT
;

778 
STAT_CLI_O_INFO
:

779 i‡(
	`°©s_dump_øw_to_buf„r
(
s
, 
ªs
))

780 
si
->
°0
 = 
STAT_CLI_PROMPT
;

782 
STAT_CLI_O_SESS
:

783 i‡(
	`°©s_dump_£ss_to_buf„r
(
s
, 
ªs
))

784 
si
->
°0
 = 
STAT_CLI_PROMPT
;

786 
STAT_CLI_O_ERR
:

787 i‡(
	`°©s_dump_îr‹s_to_buf„r
(
s
, 
ªs
))

788 
si
->
°0
 = 
STAT_CLI_PROMPT
;

791 
si
->
°0
 = 
STAT_CLI_PROMPT
;

796 i‡(
si
->
°0
 =
STAT_CLI_PROMPT
) {

797 i‡(
	`buf„r_„ed
(
si
->
ib
, si->
°1
 ? "\n> " : "\n") < 0)

798 
si
->
°0
 = 
STAT_CLI_GETREQ
;

802 i‡(
si
->
°0
 >
STAT_CLI_OUTPUT
)

810 i‡((
ªs
->
Êags
 & (
BF_SHUTW
|
BF_SHUTW_NOW
)Ë|| (!
si
->
°1
 && !
ªq
->
£nd_max
)) {

811 
si
->
°0
 = 
STAT_CLI_END
;

816 
si
->
°0
 = 
STAT_CLI_GETREQ
;

820 i‡((
ªs
->
Êags
 & 
BF_SHUTR
Ë&& (
si
->
°©e
 =
SI_ST_EST
Ë&& (si->
°0
 !
STAT_CLI_GETREQ
)) {

821 
	`DPRINTF
(
°dîr
, "%s@%d: siÅo buf closed.Ñeq=%08x,Ñes=%08x, st=%d\n",

822 
__FUNCTION__
, 
__LINE__
, 
ªq
->
Êags
, 
ªs
->Êags, 
si
->
°©e
);

828 
si
->
	`shutw
(si);

831 i‡((
ªq
->
Êags
 & 
BF_SHUTW
Ë&& (
si
->
°©e
 =
SI_ST_EST
Ë&& (si->
°0
 < 
STAT_CLI_OUTPUT
)) {

832 
	`DPRINTF
(
°dîr
, "%s@%d: bufÅo si closed.Ñeq=%08x,Ñes=%08x, st=%d\n",

833 
__FUNCTION__
, 
__LINE__
, 
ªq
->
Êags
, 
ªs
->Êags, 
si
->
°©e
);

838 
si
->
	`shuå
(si);

839 
ªs
->
Êags
 |
BF_READ_NULL
;

843 
si
->
	`upd©e
(si);

846 
si
->
ib
->
ªx
 = 
TICK_ETERNITY
;

847 
si
->
ob
->
wex
 = 
TICK_ETERNITY
;

849 
out
:

850 
	`DPRINTF
(
°dîr
, "%s@%d: st=%d,Ñqf=%x,Ñpf=%x,Ñql=%d,Ñqs=%d,Ñl=%d,Ñs=%d\n",

851 
__FUNCTION__
, 
__LINE__
,

852 
si
->
°©e
, 
ªq
->
Êags
, 
ªs
->Êags,Ñeq->
l
,Ñeq->
£nd_max
,Ñes->l,Ñes->send_max);

854 i‡(
	`u∆ikñy
(
si
->
°©e
 =
SI_ST_DIS
 || si->°©ê=
SI_ST_CLO
)) {

856 
	`°ªam_öt_uƒegi°î_h™dÀr
(
si
);

858 
	}
}

867 
	$°©s_dump_øw_to_buf„r
(
£ssi⁄
 *
s
, 
buf„r
 *
ªp
)

869 
¥oxy
 *
px
;

870 
chunk
 
msg
;

871 
up
;

873 
	`chunk_öô
(&
msg
, 
åash
, (trash));

875 
s
->
d©a_°©e
) {

876 
DATA_ST_INIT
:

878 
s
->
d©a_°©e
 = 
DATA_ST_HEAD
;

881 
DATA_ST_HEAD
:

882 i‡(
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_SHOW_STAT
) {

883 
	`¥öt_csv_hódî
(&
msg
);

884 i‡(
	`buf„r_„ed_chunk
(
ªp
, &
msg
) >= 0)

888 
s
->
d©a_°©e
 = 
DATA_ST_INFO
;

891 
DATA_ST_INFO
:

892 
up
 = (
now
.
tv_£c
 - 
°¨t_d©e
.tv_sec);

893 i‡(
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_SHOW_INFO
) {

894 
	`chunk_¥ötf
(&
msg
,

895 "Name: " 
PRODUCT_NAME
 "\n"

896 "Vîsi⁄: " 
HAPROXY_VERSION
 "\n"

897 "Rñó£_d©e: " 
HAPROXY_DATE
 "\n"

916 
globÆ
.
nb¥oc
,

917 
ªœtive_pid
,

918 
pid
,

919 
up
 / 86400, (up % 86400) / 3600, (up % 3600) / 60, (up % 60),

920 
up
,

921 
globÆ
.
æimô_memmax
,

922 
globÆ
.
æimô_nofûe
,

923 
globÆ
.
maxsock
, globÆ.
maxc⁄n
, globÆ.
maxpùes
,

924 
a˘c⁄n
, 
pùes_u£d
, 
pùes_‰ì
,

925 
nb_èsks_cur
, 
run_queue_cur
,

926 
globÆ
.
node
, globÆ.
desc
?global.desc:""

928 i‡(
	`buf„r_„ed_chunk
(
ªp
, &
msg
) >= 0)

932 
s
->
d©a_˘x
.
°©s
.
px
 = 
¥oxy
;

933 
s
->
d©a_˘x
.
°©s
.
px_°
 = 
DATA_ST_PX_INIT
;

935 
s
->
d©a_˘x
.
°©s
.
sv
 = 
NULL
;

936 
s
->
d©a_˘x
.
°©s
.
sv_°
 = 0;

938 
s
->
d©a_°©e
 = 
DATA_ST_LIST
;

941 
DATA_ST_LIST
:

943 i‡(
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_SHOW_STAT
) {

944 
s
->
d©a_˘x
.
°©s
.
px
) {

945 
px
 = 
s
->
d©a_˘x
.
°©s
.px;

947 i‡(
px
->
°©e
 !
PR_STSTOPPED
 &&

948 (
px
->
ˇp
 & (
PR_CAP_FE
 | 
PR_CAP_BE
))) {

949 i‡(
	`°©s_dump_¥oxy
(
s
, 
px
, 
NULL
) == 0)

953 
s
->
d©a_˘x
.
°©s
.
px
 =Öx->
√xt
;

954 
s
->
d©a_˘x
.
°©s
.
px_°
 = 
DATA_ST_PX_INIT
;

959 
s
->
d©a_°©e
 = 
DATA_ST_END
;

962 
DATA_ST_END
:

963 
s
->
d©a_°©e
 = 
DATA_ST_FIN
;

966 
DATA_ST_FIN
:

971 
s
->
d©a_°©e
 = 
DATA_ST_FIN
;

974 
	}
}

981 
	$°©s_hâp_ªdú
(
£ssi⁄
 *
s
, 
buf„r
 *
ªp
, 
uri_auth
 *
uri
)

983 
chunk
 
msg
;

985 
	`chunk_öô
(&
msg
, 
åash
, (trash));

987 
s
->
d©a_°©e
) {

988 
DATA_ST_INIT
:

989 
	`chunk_¥ötf
(&
msg
,

995 
uri
->
uri_¥efix
, 
s
->
d©a_˘x
.
°©s
.
°_code
);

996 
	`chunk_¥ötf
(&
msg
, "\r\n\r\n");

998 i‡(
	`buf„r_„ed_chunk
(
ªp
, &
msg
) >= 0)

1001 
s
->
txn
.
°©us
 = 303;

1003 i‡(!(
s
->
Êags
 & 
SN_ERR_MASK
))

1004 
s
->
Êags
 |
SN_ERR_PRXCOND
;

1005 i‡(!(
s
->
Êags
 & 
SN_FINST_MASK
))

1006 
s
->
Êags
 |
SN_FINST_R
;

1008 
s
->
d©a_°©e
 = 
DATA_ST_FIN
;

1012 
	}
}

1020 
	$hâp_°©s_io_h™dÀr
(
°ªam_öãrÁ˚
 *
si
)

1022 
£ssi⁄
 *
s
 = 
si
->
¥iv©e
;

1023 
buf„r
 *
ªq
 = 
si
->
ob
;

1024 
buf„r
 *
ªs
 = 
si
->
ib
;

1026 i‡(
	`u∆ikñy
(
si
->
°©e
 =
SI_ST_DIS
 || si->°©ê=
SI_ST_CLO
))

1027 
out
;

1030 i‡(
ªs
->
Êags
 & (
BF_SHUTW
|
BF_SHUTW_NOW
))

1031 
si
->
°0
 = 1;

1033 i‡(!
si
->
°0
) {

1034 i‡(
s
->
txn
.
mëh
 =
HTTP_METH_POST
) {

1035 i‡(
	`°©s_hâp_ªdú
(
s
, 
ªs
, s->
be
->
uri_auth
)) {

1036 
si
->
°0
 = 1;

1037 
si
->
	`shutw
(si);

1040 i‡(
	`°©s_dump_hâp
(
s
, 
ªs
, s->
be
->
uri_auth
)) {

1041 
si
->
°0
 = 1;

1042 
si
->
	`shutw
(si);

1047 i‡((
ªs
->
Êags
 & 
BF_SHUTR
Ë&& (
si
->
°©e
 =
SI_ST_EST
))

1048 
si
->
	`shutw
(si);

1050 i‡((
ªq
->
Êags
 & 
BF_SHUTW
Ë&& (
si
->
°©e
 =
SI_ST_EST
Ë&& si->
°0
) {

1051 
si
->
	`shuå
(si);

1052 
ªs
->
Êags
 |
BF_READ_NULL
;

1056 
si
->
	`upd©e
(si);

1059 
si
->
ib
->
ªx
 = 
TICK_ETERNITY
;

1060 
si
->
ob
->
wex
 = 
TICK_ETERNITY
;

1062 
out
:

1063 i‡(
	`u∆ikñy
(
si
->
°©e
 =
SI_ST_DIS
 || si->°©ê=
SI_ST_CLO
)) {

1065 
	`°ªam_öt_uƒegi°î_h™dÀr
(
si
);

1067 
	}
}

1080 
	$°©s_dump_hâp
(
£ssi⁄
 *
s
, 
buf„r
 *
ªp
, 
uri_auth
 *
uri
)

1082 
¥oxy
 *
px
;

1083 
chunk
 
msg
;

1084 
up
;

1086 
	`chunk_öô
(&
msg
, 
åash
, (trash));

1088 
s
->
d©a_°©e
) {

1089 
DATA_ST_INIT
:

1090 
	`chunk_¥ötf
(&
msg
,

1095 (
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_FMT_CSV
) ? "text/plain" : "text/html");

1097 i‡(
uri
->
ª‰esh
 > 0 && !(
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_NO_REFRESH
))

1098 
	`chunk_¥ötf
(&
msg
, "Refresh: %d\r\n",

1099 
uri
->
ª‰esh
);

1101 
	`chunk_¥ötf
(&
msg
, "\r\n");

1103 
s
->
txn
.
°©us
 = 200;

1104 i‡(
	`buf„r_„ed_chunk
(
ªp
, &
msg
) >= 0)

1107 i‡(!(
s
->
Êags
 & 
SN_ERR_MASK
))

1108 
s
->
Êags
 |
SN_ERR_PRXCOND
;

1109 i‡(!(
s
->
Êags
 & 
SN_FINST_MASK
))

1110 
s
->
Êags
 |
SN_FINST_R
;

1112 i‡(
s
->
txn
.
mëh
 =
HTTP_METH_HEAD
) {

1114 
s
->
d©a_°©e
 = 
DATA_ST_FIN
;

1118 
s
->
d©a_°©e
 = 
DATA_ST_HEAD
;

1121 
DATA_ST_HEAD
:

1122 i‡(!(
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_FMT_CSV
)) {

1124 
	`chunk_¥ötf
(&
msg
,

1127 "<html><hód><tôÀ>Sèti°ic†Rï‹àf‹ " 
PRODUCT_NAME
 "%s%s</title>\n"

1213 (
uri
->
Êags
&
ST_SHNODE
) ? " on " : "",

1214 (
uri
->
Êags
&
ST_SHNODE
Ë? (uri->
node
 ? uri->nodê: 
globÆ
.node) : ""

1217 
	`¥öt_csv_hódî
(&
msg
);

1219 i‡(
	`buf„r_„ed_chunk
(
ªp
, &
msg
) >= 0)

1222 
s
->
d©a_°©e
 = 
DATA_ST_INFO
;

1225 
DATA_ST_INFO
:

1226 
up
 = (
now
.
tv_£c
 - 
°¨t_d©e
.tv_sec);

1232 i‡(!(
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_FMT_CSV
)) {

1233 
	`chunk_¥ötf
(&
msg
,

1234 "<body><h1><®hªf=\"" 
PRODUCT_URL
 "\" style=\"text-decoration:Çone;\">"

1235 
PRODUCT_NAME
 "%s</a></h1>\n"

1267 (
uri
->
Êags
&
ST_HIDEVER
)?"":(
STATS_VERSION_STRING
),

1268 
pid
, (
uri
->
Êags
&
ST_SHNODE
Ë? " o¿" : "", (uri->Êags&ST_SHNODEË? (uri->
node
 ? uri->nodê: 
globÆ
.node) : "",

1269 (
uri
->
Êags
&
ST_SHDESC
)? ": " : "", (uri->Êags&ST_SHDESCË? (uri->
desc
 ? uri->des¯: 
globÆ
.desc) : "",

1270 
pid
, 
ªœtive_pid
, 
globÆ
.
nb¥oc
,

1271 
up
 / 86400, (up % 86400) / 3600,

1272 (
up
 % 3600) / 60, (up % 60),

1273 
globÆ
.
æimô_memmax
 ? 
	`u…ﬂ
(global.rlimit_memmax) : "unlimited",

1274 
globÆ
.
æimô_memmax
 ? " MB" : "",

1275 
globÆ
.
æimô_nofûe
,

1276 
globÆ
.
maxsock
, globÆ.
maxc⁄n
, globÆ.
maxpùes
,

1277 
a˘c⁄n
, 
pùes_u£d
,Öùes_u£d+
pùes_‰ì
,

1278 
run_queue_cur
, 
nb_èsks_cur


1281 i‡(
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_HIDE_DOWN
)

1282 
	`chunk_¥ötf
(&
msg
,

1284 
uri
->
uri_¥efix
,

1286 (
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_NO_REFRESH
) ? ";norefresh" : "");

1288 
	`chunk_¥ötf
(&
msg
,

1290 
uri
->
uri_¥efix
,

1292 (
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_NO_REFRESH
) ? ";norefresh" : "");

1294 i‡(
uri
->
ª‰esh
 > 0) {

1295 i‡(
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_NO_REFRESH
)

1296 
	`chunk_¥ötf
(&
msg
,

1298 
uri
->
uri_¥efix
,

1299 (
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_HIDE_DOWN
) ? ";up" : "",

1302 
	`chunk_¥ötf
(&
msg
,

1304 
uri
->
uri_¥efix
,

1305 (
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_HIDE_DOWN
) ? ";up" : "",

1309 
	`chunk_¥ötf
(&
msg
,

1311 
uri
->
uri_¥efix
,

1312 (
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_HIDE_DOWN
) ? ";up" : "",

1313 (
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_NO_REFRESH
) ? ";norefresh" : "");

1315 
	`chunk_¥ötf
(&
msg
,

1317 
uri
->
uri_¥efix
,

1318 (
uri
->
ª‰esh
 > 0) ? ";norefresh" : "");

1320 
	`chunk_¥ötf
(&
msg
,

1324 "<li><®hªf=\"" 
PRODUCT_URL
 "\">Primary site</a><br>\n"

1325 "<li><®hªf=\"" 
PRODUCT_URL_UPD
 "\">Upd©e†(v" 
PRODUCT_BRANCH
 ")</a><br>\n"

1326 "<li><®hªf=\"" 
PRODUCT_URL_DOC
 "\">Online manual</a><br>\n"

1333 i‡(
s
->
d©a_˘x
.
°©s
.
°_code
) {

1334 i‡(
	`°rcmp
(
s
->
d©a_˘x
.
°©s
.
°_code
, 
STAT_STATUS_DONE
) == 0) {

1335 
	`chunk_¥ötf
(&
msg
,

1339 "</div>\n", 
uri
->
uri_¥efix
);

1341 i‡(
	`°rcmp
(
s
->
d©a_˘x
.
°©s
.
°_code
, 
STAT_STATUS_NONE
) == 0) {

1342 
	`chunk_¥ötf
(&
msg
,

1346 "</div>\n", 
uri
->
uri_¥efix
);

1348 i‡(
	`°rcmp
(
s
->
d©a_˘x
.
°©s
.
°_code
, 
STAT_STATUS_EXCD
) == 0) {

1349 
	`chunk_¥ötf
(&
msg
,

1354 "</div>\n", 
uri
->
uri_¥efix
);

1356 i‡(
	`°rcmp
(
s
->
d©a_˘x
.
°©s
.
°_code
, 
STAT_STATUS_DENY
) == 0) {

1357 
	`chunk_¥ötf
(&
msg
,

1361 "</div>\n", 
uri
->
uri_¥efix
);

1364 
	`chunk_¥ötf
(&
msg
,

1368 "</div>\n", 
uri
->
uri_¥efix
);

1370 
	`chunk_¥ötf
(&
msg
,"<p>\n");

1373 i‡(
	`buf„r_„ed_chunk
(
ªp
, &
msg
) >= 0)

1377 
s
->
d©a_˘x
.
°©s
.
px
 = 
¥oxy
;

1378 
s
->
d©a_˘x
.
°©s
.
px_°
 = 
DATA_ST_PX_INIT
;

1379 
s
->
d©a_°©e
 = 
DATA_ST_LIST
;

1382 
DATA_ST_LIST
:

1384 
s
->
d©a_˘x
.
°©s
.
px
) {

1385 i‡(
	`buf„r_Æmo°_fuŒ
(
ªp
))

1387 
px
 = 
s
->
d©a_˘x
.
°©s
.px;

1389 i‡(
px
->
°©e
 !
PR_STSTOPPED
 && (px->
ˇp
 & (
PR_CAP_FE
 | 
PR_CAP_BE
)))

1390 i‡(
	`°©s_dump_¥oxy
(
s
, 
px
, 
uri
) == 0)

1393 
s
->
d©a_˘x
.
°©s
.
px
 =Öx->
√xt
;

1394 
s
->
d©a_˘x
.
°©s
.
px_°
 = 
DATA_ST_PX_INIT
;

1398 
s
->
d©a_°©e
 = 
DATA_ST_END
;

1401 
DATA_ST_END
:

1402 i‡(!(
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_FMT_CSV
)) {

1403 
	`chunk_¥ötf
(&
msg
, "</body></html>\n");

1404 i‡(
	`buf„r_„ed_chunk
(
ªp
, &
msg
) >= 0)

1408 
s
->
d©a_°©e
 = 
DATA_ST_FIN
;

1411 
DATA_ST_FIN
:

1416 
s
->
d©a_°©e
 = 
DATA_ST_FIN
;

1419 
	}
}

1427 
	$°©s_dump_¥oxy
(
£ssi⁄
 *
s
, 
¥oxy
 *
px
, 
uri_auth
 *
uri
)

1429 
buf„r
 *
ªp
 = 
s
->rep;

1430 
£rvî
 *
sv
, *
svs
;

1431 
li°íî
 *
l
;

1432 
chunk
 
msg
;

1434 
	`chunk_öô
(&
msg
, 
åash
, (trash));

1436 
s
->
d©a_˘x
.
°©s
.
px_°
) {

1437 
DATA_ST_PX_INIT
:

1440 i‡(
uri
 && uri->
sc›e
) {

1442 
°©_sc›e
 *
sc›e
;

1443 
Àn
;

1445 
Àn
 = 
	`°æí
(
px
->
id
);

1446 
sc›e
 = 
uri
->scope;

1448 
sc›e
) {

1450 i‡(
sc›e
->
px_Àn
 =
Àn
 && !
	`memcmp
(
px
->
id
, sc›e->
px_id
,Üen))

1454 i‡(!
	`°rcmp
(
sc›e
->
px_id
, "."Ë&& 
px
 =
s
->
be
)

1456 
sc›e
 = sc›e->
√xt
;

1460 i‡(
sc›e
 =
NULL
)

1464 i‡((
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_BOUND
Ë&& (s->d©a_˘x.°©s.
iid
 != -1) &&

1465 (
px
->
uuid
 !
s
->
d©a_˘x
.
°©s
.
iid
))

1468 
s
->
d©a_˘x
.
°©s
.
px_°
 = 
DATA_ST_PX_TH
;

1471 
DATA_ST_PX_TH
:

1472 i‡(!(
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_FMT_CSV
)) {

1473 i‡(
px
->
ˇp
 & 
PR_CAP_BE
 &&Öx->
§v
 && (
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_ADMIN
)) {

1475 
	`chunk_¥ötf
(&
msg
,

1477 
uri
->
uri_¥efix
);

1481 
	`chunk_¥ötf
(&
msg
,

1486 i‡(
uri
->
Êags
&
ST_SHLGNDS
) {

1488 
	`chunk_¥ötf
(&
msg
, "Åitle=\"cap: %s, mode: %s, id: %d",

1489 
	`¥oxy_ˇp_°r
(
px
->
ˇp
), 
	`¥oxy_mode_°r
’x->
mode
),

1490 
px
->
uuid
);

1492 
	`chunk_¥ötf
(&
msg
, "\"");

1495 
	`chunk_¥ötf
(&
msg
,

1503 (
uri
->
Êags
 & 
ST_SHLGNDS
)?"<u>":"",

1504 
px
->
id
,Öx->id,Öx->id,

1505 (
uri
->
Êags
 & 
ST_SHLGNDS
)?"</u>":"",

1506 
px
->
desc
 ? "desc" : "empty",Öx->desc ?Öx->desc : "");

1508 i‡(
px
->
ˇp
 & 
PR_CAP_BE
 &&Öx->
§v
 && (
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_ADMIN
)) {

1510 
	`chunk_¥ötf
(&
msg
, "<thÑowspan=2 width=1></th>");

1513 
	`chunk_¥ötf
(&
msg
,

1532 i‡(
	`buf„r_„ed_chunk
(
ªp
, &
msg
) >= 0)

1536 
s
->
d©a_˘x
.
°©s
.
px_°
 = 
DATA_ST_PX_FE
;

1539 
DATA_ST_PX_FE
:

1541 i‡((
px
->
ˇp
 & 
PR_CAP_FE
) &&

1542 (!(
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_BOUND
Ë|| (s->d©a_˘x.°©s.
ty≥
 & (1 << 
STATS_TYPE_FE
)))) {

1543 i‡(!(
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_FMT_CSV
)) {

1544 
	`chunk_¥ötf
(&
msg
,

1548 i‡(
px
->
ˇp
 & 
PR_CAP_BE
 &&Öx->
§v
 && (
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_ADMIN
)) {

1550 
	`chunk_¥ötf
(&
msg
, "<td></td>");

1553 
	`chunk_¥ötf
(&
msg
,

1559 
px
->
id
,Öx->id);

1561 i‡(
px
->
mode
 =
PR_MODE_HTTP
) {

1562 
	`chunk_¥ötf
(&
msg
,

1566 
	`ªad_‰eq_˘r
(&
px
->
„_ªq_≥r_£c
),

1567 
	`U2H0
(
	`ªad_‰eq_˘r
(&
px
->
„_£ss_≥r_£c
)),

1568 
px
->
cou¡îs
.
„_Ωs_max
,

1569 
	`U2H1
(
px
->
cou¡îs
.
„_•s_max
),

1570 
	`LIM2A2
(
px
->
„_•s_lim
, "-"));

1572 
	`chunk_¥ötf
(&
msg
,

1576 
	`U2H0
(
	`ªad_‰eq_˘r
(&
px
->
„_£ss_≥r_£c
)),

1577 
	`U2H1
(
px
->
cou¡îs
.
„_•s_max
), 
	`LIM2A2
’x->
„_•s_lim
, "-"));

1580 
	`chunk_¥ötf
(&
msg
,

1585 
	`U2H3
(
px
->
„c⁄n
), 
	`U2H4
’x->
cou¡îs
.
„c⁄n_max
), 
	`U2H5
’x->
maxc⁄n
));

1588 i‡(
px
->
mode
 =
PR_MODE_HTTP
) {

1589 
i
;

1591 
	`chunk_¥ötf
(&
msg
, "ÅôÀ=\"%ŒdÑeque°s:", 
px
->
cou¡îs
.
cum_„_ªq
);

1593 
i
 = 1; i < 6; i++)

1594 
	`chunk_¥ötf
(&
msg
, " %dxx=%Œd,", 
i
, 
px
->
cou¡îs
.
„
.
hâp
.
r•
[i]);

1596 
	`chunk_¥ötf
(&
msg
, " othî=%Œd\"", 
px
->
cou¡îs
.
„
.
hâp
.
r•
[0]);

1599 
	`chunk_¥ötf
(&
msg
,

1605 (
px
->
mode
 =
PR_MODE_HTTP
)?"<u>":"",

1606 
	`U2H6
(
px
->
cou¡îs
.
cum_„c⁄n
),

1607 (
px
->
mode
 =
PR_MODE_HTTP
)?"</u>":"",

1608 
	`U2H7
(
px
->
cou¡îs
.
byãs_ö
), 
	`U2H8
’x->cou¡îs.
byãs_out
));

1610 
	`chunk_¥ötf
(&
msg
,

1622 
	`U2H0
(
px
->
cou¡îs
.
díõd_ªq
), 
	`U2H1
’x->cou¡îs.
díõd_ª•
),

1623 
	`U2H2
(
px
->
cou¡îs
.
Áûed_ªq
),

1624 
px
->
°©e
 =
PR_STRUN
 ? "OPEN" :

1625 
px
->
°©e
 =
PR_STIDLE
 ? "FULL" : "STOP");

1627 
	`chunk_¥ötf
(&
msg
,

1650 
px
->
id
,

1651 
px
->
„c⁄n
,Öx->
cou¡îs
.
„c⁄n_max
,Öx->
maxc⁄n
,Öx->cou¡îs.
cum_„c⁄n
,

1652 
px
->
cou¡îs
.
byãs_ö
,Öx->cou¡îs.
byãs_out
,

1653 
px
->
cou¡îs
.
díõd_ªq
,Öx->cou¡îs.
díõd_ª•
,

1654 
px
->
cou¡îs
.
Áûed_ªq
,

1655 
px
->
°©e
 =
PR_STRUN
 ? "OPEN" :

1656 
px
->
°©e
 =
PR_STIDLE
 ? "FULL" : "STOP",

1657 
ªœtive_pid
, 
px
->
uuid
, 
STATS_TYPE_FE
,

1658 
	`ªad_‰eq_˘r
(&
px
->
„_£ss_≥r_£c
),

1659 
px
->
„_•s_lim
,Öx->
cou¡îs
.
„_•s_max
);

1662 i‡(
px
->
mode
 =
PR_MODE_HTTP
) {

1663 
i
;

1665 
i
=1; i<6; i++)

1666 
	`chunk_¥ötf
(&
msg
, "%Œd,", 
px
->
cou¡îs
.
„
.
hâp
.
r•
[
i
]);

1668 
	`chunk_¥ötf
(&
msg
, "%Œd,", 
px
->
cou¡îs
.
„
.
hâp
.
r•
[0]);

1670 
	`chunk_¥ötf
(&
msg
, ",,,,,,");

1674 
	`chunk_¥ötf
(&
msg
, ",");

1677 
	`chunk_¥ötf
(&
msg
, "%u,%u,%lld,",

1678 
	`ªad_‰eq_˘r
(&
px
->
„_ªq_≥r_£c
),

1679 
px
->
cou¡îs
.
„_Ωs_max
,Öx->cou¡îs.
cum_„_ªq
);

1682 
	`chunk_¥ötf
(&
msg
, ",,");

1685 
	`chunk_¥ötf
(&
msg
, "\n");

1688 i‡(
	`buf„r_„ed_chunk
(
ªp
, &
msg
) >= 0)

1692 
s
->
d©a_˘x
.
°©s
.
l
 = 
px
->
li°í
;

1693 
s
->
d©a_˘x
.
°©s
.
px_°
 = 
DATA_ST_PX_LI
;

1696 
DATA_ST_PX_LI
:

1698 ; 
s
->
d©a_˘x
.
°©s
.
l
 !
NULL
; s->d©a_˘x.°©s.»l->
√xt
) {

1699 i‡(
	`buf„r_Æmo°_fuŒ
(
ªp
))

1702 
l
 = 
s
->
d©a_˘x
.
°©s
.l;

1703 i‡(!
l
->
cou¡îs
)

1706 i‡(
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_BOUND
) {

1707 i‡(!(
s
->
d©a_˘x
.
°©s
.
ty≥
 & (1 << 
STATS_TYPE_SO
)))

1710 i‡(
s
->
d©a_˘x
.
°©s
.
sid
 !-1 && 
l
->
luid
 != s->data_ctx.stats.sid)

1714 i‡(!(
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_FMT_CSV
)) {

1715 
	`chunk_¥ötf
(&
msg
, "<tr class=socket>");

1716 i‡(
px
->
ˇp
 & 
PR_CAP_BE
 &&Öx->
§v
 && (
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_ADMIN
)) {

1718 
	`chunk_¥ötf
(&
msg
, "<td></td>");

1720 
	`chunk_¥ötf
(&
msg
, "<td class=ac");

1722 i‡(
uri
->
Êags
&
ST_SHLGNDS
) {

1723 
°r
[
INET6_ADDRSTRLEN
], *
fmt
 = 
NULL
;

1724 
p‹t
;

1726 
	`chunk_¥ötf
(&
msg
, "Åitle=\"IP: ");

1728 
p‹t
 = (
l
->
addr
.
ss_Ámûy
 =
AF_INET6
)

1729 ? 
	`¡ohs
(((
sockaddr_ö6
 *)(&
l
->
addr
))->
sö6_p‹t
)

1730 : 
	`¡ohs
(((
sockaddr_ö
 *)(&
l
->
addr
))->
sö_p‹t
);

1732 i‡(
l
->
addr
.
ss_Ámûy
 =
AF_INET
) {

1733 i‡(
	`öë_¡›
(
AF_INET
,

1734 (c⁄° *)&((
sockaddr_ö
 *)&
l
->
addr
)->
sö_addr
,

1735 
°r
, (str)))

1736 
fmt
 = "%s:%d";

1738 i‡(
	`öë_¡›
(
AF_INET6
,

1739 (c⁄° *)&((
sockaddr_ö6
 *)(&
l
->
addr
))->
sö6_addr
,

1740 
°r
, (str)))

1741 
fmt
 = "[%s]:%d";

1744 i‡(
fmt
)

1745 
	`chunk_¥ötf
(&
msg
, 
fmt
, 
°r
, 
p‹t
);

1747 
	`chunk_¥ötf
(&
msg
, "(%s)", 
	`°ªº‹
(
î∫o
));

1750 
	`chunk_¥ötf
(&
msg
, ", id: %d", 
l
->
luid
);

1752 
	`chunk_¥ötf
(&
msg
, "\"");

1755 
	`chunk_¥ötf
(&
msg
,

1767 (
uri
->
Êags
 & 
ST_SHLGNDS
)?"<u>":"",

1768 
px
->
id
, 
l
->
«me
,Öx->id,Ü->name,Ü->name,

1769 (
uri
->
Êags
 & 
ST_SHLGNDS
)?"</u>":"",

1770 
	`U2H3
(
l
->
nbc⁄n
), 
	`U2H4
÷->
cou¡îs
->
c⁄n_max
), 
	`U2H5
÷->
maxc⁄n
),

1771 
	`U2H6
(
l
->
cou¡îs
->
cum_c⁄n
), 
	`U2H7
÷->cou¡îs->
byãs_ö
), 
	`U2H8
÷->cou¡îs->
byãs_out
));

1773 
	`chunk_¥ötf
(&
msg
,

1785 
	`U2H0
(
l
->
cou¡îs
->
díõd_ªq
), 
	`U2H1
÷->cou¡îs->
díõd_ª•
),

1786 
	`U2H2
(
l
->
cou¡îs
->
Áûed_ªq
),

1787 (
l
->
nbc⁄n
 <Ü->
maxc⁄n
) ? "OPEN" : "FULL");

1789 
	`chunk_¥ötf
(&
msg
,

1821 
px
->
id
, 
l
->
«me
,

1822 
l
->
nbc⁄n
,Ü->
cou¡îs
->
c⁄n_max
,

1823 
l
->
maxc⁄n
,Ü->
cou¡îs
->
cum_c⁄n
,

1824 
l
->
cou¡îs
->
byãs_ö
,Ü->cou¡îs->
byãs_out
,

1825 
l
->
cou¡îs
->
díõd_ªq
,Ü->cou¡îs->
díõd_ª•
,

1826 
l
->
cou¡îs
->
Áûed_ªq
,

1827 (
l
->
nbc⁄n
 <Ü->
maxc⁄n
) ? "OPEN" : "FULL",

1828 
ªœtive_pid
, 
px
->
uuid
, 
l
->
luid
, 
STATS_TYPE_SO
);

1831 i‡(
	`buf„r_„ed_chunk
(
ªp
, &
msg
) >= 0)

1835 
s
->
d©a_˘x
.
°©s
.
sv
 = 
px
->
§v
;

1836 
s
->
d©a_˘x
.
°©s
.
px_°
 = 
DATA_ST_PX_SV
;

1839 
DATA_ST_PX_SV
:

1841 ; 
s
->
d©a_˘x
.
°©s
.
sv
 !
NULL
; s->d©a_˘x.°©s.sv = sv->
√xt
) {

1842 
sv_°©e
;

1844 i‡(
	`buf„r_Æmo°_fuŒ
(
ªp
))

1847 
sv
 = 
s
->
d©a_˘x
.
°©s
.sv;

1849 i‡(
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_BOUND
) {

1850 i‡(!(
s
->
d©a_˘x
.
°©s
.
ty≥
 & (1 << 
STATS_TYPE_SV
)))

1853 i‡(
s
->
d©a_˘x
.
°©s
.
sid
 !-1 && 
sv
->
puid
 != s->data_ctx.stats.sid)

1857 i‡(
sv
->
åacked
)

1858 
svs
 = 
sv
->
åacked
;

1860 
svs
 = 
sv
;

1863 i‡(!(
svs
->
°©e
 & 
SRV_CHECKED
))

1864 
sv_°©e
 = 6;

1865 i‡(
svs
->
°©e
 & 
SRV_RUNNING
) {

1866 i‡(
svs
->
hó…h
 =svs->
ri£
 + svs->
ÁŒ
 - 1)

1867 
sv_°©e
 = 3;

1869 
sv_°©e
 = 2;

1871 i‡(
svs
->
°©e
 & 
SRV_GOINGDOWN
)

1872 
sv_°©e
 += 2;

1875 i‡(
svs
->
hó…h
)

1876 
sv_°©e
 = 1;

1878 
sv_°©e
 = 0;

1880 i‡(((
sv_°©e
 =0Ë|| (
sv
->
°©e
 & 
SRV_MAINTAIN
)Ë&& (
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_HIDE_DOWN
)) {

1882 
s
->
d©a_˘x
.
°©s
.
sv
 = sv->
√xt
;

1886 i‡(!(
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_FMT_CSV
)) {

1887 *
§v_h…_°
[7] = { "DOWN", "DN %d/%d &uarr;",

1891 i‡((
sv
->
°©e
 & 
SRV_MAINTAIN
Ë|| (
svs
->state & SRV_MAINTAIN)) {

1892 
	`chunk_¥ötf
(&
msg
,

1898 
	`chunk_¥ötf
(&
msg
,

1901 (
sv
->
°©e
 & 
SRV_BACKUP
Ë? "backup" : "a˘ive", 
sv_°©e
);

1904 i‡(
px
->
ˇp
 & 
PR_CAP_BE
 &&Öx->
§v
 && (
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_ADMIN
)) {

1905 
	`chunk_¥ötf
(&
msg
,

1907 
sv
->
id
);

1910 
	`chunk_¥ötf
(&
msg
, "<td class=ac");

1912 i‡(
uri
->
Êags
&
ST_SHLGNDS
) {

1913 
°r
[
INET6_ADDRSTRLEN
];

1915 
	`chunk_¥ötf
(&
msg
, "Åitle=\"IP: ");

1918 i‡(
	`öë_¡›
(
sv
->
addr
.
sö_Ámûy
, &sv->addr.
sö_addr
, 
°r
, (str)))

1919 
	`chunk_¥ötf
(&
msg
, "%s:%d", 
°r
, 
	`ht⁄s
(
sv
->
addr
.
sö_p‹t
));

1921 
	`chunk_¥ötf
(&
msg
, "(%s)", 
	`°ªº‹
(
î∫o
));

1924 
	`chunk_¥ötf
(&
msg
, ", id: %d", 
sv
->
puid
);

1927 i‡(
sv
->
cookõ
) {

1928 
chunk
 
§c
;

1930 
	`chunk_¥ötf
(&
msg
, ", cookie: '");

1932 
	`chunk_öôÀn
(&
§c
, 
sv
->
cookõ
, 0, 
	`°æí
(sv->cookie));

1933 
	`chunk_htmÀncode
(&
msg
, &
§c
);

1935 
	`chunk_¥ötf
(&
msg
, "'");

1938 
	`chunk_¥ötf
(&
msg
, "\"");

1941 
	`chunk_¥ötf
(&
msg
,

1952 (
uri
->
Êags
 & 
ST_SHLGNDS
)?"<u>":"",

1953 
px
->
id
, 
sv
->id,Öx->id, sv->id, sv->id,

1954 (
uri
->
Êags
 & 
ST_SHLGNDS
)?"</u>":"",

1955 
	`U2H0
(
sv
->
nb≥nd
), 
	`U2H1
(sv->
cou¡îs
.
nb≥nd_max
), 
	`LIM2A2
(sv->
maxqueue
, "-"),

1956 
	`U2H3
(
	`ªad_‰eq_˘r
(&
sv
->
£ss_≥r_£c
)), 
	`U2H4
(sv->
cou¡îs
.
•s_max
),

1957 
	`U2H5
(
sv
->
cur_£ss
), 
	`U2H6
(sv->
cou¡îs
.
cur_£ss_max
), 
	`LIM2A7
(sv->
maxc⁄n
, "-"));

1960 i‡(
px
->
mode
 =
PR_MODE_HTTP
) {

1961 
i
;

1963 
	`chunk_¥ötf
(&
msg
, "Åitle=\"rsp codes:");

1965 
i
 = 1; i < 6; i++)

1966 
	`chunk_¥ötf
(&
msg
, " %dxx=%Œd,", 
i
, 
sv
->
cou¡îs
.
p
.
hâp
.
r•
[i]);

1968 
	`chunk_¥ötf
(&
msg
, " othî=%Œd\"", 
sv
->
cou¡îs
.
p
.
hâp
.
r•
[0]);

1971 
	`chunk_¥ötf
(&
msg
,

1974 (
px
->
mode
 =
PR_MODE_HTTP
)?"<u>":"",

1975 
	`U2H0
(
sv
->
cou¡îs
.
cum_£ss
),

1976 (
px
->
mode
 =
PR_MODE_HTTP
)?"</u>":"",

1977 
	`U2H1
(
sv
->
cou¡îs
.
cum_lbc⁄n
));

1979 
	`chunk_¥ötf
(&
msg
,

1991 
	`U2H0
(
sv
->
cou¡îs
.
byãs_ö
), 
	`U2H1
(sv->cou¡îs.
byãs_out
),

1992 
	`U2H2
(
sv
->
cou¡îs
.
Áûed_£cu
),

1993 
	`U2H3
(
sv
->
cou¡îs
.
Áûed_c⁄ns
),

1994 
sv
->
cou¡îs
.
˛i_ab‹ts
,

1995 
sv
->
cou¡îs
.
§v_ab‹ts
,

1996 
	`U2H6
(
sv
->
cou¡îs
.
Áûed_ª•
),

1997 
sv
->
cou¡îs
.
ªåõs
, sv->cou¡îs.
ªdi•©ches
);

2000 
	`chunk_¥ötf
(&
msg
, "<td class=ac>");

2002 i‡(
sv
->
°©e
 & 
SRV_MAINTAIN
) {

2003 
	`chunk_¥ötf
(&
msg
, "%s ",

2004 
	`hum™_time
(
now
.
tv_£c
 - 
sv
->
œ°_ch™ge
, 1));

2005 
	`chunk_¥ötf
(&
msg
, "MAINT");

2007 i‡(
svs
 !
sv
 && svs->
°©e
 & 
SRV_MAINTAIN
) {

2008 
	`chunk_¥ötf
(&
msg
, "%s ",

2009 
	`hum™_time
(
now
.
tv_£c
 - 
svs
->
œ°_ch™ge
, 1));

2010 
	`chunk_¥ötf
(&
msg
, "MAINT(via)");

2012 i‡(
svs
->
°©e
 & 
SRV_CHECKED
) {

2013 
	`chunk_¥ötf
(&
msg
, "%s ",

2014 
	`hum™_time
(
now
.
tv_£c
 - 
svs
->
œ°_ch™ge
, 1));

2016 
	`chunk_¥ötf
(&
msg
,

2017 
§v_h…_°
[
sv_°©e
],

2018 (
svs
->
°©e
 & 
SRV_RUNNING
Ë? (svs->
hó…h
 - svs->
ri£
 + 1) : (svs->health),

2019 (
svs
->
°©e
 & 
SRV_RUNNING
Ë? (svs->
ÁŒ
Ë: (svs->
ri£
));

2022 i‡(
sv
->
°©e
 & 
SRV_CHECKED
) {

2023 
	`chunk_¥ötf
(&
msg
, "</td><td class=acÅitle=\"%s",

2024 
	`gë_check_°©us_des¸ùti⁄
(
sv
->
check_°©us
));

2026 i‡(*
sv
->
check_desc
) {

2027 
chunk
 
§c
;

2029 
	`chunk_¥ötf
(&
msg
, ": ");

2031 
	`chunk_öôÀn
(&
§c
, 
sv
->
check_desc
, 0, 
	`°æí
(sv->check_desc));

2032 
	`chunk_htmÀncode
(&
msg
, &
§c
);

2035 
	`chunk_¥ötf
(&
msg
, "\"><u> %s%s",

2036 
	`tv_iszîo
(&
sv
->
check_°¨t
)?"":"* ",

2037 
	`gë_check_°©us_öfo
(
sv
->
check_°©us
));

2039 i‡(
sv
->
check_°©us
 >
HCHK_STATUS_L57DATA
)

2040 
	`chunk_¥ötf
(&
msg
, "/%d", 
sv
->
check_code
);

2042 i‡(
sv
->
check_°©us
 >
HCHK_STATUS_CHECKED
 && sv->
check_duøti⁄
 >= 0)

2043 
	`chunk_¥ötf
(&
msg
, " i¿%lums</u>", 
sv
->
check_duøti⁄
);

2045 
	`chunk_¥ötf
(&
msg
, "</td><td>");

2047 
	`chunk_¥ötf
(&
msg
,

2053 (
sv
->
eweight
 * 
px
->
lb¥m
.
wmu…
 +Öx->lb¥m.
wdiv
 - 1) /Öx->lbprm.wdiv,

2054 (
sv
->
°©e
 & 
SRV_BACKUP
) ? "-" : "Y",

2055 (
sv
->
°©e
 & 
SRV_BACKUP
) ? "Y" : "-");

2058 i‡(
sv
->
°©e
 & 
SRV_CHECKED
) {

2059 
	`chunk_¥ötf
(&
msg
, "<tdÅitle=\"Failed Health Checks%s\"><u>%lld",

2060 
svs
->
ob£rve
?"/Hó…h A«ly£s":"", svs->
cou¡îs
.
Áûed_checks
);

2062 i‡(
svs
->
ob£rve
)

2063 
	`chunk_¥ötf
(&
msg
, "/%Œd", 
svs
->
cou¡îs
.
Áûed_h™a
);

2065 
	`chunk_¥ötf
(&
msg
,

2069 
svs
->
cou¡îs
.
down_å™s
, 
	`hum™_time
(
	`§v_dow¡ime
(
sv
), 1));

2070 } i‡(
sv
 !
svs
)

2071 
	`chunk_¥ötf
(&
msg
,

2073 
svs
->
¥oxy
->
id
, svs->id, svs->proxy->id, svs->id);

2075 
	`chunk_¥ötf
(&
msg
,

2079 i‡((
sv
->
°©e
 & 
SRV_WARMINGUP
) &&

2080 
now
.
tv_£c
 < 
sv
->
œ°_ch™ge
 + sv->
¶ow°¨t
 &&

2081 
now
.
tv_£c
 >
sv
->
œ°_ch™ge
) {

2082 
øtio
;

2083 
øtio
 = 
	`MAX
(1, 100 * (
now
.
tv_£c
 - 
sv
->
œ°_ch™ge
Ë/ sv->
¶ow°¨t
);

2084 
	`chunk_¥ötf
(&
msg
,

2085 "<td cœss˜c>%d %%</td></å>\n", 
øtio
);

2087 
	`chunk_¥ötf
(&
msg
,

2091 *
§v_h…_°
[7] = { "DOWN,", "DOWN %d/%d,",

2095 
	`chunk_¥ötf
(&
msg
,

2111 
px
->
id
, 
sv
->id,

2112 
sv
->
nb≥nd
, sv->
cou¡îs
.
nb≥nd_max
,

2113 
sv
->
cur_£ss
, sv->
cou¡îs
.
cur_£ss_max
, 
	`LIM2A0
(sv->
maxc⁄n
, ""), sv->cou¡îs.
cum_£ss
,

2114 
sv
->
cou¡îs
.
byãs_ö
, sv->cou¡îs.
byãs_out
,

2115 
sv
->
cou¡îs
.
Áûed_£cu
,

2116 
sv
->
cou¡îs
.
Áûed_c⁄ns
, sv->cou¡îs.
Áûed_ª•
,

2117 
sv
->
cou¡îs
.
ªåõs
, sv->cou¡îs.
ªdi•©ches
);

2120 i‡(
sv
->
°©e
 & 
SRV_MAINTAIN
) {

2121 
	`chunk_¥ötf
(&
msg
, "MAINT,");

2123 i‡(
svs
 !
sv
 && svs->
°©e
 & 
SRV_MAINTAIN
) {

2124 
	`chunk_¥ötf
(&
msg
, "MAINT(via),");

2127 
	`chunk_¥ötf
(&
msg
,

2128 
§v_h…_°
[
sv_°©e
],

2129 (
svs
->
°©e
 & 
SRV_RUNNING
Ë? (svs->
hó…h
 - svs->
ri£
 + 1) : (svs->health),

2130 (
svs
->
°©e
 & 
SRV_RUNNING
Ë? (svs->
ÁŒ
Ë: (svs->
ri£
));

2133 
	`chunk_¥ötf
(&
msg
,

2137 (
sv
->
eweight
 * 
px
->
lb¥m
.
wmu…
 +Öx->lb¥m.
wdiv
 - 1) /Öx->lbprm.wdiv,

2138 (
sv
->
°©e
 & 
SRV_BACKUP
) ? 0 : 1,

2139 (
sv
->
°©e
 & 
SRV_BACKUP
) ? 1 : 0);

2142 i‡(
sv
->
°©e
 & 
SRV_CHECKED
)

2143 
	`chunk_¥ötf
(&
msg
,

2145 
sv
->
cou¡îs
.
Áûed_checks
, sv->cou¡îs.
down_å™s
,

2146 ()(
now
.
tv_£c
 - 
sv
->
œ°_ch™ge
), 
	`§v_dow¡ime
(sv));

2148 
	`chunk_¥ötf
(&
msg
,

2152 
	`chunk_¥ötf
(&
msg
,

2155 
	`LIM2A0
(
sv
->
maxqueue
, ""),

2156 
ªœtive_pid
, 
px
->
uuid
, 
sv
->
puid
);

2159 i‡((
sv
->
°©e
 & 
SRV_WARMINGUP
) &&

2160 
now
.
tv_£c
 < 
sv
->
œ°_ch™ge
 + sv->
¶ow°¨t
 &&

2161 
now
.
tv_£c
 >
sv
->
œ°_ch™ge
) {

2162 
øtio
;

2163 
øtio
 = 
	`MAX
(1, 100 * (
now
.
tv_£c
 - 
sv
->
œ°_ch™ge
Ë/ sv->
¶ow°¨t
);

2164 
	`chunk_¥ötf
(&
msg
, "%d", 
øtio
);

2168 
	`chunk_¥ötf
(&
msg
, ",%Œd,", 
sv
->
cou¡îs
.
cum_lbc⁄n
);

2171 i‡(
sv
->
åacked
)

2172 
	`chunk_¥ötf
(&
msg
, "%s/%s,",

2173 
sv
->
åacked
->
¥oxy
->
id
, sv->tracked->id);

2175 
	`chunk_¥ötf
(&
msg
, ",");

2178 
	`chunk_¥ötf
(&
msg
, "%d,", 
STATS_TYPE_SV
);

2181 
	`chunk_¥ötf
(&
msg
, "%u,,%u,",

2182 
	`ªad_‰eq_˘r
(&
sv
->
£ss_≥r_£c
),

2183 
sv
->
cou¡îs
.
•s_max
);

2185 i‡(
sv
->
°©e
 & 
SRV_CHECKED
) {

2187 
	`chunk_¥ötf
(&
msg
, "%s,", 
	`gë_check_°©us_öfo
(
sv
->
check_°©us
));

2190 i‡(
sv
->
check_°©us
 >
HCHK_STATUS_L57DATA
)

2191 
	`chunk_¥ötf
(&
msg
, "%u,", 
sv
->
check_code
);

2193 
	`chunk_¥ötf
(&
msg
, ",");

2196 i‡(
sv
->
check_°©us
 >
HCHK_STATUS_CHECKED
)

2197 
	`chunk_¥ötf
(&
msg
, "%lu,", 
sv
->
check_duøti⁄
);

2199 
	`chunk_¥ötf
(&
msg
, ",");

2202 
	`chunk_¥ötf
(&
msg
, ",,,");

2206 i‡(
px
->
mode
 =
PR_MODE_HTTP
) {

2207 
i
;

2209 
i
=1; i<6; i++)

2210 
	`chunk_¥ötf
(&
msg
, "%Œd,", 
sv
->
cou¡îs
.
p
.
hâp
.
r•
[
i
]);

2212 
	`chunk_¥ötf
(&
msg
, "%Œd,", 
sv
->
cou¡îs
.
p
.
hâp
.
r•
[0]);

2214 
	`chunk_¥ötf
(&
msg
, ",,,,,,");

2218 
	`chunk_¥ötf
(&
msg
, "%Œd,", 
sv
->
cou¡îs
.
Áûed_h™a
);

2221 
	`chunk_¥ötf
(&
msg
, ",,,");

2224 
	`chunk_¥ötf
(&
msg
, "%lld,%lld,",

2225 
sv
->
cou¡îs
.
˛i_ab‹ts
, sv->cou¡îs.
§v_ab‹ts
);

2228 
	`chunk_¥ötf
(&
msg
, "\n");

2230 i‡(
	`buf„r_„ed_chunk
(
ªp
, &
msg
) >= 0)

2234 
s
->
d©a_˘x
.
°©s
.
px_°
 = 
DATA_ST_PX_BE
;

2237 
DATA_ST_PX_BE
:

2239 i‡((
px
->
ˇp
 & 
PR_CAP_BE
) &&

2240 (!(
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_BOUND
Ë|| (s->d©a_˘x.°©s.
ty≥
 & (1 << 
STATS_TYPE_BE
)))) {

2241 i‡(!(
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_FMT_CSV
)) {

2242 
	`chunk_¥ötf
(&
msg
, "<tr class=\"backend\">");

2243 i‡(
px
->
ˇp
 & 
PR_CAP_BE
 &&Öx->
§v
 && (
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_ADMIN
)) {

2245 
	`chunk_¥ötf
(&
msg
, "<td></td>");

2247 
	`chunk_¥ötf
(&
msg
, "<td class=ac");

2249 i‡(
uri
->
Êags
&
ST_SHLGNDS
) {

2251 
	`chunk_¥ötf
(&
msg
, "Åitle=\"balancing: %s",

2252 
	`backíd_lb_Ægo_°r
(
px
->
lb¥m
.
Ægo
 & 
BE_LB_ALGO
));

2255 i‡(
px
->
cookõ_«me
) {

2256 
chunk
 
§c
;

2258 
	`chunk_¥ötf
(&
msg
, ", cookie: '");

2260 
	`chunk_öôÀn
(&
§c
, 
px
->
cookõ_«me
, 0, 
	`°æí
(px->cookie_name));

2261 
	`chunk_htmÀncode
(&
msg
, &
§c
);

2263 
	`chunk_¥ötf
(&
msg
, "'");

2266 
	`chunk_¥ötf
(&
msg
, "\"");

2270 
	`chunk_¥ötf
(&
msg
,

2279 (
uri
->
Êags
 & 
ST_SHLGNDS
)?"<u>":"",

2280 
px
->
id
,Öx->id,

2281 (
uri
->
Êags
 & 
ST_SHLGNDS
)?"</u>":"",

2282 
	`U2H0
(
px
->
nb≥nd
Ë , 
	`U2H1
’x->
cou¡îs
.
nb≥nd_max
),

2283 
	`U2H2
(
	`ªad_‰eq_˘r
(&
px
->
be_£ss_≥r_£c
)), 
	`U2H3
’x->
cou¡îs
.
be_•s_max
));

2285 
	`chunk_¥ötf
(&
msg
,

2290 
	`U2H2
(
px
->
bec⁄n
), 
	`U2H3
’x->
cou¡îs
.
bec⁄n_max
), 
	`U2H4
’x->
fuŒc⁄n
));

2293 i‡(
px
->
mode
 =
PR_MODE_HTTP
) {

2294 
i
;

2296 
	`chunk_¥ötf
(&
msg
, "Åitle=\"rsp codes:");

2298 
i
 = 1; i < 6; i++)

2299 
	`chunk_¥ötf
(&
msg
, " %dxx=%Œd", 
i
, 
px
->
cou¡îs
.
be
.
hâp
.
r•
[i]);

2301 
	`chunk_¥ötf
(&
msg
, " othî=%Œd\"", 
px
->
cou¡îs
.
be
.
hâp
.
r•
[0]);

2304 
	`chunk_¥ötf
(&
msg
,

2310 (
px
->
mode
 =
PR_MODE_HTTP
)?"<u>":"",

2311 
	`U2H6
(
px
->
cou¡îs
.
cum_bec⁄n
),

2312 (
px
->
mode
 =
PR_MODE_HTTP
)?"</u>":"",

2313 
	`U2H7
(
px
->
cou¡îs
.
cum_lbc⁄n
),

2314 
	`U2H8
(
px
->
cou¡îs
.
byãs_ö
), 
	`U2H9
’x->cou¡îs.
byãs_out
));

2316 
	`chunk_¥ötf
(&
msg
,

2332 
	`U2H0
(
px
->
cou¡îs
.
díõd_ªq
), 
	`U2H1
’x->cou¡îs.
díõd_ª•
),

2333 
	`U2H2
(
px
->
cou¡îs
.
Áûed_c⁄ns
),

2334 
px
->
cou¡îs
.
˛i_ab‹ts
,

2335 
px
->
cou¡îs
.
§v_ab‹ts
,

2336 
	`U2H5
(
px
->
cou¡îs
.
Áûed_ª•
),

2337 
px
->
cou¡îs
.
ªåõs
,Öx->cou¡îs.
ªdi•©ches
,

2338 
	`hum™_time
(
now
.
tv_£c
 - 
px
->
œ°_ch™ge
, 1),

2339 (
px
->
lb¥m
.
tŸ_weight
 > 0 || !px->
§v
) ? "UP" :

2341 (
px
->
lb¥m
.
tŸ_weight
 *Öx->lb¥m.
wmu…
 +Öx->lb¥m.
wdiv
 - 1) /Öx->lbprm.wdiv,

2342 
px
->
§v_a˘
,Öx->
§v_bck
);

2344 
	`chunk_¥ötf
(&
msg
,

2350 
px
->
down_å™s
,

2351 
px
->
§v
?
	`hum™_time
(
	`be_dow¡ime
(px), 1):"&nbsp;");

2353 
	`chunk_¥ötf
(&
msg
,

2382 
px
->
id
,

2383 
px
->
nb≥nd
 ,Öx->
cou¡îs
.
nb≥nd_max
,

2384 
px
->
bec⁄n
,Öx->
cou¡îs
.
bec⁄n_max
,Öx->
fuŒc⁄n
,Öx->cou¡îs.
cum_bec⁄n
,

2385 
px
->
cou¡îs
.
byãs_ö
,Öx->cou¡îs.
byãs_out
,

2386 
px
->
cou¡îs
.
díõd_ªq
,Öx->cou¡îs.
díõd_ª•
,

2387 
px
->
cou¡îs
.
Áûed_c⁄ns
,Öx->cou¡îs.
Áûed_ª•
,

2388 
px
->
cou¡îs
.
ªåõs
,Öx->cou¡îs.
ªdi•©ches
,

2389 (
px
->
lb¥m
.
tŸ_weight
 > 0 || !px->
§v
) ? "UP" : "DOWN",

2390 (
px
->
lb¥m
.
tŸ_weight
 *Öx->lb¥m.
wmu…
 +Öx->lb¥m.
wdiv
 - 1) /Öx->lbprm.wdiv,

2391 
px
->
§v_a˘
,Öx->
§v_bck
,

2392 
px
->
down_å™s
, ()(
now
.
tv_£c
 -Öx->
œ°_ch™ge
),

2393 
px
->
§v
?
	`be_dow¡ime
(px):0,

2394 
ªœtive_pid
, 
px
->
uuid
,

2395 
px
->
cou¡îs
.
cum_lbc⁄n
, 
STATS_TYPE_BE
,

2396 
	`ªad_‰eq_˘r
(&
px
->
be_£ss_≥r_£c
),

2397 
px
->
cou¡îs
.
be_•s_max
);

2400 i‡(
px
->
mode
 =
PR_MODE_HTTP
) {

2401 
i
;

2403 
i
=1; i<6; i++)

2404 
	`chunk_¥ötf
(&
msg
, "%Œd,", 
px
->
cou¡îs
.
be
.
hâp
.
r•
[
i
]);

2406 
	`chunk_¥ötf
(&
msg
, "%Œd,", 
px
->
cou¡îs
.
be
.
hâp
.
r•
[0]);

2408 
	`chunk_¥ötf
(&
msg
, ",,,,,,");

2412 
	`chunk_¥ötf
(&
msg
, ",");

2415 
	`chunk_¥ötf
(&
msg
, ",,,");

2418 
	`chunk_¥ötf
(&
msg
, "%lld,%lld,",

2419 
px
->
cou¡îs
.
˛i_ab‹ts
,Öx->cou¡îs.
§v_ab‹ts
);

2422 
	`chunk_¥ötf
(&
msg
, "\n");

2425 i‡(
	`buf„r_„ed_chunk
(
ªp
, &
msg
) >= 0)

2429 
s
->
d©a_˘x
.
°©s
.
px_°
 = 
DATA_ST_PX_END
;

2432 
DATA_ST_PX_END
:

2433 i‡(!(
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_FMT_CSV
)) {

2434 
	`chunk_¥ötf
(&
msg
, "</table>");

2436 i‡(
px
->
ˇp
 & 
PR_CAP_BE
 &&Öx->
§v
 && (
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_ADMIN
)) {

2438 
	`chunk_¥ötf
(&
msg
,

2448 
px
->
id
);

2451 
	`chunk_¥ötf
(&
msg
, "<p>\n");

2453 i‡(
	`buf„r_„ed_chunk
(
ªp
, &
msg
) >= 0)

2457 
s
->
d©a_˘x
.
°©s
.
px_°
 = 
DATA_ST_PX_FIN
;

2460 
DATA_ST_PX_FIN
:

2467 
	}
}

2477 
	$°©s_dump_fuŒ_£ss_to_buf„r
(
£ssi⁄
 *
s
, 
buf„r
 *
ªp
)

2479 
tm
Åm;

2480 
chunk
 
msg
;

2481 
£ssi⁄
 *
£ss
;

2482 c⁄° *
m⁄th«me
[12];

2483 
≤
[
INET6_ADDRSTRLEN
];

2485 
	`chunk_öô
(&
msg
, 
åash
, (trash));

2486 
£ss
 = 
s
->
d©a_˘x
.£ss.
èrgë
;

2488 i‡(
s
->
d©a_˘x
.
£ss
.
£˘i⁄
 > 0 && s->d©a_˘x.£ss.
uid
 !£ss->
uniq_id
) {

2490 
	`chunk_¥ötf
(&
msg
, " *** sessionÅerminated while we were watching it ***\n");

2491 i‡(
	`buf„r_„ed_chunk
(
ªp
, &
msg
) >= 0)

2493 
s
->
d©a_˘x
.
£ss
.
èrgë
 = 
NULL
;

2494 
s
->
d©a_˘x
.
£ss
.
uid
 = 0;

2498 
s
->
d©a_˘x
.
£ss
.
£˘i⁄
) {

2500 
s
->
d©a_˘x
.
£ss
.
uid
 = sess->
uniq_id
;

2501 
s
->
d©a_˘x
.
£ss
.
£˘i⁄
 = 1;

2505 
	`chunk_¥ötf
(&
msg
,

2507 
£ss
,

2508 
£ss
->
uniq_id
,

2509 
£ss
->
li°íî
->
¥Ÿo
->
«me
);

2511 
£ss
->
li°íî
->
¥Ÿo
->
sock_Ámûy
) {

2512 
AF_INET
:

2513 
	`öë_¡›
(
AF_INET
,

2514 (c⁄° *)&((
sockaddr_ö
 *)&
£ss
->
˛i_addr
)->
sö_addr
,

2515 
≤
, (pn));

2517 
	`chunk_¥ötf
(&
msg
,

2519 
≤
,

2520 
	`¡ohs
(((
sockaddr_ö
 *)&
£ss
->
˛i_addr
)->
sö_p‹t
));

2522 
AF_INET6
:

2523 
	`öë_¡›
(
AF_INET6
,

2524 (c⁄° *)&((
sockaddr_ö6
 *)(&
£ss
->
˛i_addr
))->
sö6_addr
,

2525 
≤
, (pn));

2527 
	`chunk_¥ötf
(&
msg
,

2529 
≤
,

2530 
	`¡ohs
(((
sockaddr_ö6
 *)&
£ss
->
˛i_addr
)->
sö6_p‹t
));

2532 
AF_UNIX
:

2535 
	`chunk_¥ötf
(&
msg
, "\n");

2539 
	`chunk_¥ötf
(&
msg
,

2541 
£ss
->
Êags
, sess->
c⁄n_ªåõs
, sess->
§v_c⁄n
, sess->
≥nd_pos
);

2543 
	`chunk_¥ötf
(&
msg
,

2545 
£ss
->
„
->
id
, sess->„->
uuid
, sess->„->
mode
 ? "http" : "tcp",

2546 
£ss
->
li°íî
 ? sess->li°íî->
«me
 ? sess->listener->name : "?" : "?",

2547 
£ss
->
li°íî
 ? sess->li°íî->
luid
 : 0);

2549 
	`chunk_¥ötf
(&
msg
,

2551 
£ss
->
be
->
id
, sess->be->
uuid
, sess->be->
mode
 ? "http" : "tcp",

2552 
£ss
->
§v
 ? sess->§v->
id
 : "<none>",

2553 
£ss
->
§v
 ? sess->§v->
puid
 : 0);

2555 
	`chunk_¥ötf
(&
msg
,

2557 
£ss
->
èsk
,

2558 
£ss
->
èsk
->
°©e
,

2559 
£ss
->
èsk
->
ni˚
, sess->èsk->
ˇŒs
,

2560 
£ss
->
èsk
->
expúe
 ?

2561 
	`tick_is_expúed
(
£ss
->
èsk
->
expúe
, 
now_ms
) ? "<PAST>" :

2562 
	`hum™_time
(
	`TICKS_TO_MS
(
£ss
->
èsk
->
expúe
 - 
now_ms
),

2563 
	`TICKS_TO_MS
(1000)) : "<NEVER>",

2564 
	`èsk_ö_rq
(
£ss
->
èsk
) ? ",Ñunning" : "");

2566 
	`gë_loˇ…ime
(
£ss
->
logs
.
ac˚±_d©e
.
tv_£c
, &
tm
);

2567 
	`chunk_¥ötf
(&
msg
,

2569 
tm
.
tm_mday
, 
m⁄th«me
[tm.
tm_m⁄
],Åm.
tm_yór
+1900,

2570 
tm
.
tm_hour
,Åm.
tm_mö
,Åm.
tm_£c
, ()(
£ss
->
logs
.
ac˚±_d©e
.
tv_u£c
),

2571 
	`hum™_time
(
now
.
tv_£c
 - 
£ss
->
logs
.
ac˚±_d©e
.tv_sec, 1));

2573 
	`chunk_¥ötf
(&
msg
,

2575 &
£ss
->
si
[0],

2576 
£ss
->
si
[0].
°©e
,

2577 
£ss
->
si
[0].
Êags
,

2578 
£ss
->
si
[0].
fd
,

2579 
£ss
->
si
[0].
exp
 ?

2580 
	`tick_is_expúed
(
£ss
->
si
[0].
exp
, 
now_ms
) ? "<PAST>" :

2581 
	`hum™_time
(
	`TICKS_TO_MS
(
£ss
->
si
[0].
exp
 - 
now_ms
),

2582 
	`TICKS_TO_MS
(1000)) : "<NEVER>",

2583 
£ss
->
si
[0].
îr_ty≥
);

2585 
	`chunk_¥ötf
(&
msg
,

2587 &
£ss
->
si
[1],

2588 
£ss
->
si
[1].
°©e
,

2589 
£ss
->
si
[1].
Êags
,

2590 
£ss
->
si
[1].
fd
,

2591 
£ss
->
si
[1].
exp
 ?

2592 
	`tick_is_expúed
(
£ss
->
si
[1].
exp
, 
now_ms
) ? "<PAST>" :

2593 
	`hum™_time
(
	`TICKS_TO_MS
(
£ss
->
si
[1].
exp
 - 
now_ms
),

2594 
	`TICKS_TO_MS
(1000)) : "<NEVER>",

2595 
£ss
->
si
[1].
îr_ty≥
);

2597 
	`chunk_¥ötf
(&
msg
,

2599 &
£ss
->
txn
, sess->txn.
Êags
, sess->txn.
mëh
, sess->txn.
°©us
,

2600 
£ss
->
txn
.
ªq
.
msg_°©e
, sess->txn.
r•
.msg_state);

2603 
	`chunk_¥ötf
(&
msg
,

2606 
£ss
->
ªq
,

2607 
£ss
->
ªq
->
Êags
, sess->ªq->
™Æy£rs
,

2608 
£ss
->
ªq
->
l
, sess->ªq->
£nd_max
,

2609 
£ss
->
ªq
->
pùe
 ? sess->ªq->pùe->
d©a
 : 0,

2610 
£ss
->
ªq
->
to_f‹w¨d
,

2611 
£ss
->
ªq
->
™Æy£_exp
 ?

2612 
	`hum™_time
(
	`TICKS_TO_MS
(
£ss
->
ªq
->
™Æy£_exp
 - 
now_ms
),

2613 
	`TICKS_TO_MS
(1000)) : "<NEVER>");

2615 
	`chunk_¥ötf
(&
msg
,

2617 
£ss
->
ªq
->
ªx
 ?

2618 
	`hum™_time
(
	`TICKS_TO_MS
(
£ss
->
ªq
->
ªx
 - 
now_ms
),

2619 
	`TICKS_TO_MS
(1000)) : "<NEVER>");

2621 
	`chunk_¥ötf
(&
msg
,

2624 
£ss
->
ªq
->
wex
 ?

2625 
	`hum™_time
(
	`TICKS_TO_MS
(
£ss
->
ªq
->
wex
 - 
now_ms
),

2626 
	`TICKS_TO_MS
(1000)) : "<NEVER>",

2627 
£ss
->
ªq
->
d©a
,

2628 ()(
£ss
->
ªq
->
r
 - sess->ªq->
d©a
),

2629 ()(
£ss
->
ªq
->
w
 - sess->ªq->
d©a
),

2630 ()(
£ss
->
ªq
->
Ã
 - sess->ªq->
d©a
),

2631 
£ss
->
ªq
->
tŸÆ
);

2633 
	`chunk_¥ötf
(&
msg
,

2636 
£ss
->
ªp
,

2637 
£ss
->
ªp
->
Êags
, sess->ªp->
™Æy£rs
,

2638 
£ss
->
ªp
->
l
, sess->ªp->
£nd_max
,

2639 
£ss
->
ªp
->
pùe
 ? sess->ªp->pùe->
d©a
 : 0,

2640 
£ss
->
ªp
->
to_f‹w¨d
,

2641 
£ss
->
ªp
->
™Æy£_exp
 ?

2642 
	`hum™_time
(
	`TICKS_TO_MS
(
£ss
->
ªp
->
™Æy£_exp
 - 
now_ms
),

2643 
	`TICKS_TO_MS
(1000)) : "<NEVER>");

2645 
	`chunk_¥ötf
(&
msg
,

2647 
£ss
->
ªp
->
ªx
 ?

2648 
	`hum™_time
(
	`TICKS_TO_MS
(
£ss
->
ªp
->
ªx
 - 
now_ms
),

2649 
	`TICKS_TO_MS
(1000)) : "<NEVER>");

2651 
	`chunk_¥ötf
(&
msg
,

2654 
£ss
->
ªp
->
wex
 ?

2655 
	`hum™_time
(
	`TICKS_TO_MS
(
£ss
->
ªp
->
wex
 - 
now_ms
),

2656 
	`TICKS_TO_MS
(1000)) : "<NEVER>",

2657 
£ss
->
ªp
->
d©a
,

2658 ()(
£ss
->
ªp
->
r
 - sess->ªp->
d©a
),

2659 ()(
£ss
->
ªp
->
w
 - sess->ªp->
d©a
),

2660 ()(
£ss
->
ªp
->
Ã
 - sess->ªp->
d©a
),

2661 
£ss
->
ªp
->
tŸÆ
);

2663 i‡(
	`buf„r_„ed_chunk
(
ªp
, &
msg
) >= 0)

2669 
s
->
d©a_˘x
.
£ss
.
uid
 = 0;

2671 
	}
}

2679 
	$°©s_dump_£ss_to_buf„r
(
£ssi⁄
 *
s
, 
buf„r
 *
ªp
)

2681 
chunk
 
msg
;

2683 i‡(
	`u∆ikñy
(
ªp
->
Êags
 & (
BF_WRITE_ERROR
|
BF_SHUTW
))) {

2687 i‡(
s
->
d©a_°©e
 =
DATA_ST_LIST
) {

2688 i‡(!
	`LIST_ISEMPTY
(&
s
->
d©a_˘x
.
£ss
.
bªf
.
u£rs
)) {

2689 
	`LIST_DEL
(&
s
->
d©a_˘x
.
£ss
.
bªf
.
u£rs
);

2690 
	`LIST_INIT
(&
s
->
d©a_˘x
.
£ss
.
bªf
.
u£rs
);

2696 
	`chunk_öô
(&
msg
, 
åash
, (trash));

2698 
s
->
d©a_°©e
) {

2699 
DATA_ST_INIT
:

2707 
	`LIST_INIT
(&
s
->
d©a_˘x
.
£ss
.
bªf
.
u£rs
);

2708 
s
->
d©a_˘x
.
£ss
.
bªf
.
ªf
 = 
£ssi⁄s
.
n
;

2709 
s
->
d©a_°©e
 = 
DATA_ST_LIST
;

2712 
DATA_ST_LIST
:

2714 i‡(!
	`LIST_ISEMPTY
(&
s
->
d©a_˘x
.
£ss
.
bªf
.
u£rs
)) {

2715 
	`LIST_DEL
(&
s
->
d©a_˘x
.
£ss
.
bªf
.
u£rs
);

2716 
	`LIST_INIT
(&
s
->
d©a_˘x
.
£ss
.
bªf
.
u£rs
);

2720 
s
->
d©a_˘x
.
£ss
.
bªf
.
ªf
 !&
£ssi⁄s
) {

2721 
≤
[
INET6_ADDRSTRLEN
 + 
	`°æí
(":65535")];

2722 
£ssi⁄
 *
cuº_£ss
;

2724 
cuº_£ss
 = 
	`LIST_ELEM
(
s
->
d©a_˘x
.
£ss
.
bªf
.
ªf
, 
£ssi⁄
 *, 
li°
);

2726 i‡(
s
->
d©a_˘x
.
£ss
.
èrgë
) {

2727 i‡(
s
->
d©a_˘x
.
£ss
.
èrgë
 !
cuº_£ss
)

2728 
√xt_£ss
;

2730 
	`LIST_ADDQ
(&
cuº_£ss
->
back_ªfs
, &
s
->
d©a_˘x
.
£ss
.
bªf
.
u£rs
);

2732 i‡(!
	`°©s_dump_fuŒ_£ss_to_buf„r
(
s
, 
ªp
))

2736 
	`LIST_DEL
(&
s
->
d©a_˘x
.
£ss
.
bªf
.
u£rs
);

2737 
	`LIST_INIT
(&
s
->
d©a_˘x
.
£ss
.
bªf
.
u£rs
);

2738 
s
->
d©a_˘x
.
£ss
.
èrgë
 = 
NULL
;

2742 
	`chunk_¥ötf
(&
msg
,

2744 
cuº_£ss
,

2745 
cuº_£ss
->
li°íî
->
¥Ÿo
->
«me
);

2747 
cuº_£ss
->
li°íî
->
¥Ÿo
->
sock_Ámûy
) {

2748 
AF_INET
:

2749 
	`öë_¡›
(
AF_INET
,

2750 (c⁄° *)&((
sockaddr_ö
 *)&
cuº_£ss
->
˛i_addr
)->
sö_addr
,

2751 
≤
, (pn));

2753 
	`chunk_¥ötf
(&
msg
,

2755 
≤
,

2756 
	`¡ohs
(((
sockaddr_ö
 *)&
cuº_£ss
->
˛i_addr
)->
sö_p‹t
),

2757 
cuº_£ss
->
„
->
id
,

2758 
cuº_£ss
->
be
->
id
,

2759 
cuº_£ss
->
§v
 ? cuº_£ss->§v->
id
 : "<none>"

2762 
AF_INET6
:

2763 
	`öë_¡›
(
AF_INET6
,

2764 (c⁄° *)&((
sockaddr_ö6
 *)(&
cuº_£ss
->
˛i_addr
))->
sö6_addr
,

2765 
≤
, (pn));

2767 
	`chunk_¥ötf
(&
msg
,

2769 
≤
,

2770 
	`¡ohs
(((
sockaddr_ö6
 *)&
cuº_£ss
->
˛i_addr
)->
sö6_p‹t
),

2771 
cuº_£ss
->
„
->
id
,

2772 
cuº_£ss
->
be
->
id
,

2773 
cuº_£ss
->
§v
 ? cuº_£ss->§v->
id
 : "<none>"

2777 
AF_UNIX
:

2782 
	`chunk_¥ötf
(&
msg
,

2784 
cuº_£ss
->
èsk
->
°©e
,

2785 
	`hum™_time
(
now
.
tv_£c
 - 
cuº_£ss
->
logs
.
tv_ac˚±
.tv_sec, 1),

2786 
cuº_£ss
->
èsk
->
ˇŒs
);

2788 
	`chunk_¥ötf
(&
msg
,

2790 
cuº_£ss
->
ªq
->
Êags
,

2791 
cuº_£ss
->
ªq
->
l
,

2792 
cuº_£ss
->
ªq
->
™Æy£rs
,

2793 
cuº_£ss
->
ªq
->
ªx
 ?

2794 
	`hum™_time
(
	`TICKS_TO_MS
(
cuº_£ss
->
ªq
->
ªx
 - 
now_ms
),

2795 
	`TICKS_TO_MS
(1000)) : "");

2797 
	`chunk_¥ötf
(&
msg
,

2799 
cuº_£ss
->
ªq
->
wex
 ?

2800 
	`hum™_time
(
	`TICKS_TO_MS
(
cuº_£ss
->
ªq
->
wex
 - 
now_ms
),

2801 
	`TICKS_TO_MS
(1000)) : "");

2803 
	`chunk_¥ötf
(&
msg
,

2805 
cuº_£ss
->
ªq
->
™Æy£_exp
 ?

2806 
	`hum™_time
(
	`TICKS_TO_MS
(
cuº_£ss
->
ªq
->
™Æy£_exp
 - 
now_ms
),

2807 
	`TICKS_TO_MS
(1000)) : "");

2809 
	`chunk_¥ötf
(&
msg
,

2811 
cuº_£ss
->
ªp
->
Êags
,

2812 
cuº_£ss
->
ªp
->
l
,

2813 
cuº_£ss
->
ªp
->
™Æy£rs
,

2814 
cuº_£ss
->
ªp
->
ªx
 ?

2815 
	`hum™_time
(
	`TICKS_TO_MS
(
cuº_£ss
->
ªp
->
ªx
 - 
now_ms
),

2816 
	`TICKS_TO_MS
(1000)) : "");

2818 
	`chunk_¥ötf
(&
msg
,

2820 
cuº_£ss
->
ªp
->
wex
 ?

2821 
	`hum™_time
(
	`TICKS_TO_MS
(
cuº_£ss
->
ªp
->
wex
 - 
now_ms
),

2822 
	`TICKS_TO_MS
(1000)) : "");

2824 
	`chunk_¥ötf
(&
msg
,

2826 
cuº_£ss
->
ªp
->
™Æy£_exp
 ?

2827 
	`hum™_time
(
	`TICKS_TO_MS
(
cuº_£ss
->
ªp
->
™Æy£_exp
 - 
now_ms
),

2828 
	`TICKS_TO_MS
(1000)) : "");

2830 
	`chunk_¥ötf
(&
msg
,

2832 
cuº_£ss
->
si
[0].
°©e
,

2833 
cuº_£ss
->
si
[0].
Êags
,

2834 
cuº_£ss
->
si
[0].
fd
,

2835 
cuº_£ss
->
si
[0].
exp
 ?

2836 
	`hum™_time
(
	`TICKS_TO_MS
(
cuº_£ss
->
si
[0].
exp
 - 
now_ms
),

2837 
	`TICKS_TO_MS
(1000)) : "");

2839 
	`chunk_¥ötf
(&
msg
,

2841 
cuº_£ss
->
si
[1].
°©e
,

2842 
cuº_£ss
->
si
[1].
Êags
,

2843 
cuº_£ss
->
si
[1].
fd
,

2844 
cuº_£ss
->
si
[1].
exp
 ?

2845 
	`hum™_time
(
	`TICKS_TO_MS
(
cuº_£ss
->
si
[1].
exp
 - 
now_ms
),

2846 
	`TICKS_TO_MS
(1000)) : "");

2848 
	`chunk_¥ötf
(&
msg
,

2850 
cuº_£ss
->
èsk
->
expúe
 ?

2851 
	`hum™_time
(
	`TICKS_TO_MS
(
cuº_£ss
->
èsk
->
expúe
 - 
now_ms
),

2852 
	`TICKS_TO_MS
(1000)) : "");

2853 i‡(
	`èsk_ö_rq
(
cuº_£ss
->
èsk
))

2854 
	`chunk_¥ötf
(&
msg
, "Ñun“i˚=%d)", 
cuº_£ss
->
èsk
->
ni˚
);

2856 
	`chunk_¥ötf
(&
msg
, "\n");

2858 i‡(
	`buf„r_„ed_chunk
(
ªp
, &
msg
) >= 0) {

2862 
	`LIST_ADDQ
(&
cuº_£ss
->
back_ªfs
, &
s
->
d©a_˘x
.
£ss
.
bªf
.
u£rs
);

2866 
√xt_£ss
:

2867 
s
->
d©a_˘x
.
£ss
.
bªf
.
ªf
 = 
cuº_£ss
->
li°
.
n
;

2870 i‡(
s
->
d©a_˘x
.
£ss
.
èrgë
) {

2872 i‡(
s
->
d©a_˘x
.
£ss
.
£˘i⁄
 > 0)

2873 
	`chunk_¥ötf
(&
msg
, " *** sessionÅerminated while we were watching it ***\n");

2875 
	`chunk_¥ötf
(&
msg
, "SessionÇot found.\n");

2877 i‡(
	`buf„r_„ed_chunk
(
ªp
, &
msg
) >= 0)

2880 
s
->
d©a_˘x
.
£ss
.
èrgë
 = 
NULL
;

2881 
s
->
d©a_˘x
.
£ss
.
uid
 = 0;

2885 
s
->
d©a_°©e
 = 
DATA_ST_FIN
;

2889 
s
->
d©a_°©e
 = 
DATA_ST_FIN
;

2892 
	}
}

2902 
	$dump_ãxt_löe
(
chunk
 *
out
, c⁄° *
buf
, 
bsize
, 
Àn
,

2903 *
löe
, 
±r
)

2905 
íd
;

2906 
c
;

2908 
íd
 = 
out
->
Àn
 + 80;

2909 i‡(
íd
 > 
out
->
size
)

2910  
±r
;

2912 
	`chunk_¥ötf
(
out
, " %05d%¯", 
±r
, (±∏=*
löe
) ? ' ' : '+');

2914 
±r
 < 
Àn
 &&Öå < 
bsize
) {

2915 
c
 = 
buf
[
±r
];

2916 i‡(
	`i•röt
(
c
Ë&& 
	`ißscii
(c) && c != '\\') {

2917 i‡(
out
->
Àn
 > 
íd
 - 2)

2919 
out
->
°r
[out->
Àn
++] = 
c
;

2920 } i‡(
c
 == '\t' || c == '\n' || c == '\r' || c == '\e' || c == '\\') {

2921 i‡(
out
->
Àn
 > 
íd
 - 3)

2923 
out
->
°r
[out->
Àn
++] = '\\';

2924 
c
) {

2925 '\t': 
c
 = 't'; ;

2926 '\n': 
c
 = 'n'; ;

2927 '\r': 
c
 = 'r'; ;

2928 '\e': 
c
 = 'e'; ;

2929 '\\': 
c
 = '\\'; ;

2931 
out
->
°r
[out->
Àn
++] = 
c
;

2933 i‡(
out
->
Àn
 > 
íd
 - 5)

2935 
out
->
°r
[out->
Àn
++] = '\\';

2936 
out
->
°r
[out->
Àn
++] = 'x';

2937 
out
->
°r
[out->
Àn
++] = 
hexèb
[(
c
 >> 4) & 0xF];

2938 
out
->
°r
[out->
Àn
++] = 
hexèb
[
c
 & 0xF];

2940 i‡(
buf
[
±r
++] == '\n') {

2942 
out
->
°r
[out->
Àn
++] = '\n';

2943 *
löe
 = 
±r
;

2944  
±r
;

2948 
out
->
°r
[out->
Àn
++] = '\n';

2949  
±r
;

2950 
	}
}

2958 
	$°©s_dump_îr‹s_to_buf„r
(
£ssi⁄
 *
s
, 
buf„r
 *
ªp
)

2960 c⁄° *
m⁄th«me
[12];

2961 
chunk
 
msg
;

2963 i‡(
	`u∆ikñy
(
ªp
->
Êags
 & (
BF_WRITE_ERROR
|
BF_SHUTW
)))

2966 
	`chunk_öô
(&
msg
, 
åash
, (trash));

2968 i‡(!
s
->
d©a_˘x
.
îr‹s
.
px
) {

2972 
s
->
d©a_˘x
.
îr‹s
.
px
 = 
¥oxy
;

2973 
s
->
d©a_˘x
.
îr‹s
.
buf
 = 0;

2974 
s
->
d©a_˘x
.
îr‹s
.
bﬁ
 = 0;

2975 
s
->
d©a_˘x
.
îr‹s
.
±r
 = -1;

2981 
s
->
d©a_˘x
.
îr‹s
.
px
) {

2982 
îr‹_¢≠shŸ
 *
es
;

2984 i‡(
s
->
d©a_˘x
.
îr‹s
.
buf
 == 0)

2985 
es
 = &
s
->
d©a_˘x
.
îr‹s
.
px
->
övÆid_ªq
;

2987 
es
 = &
s
->
d©a_˘x
.
îr‹s
.
px
->
övÆid_ªp
;

2989 i‡(!
es
->
whí
.
tv_£c
)

2990 
√xt
;

2992 i‡(
s
->
d©a_˘x
.
îr‹s
.
iid
 >= 0 &&

2993 
s
->
d©a_˘x
.
îr‹s
.
px
->
uuid
 !s->d©a_˘x.îr‹s.
iid
 &&

2994 
es
->
€
->
uuid
 !
s
->
d©a_˘x
.
îr‹s
.
iid
)

2995 
√xt
;

2997 i‡(
s
->
d©a_˘x
.
îr‹s
.
±r
 < 0) {

3000 
≤
[
INET6_ADDRSTRLEN
];

3001 
tm
Åm;

3003 
	`gë_loˇ…ime
(
es
->
whí
.
tv_£c
, &
tm
);

3004 
	`chunk_¥ötf
(&
msg
, " \n[%02d/%s/%04d:%02d:%02d:%02d.%03d]",

3005 
tm
.
tm_mday
, 
m⁄th«me
[tm.
tm_m⁄
],Åm.
tm_yór
+1900,

3006 
tm
.
tm_hour
,Åm.
tm_mö
,Åm.
tm_£c
, ()(
es
->
whí
.
tv_u£c
/1000));

3009 i‡(
es
->
§c
.
ss_Ámûy
 =
AF_INET
)

3010 
	`öë_¡›
(
AF_INET
,

3011 (c⁄° *)&((
sockaddr_ö
 *)&
es
->
§c
)->
sö_addr
,

3012 
≤
, (pn));

3014 
	`öë_¡›
(
AF_INET6
,

3015 (c⁄° *)&((
sockaddr_ö6
 *)(&
es
->
§c
))->
sö6_addr
,

3016 
≤
, (pn));

3018 
s
->
d©a_˘x
.
îr‹s
.
buf
) {

3020 
	`chunk_¥ötf
(&
msg
,

3024 
s
->
d©a_˘x
.
îr‹s
.
px
->
id
, s->d©a_˘x.îr‹s.px->
uuid
,

3025 
≤
, 
es
->
sid
, (es->
€
->
ˇp
 & 
PR_CAP_BE
Ë?És->€->
id
 : "<NONE>",

3026 (
es
->
€
->
ˇp
 & 
PR_CAP_BE
Ë?És->€->
uuid
 : -1,

3027 
es
->
§v
 ?És->§v->
id
 : "<NONE>",

3028 
es
->
§v
 ?És->§v->
puid
 : -1,

3029 
es
->
Àn
,És->
pos
);

3032 
	`chunk_¥ötf
(&
msg
,

3036 
s
->
d©a_˘x
.
îr‹s
.
px
->
id
, s->d©a_˘x.îr‹s.px->
uuid
,

3037 
≤
, 
es
->
sid
,És->
€
->
id
,És->€->
uuid
,

3038 
es
->
§v
 ?És->§v->
id
 : "<NONE>",

3039 
es
->
§v
 ?És->§v->
puid
 : -1,

3040 
es
->
Àn
,És->
pos
);

3044 i‡(
	`buf„r_„ed_chunk
(
ªp
, &
msg
) >= 0) {

3048 
s
->
d©a_˘x
.
îr‹s
.
±r
 = 0;

3049 
s
->
d©a_˘x
.
îr‹s
.
sid
 = 
es
->sid;

3052 i‡(
s
->
d©a_˘x
.
îr‹s
.
sid
 !
es
->sid) {

3054 
	`chunk_¥ötf
(&
msg
,

3056 i‡(
	`buf„r_„ed_chunk
(
ªp
, &
msg
) >= 0)

3058 
√xt
;

3062 
s
->
d©a_˘x
.
îr‹s
.
±r
 < 
es
->
Àn
 && s->d©a_˘x.îr‹s.±∏< ”s->
buf
)) {

3063 
√w±r
;

3064 
√wlöe
;

3066 
√wlöe
 = 
s
->
d©a_˘x
.
îr‹s
.
bﬁ
;

3067 
√w±r
 = 
	`dump_ãxt_löe
(&
msg
, 
es
->
buf
, ”s->buf),És->
Àn
, &
√wlöe
, 
s
->
d©a_˘x
.
îr‹s
.
±r
);

3068 i‡(
√w±r
 =
s
->
d©a_˘x
.
îr‹s
.
±r
)

3071 i‡(
	`buf„r_„ed_chunk
(
ªp
, &
msg
) >= 0) {

3075 
s
->
d©a_˘x
.
îr‹s
.
±r
 = 
√w±r
;

3076 
s
->
d©a_˘x
.
îr‹s
.
bﬁ
 = 
√wlöe
;

3078 
√xt
:

3079 
s
->
d©a_˘x
.
îr‹s
.
bﬁ
 = 0;

3080 
s
->
d©a_˘x
.
îr‹s
.
±r
 = -1;

3081 
s
->
d©a_˘x
.
îr‹s
.
buf
++;

3082 i‡(
s
->
d©a_˘x
.
îr‹s
.
buf
 > 1) {

3083 
s
->
d©a_˘x
.
îr‹s
.
buf
 = 0;

3084 
s
->
d©a_˘x
.
îr‹s
.
px
 = s->d©a_˘x.îr‹s.px->
√xt
;

3090 
	}
}

3093 
cfg_kw_li°
 
	gcfg_kws
 = {{ },{

3094 { 
CFG_GLOBAL
, "°©s", 
°©s_∑r£_globÆ
 },

3095 { 0, 
NULL
, NULL },

3098 
__©åibuã__
((
c⁄°ru˘‹
))

3099 
	$__dump°©s_moduÀ_öô
()

3101 
	`cfg_ªgi°î_keyw‹ds
(&
cfg_kws
);

3102 
	}
}

	@src/ev_epoll.c

13 
	~<uni°d.h
>

14 
	~<sys/time.h
>

15 
	~<sys/ty≥s.h
>

17 
	~<comm⁄/com∑t.h
>

18 
	~<comm⁄/c⁄fig.h
>

19 
	~<comm⁄/°™d¨d.h
>

20 
	~<comm⁄/ticks.h
>

21 
	~<comm⁄/time.h
>

22 
	~<comm⁄/toﬁs.h
>

24 
	~<ty≥s/fd.h
>

25 
	~<ty≥s/globÆ.h
>

27 
	~<¥Ÿo/sig«l.h
>

28 
	~<¥Ÿo/èsk.h
>

30 #i‡
deföed
(
USE_MY_EPOLL
)

31 
	~<comm⁄/ïﬁl.h
>

32 
	~<î∫o.h
>

33 
	~<sys/sysˇŒ.h
>

34 
_sysˇŒ1
 (, 
ïﬁl_¸óã
, , 
size
);

35 
_sysˇŒ4
 (, 
ïﬁl_˘l
, , 
ïfd
, , 
›
, , 
fd
, 
ïﬁl_evít
 *, 
evít
);

36 
_sysˇŒ4
 (, 
ïﬁl_waô
, , 
ïfd
, 
ïﬁl_evít
 *, 
evíts
, , 
maxevíts
, , 
timeout
);

38 
	~<sys/ïﬁl.h
>

42 
	sfd_chg
 {

43 
	m¥ev
:2;

44 
	mfd
:30;

47 
	gnbch™ges
 = 0;

48 
fd_chg
 *
	gchg_li°
 = 
NULL
;

49 
fd_chg
 **
	gchg_±r
 = 
NULL
;

59 
uöt32_t
 *
	gfd_evts
;

62 
ïﬁl_evít
 *
	gïﬁl_evíts
;

63 
	gïﬁl_fd
;

68 
ïﬁl_evít
 
	gev
;

74 
	#DIR2MSK
(
dú
Ë((dúË+ 1)

	)

77 
	#FD2OFS
(
fd
Ë((
uöt32_t
)(fdË>> 4)

	)

78 
	#FD2BIT
(
fd
Ë(((
uöt32_t
)(fdË& 0xFË<< 1)

	)

79 
	#FD2MSK
(
fd
Ë(3 << 
	`FD2BIT
(fd))

	)

84 
REGPRM2
 
	$__fd_is_£t
(c⁄° 
fd
, 
dú
)

86  (
fd_evts
[
	`FD2OFS
(
fd
)] >> 
	`FD2BIT
(fd)Ë& 
	`DIR2MSK
(
dú
);

87 
	}
}

99 
	gdmsk2evít
[4] = { 0, 
EPOLLIN
, 
EPOLLOUT
, EPOLLIN | EPOLLOUT };

102 
REGPRM2
 
	$fd_Êush_ch™ges
()

104 
uöt32_t
 
ofs
;

105 
›code
;

106 
¥ev
, 
√xt
;

107 
chg
, 
fd
;

109 
chg
 = 0; chg < 
nbch™ges
; chg++) {

110 
¥ev
 = 
chg_li°
[
chg
].prev;

111 
fd
 = 
chg_li°
[
chg
].fd;

112 
chg_±r
[
fd
] = 
NULL
;

114 
ofs
 = 
	`FD2OFS
(
fd
);

115 
√xt
 = (
fd_evts
[
ofs
] >> 
	`FD2BIT
(
fd
)) & 3;

117 i‡(
¥ev
 =
√xt
)

121 
ev
.
evíts
 = 
dmsk2evít
[
√xt
];

122 
ev
.
d©a
.
fd
 = fd;

124 i‡(
¥ev
) {

125 i‡(!
√xt
) {

127 
›code
 = 
EPOLL_CTL_DEL
;

130 
›code
 = 
EPOLL_CTL_MOD
;

134 
›code
 = 
EPOLL_CTL_ADD
;

137 
	`ïﬁl_˘l
(
ïﬁl_fd
, 
›code
, 
fd
, &
ev
);

139 
nbch™ges
 = 0;

140 
	}
}

142 
REGPRM2
 
	$Æloc_chg_li°
(c⁄° 
fd
, 
ﬁd_evt
)

144 
fd_chg
 *
±r
;

146 i‡(
	`u∆ikñy
(
chg_±r
[
fd
] !
NULL
))

149 #i‡
LIMIT_NUMBER_OF_CHANGES


150 i‡(
nbch™ges
 > 2)

151 
	`fd_Êush_ch™ges
();

154 
±r
 = &
chg_li°
[
nbch™ges
++];

155 
chg_±r
[
fd
] = 
±r
;

156 
±r
->
fd
 = fd;

157 
±r
->
¥ev
 = 
ﬁd_evt
;

158 
	}
}

160 
REGPRM2
 
	$__fd_£t
(c⁄° 
fd
, 
dú
)

162 
uöt32_t
 
ofs
 = 
	`FD2OFS
(
fd
);

163 
uöt32_t
 
dmsk
 = 
	`DIR2MSK
(
dú
);

164 
uöt32_t
 
ﬁd_evt
;

166 
ﬁd_evt
 = 
fd_evts
[
ofs
] >> 
	`FD2BIT
(
fd
);

167 
ﬁd_evt
 &= 3;

168 i‡(
	`u∆ikñy
(
ﬁd_evt
 & 
dmsk
))

171 
	`Æloc_chg_li°
(
fd
, 
ﬁd_evt
);

172 
dmsk
 <<
	`FD2BIT
(
fd
);

173 
fd_evts
[
ofs
] |
dmsk
;

175 
	}
}

177 
REGPRM2
 
	$__fd_˛r
(c⁄° 
fd
, 
dú
)

179 
uöt32_t
 
ofs
 = 
	`FD2OFS
(
fd
);

180 
uöt32_t
 
dmsk
 = 
	`DIR2MSK
(
dú
);

181 
uöt32_t
 
ﬁd_evt
;

183 
ﬁd_evt
 = 
fd_evts
[
ofs
] >> 
	`FD2BIT
(
fd
);

184 
ﬁd_evt
 &= 3;

185 i‡(
	`u∆ikñy
(!(
ﬁd_evt
 & 
dmsk
)))

188 
	`Æloc_chg_li°
(
fd
, 
ﬁd_evt
);

189 
dmsk
 <<
	`FD2BIT
(
fd
);

190 
fd_evts
[
ofs
] &~
dmsk
;

192 
	}
}

194 
REGPRM1
 
	$__fd_ªm
(
fd
)

196 
uöt32_t
 
ofs
 = 
	`FD2OFS
(
fd
);

198 i‡(
	`u∆ikñy
(!((
fd_evts
[
ofs
] >> 
	`FD2BIT
(
fd
)) & 3)))

201 
	`Æloc_chg_li°
(
fd
, 0);

202 
fd_evts
[
ofs
] &~
	`FD2MSK
(
fd
);

204 
	}
}

210 
REGPRM1
 
	$__fd_˛o
(
fd
)

212 
fd_chg
 *
±r
;

213 
fd_evts
[
	`FD2OFS
(
fd
)] &~
	`FD2MSK
(fd);

214 
±r
 = 
chg_±r
[
fd
];

215 i‡(
±r
) {

216 
±r
->
¥ev
 = 0;

217 
chg_±r
[
fd
] = 
NULL
;

220 
	}
}

225 
REGPRM2
 
	$_do_pﬁl
(
pﬁÀr
 *
p
, 
exp
)

227 
°©us
;

228 
fd
;

229 
cou¡
;

230 
waô_time
;

232 i‡(
	`likñy
(
nbch™ges
))

233 
	`fd_Êush_ch™ges
();

236 i‡(
run_queue
 || 
sig«l_queue_Àn
)

237 
waô_time
 = 0;

238 i‡(!
exp
)

239 
waô_time
 = 
MAX_DELAY_MS
;

240 i‡(
	`tick_is_expúed
(
exp
, 
now_ms
))

241 
waô_time
 = 0;

243 
waô_time
 = 
	`TICKS_TO_MS
(
	`tick_ªmaö
(
now_ms
, 
exp
)) + 1;

244 i‡(
waô_time
 > 
MAX_DELAY_MS
)

245 
waô_time
 = 
MAX_DELAY_MS
;

248 
fd
 = 
	`MIN
(
maxfd
, 
globÆ
.
tu√
.
maxpﬁÀvíts
);

249 
°©us
 = 
	`ïﬁl_waô
(
ïﬁl_fd
, 
ïﬁl_evíts
, 
fd
, 
waô_time
);

250 
	`tv_upd©e_d©e
(
waô_time
, 
°©us
);

252 
cou¡
 = 0; cou¡ < 
°©us
; count++) {

253 
fd
 = 
ïﬁl_evíts
[
cou¡
].
d©a
.fd;

255 i‡((
fd_evts
[
	`FD2OFS
(
fd
)] >> 
	`FD2BIT
(fd)Ë& 
	`DIR2MSK
(
DIR_RD
)) {

256 i‡(
fdèb
[
fd
].
°©e
 =
FD_STCLOSE
)

258 i‡(
ïﬁl_evíts
[
cou¡
].
evíts
 & ( 
EPOLLIN
 | 
EPOLLERR
 | 
EPOLLHUP
 ))

259 
fdèb
[
fd
].
cb
[
DIR_RD
].
	`f
(fd);

262 i‡((
fd_evts
[
	`FD2OFS
(
fd
)] >> 
	`FD2BIT
(fd)Ë& 
	`DIR2MSK
(
DIR_WR
)) {

263 i‡(
fdèb
[
fd
].
°©e
 =
FD_STCLOSE
)

265 i‡(
ïﬁl_evíts
[
cou¡
].
evíts
 & ( 
EPOLLOUT
 | 
EPOLLERR
 | 
EPOLLHUP
 ))

266 
fdèb
[
fd
].
cb
[
DIR_WR
].
	`f
(fd);

269 
	}
}

276 
REGPRM1
 
	$_do_öô
(
pﬁÀr
 *
p
)

278 
__œbñ__
 
Áû_chg_±r
, 
Áû_chg_li°
, 
Áû_fdevt
, 
Áû_ì
, 
Áû_fd
;

279 
fd_£t_byãs
;

281 
p
->
¥iv©e
 = 
NULL
;

282 
fd_£t_byãs
 = 4 * (
globÆ
.
maxsock
 + 15) / 16;

284 
ïﬁl_fd
 = 
	`ïﬁl_¸óã
(
globÆ
.
maxsock
 + 1);

285 i‡(
ïﬁl_fd
 < 0)

286 
Áû_fd
;

288 
ïﬁl_evíts
 = (
ïﬁl_evít
*)

289 
	`ˇŒoc
(1, (
ïﬁl_evít
Ë* 
globÆ
.
tu√
.
maxpﬁÀvíts
);

291 i‡(
ïﬁl_evíts
 =
NULL
)

292 
Áû_ì
;

294 i‡((
fd_evts
 = (
uöt32_t
 *)
	`ˇŒoc
(1, 
fd_£t_byãs
)Ë=
NULL
)

295 
Áû_fdevt
;

297 
chg_li°
 = (
fd_chg
 *)
	`ˇŒoc
(1, (fd_chgË* 
globÆ
.
maxsock
);

298 i‡(
chg_li°
 =
NULL
)

299 
Áû_chg_li°
;

301 
chg_±r
 = (
fd_chg
 **)
	`ˇŒoc
(1, (fd_chg*Ë* 
globÆ
.
maxsock
);

302 i‡(
chg_±r
 =
NULL
)

303 
Áû_chg_±r
;

307 
Áû_chg_±r
:

308 
	`‰ì
(
chg_li°
);

309 
Áû_chg_li°
:

310 
	`‰ì
(
fd_evts
);

311 
Áû_fdevt
:

312 
	`‰ì
(
ïﬁl_evíts
);

313 
Áû_ì
:

314 
	`˛o£
(
ïﬁl_fd
);

315 
ïﬁl_fd
 = -1;

316 
Áû_fd
:

317 
p
->
¥ef
 = 0;

319 
	}
}

325 
REGPRM1
 
	$_do_ãrm
(
pﬁÀr
 *
p
)

327 
	`fd_Êush_ch™ges
();

329 
	`‰ì
(
chg_±r
);

330 
	`‰ì
(
chg_li°
);

331 
	`‰ì
(
fd_evts
);

332 
	`‰ì
(
ïﬁl_evíts
);

334 i‡(
ïﬁl_fd
 >= 0) {

335 
	`˛o£
(
ïﬁl_fd
);

336 
ïﬁl_fd
 = -1;

339 
chg_±r
 = 
NULL
;

340 
chg_li°
 = 
NULL
;

341 
fd_evts
 = 
NULL
;

342 
ïﬁl_evíts
 = 
NULL
;

344 
p
->
¥iv©e
 = 
NULL
;

345 
p
->
¥ef
 = 0;

346 
	}
}

352 
REGPRM1
 
	$_do_ã°
(
pﬁÀr
 *
p
)

354 
fd
;

356 
fd
 = 
	`ïﬁl_¸óã
(
globÆ
.
maxsock
 + 1);

357 i‡(
fd
 < 0)

359 
	`˛o£
(
fd
);

361 
	}
}

369 
REGPRM1
 
	$_do_f‹k
(
pﬁÀr
 *
p
)

371 i‡(
ïﬁl_fd
 >= 0)

372 
	`˛o£
(
ïﬁl_fd
);

373 
ïﬁl_fd
 = 
	`ïﬁl_¸óã
(
globÆ
.
maxsock
 + 1);

374 i‡(
ïﬁl_fd
 < 0)

377 
	}
}

384 
__©åibuã__
((
c⁄°ru˘‹
))

385 
	$_do_ªgi°î
()

387 
pﬁÀr
 *
p
;

389 i‡(
nbpﬁÀrs
 >
MAX_POLLERS
)

392 
ïﬁl_fd
 = -1;

393 
p
 = &
pﬁÀrs
[
nbpﬁÀrs
++];

395 
p
->
«me
 = "epoll";

396 
p
->
¥ef
 = 300;

397 
p
->
¥iv©e
 = 
NULL
;

399 
p
->
ã°
 = 
_do_ã°
;

400 
p
->
öô
 = 
_do_öô
;

401 
p
->
ãrm
 = 
_do_ãrm
;

402 
p
->
pﬁl
 = 
_do_pﬁl
;

403 
p
->
f‹k
 = 
_do_f‹k
;

405 
p
->
is_£t
 = 
__fd_is_£t
;

406 
p
->
c⁄d_s
 =Ö->
£t
 = 
__fd_£t
;

407 
p
->
c⁄d_c
 =Ö->
˛r
 = 
__fd_˛r
;

408 
p
->
ªm
 = 
__fd_ªm
;

409 
p
->
˛o
 = 
__fd_˛o
;

410 
	}
}

	@src/ev_kqueue.c

17 
	~<uni°d.h
>

18 
	~<sys/time.h
>

19 
	~<sys/ty≥s.h
>

21 
	~<sys/evít.h
>

22 
	~<sys/time.h
>

24 
	~<comm⁄/com∑t.h
>

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<comm⁄/ticks.h
>

27 
	~<comm⁄/time.h
>

28 
	~<comm⁄/toﬁs.h
>

30 
	~<ty≥s/globÆ.h
>

32 
	~<¥Ÿo/fd.h
>

33 
	~<¥Ÿo/sig«l.h
>

34 
	~<¥Ÿo/èsk.h
>

37 
fd_£t
 *
	gfd_evts
[2];

38 
	gkqueue_fd
;

39 
kevít
 *
	gkev
 = 
NULL
;

42 c⁄° 
	gdú2fût
[2] = { 
EVFILT_READ
, 
EVFILT_WRITE
 };

45 
REGPRM3
 
	$kqev_dñ
(
kevít
 *
kev
, c⁄° 
fd
, c⁄° 
dú
)

47 i‡(
	`FD_ISSET
(
fd
, 
fd_evts
[
dú
])) {

48 
	`FD_CLR
(
fd
, 
fd_evts
[
dú
]);

49 
	`EV_SET
(
kev
, 
fd
, 
dú2fût
[
dú
], 
EV_DELETE
, 0, 0, 
NULL
);

53 
	}
}

58 
REGPRM2
 
	$__fd_is_£t
(c⁄° 
fd
, 
dú
)

60  
	`FD_ISSET
(
fd
, 
fd_evts
[
dú
]);

61 
	}
}

63 
REGPRM2
 
	$__fd_£t
(c⁄° 
fd
, 
dú
)

66 i‡(
	`FD_ISSET
(
fd
, 
fd_evts
[
dú
]))

69 
	`FD_SET
(
fd
, 
fd_evts
[
dú
]);

70 
	`EV_SET
(
kev
, 
fd
, 
dú2fût
[
dú
], 
EV_ADD
, 0, 0, 
NULL
);

71 
	`kevít
(
kqueue_fd
, 
kev
, 1, 
NULL
, 0, NULL);

73 
	}
}

75 
REGPRM2
 
	$__fd_˛r
(c⁄° 
fd
, 
dú
)

77 i‡(!
	`kqev_dñ
(
kev
, 
fd
, 
dú
))

79 
	`kevít
(
kqueue_fd
, 
kev
, 1, 
NULL
, 0, NULL);

81 
	}
}

83 
REGPRM1
 
	$__fd_ªm
(
fd
)

85 
ch™ges
 = 0;

87 
ch™ges
 +
	`kqev_dñ
(&
kev
[ch™ges], 
fd
, 
DIR_RD
);

88 
ch™ges
 +
	`kqev_dñ
(&
kev
[ch™ges], 
fd
, 
DIR_WR
);

90 i‡(
ch™ges
)

91 
	`kevít
(
kqueue_fd
, 
kev
, 
ch™ges
, 
NULL
, 0, NULL);

92 
	}
}

94 
REGPRM1
 
	$__fd_˛o
(
fd
)

96 
	`FD_CLR
(
fd
, 
fd_evts
[
DIR_RD
]);

97 
	`FD_CLR
(
fd
, 
fd_evts
[
DIR_WR
]);

98 
	}
}

103 
REGPRM2
 
	$_do_pﬁl
(
pﬁÀr
 *
p
, 
exp
)

105 
°©us
;

106 
cou¡
, 
fd
, 
dñè_ms
;

107 
time•ec
 
timeout
;

109 
dñè_ms
 = 0;

110 
timeout
.
tv_£c
 = 0;

111 
timeout
.
tv_n£c
 = 0;

113 i‡(!
run_queue
 && !
sig«l_queue_Àn
) {

114 i‡(!
exp
) {

115 
dñè_ms
 = 
MAX_DELAY_MS
;

116 
timeout
.
tv_£c
 = (
MAX_DELAY_MS
 / 1000);

117 
timeout
.
tv_n£c
 = (
MAX_DELAY_MS
 % 1000) * 1000000;

119 i‡(!
	`tick_is_expúed
(
exp
, 
now_ms
)) {

120 
dñè_ms
 = 
	`TICKS_TO_MS
(
	`tick_ªmaö
(
now_ms
, 
exp
)) + 1;

121 i‡(
dñè_ms
 > 
MAX_DELAY_MS
)

122 
dñè_ms
 = 
MAX_DELAY_MS
;

123 
timeout
.
tv_£c
 = (
dñè_ms
 / 1000);

124 
timeout
.
tv_n£c
 = (
dñè_ms
 % 1000) * 1000000;

128 
fd
 = 
	`MIN
(
maxfd
, 
globÆ
.
tu√
.
maxpﬁÀvíts
);

129 
°©us
 = 
	`kevít
(
kqueue_fd
,

130 
NULL
,

132 
kev
,

133 
fd
,

134 &
timeout
);

135 
	`tv_upd©e_d©e
(
dñè_ms
, 
°©us
);

137 
cou¡
 = 0; cou¡ < 
°©us
; count++) {

138 
fd
 = 
kev
[
cou¡
].
idít
;

139 i‡(
kev
[
cou¡
].
fûãr
 =
EVFILT_READ
) {

140 i‡(
	`FD_ISSET
(
fd
, 
fd_evts
[
DIR_RD
])) {

141 i‡(
fdèb
[
fd
].
°©e
 =
FD_STCLOSE
)

143 
fdèb
[
fd
].
cb
[
DIR_RD
].
	`f
(fd);

145 } i‡(
kev
[
cou¡
].
fûãr
 =
EVFILT_WRITE
) {

146 i‡(
	`FD_ISSET
(
fd
, 
fd_evts
[
DIR_WR
])) {

147 i‡(
fdèb
[
fd
].
°©e
 =
FD_STCLOSE
)

149 
fdèb
[
fd
].
cb
[
DIR_WR
].
	`f
(fd);

153 
	}
}

160 
REGPRM1
 
	$_do_öô
(
pﬁÀr
 *
p
)

162 
__œbñ__
 
Áû_wevt
, 
Áû_ªvt
, 
Áû_fd
;

163 
fd_£t_byãs
;

165 
p
->
¥iv©e
 = 
NULL
;

166 
fd_£t_byãs
 = (
fd_£t
Ë* (
globÆ
.
maxsock
 + 
FD_SETSIZE
 - 1) / FD_SETSIZE;

168 
kqueue_fd
 = 
	`kqueue
();

169 i‡(
kqueue_fd
 < 0)

170 
Áû_fd
;

172 
kev
 = (
kevít
*)
	`ˇŒoc
(1, (kevítË* 
globÆ
.
tu√
.
maxpﬁÀvíts
);

174 i‡(
kev
 =
NULL
)

175 
Áû_kev
;

177 i‡((
fd_evts
[
DIR_RD
] = (
fd_£t
 *)
	`ˇŒoc
(1, 
fd_£t_byãs
)Ë=
NULL
)

178 
Áû_ªvt
;

180 i‡((
fd_evts
[
DIR_WR
] = (
fd_£t
 *)
	`ˇŒoc
(1, 
fd_£t_byãs
)Ë=
NULL
)

181 
Áû_wevt
;

185 
Áû_wevt
:

186 
	`‰ì
(
fd_evts
[
DIR_RD
]);

187 
Áû_ªvt
:

188 
	`‰ì
(
kev
);

189 
Áû_kev
:

190 
	`˛o£
(
kqueue_fd
);

191 
kqueue_fd
 = -1;

192 
Áû_fd
:

193 
p
->
¥ef
 = 0;

195 
	}
}

201 
REGPRM1
 
	$_do_ãrm
(
pﬁÀr
 *
p
)

203 
	`‰ì
(
fd_evts
[
DIR_WR
]);

204 
	`‰ì
(
fd_evts
[
DIR_RD
]);

205 
	`‰ì
(
kev
);

207 i‡(
kqueue_fd
 >= 0) {

208 
	`˛o£
(
kqueue_fd
);

209 
kqueue_fd
 = -1;

212 
p
->
¥iv©e
 = 
NULL
;

213 
p
->
¥ef
 = 0;

214 
	}
}

220 
REGPRM1
 
	$_do_ã°
(
pﬁÀr
 *
p
)

222 
fd
;

224 
fd
 = 
	`kqueue
();

225 i‡(
fd
 < 0)

227 
	`˛o£
(
fd
);

229 
	}
}

236 
REGPRM1
 
	$_do_f‹k
(
pﬁÀr
 *
p
)

238 i‡(
kqueue_fd
 >= 0)

239 
	`˛o£
(
kqueue_fd
);

240 
kqueue_fd
 = 
	`kqueue
();

241 i‡(
kqueue_fd
 < 0)

244 
	}
}

251 
__©åibuã__
((
c⁄°ru˘‹
))

252 
	$_do_ªgi°î
()

254 
pﬁÀr
 *
p
;

256 i‡(
nbpﬁÀrs
 >
MAX_POLLERS
)

259 
kqueue_fd
 = -1;

260 
p
 = &
pﬁÀrs
[
nbpﬁÀrs
++];

262 
p
->
«me
 = "kqueue";

263 
p
->
¥ef
 = 300;

264 
p
->
¥iv©e
 = 
NULL
;

266 
p
->
ã°
 = 
_do_ã°
;

267 
p
->
öô
 = 
_do_öô
;

268 
p
->
ãrm
 = 
_do_ãrm
;

269 
p
->
pﬁl
 = 
_do_pﬁl
;

270 
p
->
f‹k
 = 
_do_f‹k
;

272 
p
->
is_£t
 = 
__fd_is_£t
;

273 
p
->
c⁄d_s
 =Ö->
£t
 = 
__fd_£t
;

274 
p
->
c⁄d_c
 =Ö->
˛r
 = 
__fd_˛r
;

275 
p
->
ªm
 = 
__fd_ªm
;

276 
p
->
˛o
 = 
__fd_˛o
;

277 
	}
}

	@src/ev_poll.c

13 
	~<uni°d.h
>

14 
	~<sys/pﬁl.h
>

15 
	~<sys/time.h
>

16 
	~<sys/ty≥s.h
>

18 
	~<comm⁄/com∑t.h
>

19 
	~<comm⁄/c⁄fig.h
>

20 
	~<comm⁄/ticks.h
>

21 
	~<comm⁄/time.h
>

23 
	~<ty≥s/globÆ.h
>

25 
	~<¥Ÿo/fd.h
>

26 
	~<¥Ÿo/sig«l.h
>

27 
	~<¥Ÿo/èsk.h
>

30 
fd_£t
 *
	gfd_evts
[2];

33 
pﬁlfd
 *
	gpﬁl_evíts
 = 
NULL
;

41 
REGPRM2
 
	$__fd_is_£t
(c⁄° 
fd
, 
dú
)

43  
	`FD_ISSET
(
fd
, 
fd_evts
[
dú
]);

44 
	}
}

46 
REGPRM2
 
	$__fd_£t
(c⁄° 
fd
, 
dú
)

48 
	`FD_SET
(
fd
, 
fd_evts
[
dú
]);

50 
	}
}

52 
REGPRM2
 
	$__fd_˛r
(c⁄° 
fd
, 
dú
)

54 
	`FD_CLR
(
fd
, 
fd_evts
[
dú
]);

56 
	}
}

58 
REGPRM2
 
	$__fd_c⁄d_s
(c⁄° 
fd
, 
dú
)

60 
ªt
;

61 
ªt
 = !
	`FD_ISSET
(
fd
, 
fd_evts
[
dú
]);

62 i‡(
ªt
)

63 
	`FD_SET
(
fd
, 
fd_evts
[
dú
]);

64  
ªt
;

65 
	}
}

67 
REGPRM2
 
	$__fd_c⁄d_c
(c⁄° 
fd
, 
dú
)

69 
ªt
;

70 
ªt
 = 
	`FD_ISSET
(
fd
, 
fd_evts
[
dú
]);

71 i‡(
ªt
)

72 
	`FD_CLR
(
fd
, 
fd_evts
[
dú
]);

73  
ªt
;

74 
	}
}

76 
REGPRM1
 
	$__fd_ªm
(c⁄° 
fd
)

78 
	`FD_CLR
(
fd
, 
fd_evts
[
DIR_RD
]);

79 
	`FD_CLR
(
fd
, 
fd_evts
[
DIR_WR
]);

80 
	}
}

85 
REGPRM2
 
	$_do_pﬁl
(
pﬁÀr
 *
p
, 
exp
)

87 
°©us
;

88 
fd
, 
nbfd
;

89 
waô_time
;

91 
fds
, 
cou¡
;

92 
§
, 
sw
;

93 
∫
, 
wn
;

95 
nbfd
 = 0;

96 
fds
 = 0; (fd†* 
BITS_PER_INT
Ë< 
maxfd
; fds++) {

98 
∫
 = ((*)
fd_evts
[
DIR_RD
])[
fds
];

99 
wn
 = ((*)
fd_evts
[
DIR_WR
])[
fds
];

101 i‡((
∫
|
wn
)) {

102 
cou¡
 = 0, 
fd
 = 
fds
 * 
BITS_PER_INT
; cou¡ < BITS_PER_INT && fd < 
maxfd
; count++, fd++) {

103 
	#FDSETS_ARE_INT_ALIGNED


	)

104 #ifde‡
FDSETS_ARE_INT_ALIGNED


106 
	#WE_REALLY_KNOW_THAT_FDSETS_ARE_INTS


	)

107 #ifde‡
WE_REALLY_KNOW_THAT_FDSETS_ARE_INTS


108 
§
 = (
∫
 >> 
cou¡
) & 1;

109 
sw
 = (
wn
 >> 
cou¡
) & 1;

111 
§
 = 
	`FD_ISSET
(
fd
&(
BITS_PER_INT
-1), (
	`ty≥of
(
fd_£t
*))&
∫
);

112 
sw
 = 
	`FD_ISSET
(
fd
&(
BITS_PER_INT
-1), (
	`ty≥of
(
fd_£t
*))&
wn
);

115 
§
 = 
	`FD_ISSET
(
fd
, 
fd_evts
[
DIR_RD
]);

116 
sw
 = 
	`FD_ISSET
(
fd
, 
fd_evts
[
DIR_WR
]);

118 i‡((
§
|
sw
)) {

119 
pﬁl_evíts
[
nbfd
].
fd
 = fd;

120 
pﬁl_evíts
[
nbfd
].
evíts
 = (
§
 ? 
POLLIN
 : 0Ë| (
sw
 ? 
POLLOUT
 : 0);

121 
nbfd
++;

128 i‡(
run_queue
 || 
sig«l_queue_Àn
)

129 
waô_time
 = 0;

130 i‡(!
exp
)

131 
waô_time
 = 
MAX_DELAY_MS
;

132 i‡(
	`tick_is_expúed
(
exp
, 
now_ms
))

133 
waô_time
 = 0;

135 
waô_time
 = 
	`TICKS_TO_MS
(
	`tick_ªmaö
(
now_ms
, 
exp
)) + 1;

136 i‡(
waô_time
 > 
MAX_DELAY_MS
)

137 
waô_time
 = 
MAX_DELAY_MS
;

140 
°©us
 = 
	`pﬁl
(
pﬁl_evíts
, 
nbfd
, 
waô_time
);

141 
	`tv_upd©e_d©e
(
waô_time
, 
°©us
);

143 
cou¡
 = 0; 
°©us
 > 0 && cou¡ < 
nbfd
; count++) {

144 
fd
 = 
pﬁl_evíts
[
cou¡
].fd;

146 i‡(!(
pﬁl_evíts
[
cou¡
].
ªvíts
 & ( 
POLLOUT
 | 
POLLIN
 | 
POLLERR
 | 
POLLHUP
 )))

150 
°©us
--;

152 i‡(
	`FD_ISSET
(
fd
, 
fd_evts
[
DIR_RD
])) {

153 i‡(
fdèb
[
fd
].
°©e
 =
FD_STCLOSE
)

155 i‡(
pﬁl_evíts
[
cou¡
].
ªvíts
 & ( 
POLLIN
 | 
POLLERR
 | 
POLLHUP
 ))

156 
fdèb
[
fd
].
cb
[
DIR_RD
].
	`f
(fd);

159 i‡(
	`FD_ISSET
(
fd
, 
fd_evts
[
DIR_WR
])) {

160 i‡(
fdèb
[
fd
].
°©e
 =
FD_STCLOSE
)

162 i‡(
pﬁl_evíts
[
cou¡
].
ªvíts
 & ( 
POLLOUT
 | 
POLLERR
 | 
POLLHUP
 ))

163 
fdèb
[
fd
].
cb
[
DIR_WR
].
	`f
(fd);

167 
	}
}

174 
REGPRM1
 
	$_do_öô
(
pﬁÀr
 *
p
)

176 
__œbñ__
 
Áû_swevt
, 
Áû_§evt
, 
Áû_≥
;

177 
fd_£t_byãs
;

179 
p
->
¥iv©e
 = 
NULL
;

180 
fd_£t_byãs
 = (
fd_£t
Ë* (
globÆ
.
maxsock
 + 
FD_SETSIZE
 - 1) / FD_SETSIZE;

182 
pﬁl_evíts
 = (
pﬁlfd
*)

183 
	`ˇŒoc
(1, (
pﬁlfd
Ë* 
globÆ
.
maxsock
);

185 i‡(
pﬁl_evíts
 =
NULL
)

186 
Áû_≥
;

188 i‡((
fd_evts
[
DIR_RD
] = (
fd_£t
 *)
	`ˇŒoc
(1, 
fd_£t_byãs
)Ë=
NULL
)

189 
Áû_§evt
;

191 i‡((
fd_evts
[
DIR_WR
] = (
fd_£t
 *)
	`ˇŒoc
(1, 
fd_£t_byãs
)Ë=
NULL
)

192 
Áû_swevt
;

196 
Áû_swevt
:

197 
	`‰ì
(
fd_evts
[
DIR_RD
]);

198 
Áû_§evt
:

199 
	`‰ì
(
pﬁl_evíts
);

200 
Áû_≥
:

201 
p
->
¥ef
 = 0;

203 
	}
}

209 
REGPRM1
 
	$_do_ãrm
(
pﬁÀr
 *
p
)

211 
	`‰ì
(
fd_evts
[
DIR_WR
]);

212 
	`‰ì
(
fd_evts
[
DIR_RD
]);

213 
	`‰ì
(
pﬁl_evíts
);

214 
p
->
¥iv©e
 = 
NULL
;

215 
p
->
¥ef
 = 0;

216 
	}
}

222 
REGPRM1
 
	$_do_ã°
(
pﬁÀr
 *
p
)

225 
	}
}

232 
__©åibuã__
((
c⁄°ru˘‹
))

233 
	$_do_ªgi°î
()

235 
pﬁÀr
 *
p
;

237 i‡(
nbpﬁÀrs
 >
MAX_POLLERS
)

239 
p
 = &
pﬁÀrs
[
nbpﬁÀrs
++];

241 
p
->
«me
 = "poll";

242 
p
->
¥ef
 = 200;

243 
p
->
¥iv©e
 = 
NULL
;

245 
p
->
ã°
 = 
_do_ã°
;

246 
p
->
öô
 = 
_do_öô
;

247 
p
->
ãrm
 = 
_do_ãrm
;

248 
p
->
pﬁl
 = 
_do_pﬁl
;

249 
p
->
is_£t
 = 
__fd_is_£t
;

250 
p
->
£t
 = 
__fd_£t
;

251 
p
->
˛r
 = 
__fd_˛r
;

252 
p
->
˛o
 =Ö->
ªm
 = 
__fd_ªm
;

253 
p
->
c⁄d_s
 = 
__fd_c⁄d_s
;

254 
p
->
c⁄d_c
 = 
__fd_c⁄d_c
;

255 
	}
}

	@src/ev_select.c

13 
	~<uni°d.h
>

14 
	~<sys/time.h
>

15 
	~<sys/ty≥s.h
>

17 
	~<comm⁄/com∑t.h
>

18 
	~<comm⁄/c⁄fig.h
>

19 
	~<comm⁄/ticks.h
>

20 
	~<comm⁄/time.h
>

22 
	~<ty≥s/globÆ.h
>

24 
	~<¥Ÿo/fd.h
>

25 
	~<¥Ÿo/sig«l.h
>

26 
	~<¥Ÿo/èsk.h
>

29 
fd_£t
 *
	gfd_evts
[2];

30 
fd_£t
 *
	gtmp_evts
[2];

38 
REGPRM2
 
	$__fd_is_£t
(c⁄° 
fd
, 
dú
)

40  
	`FD_ISSET
(
fd
, 
fd_evts
[
dú
]);

41 
	}
}

43 
REGPRM2
 
	$__fd_£t
(c⁄° 
fd
, 
dú
)

45 
	`FD_SET
(
fd
, 
fd_evts
[
dú
]);

47 
	}
}

49 
REGPRM2
 
	$__fd_˛r
(c⁄° 
fd
, 
dú
)

51 
	`FD_CLR
(
fd
, 
fd_evts
[
dú
]);

53 
	}
}

55 
REGPRM2
 
	$__fd_c⁄d_s
(c⁄° 
fd
, 
dú
)

57 
ªt
;

58 
ªt
 = !
	`FD_ISSET
(
fd
, 
fd_evts
[
dú
]);

59 i‡(
ªt
)

60 
	`FD_SET
(
fd
, 
fd_evts
[
dú
]);

61  
ªt
;

62 
	}
}

64 
REGPRM2
 
	$__fd_c⁄d_c
(c⁄° 
fd
, 
dú
)

66 
ªt
;

67 
ªt
 = 
	`FD_ISSET
(
fd
, 
fd_evts
[
dú
]);

68 i‡(
ªt
)

69 
	`FD_CLR
(
fd
, 
fd_evts
[
dú
]);

70  
ªt
;

71 
	}
}

73 
REGPRM1
 
	$__fd_ªm
(
fd
)

75 
	`FD_CLR
(
fd
, 
fd_evts
[
DIR_RD
]);

76 
	`FD_CLR
(
fd
, 
fd_evts
[
DIR_WR
]);

77 
	}
}

82 
REGPRM2
 
	$_do_pﬁl
(
pﬁÀr
 *
p
, 
exp
)

84 
°©us
;

85 
fd
, 
i
;

86 
timevÆ
 
dñè
;

87 
dñè_ms
;

88 
ªadnŸnuŒ
, 
wrôíŸnuŒ
;

89 
fds
;

90 
cou¡
;

92 
dñè_ms
 = 0;

93 
dñè
.
tv_£c
 = 0;

94 
dñè
.
tv_u£c
 = 0;

96 i‡(!
run_queue
 && !
sig«l_queue_Àn
) {

97 i‡(!
exp
) {

98 
dñè_ms
 = 
MAX_DELAY_MS
;

99 
dñè
.
tv_£c
 = (
MAX_DELAY_MS
 / 1000);

100 
dñè
.
tv_u£c
 = (
MAX_DELAY_MS
 % 1000) * 1000;

102 i‡(!
	`tick_is_expúed
(
exp
, 
now_ms
)) {

103 
dñè_ms
 = 
	`TICKS_TO_MS
(
	`tick_ªmaö
(
now_ms
, 
exp
)Ë+ 
SCHEDULER_RESOLUTION
;

104 i‡(
dñè_ms
 > 
MAX_DELAY_MS
)

105 
dñè_ms
 = 
MAX_DELAY_MS
;

106 
dñè
.
tv_£c
 = (
dñè_ms
 / 1000);

107 
dñè
.
tv_u£c
 = (
dñè_ms
 % 1000) * 1000;

113 
ªadnŸnuŒ
 = 0; 
wrôíŸnuŒ
 = 0;

114 
i
 = 0; i < (
maxfd
 + 
FD_SETSIZE
 - 1)/(8*()); i++) {

115 
ªadnŸnuŒ
 |(*(((*)
tmp_evts
[
DIR_RD
])+
i
Ë*(((*)
fd_evts
[DIR_RD])+i)) != 0;

116 
wrôíŸnuŒ
 |(*(((*)
tmp_evts
[
DIR_WR
])+
i
Ë*(((*)
fd_evts
[DIR_WR])+i)) != 0;

128 
°©us
 = 
	`£À˘
(
maxfd
,

129 
ªadnŸnuŒ
 ? 
tmp_evts
[
DIR_RD
] : 
NULL
,

130 
wrôíŸnuŒ
 ? 
tmp_evts
[
DIR_WR
] : 
NULL
,

131 
NULL
,

132 &
dñè
);

134 
	`tv_upd©e_d©e
(
dñè_ms
, 
°©us
);

136 i‡(
°©us
 <= 0)

139 
fds
 = 0; (fd†* 
BITS_PER_INT
Ë< 
maxfd
; fds++) {

140 i‡((((*)(
tmp_evts
[
DIR_RD
]))[
fds
] | ((*)—mp_evts[
DIR_WR
]))[fds]) == 0)

143 
cou¡
 = 
BITS_PER_INT
, 
fd
 = 
fds
 * BITS_PER_INT; cou¡ && fd < 
maxfd
; count--, fd++) {

147 i‡(
	`FD_ISSET
(
fd
, 
tmp_evts
[
DIR_RD
])) {

148 i‡(
fdèb
[
fd
].
°©e
 =
FD_STCLOSE
)

150 
fdèb
[
fd
].
cb
[
DIR_RD
].
	`f
(fd);

153 i‡(
	`FD_ISSET
(
fd
, 
tmp_evts
[
DIR_WR
])) {

154 i‡(
fdèb
[
fd
].
°©e
 =
FD_STCLOSE
)

156 
fdèb
[
fd
].
cb
[
DIR_WR
].
	`f
(fd);

160 
	}
}

167 
REGPRM1
 
	$_do_öô
(
pﬁÀr
 *
p
)

169 
__œbñ__
 
Áû_swevt
, 
Áû_§evt
, 
Áû_wevt
, 
Áû_ªvt
;

170 
fd_£t_byãs
;

172 
p
->
¥iv©e
 = 
NULL
;

173 
fd_£t_byãs
 = (
fd_£t
Ë* (
globÆ
.
maxsock
 + 
FD_SETSIZE
 - 1) / FD_SETSIZE;

175 i‡((
tmp_evts
[
DIR_RD
] = (
fd_£t
 *)
	`ˇŒoc
(1, 
fd_£t_byãs
)Ë=
NULL
)

176 
Áû_ªvt
;

178 i‡((
tmp_evts
[
DIR_WR
] = (
fd_£t
 *)
	`ˇŒoc
(1, 
fd_£t_byãs
)Ë=
NULL
)

179 
Áû_wevt
;

181 i‡((
fd_evts
[
DIR_RD
] = (
fd_£t
 *)
	`ˇŒoc
(1, 
fd_£t_byãs
)Ë=
NULL
)

182 
Áû_§evt
;

184 i‡((
fd_evts
[
DIR_WR
] = (
fd_£t
 *)
	`ˇŒoc
(1, 
fd_£t_byãs
)Ë=
NULL
)

185 
Áû_swevt
;

189 
Áû_swevt
:

190 
	`‰ì
(
fd_evts
[
DIR_RD
]);

191 
Áû_§evt
:

192 
	`‰ì
(
tmp_evts
[
DIR_WR
]);

193 
Áû_wevt
:

194 
	`‰ì
(
tmp_evts
[
DIR_RD
]);

195 
Áû_ªvt
:

196 
p
->
¥ef
 = 0;

198 
	}
}

204 
REGPRM1
 
	$_do_ãrm
(
pﬁÀr
 *
p
)

206 
	`‰ì
(
fd_evts
[
DIR_WR
]);

207 
	`‰ì
(
fd_evts
[
DIR_RD
]);

208 
	`‰ì
(
tmp_evts
[
DIR_WR
]);

209 
	`‰ì
(
tmp_evts
[
DIR_RD
]);

210 
p
->
¥iv©e
 = 
NULL
;

211 
p
->
¥ef
 = 0;

212 
	}
}

218 
REGPRM1
 
	$_do_ã°
(
pﬁÀr
 *
p
)

221 
	}
}

228 
__©åibuã__
((
c⁄°ru˘‹
))

229 
	$_do_ªgi°î
()

231 
pﬁÀr
 *
p
;

233 i‡(
nbpﬁÀrs
 >
MAX_POLLERS
)

235 
p
 = &
pﬁÀrs
[
nbpﬁÀrs
++];

237 
p
->
«me
 = "select";

238 
p
->
¥ef
 = 150;

239 
p
->
¥iv©e
 = 
NULL
;

241 
p
->
ã°
 = 
_do_ã°
;

242 
p
->
öô
 = 
_do_öô
;

243 
p
->
ãrm
 = 
_do_ãrm
;

244 
p
->
pﬁl
 = 
_do_pﬁl
;

245 
p
->
is_£t
 = 
__fd_is_£t
;

246 
p
->
£t
 = 
__fd_£t
;

247 
p
->
˛r
 = 
__fd_˛r
;

248 
p
->
˛o
 =Ö->
ªm
 = 
__fd_ªm
;

249 
p
->
c⁄d_s
 = 
__fd_c⁄d_s
;

250 
p
->
c⁄d_c
 = 
__fd_c⁄d_c
;

251 
	}
}

	@src/ev_sepoll.c

47 
	~<uni°d.h
>

48 
	~<sys/time.h
>

49 
	~<sys/ty≥s.h
>

51 
	~<comm⁄/com∑t.h
>

52 
	~<comm⁄/c⁄fig.h
>

53 
	~<comm⁄/debug.h
>

54 
	~<comm⁄/°™d¨d.h
>

55 
	~<comm⁄/ticks.h
>

56 
	~<comm⁄/time.h
>

57 
	~<comm⁄/toﬁs.h
>

59 
	~<ty≥s/globÆ.h
>

61 
	~<¥Ÿo/fd.h
>

62 
	~<¥Ÿo/sig«l.h
>

63 
	~<¥Ÿo/èsk.h
>

65 #i‡
deföed
(
USE_MY_EPOLL
)

66 
	~<comm⁄/ïﬁl.h
>

67 
	~<î∫o.h
>

68 
	~<sys/sysˇŒ.h
>

69 
_sysˇŒ1
 (, 
ïﬁl_¸óã
, , 
size
);

70 
_sysˇŒ4
 (, 
ïﬁl_˘l
, , 
ïfd
, , 
›
, , 
fd
, 
ïﬁl_evít
 *, 
evít
);

71 
_sysˇŒ4
 (, 
ïﬁl_waô
, , 
ïfd
, 
ïﬁl_evít
 *, 
evíts
, , 
maxevíts
, , 
timeout
);

73 
	~<sys/ïﬁl.h
>

120 
	#FD_EV_IN_SL
 1

	)

121 
	#FD_EV_IN_PL
 4

	)

123 
	#FD_EV_IDLE
 0

	)

124 
	#FD_EV_SPEC
 (
FD_EV_IN_SL
)

	)

125 
	#FD_EV_WAIT
 (
FD_EV_IN_PL
)

	)

126 
	#FD_EV_STOP
 (
FD_EV_IN_SL
|
FD_EV_IN_PL
)

	)

129 
	#FD_EV_RW_SL
 (
FD_EV_IN_SL
 | (FD_EV_IN_SL << 1))

	)

130 
	#FD_EV_RW_PL
 (
FD_EV_IN_PL
 | (FD_EV_IN_PL << 1))

	)

131 
	#FD_EV_MASK_DIR
 (
FD_EV_IN_SL
|
FD_EV_IN_PL
)

	)

133 
	#FD_EV_IDLE_R
 0

	)

134 
	#FD_EV_SPEC_R
 (
FD_EV_IN_SL
)

	)

135 
	#FD_EV_WAIT_R
 (
FD_EV_IN_PL
)

	)

136 
	#FD_EV_STOP_R
 (
FD_EV_IN_SL
|
FD_EV_IN_PL
)

	)

137 
	#FD_EV_MASK_R
 (
FD_EV_IN_SL
|
FD_EV_IN_PL
)

	)

139 
	#FD_EV_IDLE_W
 (
FD_EV_IDLE_R
 << 1)

	)

140 
	#FD_EV_SPEC_W
 (
FD_EV_SPEC_R
 << 1)

	)

141 
	#FD_EV_WAIT_W
 (
FD_EV_WAIT_R
 << 1)

	)

142 
	#FD_EV_STOP_W
 (
FD_EV_STOP_R
 << 1)

	)

143 
	#FD_EV_MASK_W
 (
FD_EV_MASK_R
 << 1)

	)

145 
	#FD_EV_MASK
 (
FD_EV_MASK_W
 | 
FD_EV_MASK_R
)

	)

150 
	#MIN_RETURN_EVENTS
 25

	)

152 
	gnb•ec
 = 0;

153 
	gabsmaxevíts
 = 0;

154 
	gfd_¸óãd
 = 0;

156 *
	g•ec_li°
 = 
NULL
;

159 
ïﬁl_evít
 *
	gïﬁl_evíts
;

160 
	gïﬁl_fd
;

165 
ïﬁl_evít
 
	gev
;

168 
REGPRM1
 
ölöe
 
	$Æloc_•ec_íåy
(c⁄° 
fd
)

170 i‡(
fdèb
[
fd
].
•ec
.
s1
)

173 
fdèb
[
fd
].
•ec
.
s1
 = 
nb•ec
 + 1;

174 
•ec_li°
[
nb•ec
] = 
fd
;

175 
nb•ec
++;

176 
	}
}

182 
REGPRM1
 
	$ªÀa£_•ec_íåy
(
fd
)

184 
pos
;

186 
pos
 = 
fdèb
[
fd
].
•ec
.
s1
;

187 i‡(!
pos
)

190 
fdèb
[
fd
].
•ec
.
s1
 = 0;

191 
pos
--;

194 
nb•ec
--;

195 i‡(
pos
 =
nb•ec
)

199 
fd
 = 
•ec_li°
[
nb•ec
];

200 
•ec_li°
[
pos
] = 
fd
;

201 
fdèb
[
fd
].
•ec
.
s1
 = 
pos
 + 1;

202 
	}
}

207 
REGPRM2
 
	$__fd_is_£t
(c⁄° 
fd
, 
dú
)

209 
ªt
;

211 #i‡
DEBUG_DEV


212 i‡(
fdèb
[
fd
].
°©e
 =
FD_STCLOSE
) {

213 
	`Ârötf
(
°dîr
, "£pﬁl.fd_is£àˇŒed o¿˛o£d fd #%d.\n", 
fd
);

214 
	`ABORT_NOW
();

217 
ªt
 = (()
fdèb
[
fd
].
•ec
.
e
 >> 
dú
Ë& 
FD_EV_MASK_DIR
;

218  (
ªt
 =
FD_EV_SPEC
 ||Ñë =
FD_EV_WAIT
);

219 
	}
}

225 
REGPRM2
 
	$__fd_£t
(c⁄° 
fd
, 
dú
)

227 
i
;

229 #i‡
DEBUG_DEV


230 i‡(
fdèb
[
fd
].
°©e
 =
FD_STCLOSE
) {

231 
	`Ârötf
(
°dîr
, "£pﬁl.fd_£àˇŒed o¿˛o£d fd #%d.\n", 
fd
);

232 
	`ABORT_NOW
();

235 
i
 = (()
fdèb
[
fd
].
•ec
.
e
 >> 
dú
Ë& 
FD_EV_MASK_DIR
;

237 i‡(
i
 !
FD_EV_STOP
) {

238 i‡(
	`u∆ikñy
(
i
 !
FD_EV_IDLE
))

241 
fd_¸óãd
++;

242 
	`Æloc_•ec_íåy
(
fd
);

244 
fdèb
[
fd
].
•ec
.
e
 ^()(
FD_EV_IN_SL
 << 
dú
);

246 
	}
}

248 
REGPRM2
 
	$__fd_˛r
(c⁄° 
fd
, 
dú
)

250 
i
;

252 #i‡
DEBUG_DEV


253 i‡(
fdèb
[
fd
].
°©e
 =
FD_STCLOSE
) {

254 
	`Ârötf
(
°dîr
, "£pﬁl.fd_˛∏ˇŒed o¿˛o£d fd #%d.\n", 
fd
);

255 
	`ABORT_NOW
();

258 
i
 = (()
fdèb
[
fd
].
•ec
.
e
 >> 
dú
Ë& 
FD_EV_MASK_DIR
;

260 i‡(
i
 !
FD_EV_SPEC
) {

261 i‡(
	`u∆ikñy
(
i
 !
FD_EV_WAIT
))

268 
	`Æloc_•ec_íåy
(
fd
);

270 
fdèb
[
fd
].
•ec
.
e
 ^()(
FD_EV_IN_SL
 << 
dú
);

272 
	}
}

275 
REGPRM1
 
	$__fd_ªm
(
fd
)

277 
	`__fd_˛r
(
fd
, 
DIR_RD
);

278 
	`__fd_˛r
(
fd
, 
DIR_WR
);

279 
	}
}

285 
REGPRM1
 
	$__fd_˛o
(
fd
)

287 
	`ªÀa£_•ec_íåy
(
fd
);

288 
fdèb
[
fd
].
•ec
.
e
 &~(
FD_EV_MASK
);

289 
	}
}

294 
REGPRM2
 
	$_do_pﬁl
(
pﬁÀr
 *
p
, 
exp
)

296 
œ°_skù≥d
;

297 
•ec_¥o˚s£d
;

298 
°©us
, 
eo
;

299 
fd
, 
›code
;

300 
cou¡
;

301 
•ec_idx
;

302 
waô_time
;

303 
lo›ög
 = 0;

306 
ª_pﬁl_⁄˚
:

314 
°©us
 = 0;

315 
•ec_idx
 = 
nb•ec
;

316 
	`likñy
(
•ec_idx
 > 0)) {

317 
d⁄e
;

319 
•ec_idx
--;

320 
fd
 = 
•ec_li°
[
•ec_idx
];

321 
eo
 = 
fdèb
[
fd
].
•ec
.
e
;

323 i‡(
lo›ög
 && --
fd_¸óãd
 < 0) {

337 #ifde‡
DEBUG_DEV


338 i‡(
fdèb
[
fd
].
°©e
 =
FD_STCLOSE
) {

339 
	`Ârötf
(
°dîr
,"fd=%d, fdtab[].ev=%x, fdtab[].spec.e=%x, .s=%d, idx=%d\n",

340 
fd
, 
fdèb
[fd].
ev
, fdèb[fd].
•ec
.
e
, fdèb[fd].•ec.
s1
, 
•ec_idx
);

343 
d⁄e
 = 0;

344 
fdèb
[
fd
].
ev
 &
FD_POLL_STICKY
;

345 i‡((
eo
 & 
FD_EV_MASK_R
Ë=
FD_EV_SPEC_R
) {

347 i‡(
fdèb
[
fd
].
°©e
 !
FD_STERROR
) {

349 
fdèb
[
fd
].
ev
 |
FD_POLL_IN
;

350 i‡(!
fdèb
[
fd
].
cb
[
DIR_RD
].
	`f
(fd))

351 
fdèb
[
fd
].
•ec
.
e
 ^(
FD_EV_WAIT_R
 ^ 
FD_EV_SPEC_R
);

353 
d⁄e
 = 1;

356 i‡((
eo
 & 
FD_EV_MASK_R
Ë=
FD_EV_STOP_R
) {

358 
fdèb
[
fd
].
•ec
.
e
 &~
FD_EV_MASK_R
;

361 i‡((
eo
 & 
FD_EV_MASK_W
Ë=
FD_EV_SPEC_W
) {

363 i‡(
fdèb
[
fd
].
°©e
 !
FD_STERROR
) {

365 
fdèb
[
fd
].
ev
 |
FD_POLL_OUT
;

366 i‡(!
fdèb
[
fd
].
cb
[
DIR_WR
].
	`f
(fd))

367 
fdèb
[
fd
].
•ec
.
e
 ^(
FD_EV_WAIT_W
 ^ 
FD_EV_SPEC_W
);

369 
d⁄e
 = 1;

372 i‡((
eo
 & 
FD_EV_MASK_W
Ë=
FD_EV_STOP_W
) {

374 
fdèb
[
fd
].
•ec
.
e
 &~
FD_EV_MASK_W
;

377 
°©us
 +
d⁄e
;

379 i‡(
fdèb
[
fd
].
°©e
 =
FD_STCLOSE
)

388 i‡((
eo
 ^ 
fdèb
[
fd
].
•ec
.
e
Ë& 
FD_EV_RW_PL
) {

390 i‡((
fdèb
[
fd
].
•ec
.
e
 & 
FD_EV_RW_PL
) == 0) {

392 
›code
 = 
EPOLL_CTL_DEL
;

394 i‡((
eo
 & 
FD_EV_RW_PL
) == 0) {

396 
›code
 = 
EPOLL_CTL_ADD
;

400 
›code
 = 
EPOLL_CTL_MOD
;

404 
ev
.
evíts
 = 0;

405 i‡(
fdèb
[
fd
].
•ec
.
e
 & 
FD_EV_WAIT_R
)

406 
ev
.
evíts
 |
EPOLLIN
;

408 i‡(
fdèb
[
fd
].
•ec
.
e
 & 
FD_EV_WAIT_W
)

409 
ev
.
evíts
 |
EPOLLOUT
;

411 
ev
.
d©a
.
fd
 = fd;

412 
	`ïﬁl_˘l
(
ïﬁl_fd
, 
›code
, 
fd
, &
ev
);

416 i‡(!(
fdèb
[
fd
].
•ec
.
e
 & 
FD_EV_RW_SL
)) {

420 
	`ªÀa£_•ec_íåy
(
fd
);

439 
•ec_¥o˚s£d
 +
°©us
;

441 i‡(
lo›ög
) {

442 
œ°_skù≥d
++;

446 i‡(
°©us
 >
MIN_RETURN_EVENTS
 && 
•ec_¥o˚s£d
 < 
absmaxevíts
) {

450 i‡(++
œ°_skù≥d
 <= 1) {

451 
	`tv_upd©e_d©e
(0, 1);

455 
œ°_skù≥d
 = 0;

457 i‡(
nb•ec
 || 
°©us
 || 
run_queue
 || 
sig«l_queue_Àn
) {

464 
waô_time
 = 0;

467 i‡(!
exp
)

468 
waô_time
 = 
MAX_DELAY_MS
;

469 i‡(
	`tick_is_expúed
(
exp
, 
now_ms
))

470 
waô_time
 = 0;

472 
waô_time
 = 
	`TICKS_TO_MS
(
	`tick_ªmaö
(
now_ms
, 
exp
)) + 1;

473 i‡(
waô_time
 > 
MAX_DELAY_MS
)

474 
waô_time
 = 
MAX_DELAY_MS
;

482 
fd
 = 
	`MIN
(
absmaxevíts
, 
•ec_¥o˚s£d
);

483 
fd
 = 
	`MAX
(
globÆ
.
tu√
.
maxpﬁÀvíts
, fd);

484 
fd
 = 
	`MIN
(
maxfd
, fd);

486 
fd_¸óãd
 = 0;

487 
•ec_¥o˚s£d
 = 0;

488 
°©us
 = 
	`ïﬁl_waô
(
ïﬁl_fd
, 
ïﬁl_evíts
, 
fd
, 
waô_time
);

489 
	`tv_upd©e_d©e
(
waô_time
, 
°©us
);

491 
cou¡
 = 0; cou¡ < 
°©us
; count++) {

492 
e
 = 
ïﬁl_evíts
[
cou¡
].
evíts
;

493 
fd
 = 
ïﬁl_evíts
[
cou¡
].
d©a
.fd;

498 
	`DPRINTF
(
°dîr
, "%s:%d: fd=%d,Év=0x%08x,É=0x%08x\n",

499 
__FUNCTION__
, 
__LINE__
,

500 
fd
, 
fdèb
[fd].
ev
, 
e
);

502 
fdèb
[
fd
].
ev
 &
FD_POLL_STICKY
;

503 
fdèb
[
fd
].
ev
 |=

504 ((
e
 & 
EPOLLIN
 ) ? 
FD_POLL_IN
 : 0) |

505 ((
e
 & 
EPOLLPRI
Ë? 
FD_POLL_PRI
 : 0) |

506 ((
e
 & 
EPOLLOUT
Ë? 
FD_POLL_OUT
 : 0) |

507 ((
e
 & 
EPOLLERR
Ë? 
FD_POLL_ERR
 : 0) |

508 ((
e
 & 
EPOLLHUP
Ë? 
FD_POLL_HUP
 : 0);

510 i‡((
fdèb
[
fd
].
•ec
.
e
 & 
FD_EV_MASK_R
Ë=
FD_EV_WAIT_R
) {

511 i‡(
fdèb
[
fd
].
°©e
 =
FD_STCLOSE
 || fdèb[fd].°©ê=
FD_STERROR
)

513 i‡(
fdèb
[
fd
].
ev
 & (
FD_POLL_IN
|
FD_POLL_HUP
|
FD_POLL_ERR
))

514 
fdèb
[
fd
].
cb
[
DIR_RD
].
	`f
(fd);

517 i‡((
fdèb
[
fd
].
•ec
.
e
 & 
FD_EV_MASK_W
Ë=
FD_EV_WAIT_W
) {

518 i‡(
fdèb
[
fd
].
°©e
 =
FD_STCLOSE
 || fdèb[fd].°©ê=
FD_STERROR
)

520 i‡(
fdèb
[
fd
].
ev
 & (
FD_POLL_OUT
|
FD_POLL_ERR
))

521 
fdèb
[
fd
].
cb
[
DIR_WR
].
	`f
(fd);

525 i‡(
fd_¸óãd
) {

533 
lo›ög
 = 1;

534 
ª_pﬁl_⁄˚
;

536 
	}
}

543 
REGPRM1
 
	$_do_öô
(
pﬁÀr
 *
p
)

545 
__œbñ__
 
Áû_•ec
, 
Áû_ì
, 
Áû_fd
;

547 
p
->
¥iv©e
 = 
NULL
;

549 
ïﬁl_fd
 = 
	`ïﬁl_¸óã
(
globÆ
.
maxsock
 + 1);

550 i‡(
ïﬁl_fd
 < 0)

551 
Áû_fd
;

554 
absmaxevíts
 = 
	`MAX
(
globÆ
.
tu√
.
maxpﬁÀvíts
, globÆ.
maxsock
/4);

555 
ïﬁl_evíts
 = (
ïﬁl_evít
*)

556 
	`ˇŒoc
(1, (
ïﬁl_evít
Ë* 
absmaxevíts
);

558 i‡(
ïﬁl_evíts
 =
NULL
)

559 
Áû_ì
;

561 i‡((
•ec_li°
 = (
uöt32_t
 *)
	`ˇŒoc
(1, (uöt32_tË* 
globÆ
.
maxsock
)Ë=
NULL
)

562 
Áû_•ec
;

566 
Áû_•ec
:

567 
	`‰ì
(
ïﬁl_evíts
);

568 
Áû_ì
:

569 
	`˛o£
(
ïﬁl_fd
);

570 
ïﬁl_fd
 = -1;

571 
Áû_fd
:

572 
p
->
¥ef
 = 0;

574 
	}
}

580 
REGPRM1
 
	$_do_ãrm
(
pﬁÀr
 *
p
)

582 
	`‰ì
(
•ec_li°
);

583 
	`‰ì
(
ïﬁl_evíts
);

585 i‡(
ïﬁl_fd
 >= 0) {

586 
	`˛o£
(
ïﬁl_fd
);

587 
ïﬁl_fd
 = -1;

590 
•ec_li°
 = 
NULL
;

591 
ïﬁl_evíts
 = 
NULL
;

593 
p
->
¥iv©e
 = 
NULL
;

594 
p
->
¥ef
 = 0;

595 
	}
}

601 
REGPRM1
 
	$_do_ã°
(
pﬁÀr
 *
p
)

603 
fd
;

605 
fd
 = 
	`ïﬁl_¸óã
(
globÆ
.
maxsock
 + 1);

606 i‡(
fd
 < 0)

608 
	`˛o£
(
fd
);

610 
	}
}

618 
REGPRM1
 
	$_do_f‹k
(
pﬁÀr
 *
p
)

620 i‡(
ïﬁl_fd
 >= 0)

621 
	`˛o£
(
ïﬁl_fd
);

622 
ïﬁl_fd
 = 
	`ïﬁl_¸óã
(
globÆ
.
maxsock
 + 1);

623 i‡(
ïﬁl_fd
 < 0)

626 
	}
}

633 
__©åibuã__
((
c⁄°ru˘‹
))

634 
	$_do_ªgi°î
()

636 
pﬁÀr
 *
p
;

638 i‡(
nbpﬁÀrs
 >
MAX_POLLERS
)

641 
ïﬁl_fd
 = -1;

642 
p
 = &
pﬁÀrs
[
nbpﬁÀrs
++];

644 
p
->
«me
 = "sepoll";

645 
p
->
¥ef
 = 400;

646 
p
->
¥iv©e
 = 
NULL
;

648 
p
->
ã°
 = 
_do_ã°
;

649 
p
->
öô
 = 
_do_öô
;

650 
p
->
ãrm
 = 
_do_ãrm
;

651 
p
->
pﬁl
 = 
_do_pﬁl
;

652 
p
->
f‹k
 = 
_do_f‹k
;

654 
p
->
is_£t
 = 
__fd_is_£t
;

655 
p
->
c⁄d_s
 =Ö->
£t
 = 
__fd_£t
;

656 
p
->
c⁄d_c
 =Ö->
˛r
 = 
__fd_˛r
;

657 
p
->
ªm
 = 
__fd_ªm
;

658 
p
->
˛o
 = 
__fd_˛o
;

659 
	}
}

	@src/fd.c

13 
	~<°dio.h
>

14 
	~<°rög.h
>

15 
	~<uni°d.h
>

16 
	~<sys/ty≥s.h
>

18 
	~<comm⁄/com∑t.h
>

19 
	~<comm⁄/c⁄fig.h
>

21 
	~<¥Ÿo/fd.h
>

22 
	~<¥Ÿo/p‹t_ønge.h
>

24 
fdèb
 *
	gfdèb
 = 
NULL
;

25 
fdöfo
 *
	gfdöfo
 = 
NULL
;

26 
	gmaxfd
;

27 
	gtŸÆc⁄n
;

28 
	ga˘c⁄n
;

30 
pﬁÀr
 
	gpﬁÀrs
[
MAX_POLLERS
];

31 
pﬁÀr
 
	gcur_pﬁÀr
;

32 
	gnbpﬁÀrs
 = 0;

38 
	$fd_dñëe
(
fd
)

40 
	`EV_FD_CLO
(
fd
);

41 
	`p‹t_ønge_ªÀa£_p‹t
(
fdöfo
[
fd
].
p‹t_ønge
, fdöfo[fd].
loˇl_p‹t
);

42 
fdöfo
[
fd
].
p‹t_ønge
 = 
NULL
;

43 
	`˛o£
(
fd
);

44 
fdèb
[
fd
].
°©e
 = 
FD_STCLOSE
;

46 (
maxfd
-1 >0Ë&& (
fdèb
[maxfd-1].
°©e
 =
FD_STCLOSE
))

47 
maxfd
--;

48 
	}
}

52 
	$dißbÀ_pﬁÀr
(c⁄° *
pﬁÀr_«me
)

54 
p
;

56 
p
 = 0;Ö < 
nbpﬁÀrs
;Ö++)

57 i‡(
	`°rcmp
(
pﬁÀrs
[
p
].
«me
, 
pﬁÀr_«me
) == 0)

58 
pﬁÀrs
[
p
].
¥ef
 = 0;

59 
	}
}

65 
	$öô_pﬁÀrs
()

67 
p
;

68 
pﬁÀr
 *
bp
;

72 
bp
 = 
NULL
;

73 
p
 = 0;Ö < 
nbpﬁÀrs
;Ö++)

74 i‡(!
bp
 || (
pﬁÀrs
[
p
].
¥ef
 > bp->pref))

75 
bp
 = &
pﬁÀrs
[
p
];

77 i‡(!
bp
 || bp->
¥ef
 == 0)

80 i‡(
bp
->
	`öô
(bp)) {

81 
	`mem˝y
(&
cur_pﬁÀr
, 
bp
, (*bp));

84 } !
bp
 || bp->
¥ef
 == 0);

86 
	}
}

91 
	$deöô_pﬁÀrs
() {

93 
pﬁÀr
 *
bp
;

94 
p
;

96 
p
 = 0;Ö < 
nbpﬁÀrs
;Ö++) {

97 
bp
 = &
pﬁÀrs
[
p
];

99 i‡(
bp
 && bp->
¥ef
)

100 
bp
->
	`ãrm
(bp);

102 
	}
}

108 
	$li°_pﬁÀrs
(
FILE
 *
out
)

110 
p
;

111 
œ°
, 
√xt
;

112 
ußbÀ
;

113 
pﬁÀr
 *
bp
;

115 
	`Ârötf
(
out
, "AvailableÖolling systems :\n");

117 
ußbÀ
 = 0;

118 
bp
 = 
NULL
;

119 
œ°
 = 
√xt
 = -1;

121 
p
 = 0;Ö < 
nbpﬁÀrs
;Ö++) {

122 i‡(!
bp
 || (
pﬁÀrs
[
p
].
¥ef
 > bp->pref))

123 
bp
 = &
pﬁÀrs
[
p
];

124 i‡((
√xt
 < 0 || 
pﬁÀrs
[
p
].
¥ef
 >Çext)

125 && (
œ°
 < 0 || 
pﬁÀrs
[
p
].
¥ef
 <Üast))

126 
√xt
 = 
pﬁÀrs
[
p
].
¥ef
;

129 i‡(
√xt
 == -1)

132 
p
 = 0;Ö < 
nbpﬁÀrs
;Ö++) {

133 i‡(
pﬁÀrs
[
p
].
¥ef
 =
√xt
) {

134 
	`Ârötf
(
out
, " %10†: ", 
pﬁÀrs
[
p
].
«me
);

135 i‡(
pﬁÀrs
[
p
].
¥ef
 == 0)

136 
	`Ârötf
(
out
, "disabled, ");

138 
	`Ârötf
(
out
, "¥ef=%3d, ", 
pﬁÀrs
[
p
].
¥ef
);

139 i‡(
pﬁÀrs
[
p
].
	`ã°
(&pollers[p])) {

140 
	`Ârötf
(
out
, "ÅestÑesult OK");

141 i‡(
√xt
 > 0)

142 
ußbÀ
++;

144 
	`Ârötf
(
out
, "ÅestÑesult FAILED");

145 
	`Ârötf
(
out
, "\n");

148 
œ°
 = 
√xt
;

149 
√xt
 = -1;

151 
	`Ârötf
(
out
, "TŸÆ: %d (%d ußbÀ), wû»u£ %s.\n", 
nbpﬁÀrs
, 
ußbÀ
, 
bp
 ? bp->
«me
 : "none");

153 
	}
}

162 
	$f‹k_pﬁÀr
()

164 i‡(
cur_pﬁÀr
.
f‹k
) {

165 i‡(
cur_pﬁÀr
.
	`f‹k
(&cur_poller))

167 
cur_pﬁÀr
.
	`ãrm
(&cur_poller);

171 
	}
}

	@src/freq_ctr.c

13 
	~<comm⁄/c⁄fig.h
>

14 
	~<comm⁄/°™d¨d.h
>

15 
	~<comm⁄/time.h
>

16 
	~<comm⁄/toﬁs.h
>

17 
	~<¥Ÿo/‰eq_˘r.h
>

31 
	$ªad_‰eq_˘r
(
‰eq_˘r
 *
˘r
)

33 
cuº
, 
∑°
;

34 
age
;

36 
age
 = 
now
.
tv_£c
 - 
˘r
->
cuº_£c
;

37 i‡(
	`u∆ikñy
(
age
 > 1))

40 
cuº
 = 0;

41 
∑°
 = 
˘r
->
cuº_˘r
;

42 i‡(
	`likñy
(!
age
)) {

43 
cuº
 = 
∑°
;

44 
∑°
 = 
˘r
->
¥ev_˘r
;

47 i‡(
∑°
 <1 && !
cuº
)

48  
∑°
;

50  
cuº
 + 
	`mul32hi
(
∑°
, ~
cuº_£c_ms_sˇÀd
);

51 
	}
}

57 
	$‰eq_˘r_ªmaö
(
‰eq_˘r
 *
˘r
, 
‰eq
, 
≥nd
)

59 
cuº
, 
∑°
;

60 
age
;

62 
∑°
 = 0;

63 
cuº
 = 0;

64 
age
 = 
now
.
tv_£c
 - 
˘r
->
cuº_£c
;

66 i‡(
	`likñy
(
age
 <= 1)) {

67 
∑°
 = 
˘r
->
cuº_˘r
;

68 i‡(
	`likñy
(!
age
)) {

69 
cuº
 = 
∑°
;

70 
∑°
 = 
˘r
->
¥ev_˘r
;

72 
cuº
 +
	`mul32hi
(
∑°
, ~
cuº_£c_ms_sˇÀd
);

74 
cuº
 +
≥nd
;

76 i‡(
cuº
 >
‰eq
)

78  
‰eq
 - 
cuº
;

79 
	}
}

87 
	$√xt_evít_dñay
(
‰eq_˘r
 *
˘r
, 
‰eq
, 
≥nd
)

89 
cuº
, 
∑°
;

90 
waô
, 
age
;

92 
∑°
 = 0;

93 
cuº
 = 0;

94 
age
 = 
now
.
tv_£c
 - 
˘r
->
cuº_£c
;

96 i‡(
	`likñy
(
age
 <= 1)) {

97 
∑°
 = 
˘r
->
cuº_˘r
;

98 i‡(
	`likñy
(!
age
)) {

99 
cuº
 = 
∑°
;

100 
∑°
 = 
˘r
->
¥ev_˘r
;

102 
cuº
 +
	`mul32hi
(
∑°
, ~
cuº_£c_ms_sˇÀd
);

104 
cuº
 +
≥nd
;

106 i‡(
cuº
 < 
‰eq
)

109 
waô
 = 999 / 
cuº
;

110  
	`MAX
(
waô
, 1);

111 
	}
}

	@src/haproxy.c

28 
	~<°dio.h
>

29 
	~<°dlib.h
>

30 
	~<uni°d.h
>

31 
	~<°rög.h
>

32 
	~<˘y≥.h
>

33 
	~<sys/time.h
>

34 
	~<sys/ty≥s.h
>

35 
	~<sys/sockë.h
>

36 
	~<√töë/t˝.h
>

37 
	~<√töë/ö.h
>

38 
	~<¨∑/öë.h
>

39 
	~<√tdb.h
>

40 
	~<f˙é.h
>

41 
	~<î∫o.h
>

42 
	~<sig«l.h
>

43 
	~<°d¨g.h
>

44 
	~<sys/ªsour˚.h
>

45 
	~<time.h
>

46 
	~<sy¶og.h
>

48 #ifde‡
DEBUG_FULL


49 
	~<as£π.h
>

52 
	~<comm⁄/≠p£ssi⁄.h
>

53 
	~<comm⁄/ba£64.h
>

54 
	~<comm⁄/cfg∑r£.h
>

55 
	~<comm⁄/com∑t.h
>

56 
	~<comm⁄/c⁄fig.h
>

57 
	~<comm⁄/deÁu…s.h
>

58 
	~<comm⁄/îr‹s.h
>

59 
	~<comm⁄/mem‹y.h
>

60 
	~<comm⁄/möi-˛i°.h
>

61 
	~<comm⁄/ªgex.h
>

62 
	~<comm⁄/°™d¨d.h
>

63 
	~<comm⁄/time.h
>

64 
	~<comm⁄/uri_auth.h
>

65 
	~<comm⁄/vîsi⁄.h
>

67 
	~<ty≥s/ˇ±uª.h
>

68 
	~<ty≥s/globÆ.h
>

70 
	~<¥Ÿo/auth.h
>

71 
	~<¥Ÿo/a˛.h
>

72 
	~<¥Ÿo/backíd.h
>

73 
	~<¥Ÿo/buf„rs.h
>

74 
	~<¥Ÿo/checks.h
>

75 
	~<¥Ÿo/˛õ¡.h
>

76 
	~<¥Ÿo/fd.h
>

77 
	~<¥Ÿo/log.h
>

78 
	~<¥Ÿo/¥Ÿocﬁs.h
>

79 
	~<¥Ÿo/¥Ÿo_hâp.h
>

80 
	~<¥Ÿo/¥oxy.h
>

81 
	~<¥Ÿo/queue.h
>

82 
	~<¥Ÿo/£rvî.h
>

83 
	~<¥Ÿo/£ssi⁄.h
>

84 
	~<¥Ÿo/sig«l.h
>

85 
	~<¥Ÿo/°ªam_sock.h
>

86 
	~<¥Ÿo/èsk.h
>

88 #ifde‡
CONFIG_HAP_CTTPROXY


89 
	~<¥Ÿo/˘çroxy.h
>

97 
li°
 
	gcfg_cfgfûes
 = 
LIST_HEAD_INIT
(
cfg_cfgfûes
);

98 *
	g¥og«me
 = 
NULL
;

99 
	gpid
;

100 
	gªœtive_pid
 = 1;

103 
globÆ
 
	gglobÆ
 = {

104 
logÁc1
 : -1,

105 
logÁc2
 : -1,

106 
logÀv1
 : 7,

107 
logÀv2
 : 7,

108 .
°©s_sock
 = {

109 .
maxc⁄n
 = 10,

110 .
	g≥rm
 = {

111 .
ux
 = {

112 .
uid
 = -1,

113 .
	ggid
 = -1,

114 .
	gmode
 = 0,

118 .
	gtu√
 = {

119 .
bufsize
 = 
BUFSIZE
,

120 .
	gmaxªwrôe
 = 
MAXREWRITE
,

121 .
	gchksize
 = 
BUFSIZE
,

128 
	g°›pög
;

134 
	#MAX_START_RETRIES
 200

	)

135 *
	gﬁdpids
 = 
NULL
;

136 
	gﬁdpids_sig
;

139 
	gåash
[
BUFSIZE
];

144 *
	gsw≠_buf„r
 = 
NULL
;

146 
	gnb_ﬁdpids
 = 0;

147 c⁄° 
	gzîo
 = 0;

148 c⁄° 
	g⁄e
 = 1;

149 c⁄° 
lögî
 
	gnﬁögî
 = { .
l_⁄off
 = 1, .
	gl_lögî
 = 0 };

151 
	gho°«me
[
MAX_HOSTNAME_LEN
];

158 
	$di•œy_vîsi⁄
()

160 
	`¥ötf
("HA-Proxy vîsi⁄ " 
HAPROXY_VERSION
 " " 
HAPROXY_DATE
"\n");

161 
	`¥ötf
("Copyright 2000-2010 Willy Tarreau <w@1wt.eu>\n\n");

162 
	}
}

164 
	$di•œy_buûd_›ts
()

166 
	`¥ötf
("Build options :"

167 #ifde‡
BUILD_TARGET


168 "\¿ TARGET = " 
BUILD_TARGET


170 #ifde‡
BUILD_CPU


171 "\¿ CPU = " 
BUILD_CPU


173 #ifde‡
BUILD_CC


174 "\¿ CC = " 
BUILD_CC


176 #ifde‡
BUILD_CFLAGS


177 "\¿ CFLAGS = " 
BUILD_CFLAGS


179 #ifde‡
BUILD_OPTIONS


180 "\¿ OPTIONS = " 
BUILD_OPTIONS


185 
DEFAULT_MAXCONN
, 
BUFSIZE
, 
MAXREWRITE
, 
MAX_POLL_EVENTS
);

187 
	`¥ötf
("EncryptedÖassword support via crypt(3): "

188 #ifde‡
CONFIG_HAP_CRYPT


195 
	`putch¨
('\n');

197 
	`li°_pﬁÀrs
(
°dout
);

198 
	`putch¨
('\n');

199 
	}
}

204 
	$ußge
(*
«me
)

206 
	`di•œy_vîsi⁄
();

207 
	`Ârötf
(
°dîr
,

221 #i‡
	`deföed
(
ENABLE_EPOLL
)

224 #i‡
	`deföed
(
ENABLE_SEPOLL
)

227 #i‡
	`deföed
(
ENABLE_KQUEUE
)

230 #i‡
	`deföed
(
ENABLE_POLL
)

233 #i‡
	`deföed
(
CONFIG_HAP_LINUX_SPLICE
)

238 
«me
, 
DEFAULT_MAXCONN
, 
cfg_maxpc⁄n
);

239 
	`exô
(1);

240 
	}
}

251 
	$sig_so·_°›
(
sig
)

253 
	`so·_°›
();

254 
	`poﬁ_gc2
();

255 
	`sig«l_ªgi°î
(
sig
, 
SIG_IGN
);

256 
	}
}

261 
	$sig_∑u£
(
sig
)

263 
	`∑u£_¥oxõs
();

264 
	`poﬁ_gc2
();

265 
	}
}

270 
	$sig_li°í
(
sig
)

272 
	`li°í_¥oxõs
();

273 
	}
}

278 
	$sig_dump_°©e
(
sig
)

280 
¥oxy
 *
p
 =Öroxy;

282 
	`W¨nög
("SIGHUPÑeceived, dumping servers states.\n");

283 
p
) {

284 
£rvî
 *
s
 = 
p
->
§v
;

286 
	`£nd_log
(
p
, 
LOG_NOTICE
, "SIGHUPÑe˚ived, dumpög sîvî†°©e†f‹Öroxy %s.\n",Ö->
id
);

287 
s
) {

288 
	`¢¥ötf
(
åash
, (trash),

290 
p
->
id
, 
s
->id,

291 (
s
->
°©e
 & 
SRV_RUNNING
) ? "UP" : "DOWN",

292 
s
->
cur_£ss
, s->
nb≥nd
, s->
cou¡îs
.
cum_£ss
);

293 
	`W¨nög
("%s\n", 
åash
);

294 
	`£nd_log
(
p
, 
LOG_NOTICE
, "%s\n", 
åash
);

295 
s
 = s->
√xt
;

299 i‡(!
p
->
§v
) {

300 
	`¢¥ötf
(
åash
, (trash),

302 
p
->
id
,

303 
p
->
„c⁄n
,Ö->
bec⁄n
,Ö->
tŸ≥nd
,Ö->
nb≥nd
,Ö->
cou¡îs
.
cum_„c⁄n
,Ö->cou¡îs.
cum_bec⁄n
);

304 } i‡(
p
->
§v_a˘
 == 0) {

305 
	`¢¥ötf
(
åash
, (trash),

307 
p
->
id
,

308 (
p
->
§v_bck
) ? "isÑunning on backup servers" : "hasÇo serverávailable",

309 
p
->
„c⁄n
,Ö->
bec⁄n
,Ö->
tŸ≥nd
,Ö->
nb≥nd
,Ö->
cou¡îs
.
cum_„c⁄n
,Ö->cou¡îs.
cum_bec⁄n
);

311 
	`¢¥ötf
(
åash
, (trash),

314 
p
->
id
,Ö->
§v_a˘
,Ö->
§v_bck
,

315 
p
->
„c⁄n
,Ö->
bec⁄n
,Ö->
tŸ≥nd
,Ö->
nb≥nd
,Ö->
cou¡îs
.
cum_„c⁄n
,Ö->cou¡îs.
cum_bec⁄n
);

317 
	`W¨nög
("%s\n", 
åash
);

318 
	`£nd_log
(
p
, 
LOG_NOTICE
, "%s\n", 
åash
);

320 
p
 =Ö->
√xt
;

322 
	}
}

324 
	$dump
(
sig
)

327 
èsk
 *
t
;

328 
£ssi⁄
 *
s
;

329 
rb_node
 *
node
;

331 
node
 = 
	`rb_fú°
(&
waô_queue
[0]);

332 
node
 !
NULL
;Çodê
	`rb_√xt
(node)) {

333 
t
 = 
	`rb_íåy
(
node
, 
èsk
, 
rb_node
);

334 
s
 = 
t
->
c⁄ãxt
;

335 
	`qÂrötf
(
°dîr
,"[dump] wq:Åask %p, still %ld ms, "

337 
s
, 
	`tv_ms_ªmaö
(&
now
, &
t
->
expúe
),

338 
s
->
si
[0].
°©e
,

339 
s
->
si
[1].
°©e
,

340 
s
->
ªq
->
l
, s->
ªp
?s->rep->l:0);

344 
	`dump_poﬁs
();

345 
	`poﬁ_gc2
();

346 
	}
}

348 #ifde‡
DEBUG_MEMORY


349 
	$Á°_°›
()

351 
¥oxy
 *
p
;

352 
p
 = 
¥oxy
;

353 
p
) {

354 
p
->
gø˚
 = 0;

355 
p
 =Ö->
√xt
;

357 
	`so·_°›
();

358 
	}
}

360 
	$sig_öt
(
sig
)

367 
	`Á°_°›
();

368 
	`poﬁ_gc2
();

370 
	`sig«l_ªgi°î
(
sig
, 
SIG_DFL
);

371 
	}
}

373 
	$sig_ãrm
(
sig
)

380 
	`Á°_°›
();

381 
	`poﬁ_gc2
();

383 
	`sig«l_ªgi°î
(
sig
, 
SIG_DFL
);

384 
	}
}

392 
	$öô
(
¨gc
, **
¨gv
)

394 
i
;

395 
¨g_mode
 = 0;

396 *
ﬁd_¨gv
 = *
¨gv
;

397 *
tmp
;

398 *
cfg_pidfûe
 = 
NULL
;

399 
îr_code
 = 0;

400 
w‹dli°
 *
wl
;

406 
tŸÆc⁄n
 = 
a˘c⁄n
 = 
maxfd
 = 
li°íîs
 = 
°›pög
 = 0;

409 #ifde‡
HAPROXY_MEMMAX


410 
globÆ
.
æimô_memmax
 = 
HAPROXY_MEMMAX
;

413 
	`tv_upd©e_d©e
(-1,-1);

414 
°¨t_d©e
 = 
now
;

416 
	`sig«l_öô
();

417 
	`öô_èsk
();

418 
	`öô_£ssi⁄
();

420 
	`öô_≥ndc⁄n
();

421 
	`öô_¥Ÿo_hâp
();

423 
globÆ
.
tu√
.
›ti⁄s
 |
GTUNE_USE_SELECT
;

424 #i‡
	`deföed
(
ENABLE_POLL
)

425 
globÆ
.
tu√
.
›ti⁄s
 |
GTUNE_USE_POLL
;

427 #i‡
	`deföed
(
ENABLE_EPOLL
)

428 
globÆ
.
tu√
.
›ti⁄s
 |
GTUNE_USE_EPOLL
;

430 #i‡
	`deföed
(
ENABLE_SEPOLL
)

431 
globÆ
.
tu√
.
›ti⁄s
 |
GTUNE_USE_SEPOLL
;

433 #i‡
	`deföed
(
ENABLE_KQUEUE
)

434 
globÆ
.
tu√
.
›ti⁄s
 |
GTUNE_USE_KQUEUE
;

436 #i‡
	`deföed
(
CONFIG_HAP_LINUX_SPLICE
)

437 
globÆ
.
tu√
.
›ti⁄s
 |
GTUNE_USE_SPLICE
;

440 
pid
 = 
	`gëpid
();

441 
¥og«me
 = *
¨gv
;

442 (
tmp
 = 
	`°rchr
(
¥og«me
, '/')Ë!
NULL
)

443 
¥og«me
 = 
tmp
 + 1;

445 
¨gc
--; 
¨gv
++;

446 
¨gc
 > 0) {

447 *
Êag
;

449 i‡(**
¨gv
 == '-') {

450 
Êag
 = *
¨gv
+1;

453 i‡(*
Êag
 == 'v') {

454 
	`di•œy_vîsi⁄
();

455 i‡(
Êag
[1] == 'v')

456 
	`di•œy_buûd_›ts
();

457 
	`exô
(0);

459 #i‡
	`deföed
(
ENABLE_EPOLL
)

460 i‡(*
Êag
 == 'd' && flag[1] == 'e')

461 
globÆ
.
tu√
.
›ti⁄s
 &~
GTUNE_USE_EPOLL
;

463 #i‡
	`deföed
(
ENABLE_SEPOLL
)

464 i‡(*
Êag
 == 'd' && flag[1] == 's')

465 
globÆ
.
tu√
.
›ti⁄s
 &~
GTUNE_USE_SEPOLL
;

467 #i‡
	`deföed
(
ENABLE_POLL
)

468 i‡(*
Êag
 == 'd' && flag[1] == 'p')

469 
globÆ
.
tu√
.
›ti⁄s
 &~
GTUNE_USE_POLL
;

471 #i‡
	`deföed
(
ENABLE_KQUEUE
)

472 i‡(*
Êag
 == 'd' && flag[1] == 'k')

473 
globÆ
.
tu√
.
›ti⁄s
 &~
GTUNE_USE_KQUEUE
;

475 #i‡
	`deföed
(
CONFIG_HAP_LINUX_SPLICE
)

476 i‡(*
Êag
 == 'd' && flag[1] == 'S')

477 
globÆ
.
tu√
.
›ti⁄s
 &~
GTUNE_USE_SPLICE
;

479 i‡(*
Êag
 == 'V')

480 
¨g_mode
 |
MODE_VERBOSE
;

481 i‡(*
Êag
 == 'd' && flag[1] == 'b')

482 
¨g_mode
 |
MODE_FOREGROUND
;

483 i‡(*
Êag
 == 'd')

484 
¨g_mode
 |
MODE_DEBUG
;

485 i‡(*
Êag
 == 'c')

486 
¨g_mode
 |
MODE_CHECK
;

487 i‡(*
Êag
 == 'D')

488 
¨g_mode
 |
MODE_DAEMON
;

489 i‡(*
Êag
 == 'q')

490 
¨g_mode
 |
MODE_QUIET
;

491 i‡(*
Êag
 == 's' && (flag[1] == 'f' || flag[1] == 't')) {

494 i‡(
Êag
[1] == 'f')

495 
ﬁdpids_sig
 = 
SIGUSR1
;

497 
ﬁdpids_sig
 = 
SIGTERM
;

498 
¨gv
++; 
¨gc
--;

500 i‡(
¨gc
 > 0) {

501 
ﬁdpids
 = 
	`ˇŒoc
(
¨gc
, ());

502 
¨gc
 > 0) {

503 
ﬁdpids
[
nb_ﬁdpids
] = 
	`©ﬁ
(*
¨gv
);

504 i‡(
ﬁdpids
[
nb_ﬁdpids
] <= 0)

505 
	`ußge
(
ﬁd_¨gv
);

506 
¨gc
--; 
¨gv
++;

507 
nb_ﬁdpids
++;

512 
¨gv
++; 
¨gc
--;

513 i‡(
¨gc
 == 0)

514 
	`ußge
(
ﬁd_¨gv
);

516 *
Êag
) {

517 'n' : 
cfg_maxc⁄n
 = 
	`©ﬁ
(*
¨gv
); ;

518 'm' : 
globÆ
.
æimô_memmax
 = 
	`©ﬁ
(*
¨gv
); ;

519 'N' : 
cfg_maxpc⁄n
 = 
	`©ﬁ
(*
¨gv
); ;

521 
wl
 = (
w‹dli°
 *)
	`ˇŒoc
(1, (*wl));

522 i‡(!
wl
) {

523 
	`AÀπ
("C™nŸÜﬂd c⁄figuøti⁄ fûê%†: ouào‡mem‹y.\n", *
¨gv
);

524 
	`exô
(1);

526 
wl
->
s
 = *
¨gv
;

527 
	`LIST_ADDQ
(&
cfg_cfgfûes
, &
wl
->
li°
);

529 'p' : 
cfg_pidfûe
 = *
¨gv
; ;

530 : 
	`ußge
(
ﬁd_¨gv
);

535 
	`ußge
(
ﬁd_¨gv
);

536 
¨gv
++; 
¨gc
--;

539 
globÆ
.
mode
 = 
MODE_STARTING
 |

540 (
¨g_mode
 & (
MODE_DAEMON
 | 
MODE_FOREGROUND
 | 
MODE_VERBOSE


541 | 
MODE_QUIET
 | 
MODE_CHECK
 | 
MODE_DEBUG
));

543 i‡(
	`LIST_ISEMPTY
(&
cfg_cfgfûes
))

544 
	`ußge
(
ﬁd_¨gv
);

550 
	`mem£t
(
ho°«me
, 0, (hostname));

551 
	`gëho°«me
(
ho°«me
, (hostname) - 1);

553 
have_≠p£ssi⁄
 = 0;

554 
globÆ
.
maxsock
 = 10;

556 
	`öô_deÁu…_ö°™˚
();

558 
	`li°_f‹_óch_íåy
(
wl
, &
cfg_cfgfûes
, 
li°
) {

559 
ªt
;

561 
ªt
 = 
	`ªadcfgfûe
(
wl
->
s
);

562 i‡(
ªt
 == -1) {

563 
	`AÀπ
("CouldÇot open configuration file %s : %s\n",

564 
wl
->
s
, 
	`°ªº‹
(
î∫o
));

565 
	`exô
(1);

567 i‡(
ªt
 & (
ERR_ABORT
|
ERR_FATAL
))

568 
	`AÀπ
("Eº‹(sËfound i¿c⁄figuøti⁄ fûê: %s\n", 
wl
->
s
);

569 
îr_code
 |
ªt
;

570 i‡(
îr_code
 & 
ERR_ABORT
)

571 
	`exô
(1);

574 
îr_code
 |
	`check_c⁄fig_vÆidôy
();

575 i‡(
îr_code
 & (
ERR_ABORT
|
ERR_FATAL
)) {

576 
	`AÀπ
("FatalÉrrors found in configuration.\n");

577 
	`exô
(1);

580 i‡(
globÆ
.
mode
 & 
MODE_CHECK
) {

581 
	`qÂrötf
(
°dout
, "Configuration file is valid\n");

582 
	`exô
(0);

586 
	`öô_buf„r
();

588 i‡(
have_≠p£ssi⁄
)

589 
	`≠p£ssi⁄_öô
();

591 i‡(
	`°¨t_checks
() < 0)

592 
	`exô
(1);

594 i‡(
cfg_maxc⁄n
 > 0)

595 
globÆ
.
maxc⁄n
 = 
cfg_maxc⁄n
;

597 i‡(
cfg_pidfûe
) {

598 
	`‰ì
(
globÆ
.
pidfûe
);

599 
globÆ
.
pidfûe
 = 
	`°rdup
(
cfg_pidfûe
);

602 i‡(
globÆ
.
maxc⁄n
 == 0)

603 
globÆ
.
maxc⁄n
 = 
DEFAULT_MAXCONN
;

605 i‡(!
globÆ
.
maxpùes
) {

609 
¥oxy
 *
cur
;

610 
nb„
 = 0, 
nbbe
 = 0;

612 
cur
 = 
¥oxy
; cur; cu∏cur->
√xt
) {

613 i‡(
cur
->
›ti⁄s2
 & (
PR_O2_SPLIC_ANY
)) {

614 i‡(
cur
->
ˇp
 & 
PR_CAP_FE
)

615 
nb„
 +
cur
->
maxc⁄n
;

616 i‡(
cur
->
ˇp
 & 
PR_CAP_BE
)

617 
nbbe
 +
cur
->
fuŒc⁄n
 ? cur->fuŒc⁄¿: 
globÆ
.
maxc⁄n
;

620 
globÆ
.
maxpùes
 = 
	`MAX
(
nb„
, 
nbbe
);

621 i‡(
globÆ
.
maxpùes
 > globÆ.
maxc⁄n
)

622 
globÆ
.
maxpùes
 = globÆ.
maxc⁄n
;

623 
globÆ
.
maxpùes
 /= 4;

627 
globÆ
.
maxsock
 +globÆ.
maxc⁄n
 * 2;

628 
globÆ
.
maxsock
 +globÆ.
maxpùes
 * 2;

630 i‡(
globÆ
.
tu√
.
maxpﬁÀvíts
 <= 0)

631 
globÆ
.
tu√
.
maxpﬁÀvíts
 = 
MAX_POLL_EVENTS
;

633 i‡(
globÆ
.
tu√
.
maxac˚±
 == 0) {

634 i‡(
globÆ
.
nb¥oc
 > 1)

635 
globÆ
.
tu√
.
maxac˚±
 = 8;

637 
globÆ
.
tu√
.
maxac˚±
 = 100;

640 i‡(
globÆ
.
tu√
.
ªcv_íough
 == 0)

641 
globÆ
.
tu√
.
ªcv_íough
 = 
MIN_RECV_AT_ONCE_ENOUGH
;

643 i‡(
globÆ
.
tu√
.
maxªwrôe
 >globÆ.tu√.
bufsize
 / 2)

644 
globÆ
.
tu√
.
maxªwrôe
 = globÆ.tu√.
bufsize
 / 2;

646 i‡(
¨g_mode
 & (
MODE_DEBUG
 | 
MODE_FOREGROUND
)) {

648 
globÆ
.
mode
 &~(
MODE_DAEMON
 | 
MODE_QUIET
);

650 
globÆ
.
mode
 |(
¨g_mode
 & (
MODE_DAEMON
 | 
MODE_FOREGROUND
 | 
MODE_QUIET
 |

651 
MODE_VERBOSE
 | 
MODE_DEBUG
 ));

653 i‡((
globÆ
.
mode
 & 
MODE_DEBUG
Ë&& (globÆ.modê& (
MODE_DAEMON
 | 
MODE_QUIET
))) {

654 
	`W¨nög
("<debug> mode incompatible with <quiet>ánd <daemon>. Keeping <debug> only.\n");

655 
globÆ
.
mode
 &~(
MODE_DAEMON
 | 
MODE_QUIET
);

658 i‡((
globÆ
.
nb¥oc
 > 1Ë&& !(globÆ.
mode
 & 
MODE_DAEMON
)) {

659 i‡(!(
globÆ
.
mode
 & (
MODE_FOREGROUND
 | 
MODE_DEBUG
)))

660 
	`W¨nög
("<nbproc> is only meaningful in daemon mode. SettingÜimitÅo 1Örocess.\n");

661 
globÆ
.
nb¥oc
 = 1;

664 i‡(
globÆ
.
nb¥oc
 < 1)

665 
globÆ
.
nb¥oc
 = 1;

667 
sw≠_buf„r
 = (*)
	`ˇŒoc
(1, 
globÆ
.
tu√
.
bufsize
);

669 
fdöfo
 = (fdöfÿ*)
	`ˇŒoc
(1,

670 (
fdöfo
Ë* (
globÆ
.
maxsock
));

671 
fdèb
 = (fdèb *)
	`ˇŒoc
(1,

672 (
fdèb
Ë* (
globÆ
.
maxsock
));

673 
i
 = 0; i < 
globÆ
.
maxsock
; i++) {

674 
fdèb
[
i
].
°©e
 = 
FD_STCLOSE
;

682 i‡(!(
globÆ
.
tu√
.
›ti⁄s
 & 
GTUNE_USE_KQUEUE
))

683 
	`dißbÀ_pﬁÀr
("kqueue");

685 i‡(!(
globÆ
.
tu√
.
›ti⁄s
 & 
GTUNE_USE_EPOLL
))

686 
	`dißbÀ_pﬁÀr
("epoll");

688 i‡(!(
globÆ
.
tu√
.
›ti⁄s
 & 
GTUNE_USE_SEPOLL
))

689 
	`dißbÀ_pﬁÀr
("sepoll");

691 i‡(!(
globÆ
.
tu√
.
›ti⁄s
 & 
GTUNE_USE_POLL
))

692 
	`dißbÀ_pﬁÀr
("poll");

694 i‡(!(
globÆ
.
tu√
.
›ti⁄s
 & 
GTUNE_USE_SELECT
))

695 
	`dißbÀ_pﬁÀr
("select");

699 i‡(
globÆ
.
mode
 & (
MODE_VERBOSE
|
MODE_DEBUG
))

700 
	`li°_pﬁÀrs
(
°dîr
);

702 i‡(!
	`öô_pﬁÀrs
()) {

703 
	`AÀπ
("NoÖolling mechanismávailable.\n");

704 
	`exô
(1);

706 i‡(
globÆ
.
mode
 & (
MODE_VERBOSE
|
MODE_DEBUG
)) {

707 
	`¥ötf
("Usög %s(Ëa†thêpﬁlög mech™ism.\n", 
cur_pﬁÀr
.
«me
);

710 i‡(!
globÆ
.
node
)

711 
globÆ
.
node
 = 
	`°rdup
(
ho°«me
);

713 
	}
}

715 
	$deöô
()

717 
¥oxy
 *
p
 =Öroxy, *
p0
;

718 
ˇp_hdr
 *
h
,*
h_√xt
;

719 
£rvî
 *
s
,*
s_√xt
;

720 
li°íî
 *
l
,*
l_√xt
;

721 
a˛_c⁄d
 *
c⁄d
, *
c⁄db
;

722 
hdr_exp
 *
exp
, *
expb
;

723 
a˛
 *a˛, *
a˛b
;

724 
swôchög_ruÀ
 *
ruÀ
, *
ruÀb
;

725 
ªdúe˘_ruÀ
 *
rdr
, *
rdrb
;

726 
w‹dli°
 *
wl
, *
wlb
;

727 
c⁄d_w‹dli°
 *
cwl
, *
cwlb
;

728 
uri_auth
 *
u≠
, *
ua
 = 
NULL
;

729 
i
;

731 
p
) {

732 
	`‰ì
(
p
->
id
);

733 
	`‰ì
(
p
->
check_ªq
);

734 
	`‰ì
(
p
->
cookõ_«me
);

735 
	`‰ì
(
p
->
cookõ_domaö
);

736 
	`‰ì
(
p
->
uæ_∑øm_«me
);

737 
	`‰ì
(
p
->
ˇ±uª_«me
);

738 
	`‰ì
(
p
->
m⁄ô‹_uri
);

740 
i
 = 0; i < 
HTTP_ERR_SIZE
; i++)

741 
	`chunk_de°roy
(&
p
->
îrmsg
[
i
]);

743 
	`li°_f‹_óch_íåy_ß„
(
cwl
, 
cwlb
, &
p
->
ªq_add
, 
li°
) {

744 
	`LIST_DEL
(&
cwl
->
li°
);

745 
	`‰ì
(
cwl
->
s
);

746 
	`‰ì
(
cwl
);

749 
	`li°_f‹_óch_íåy_ß„
(
cwl
, 
cwlb
, &
p
->
r•_add
, 
li°
) {

750 
	`LIST_DEL
(&
cwl
->
li°
);

751 
	`‰ì
(
cwl
->
s
);

752 
	`‰ì
(
cwl
);

755 
	`li°_f‹_óch_íåy_ß„
(
c⁄d
, 
c⁄db
, &
p
->
block_c⁄d
, 
li°
) {

756 
	`LIST_DEL
(&
c⁄d
->
li°
);

757 
	`¥u√_a˛_c⁄d
(
c⁄d
);

758 
	`‰ì
(
c⁄d
);

761 
	`li°_f‹_óch_íåy_ß„
(
c⁄d
, 
c⁄db
, &
p
->
m⁄_Áû_c⁄d
, 
li°
) {

762 
	`LIST_DEL
(&
c⁄d
->
li°
);

763 
	`¥u√_a˛_c⁄d
(
c⁄d
);

764 
	`‰ì
(
c⁄d
);

767 
exp
 = 
p
->
ªq_exp
;Éx∞!
NULL
; ) {

768 i‡(
exp
->
¥eg
) {

769 
	`ªg‰ì
((
ªgex_t
 *)
exp
->
¥eg
);

770 
	`‰ì
((
ªgex_t
 *)
exp
->
¥eg
);

773 i‡(
exp
->
ª∂a˚
 &&Éxp->
a˘i⁄
 !
ACT_SETBE
)

774 
	`‰ì
((*)
exp
->
ª∂a˚
);

775 
expb
 = 
exp
;

776 
exp
 =Éxp->
√xt
;

777 
	`‰ì
(
expb
);

780 
exp
 = 
p
->
r•_exp
;Éx∞!
NULL
; ) {

781 i‡(
exp
->
¥eg
) {

782 
	`ªg‰ì
((
ªgex_t
 *)
exp
->
¥eg
);

783 
	`‰ì
((
ªgex_t
 *)
exp
->
¥eg
);

786 i‡(
exp
->
ª∂a˚
 &&Éxp->
a˘i⁄
 !
ACT_SETBE
)

787 
	`‰ì
((*)
exp
->
ª∂a˚
);

788 
expb
 = 
exp
;

789 
exp
 =Éxp->
√xt
;

790 
	`‰ì
(
expb
);

794 i‡(!
ua
)

795 
ua
 = 
p
->
uri_auth
;

798 
u≠
 = 
ua
; u≠; u≠=u≠->
√xt
)

799 i‡(
u≠
 =
p
->
uri_auth
)

802 i‡(!
u≠
 && 
p
->
uri_auth
) {

804 
p
->
uri_auth
->
√xt
 = 
ua
;

805 
ua
 = 
p
->
uri_auth
;

809 
	`li°_f‹_óch_íåy_ß„
(
a˛
, 
a˛b
, &
p
->a˛, 
li°
) {

810 
	`LIST_DEL
(&
a˛
->
li°
);

811 
	`¥u√_a˛
(
a˛
);

812 
	`‰ì
(
a˛
);

815 
	`li°_f‹_óch_íåy_ß„
(
ruÀ
, 
ruÀb
, &
p
->
swôchög_ruÀs
, 
li°
) {

816 
	`LIST_DEL
(&
ruÀ
->
li°
);

817 
	`¥u√_a˛_c⁄d
(
ruÀ
->
c⁄d
);

818 
	`‰ì
(
ruÀ
->
c⁄d
);

819 
	`‰ì
(
ruÀ
);

822 
	`li°_f‹_óch_íåy_ß„
(
rdr
, 
rdrb
, &
p
->
ªdúe˘_ruÀs
, 
li°
) {

823 
	`LIST_DEL
(&
rdr
->
li°
);

824 i‡(
rdr
->
c⁄d
) {

825 
	`¥u√_a˛_c⁄d
(
rdr
->
c⁄d
);

826 
	`‰ì
(
rdr
->
c⁄d
);

828 
	`‰ì
(
rdr
->
rdr_°r
);

829 
	`‰ì
(
rdr
);

832 
	`‰ì
(
p
->
≠p£ssi⁄_«me
);

834 
h
 = 
p
->
ªq_ˇp
;

835 
h
) {

836 
h_√xt
 = 
h
->
√xt
;

837 
	`‰ì
(
h
->
«me
);

838 
	`poﬁ_de°roy2
(
h
->
poﬁ
);

839 
	`‰ì
(
h
);

840 
h
 = 
h_√xt
;

843 
h
 = 
p
->
r•_ˇp
;

844 
h
) {

845 
h_√xt
 = 
h
->
√xt
;

846 
	`‰ì
(
h
->
«me
);

847 
	`poﬁ_de°roy2
(
h
->
poﬁ
);

848 
	`‰ì
(
h
);

849 
h
 = 
h_√xt
;

852 
s
 = 
p
->
§v
;

853 
s
) {

854 
s_√xt
 = 
s
->
√xt
;

856 i‡(
s
->
check
) {

857 
	`èsk_dñëe
(
s
->
check
);

858 
	`èsk_‰ì
(
s
->
check
);

861 
	`‰ì
(
s
->
id
);

862 
	`‰ì
(
s
->
cookõ
);

863 
	`‰ì
(
s
->
check_d©a
);

864 
	`‰ì
(
s
);

865 
s
 = 
s_√xt
;

868 
l
 = 
p
->
li°í
;

869 
l
) {

870 
l_√xt
 = 
l
->
√xt
;

871 
	`unböd_li°íî
(
l
);

872 
	`dñëe_li°íî
(
l
);

873 
	`‰ì
(
l
->
«me
);

874 
	`‰ì
(
l
->
cou¡îs
);

875 
	`‰ì
(
l
);

876 
l
 = 
l_√xt
;

879 
	`‰ì
(
p
->
desc
);

880 
	`‰ì
(
p
->
fwdf‹_hdr_«me
);

882 
	`ªq_a˛_‰ì
(&
p
->
ªq_a˛
);

884 
	`poﬁ_de°roy2
(
p
->
ªq_ˇp_poﬁ
);

885 
	`poﬁ_de°roy2
(
p
->
r•_ˇp_poﬁ
);

886 
	`poﬁ_de°roy2
(
p
->
hdr_idx_poﬁ
);

888 
p0
 = 
p
;

889 
p
 =Ö->
√xt
;

890 
	`‰ì
(
p0
);

893 
ua
) {

894 
u≠
 = 
ua
;

895 
ua
 = ua->
√xt
;

897 
	`‰ì
(
u≠
->
uri_¥efix
);

898 
	`‰ì
(
u≠
->
auth_ªÆm
);

899 
	`‰ì
(
u≠
->
node
);

900 
	`‰ì
(
u≠
->
desc
);

902 
	`u£æi°_‰ì
(
u≠
->
u£æi°
);

903 
	`ªq_a˛_‰ì
(&
u≠
->
ªq_a˛
);

905 
	`‰ì
(
u≠
);

908 
	`u£æi°_‰ì
(
u£æi°
);

910 
	`¥Ÿocﬁ_unböd_Æl
();

912 
	`‰ì
(
globÆ
.
chroŸ
); globÆ.chroŸ = 
NULL
;

913 
	`‰ì
(
globÆ
.
pidfûe
); globÆ.pidfûê
NULL
;

914 
	`‰ì
(
globÆ
.
node
); globÆ.nodê
NULL
;

915 
	`‰ì
(
globÆ
.
desc
); globÆ.des¯
NULL
;

916 
	`‰ì
(
fdèb
); fdèb = 
NULL
;

917 
	`‰ì
(
ﬁdpids
); oldpid†
NULL
;

919 
	`li°_f‹_óch_íåy_ß„
(
wl
, 
wlb
, &
cfg_cfgfûes
, 
li°
) {

920 
	`LIST_DEL
(&
wl
->
li°
);

921 
	`‰ì
(
wl
);

924 
	`poﬁ_de°roy2
(
poﬁ2_£ssi⁄
);

925 
	`poﬁ_de°roy2
(
poﬁ2_buf„r
);

926 
	`poﬁ_de°roy2
(
poﬁ2_ªquri
);

927 
	`poﬁ_de°roy2
(
poﬁ2_èsk
);

928 
	`poﬁ_de°roy2
(
poﬁ2_ˇ±uª
);

929 
	`poﬁ_de°roy2
(
poﬁ2_≠p£ss
);

930 
	`poﬁ_de°roy2
(
poﬁ2_≥ndc⁄n
);

932 i‡(
have_≠p£ssi⁄
) {

933 
	`poﬁ_de°roy2
(
≠oﬁs
.
£rvîid
);

934 
	`poﬁ_de°roy2
(
≠oﬁs
.
£ssid
);

937 
	`deöô_pﬁÀrs
();

939 
	}
}

944 
	$ãŒ_ﬁd_pids
(
sig
)

946 
p
;

947 
ªt
 = 0;

948 
p
 = 0;Ö < 
nb_ﬁdpids
;Ö++)

949 i‡(
	`kûl
(
ﬁdpids
[
p
], 
sig
) == 0)

950 
ªt
++;

951  
ªt
;

952 
	}
}

961 
	$run_pﬁl_lo›
()

963 
√xt
;

965 
	`tv_upd©e_d©e
(0,1);

968 
	`sig«l_¥o˚ss_queue
();

971 
	`wake_expúed_èsks
(&
√xt
);

974 
	`¥o˚ss_ru¬abÀ_èsks
(&
√xt
);

979 
	`maöèö_¥oxõs
(&
√xt
);

982 i‡(!
a˘c⁄n
 && 
li°íîs
 == 0)

986 
cur_pﬁÀr
.
	`pﬁl
(&cur_pﬁÀr, 
√xt
);

988 
	}
}

991 
	$maö
(
¨gc
, **
¨gv
)

993 
îr
, 
ªåy
;

994 
æimô
 
limô
;

995 
FILE
 *
pidfûe
 = 
NULL
;

996 
	`öô
(
¨gc
, 
¨gv
);

998 
	`sig«l_ªgi°î
(
SIGQUIT
, 
dump
);

999 
	`sig«l_ªgi°î
(
SIGUSR1
, 
sig_so·_°›
);

1000 
	`sig«l_ªgi°î
(
SIGHUP
, 
sig_dump_°©e
);

1001 #ifde‡
DEBUG_MEMORY


1002 
	`sig«l_ªgi°î
(
SIGINT
, 
sig_öt
);

1003 
	`sig«l_ªgi°î
(
SIGTERM
, 
sig_ãrm
);

1010 
	`sig«l
(
SIGPIPE
, 
SIG_IGN
);

1016 
ªåy
 = 
MAX_START_RETRIES
;

1017 
îr
 = 
ERR_NONE
;

1018 
ªåy
 >= 0) {

1019 
timevÆ
 
w
;

1020 
îr
 = 
	`°¨t_¥oxõs
(
ªåy
 =0 || 
nb_ﬁdpids
 == 0);

1022 i‡((
îr
 & (
ERR_RETRYABLE
|
ERR_FATAL
)) != ERR_RETRYABLE)

1024 i‡(
nb_ﬁdpids
 =0 || 
ªåy
 == 0)

1031 i‡(
	`ãŒ_ﬁd_pids
(
SIGTTOU
) == 0) {

1033 
ªåy
 = 0;

1037 
w
.
tv_£c
 = 0;

1038 
w
.
tv_u£c
 = 10*1000;

1039 
	`£À˘
(0, 
NULL
, NULL, NULL, &
w
);

1040 
ªåy
--;

1044 i‡((
îr
 & ~
ERR_WARN
Ë!
ERR_NONE
) {

1045 i‡(
ªåy
 !
MAX_START_RETRIES
 && 
nb_ﬁdpids
) {

1046 
	`¥Ÿocﬁ_unböd_Æl
();

1047 
	`ãŒ_ﬁd_pids
(
SIGTTIN
);

1049 
	`exô
(1);

1052 i‡(
li°íîs
 == 0) {

1053 
	`AÀπ
("[%s.maö()] NÿíabÀdÜi°íî found (checkÅhê<li°í> keyw‹dsË! Exôög.\n", 
¨gv
[0]);

1056 
	`exô
(1);

1059 i‡((
	`¥Ÿocﬁ_böd_Æl
(Ë& ~
ERR_WARN
Ë!
ERR_NONE
) {

1060 
	`AÀπ
("[%s.maö()] Somê¥Ÿocﬁ†ÁûedÅÿ°¨àtheúÜi°íîs! Exôög.\n", 
¨gv
[0]);

1061 
	`¥Ÿocﬁ_unböd_Æl
();

1062 i‡(
nb_ﬁdpids
)

1063 
	`ãŒ_ﬁd_pids
(
SIGTTIN
);

1064 
	`exô
(1);

1068 
	`sig«l_ªgi°î
(
SIGTTOU
, 
sig_∑u£
);

1069 
	`sig«l_ªgi°î
(
SIGTTIN
, 
sig_li°í
);

1073 
globÆ
.
mode
 &~
MODE_STARTING
;

1074 i‡((
globÆ
.
mode
 & 
MODE_QUIET
Ë&& !(globÆ.modê& 
MODE_VERBOSE
)) {

1076 
	`f˛o£
(
°dö
); f˛o£(
°dout
); f˛o£(
°dîr
);

1080 i‡(
globÆ
.
mode
 & 
MODE_DAEMON
 && globÆ.
pidfûe
 !
NULL
) {

1081 
pidfd
;

1082 
	`u∆ök
(
globÆ
.
pidfûe
);

1083 
pidfd
 = 
	`›í
(
globÆ
.
pidfûe
, 
O_CREAT
 | 
O_WRONLY
 | 
O_TRUNC
, 0644);

1084 i‡(
pidfd
 < 0) {

1085 
	`AÀπ
("[%s.maö()] C™nŸ cª©êpidfûê%s\n", 
¨gv
[0], 
globÆ
.
pidfûe
);

1086 i‡(
nb_ﬁdpids
)

1087 
	`ãŒ_ﬁd_pids
(
SIGTTIN
);

1088 
	`¥Ÿocﬁ_unböd_Æl
();

1089 
	`exô
(1);

1091 
pidfûe
 = 
	`fd›í
(
pidfd
, "w");

1095 i‡(!
globÆ
.
æimô_nofûe
)

1096 
globÆ
.
æimô_nofûe
 = globÆ.
maxsock
;

1098 i‡(
globÆ
.
æimô_nofûe
) {

1099 
limô
.
æim_cur
 =Üimô.
æim_max
 = 
globÆ
.
æimô_nofûe
;

1100 i‡(
	`£ålimô
(
RLIMIT_NOFILE
, &
limô
) == -1) {

1101 
	`W¨nög
("[%s.maö()] C™nŸÑai£ FDÜimôÅÿ%d.\n", 
¨gv
[0], 
globÆ
.
æimô_nofûe
);

1105 i‡(
globÆ
.
æimô_memmax
) {

1106 
limô
.
æim_cur
 =Üimô.
æim_max
 =

1107 
globÆ
.
æimô_memmax
 * 1048576 / globÆ.
nb¥oc
;

1108 #ifde‡
RLIMIT_AS


1109 i‡(
	`£ålimô
(
RLIMIT_AS
, &
limô
) == -1) {

1110 
	`W¨nög
("[%s.main()] Cannot fix MEMÜimitÅo %d megs.\n",

1111 
¨gv
[0], 
globÆ
.
æimô_memmax
);

1114 i‡(
	`£ålimô
(
RLIMIT_DATA
, &
limô
) == -1) {

1115 
	`W¨nög
("[%s.main()] Cannot fix MEMÜimitÅo %d megs.\n",

1116 
¨gv
[0], 
globÆ
.
æimô_memmax
);

1121 #ifde‡
CONFIG_HAP_CTTPROXY


1122 i‡(
globÆ
.
œ°_checks
 & 
LSTCHK_CTTPROXY
) {

1123 
ªt
;

1125 
ªt
 = 
	`check_˘çroxy_vîsi⁄
();

1126 i‡(
ªt
 < 0) {

1127 
	`AÀπ
("[%s.main()] CannotÉnable cttproxy.\n%s",

1128 
¨gv
[0],

1129 (
ªt
 == -1) ? " Incorrect module version.\n"

1131 
	`¥Ÿocﬁ_unböd_Æl
();

1132 
	`exô
(1);

1137 i‡((
globÆ
.
œ°_checks
 & 
LSTCHK_NETADM
Ë&& globÆ.
uid
) {

1138 
	`AÀπ
("[%s.main()] Some configuration optionsÑequire fullÖrivileges, so global.uid cannot be changed.\n"

1139 "", 
¨gv
[0]);

1140 
	`¥Ÿocﬁ_unböd_Æl
();

1141 
	`exô
(1);

1147 i‡((
globÆ
.
œ°_checks
 & 
LSTCHK_NETADM
Ë&& 
	`gëuid
())

1148 
	`W¨nög
("[%s.main()] Some options whichÑequire fullÖrivileges"

1150 "", 
¨gv
[0]);

1153 i‡(
globÆ
.
chroŸ
 !
NULL
) {

1154 i‡(
	`chroŸ
(
globÆ
.
chroŸ
) == -1) {

1155 
	`AÀπ
("[%s.maö()] C™nŸ chroŸ(%s).\n", 
¨gv
[0], 
globÆ
.
chroŸ
);

1156 i‡(
nb_ﬁdpids
)

1157 
	`ãŒ_ﬁd_pids
(
SIGTTIN
);

1158 
	`¥Ÿocﬁ_unböd_Æl
();

1159 
	`exô
(1);

1161 
	`chdú
("/");

1164 i‡(
nb_ﬁdpids
)

1165 
nb_ﬁdpids
 = 
	`ãŒ_ﬁd_pids
(
ﬁdpids_sig
);

1172 i‡(
globÆ
.
gid
 && 
	`£tgid
(global.gid) == -1) {

1173 
	`AÀπ
("[%s.maö()] C™nŸ së gid %d.\n", 
¨gv
[0], 
globÆ
.
gid
);

1174 
	`¥Ÿocﬁ_unböd_Æl
();

1175 
	`exô
(1);

1178 i‡(
globÆ
.
uid
 && 
	`£tuid
(global.uid) == -1) {

1179 
	`AÀπ
("[%s.maö()] C™nŸ së uid %d.\n", 
¨gv
[0], 
globÆ
.
uid
);

1180 
	`¥Ÿocﬁ_unböd_Æl
();

1181 
	`exô
(1);

1185 
limô
.
æim_cur
 =Üimô.
æim_max
 = 0;

1186 
	`gëæimô
(
RLIMIT_NOFILE
, &
limô
);

1187 i‡(
limô
.
æim_cur
 < 
globÆ
.
maxsock
) {

1188 
	`W¨nög
("[%s.main()] FDÜimit (%d)ÅooÜow for maxconn=%d/maxsock=%d. PleaseÑaise 'ulimit-n'Åo %d or moreÅoávoidányÅrouble.\n",

1189 
¨gv
[0], ()
limô
.
æim_cur
, 
globÆ
.
maxc⁄n
, globÆ.
maxsock
, global.maxsock);

1192 i‡(
globÆ
.
mode
 & 
MODE_DAEMON
) {

1193 
¥oxy
 *
px
;

1194 
ªt
 = 0;

1195 
¥oc
;

1198 
¥oc
 = 0;Öro¯< 
globÆ
.
nb¥oc
;Öroc++) {

1199 
ªt
 = 
	`f‹k
();

1200 i‡(
ªt
 < 0) {

1201 
	`AÀπ
("[%s.maö()] C™nŸ f‹k.\n", 
¨gv
[0]);

1202 
	`¥Ÿocﬁ_unböd_Æl
();

1203 
	`exô
(1);

1205 i‡(
ªt
 == 0)

1207 
	`W¨nög
("Iám chûd–%d ) !!!!\n", 
	`gëpid
());

1211 
	`W¨nög
("Iám f©hî–%d ) !!!!\n", 
	`gëpid
());

1213 i‡(
pidfûe
 !
NULL
) {

1214 
	`Ârötf
(
pidfûe
, "%d\n", 
ªt
);

1215 
	`fÊush
(
pidfûe
);

1217 
ªœtive_pid
++;

1220 i‡(
pidfûe
 !
NULL
)

1221 
	`f˛o£
(
pidfûe
);

1224 
	`‰ì
(
ﬁdpids
); oldpid†
NULL
;

1225 
	`‰ì
(
globÆ
.
chroŸ
); globÆ.chroŸ = 
NULL
;

1226 
	`‰ì
(
globÆ
.
pidfûe
); globÆ.pidfûê
NULL
;

1228 
	`W¨nög
("Iám %d\n", 
	`gëpid
());

1230 
px
 = 
¥oxy
;

1231 
px
 !
NULL
) {

1232 i‡(
px
->
böd_¥oc
 &&Öx->
°©e
 !
PR_STSTOPPED
) {

1233 i‡(!(
px
->
böd_¥oc
 & (1 << 
¥oc
)))

1234 
	`°›_¥oxy
(
px
);

1236 
px
 =Öx->
√xt
;

1239 i‡(
¥oc
 =
globÆ
.
nb¥oc
)

1240 
	`exô
(0);

1247 i‡(!(
globÆ
.
mode
 & 
MODE_QUIET
Ë|| (globÆ.modê& 
MODE_VERBOSE
)) {

1249 
	`W¨nög
("TO BE QUIET?!\n");

1253 
	`W¨nög
("OF COURSE NOT!!\n");

1255 
pid
 = 
	`gëpid
();

1256 
	`£tsid
();

1257 
	`f‹k_pﬁÀr
();

1260 
	`W¨nög
("%d dÿ¥Ÿocﬁ_íabÀ_Æl()\n", 
	`gëpid
());

1261 
	`¥Ÿocﬁ_íabÀ_Æl
();

1265 
	`W¨nög
("%d dÿrun_pﬁl_lo›()\n", 
	`gëpid
());

1266 
	`run_pﬁl_lo›
();

1269 
	`≠p£ssi⁄_˛ónup
();

1271 
	`deöô
();

1273 
	`exô
(0);

1274 
	}
}

	@src/hdr_idx.c

13 
	~<comm⁄/c⁄fig.h
>

14 
	~<¥Ÿo/hdr_idx.h
>

27 
	$hdr_idx_add
(
Àn
, 
¸
, 
hdr_idx
 *
li°
, 
a·î
)

29 
hdr_idx_ñem
 
e
 = { .
Àn
=0, .
¸
=0, .
√xt
=0};

30 
√w
;

32 
e
.
Àn
 =Üen;

33 
e
.
¸
 = cr;

35 i‡(
li°
->
u£d
 =li°->
size
) {

41 i‡(
li°
->
œ°
 <Üi°->
size
) {

43 
√w
 = 
li°
->
œ°
++;

49 
√w
 = 1;

50 
li°
->
v
[
√w
].
Àn
)

51 
√w
++;

55 
e
.
√xt
 = 
li°
->
v
[
a·î
].next;

56 
li°
->
v
[
a·î
].
√xt
 = 
√w
;

58 
li°
->
u£d
++;

59 
li°
->
v
[
√w
] = 
e
;

60 
li°
->
èû
 = 
√w
;

61  
√w
;

62 
	}
}

	@src/lb_chash.c

19 
	~<comm⁄/com∑t.h
>

20 
	~<comm⁄/c⁄fig.h
>

21 
	~<comm⁄/debug.h
>

22 
	~<eb32åì.h
>

24 
	~<ty≥s/globÆ.h
>

25 
	~<ty≥s/£rvî.h
>

27 
	~<¥Ÿo/backíd.h
>

28 
	~<¥Ÿo/queue.h
>

30 
ölöe
 
	$chash_hash
(
a
)

39 
a
 = (a+0x7ed55d16) + (a<<12);

40 
a
 = (a^0xc761c23c) ^ (a>>19);

41 
a
 = (a+0x165667b1) + (a<<5);

42 
a
 = (a+0xd3a2646c) ^ (a<<9);

43 
a
 = (a+0xfd7046c5) + (a<<3);

44 
a
 = (a^0xb55a4f09) ^ (a>>16);

49  
a
 * 3221225473U;

50 
	}
}

57 
ölöe
 
eb32_node
 *
	$chash_skù_node
(
eb_roŸ
 *
roŸ
, 
eb32_node
 *
node
)

59 
eb32_node
 *
°›
 = 
node
;

61 i‡(!
node
)

62  
NULL
;

63 
node
 = 
	`eb32_√xt
(node);

64 i‡(!
node
)

65 
node
 = 
	`eb32_fú°
(
roŸ
);

66 i‡(
node
 =
°›
)

67  
NULL
;

68  
node
;

69 
	}
}

74 
ölöe
 
	$chash_dequeue_§v
(
£rvî
 *
s
)

76 
s
->
lb_nodes_now
 > 0) {

77 i‡(
s
->
lb_nodes_now
 >s->
lb_nodes_tŸ
)

78 
s
->
lb_nodes_now
 = s->
lb_nodes_tŸ
;

79 
s
->
lb_nodes_now
--;

80 i‡(
s
->
¥oxy
->
lb¥m
.
chash
.
œ°
 =&s->
lb_nodes
[s->
lb_nodes_now
].
node
)

81 
s
->
¥oxy
->
lb¥m
.
chash
.
œ°
 = 
	`chash_skù_node
(s->
lb_åì
, s->proxy->lbprm.chash.last);

82 
	`eb32_dñëe
(&
s
->
lb_nodes
[s->
lb_nodes_now
].
node
);

84 
	}
}

91 
ölöe
 
	$chash_queue_dequeue_§v
(
£rvî
 *
s
)

93 
s
->
lb_nodes_now
 > s->
eweight
) {

94 i‡(
s
->
lb_nodes_now
 >s->
lb_nodes_tŸ
)

95 
s
->
lb_nodes_now
 = s->
lb_nodes_tŸ
;

96 
s
->
lb_nodes_now
--;

97 i‡(
s
->
¥oxy
->
lb¥m
.
chash
.
œ°
 =&s->
lb_nodes
[s->
lb_nodes_now
].
node
)

98 
s
->
¥oxy
->
lb¥m
.
chash
.
œ°
 = 
	`chash_skù_node
(s->
lb_åì
, s->proxy->lbprm.chash.last);

99 
	`eb32_dñëe
(&
s
->
lb_nodes
[s->
lb_nodes_now
].
node
);

102 
s
->
lb_nodes_now
 < s->
eweight
) {

103 i‡(
s
->
lb_nodes_now
 >s->
lb_nodes_tŸ
)

105 i‡(
s
->
¥oxy
->
lb¥m
.
chash
.
œ°
 =&s->
lb_nodes
[s->
lb_nodes_now
].
node
)

106 
s
->
¥oxy
->
lb¥m
.
chash
.
œ°
 = 
	`chash_skù_node
(s->
lb_åì
, s->proxy->lbprm.chash.last);

107 
	`eb32_ö£π
(
s
->
lb_åì
, &s->
lb_nodes
[s->
lb_nodes_now
].
node
);

108 
s
->
lb_nodes_now
++;

110 
	}
}

118 
	$chash_£t_£rvî_°©us_down
(
£rvî
 *
§v
)

120 
¥oxy
 *
p
 = 
§v
->proxy;

122 i‡(
§v
->
°©e
 =§v->
¥ev_°©e
 &&

123 
§v
->
eweight
 =§v->
¥ev_eweight
)

126 i‡(
	`§v_is_ußbÀ
(
§v
->
°©e
, srv->
eweight
))

127 
out_upd©e_°©e
;

129 i‡(!
	`§v_is_ußbÀ
(
§v
->
¥ev_°©e
, srv->
¥ev_eweight
))

131 
out_upd©e_backíd
;

133 i‡(
§v
->
°©e
 & 
SRV_BACKUP
) {

134 
p
->
lb¥m
.
tŸ_wbck
 -
§v
->
¥ev_eweight
;

135 
p
->
§v_bck
--;

137 i‡(
§v
 =
p
->
lb¥m
.
fbck
) {

141 
£rvî
 *
§v2
 = 
p
->
lb¥m
.
fbck
;

143 
§v2
 = srv2->
√xt
;

144 } 
§v2
 &&

145 !((
§v2
->
°©e
 & 
SRV_BACKUP
) &&

146 
	`§v_is_ußbÀ
(
§v2
->
°©e
, srv2->
eweight
)));

147 
p
->
lb¥m
.
fbck
 = 
§v2
;

150 
p
->
lb¥m
.
tŸ_wa˘
 -
§v
->
¥ev_eweight
;

151 
p
->
§v_a˘
--;

154 
	`chash_dequeue_§v
(
§v
);

156 
out_upd©e_backíd
:

158 
	`upd©e_backíd_weight
(
p
);

159 
out_upd©e_°©e
:

160 
§v
->
¥ev_°©e
 = srv->
°©e
;

161 
§v
->
¥ev_eweight
 = srv->
eweight
;

162 
	}
}

171 
	$chash_£t_£rvî_°©us_up
(
£rvî
 *
§v
)

173 
¥oxy
 *
p
 = 
§v
->proxy;

175 i‡(
§v
->
°©e
 =§v->
¥ev_°©e
 &&

176 
§v
->
eweight
 =§v->
¥ev_eweight
)

179 i‡(!
	`§v_is_ußbÀ
(
§v
->
°©e
, srv->
eweight
))

180 
out_upd©e_°©e
;

182 i‡(
	`§v_is_ußbÀ
(
§v
->
¥ev_°©e
, srv->
¥ev_eweight
))

184 
out_upd©e_backíd
;

186 i‡(
§v
->
°©e
 & 
SRV_BACKUP
) {

187 
p
->
lb¥m
.
tŸ_wbck
 +
§v
->
eweight
;

188 
p
->
§v_bck
++;

190 i‡(!(
p
->
›ti⁄s
 & 
PR_O_USE_ALL_BK
)) {

191 i‡(!
p
->
lb¥m
.
fbck
) {

193 
p
->
lb¥m
.
fbck
 = 
§v
;

198 
£rvî
 *
§v2
 = 
§v
;

200 
§v2
 = srv2->
√xt
;

201 } 
§v2
 && (§v2 !
p
->
lb¥m
.
fbck
));

202 i‡(
§v2
)

203 
p
->
lb¥m
.
fbck
 = 
§v
;

207 
p
->
lb¥m
.
tŸ_wa˘
 +
§v
->
eweight
;

208 
p
->
§v_a˘
++;

212 
	`chash_queue_dequeue_§v
(
§v
);

214 
out_upd©e_backíd
:

216 
	`upd©e_backíd_weight
(
p
);

217 
out_upd©e_°©e
:

218 
§v
->
¥ev_°©e
 = srv->
°©e
;

219 
§v
->
¥ev_eweight
 = srv->
eweight
;

220 
	}
}

225 
	$chash_upd©e_£rvî_weight
(
£rvî
 *
§v
)

227 
ﬁd_°©e
, 
√w_°©e
;

228 
¥oxy
 *
p
 = 
§v
->proxy;

230 i‡(
§v
->
°©e
 =§v->
¥ev_°©e
 &&

231 
§v
->
eweight
 =§v->
¥ev_eweight
)

242 
ﬁd_°©e
 = 
	`§v_is_ußbÀ
(
§v
->
¥ev_°©e
, srv->
¥ev_eweight
);

243 
√w_°©e
 = 
	`§v_is_ußbÀ
(
§v
->
°©e
, srv->
eweight
);

245 i‡(!
ﬁd_°©e
 && !
√w_°©e
) {

246 
§v
->
¥ev_°©e
 = srv->
°©e
;

247 
§v
->
¥ev_eweight
 = srv->
eweight
;

250 i‡(!
ﬁd_°©e
 && 
√w_°©e
) {

251 
	`chash_£t_£rvî_°©us_up
(
§v
);

254 i‡(
ﬁd_°©e
 && !
√w_°©e
) {

255 
	`chash_£t_£rvî_°©us_down
(
§v
);

260 
	`chash_queue_dequeue_§v
(
§v
);

262 i‡(
§v
->
°©e
 & 
SRV_BACKUP
)

263 
p
->
lb¥m
.
tŸ_wbck
 +
§v
->
eweight
 - srv->
¥ev_eweight
;

265 
p
->
lb¥m
.
tŸ_wa˘
 +
§v
->
eweight
 - srv->
¥ev_eweight
;

267 
	`upd©e_backíd_weight
(
p
);

268 
§v
->
¥ev_°©e
 = srv->
°©e
;

269 
§v
->
¥ev_eweight
 = srv->
eweight
;

270 
	}
}

279 
£rvî
 *
	$chash_gë_£rvî_hash
(
¥oxy
 *
p
, 
hash
)

281 
eb32_node
 *
√xt
, *
¥ev
;

282 
£rvî
 *
n§v
, *
p§v
;

283 
eb_roŸ
 *
roŸ
;

284 
dn
, 
dp
;

286 i‡(
p
->
§v_a˘
)

287 
roŸ
 = &
p
->
lb¥m
.
chash
.
a˘
;

288 i‡(
p
->
lb¥m
.
fbck
)

289  
p
->
lb¥m
.
fbck
;

290 i‡(
p
->
§v_bck
)

291 
roŸ
 = &
p
->
lb¥m
.
chash
.
bck
;

293  
NULL
;

295 
hash
 = 
	`chash_hash
(hash);

298 
√xt
 = 
	`eb32_lookup_ge
(
roŸ
, 
hash
);

299 i‡(!
√xt
)

300 
√xt
 = 
	`eb32_fú°
(
roŸ
);

301 i‡(!
√xt
)

302  
NULL
;

304 
¥ev
 = 
	`eb32_¥ev
(
√xt
);

305 i‡(!
¥ev
)

306 
¥ev
 = 
	`eb32_œ°
(
roŸ
);

308 
n§v
 = 
	`eb32_íåy
(
√xt
, 
åì_occ
, 
node
)->
£rvî
;

309 
p§v
 = 
	`eb32_íåy
(
¥ev
, 
åì_occ
, 
node
)->
£rvî
;

310 i‡(
n§v
 =
p§v
)

311  
n§v
;

317 
dp
 = 
hash
 - 
¥ev
->
key
;

318 
dn
 = 
√xt
->
key
 - 
hash
;

320  (
dp
 <
dn
Ë? 
p§v
 : 
n§v
;

321 
	}
}

326 
£rvî
 *
	$chash_gë_√xt_£rvî
(
¥oxy
 *
p
, 
£rvî
 *
§vtﬂvoid
)

328 
£rvî
 *
§v
, *
avoided
;

329 
eb32_node
 *
node
, *
°›
, *
avoided_node
;

330 
eb_roŸ
 *
roŸ
;

332 
§v
 = 
avoided
 = 
NULL
;

333 
avoided_node
 = 
NULL
;

335 i‡(
p
->
§v_a˘
)

336 
roŸ
 = &
p
->
lb¥m
.
chash
.
a˘
;

337 i‡(
p
->
lb¥m
.
fbck
)

338  
p
->
lb¥m
.
fbck
;

339 i‡(
p
->
§v_bck
)

340 
roŸ
 = &
p
->
lb¥m
.
chash
.
bck
;

342  
NULL
;

344 
°›
 = 
node
 = 
p
->
lb¥m
.
chash
.
œ°
;

346 
£rvî
 *
s
;

348 i‡(
node
)

349 
node
 = 
	`eb32_√xt
(node);

350 i‡(!
node
)

351 
node
 = 
	`eb32_fú°
(
roŸ
);

353 
p
->
lb¥m
.
chash
.
œ°
 = 
node
;

354 i‡(!
node
)

356  
NULL
;

363 
s
 = 
	`eb32_íåy
(
node
, 
åì_occ
,Çode)->
£rvî
;

364 i‡(!
s
->
maxc⁄n
 || (!s->
nb≥nd
 && s->
£rved
 < 
	`§v_dy«mic_maxc⁄n
(s))) {

365 i‡(
s
 !
§vtﬂvoid
) {

366 
§v
 = 
s
;

369 
avoided
 = 
s
;

370 
avoided_node
 = 
node
;

372 } 
node
 !
°›
);

374 i‡(!
§v
) {

375 
§v
 = 
avoided
;

376 
p
->
lb¥m
.
chash
.
œ°
 = 
avoided_node
;

379  
§v
;

380 
	}
}

387 
	$chash_öô_£rvî_åì
(
¥oxy
 *
p
)

389 
£rvî
 *
§v
;

390 
eb_roŸ
 
öô_hód
 = 
EB_ROOT
;

391 
node
;

393 
p
->
lb¥m
.
£t_£rvî_°©us_up
 = 
chash_£t_£rvî_°©us_up
;

394 
p
->
lb¥m
.
£t_£rvî_°©us_down
 = 
chash_£t_£rvî_°©us_down
;

395 
p
->
lb¥m
.
upd©e_£rvî_eweight
 = 
chash_upd©e_£rvî_weight
;

396 
p
->
lb¥m
.
£rvî_èke_c⁄n
 = 
NULL
;

397 
p
->
lb¥m
.
£rvî_dr›_c⁄n
 = 
NULL
;

399 
p
->
lb¥m
.
wdiv
 = 
BE_WEIGHT_SCALE
;

400 
§v
 = 
p
->§v; srv; srv = srv->
√xt
) {

401 
§v
->
¥ev_eweight
 = srv->
eweight
 = srv->
uweight
 * 
BE_WEIGHT_SCALE
;

402 
§v
->
¥ev_°©e
 = srv->
°©e
;

405 
	`ªcou¡_£rvîs
(
p
);

406 
	`upd©e_backíd_weight
(
p
);

408 
p
->
lb¥m
.
chash
.
a˘
 = 
öô_hód
;

409 
p
->
lb¥m
.
chash
.
bck
 = 
öô_hód
;

410 
p
->
lb¥m
.
chash
.
œ°
 = 
NULL
;

413 
§v
 = 
p
->§v; srv; srv = srv->
√xt
) {

414 
§v
->
lb_åì
 = (§v->
°©e
 & 
SRV_BACKUP
Ë? &
p
->
lb¥m
.
chash
.
bck
 : &p->lb¥m.chash.
a˘
;

415 
§v
->
lb_nodes_tŸ
 = srv->
uweight
 * 
BE_WEIGHT_SCALE
;

416 
§v
->
lb_nodes_now
 = 0;

417 
§v
->
lb_nodes
 = (
åì_occ
 *)
	`ˇŒoc
(§v->
lb_nodes_tŸ
, (tree_occ));

419 
node
 = 0;Çodê< 
§v
->
lb_nodes_tŸ
;Çode++) {

420 
§v
->
lb_nodes
[
node
].
£rvî
 = srv;

421 
§v
->
lb_nodes
[
node
].node.
key
 = 
	`chash_hash
(§v->
puid
 * 
SRV_EWGHT_RANGE
 +Çode);

424 i‡(
	`§v_is_ußbÀ
(
§v
->
°©e
, srv->
eweight
))

425 
	`chash_queue_dequeue_§v
(
§v
);

427 
	}
}

	@src/lb_fwlc.c

13 
	~<comm⁄/com∑t.h
>

14 
	~<comm⁄/c⁄fig.h
>

15 
	~<comm⁄/debug.h
>

16 
	~<eb32åì.h
>

18 
	~<ty≥s/globÆ.h
>

19 
	~<ty≥s/£rvî.h
>

21 
	~<¥Ÿo/backíd.h
>

22 
	~<¥Ÿo/queue.h
>

29 
ölöe
 
	$fwlc_ªmove_‰om_åì
(
£rvî
 *
s
)

31 
s
->
lb_åì
 = 
NULL
;

32 
	}
}

35 
ölöe
 
	$fwlc_dequeue_§v
(
£rvî
 *
s
)

37 
	`eb32_dñëe
(&
s
->
lb_node
);

38 
	}
}

44 
ölöe
 
	$fwlc_queue_§v
(
£rvî
 *
s
)

46 
s
->
lb_node
.
key
 = s->
£rved
 * 
SRV_EWGHT_MAX
 / s->
eweight
;

47 
	`eb32_ö£π
(
s
->
lb_åì
, &s->
lb_node
);

48 
	}
}

54 
	$fwlc_§v_ªposôi⁄
(
£rvî
 *
s
)

56 i‡(!
s
->
lb_åì
)

58 
	`fwlc_dequeue_§v
(
s
);

59 
	`fwlc_queue_§v
(
s
);

60 
	}
}

68 
	$fwlc_£t_£rvî_°©us_down
(
£rvî
 *
§v
)

70 
¥oxy
 *
p
 = 
§v
->proxy;

72 i‡(
§v
->
°©e
 =§v->
¥ev_°©e
 &&

73 
§v
->
eweight
 =§v->
¥ev_eweight
)

76 i‡(
	`§v_is_ußbÀ
(
§v
->
°©e
, srv->
eweight
))

77 
out_upd©e_°©e
;

79 i‡(!
	`§v_is_ußbÀ
(
§v
->
¥ev_°©e
, srv->
¥ev_eweight
))

81 
out_upd©e_backíd
;

83 i‡(
§v
->
°©e
 & 
SRV_BACKUP
) {

84 
p
->
lb¥m
.
tŸ_wbck
 -
§v
->
¥ev_eweight
;

85 
p
->
§v_bck
--;

87 i‡(
§v
 =
p
->
lb¥m
.
fbck
) {

91 
£rvî
 *
§v2
 = 
p
->
lb¥m
.
fbck
;

93 
§v2
 = srv2->
√xt
;

94 } 
§v2
 &&

95 !((
§v2
->
°©e
 & 
SRV_BACKUP
) &&

96 
	`§v_is_ußbÀ
(
§v2
->
°©e
, srv2->
eweight
)));

97 
p
->
lb¥m
.
fbck
 = 
§v2
;

100 
p
->
lb¥m
.
tŸ_wa˘
 -
§v
->
¥ev_eweight
;

101 
p
->
§v_a˘
--;

104 
	`fwlc_dequeue_§v
(
§v
);

105 
	`fwlc_ªmove_‰om_åì
(
§v
);

107 
out_upd©e_backíd
:

109 
	`upd©e_backíd_weight
(
p
);

110 
out_upd©e_°©e
:

111 
§v
->
¥ev_°©e
 = srv->
°©e
;

112 
§v
->
¥ev_eweight
 = srv->
eweight
;

113 
	}
}

122 
	$fwlc_£t_£rvî_°©us_up
(
£rvî
 *
§v
)

124 
¥oxy
 *
p
 = 
§v
->proxy;

126 i‡(
§v
->
°©e
 =§v->
¥ev_°©e
 &&

127 
§v
->
eweight
 =§v->
¥ev_eweight
)

130 i‡(!
	`§v_is_ußbÀ
(
§v
->
°©e
, srv->
eweight
))

131 
out_upd©e_°©e
;

133 i‡(
	`§v_is_ußbÀ
(
§v
->
¥ev_°©e
, srv->
¥ev_eweight
))

135 
out_upd©e_backíd
;

137 i‡(
§v
->
°©e
 & 
SRV_BACKUP
) {

138 
§v
->
lb_åì
 = &
p
->
lb¥m
.
fwlc
.
bck
;

139 
p
->
lb¥m
.
tŸ_wbck
 +
§v
->
eweight
;

140 
p
->
§v_bck
++;

142 i‡(!(
p
->
›ti⁄s
 & 
PR_O_USE_ALL_BK
)) {

143 i‡(!
p
->
lb¥m
.
fbck
) {

145 
p
->
lb¥m
.
fbck
 = 
§v
;

150 
£rvî
 *
§v2
 = 
§v
;

152 
§v2
 = srv2->
√xt
;

153 } 
§v2
 && (§v2 !
p
->
lb¥m
.
fbck
));

154 i‡(
§v2
)

155 
p
->
lb¥m
.
fbck
 = 
§v
;

159 
§v
->
lb_åì
 = &
p
->
lb¥m
.
fwlc
.
a˘
;

160 
p
->
lb¥m
.
tŸ_wa˘
 +
§v
->
eweight
;

161 
p
->
§v_a˘
++;

165 
	`fwlc_queue_§v
(
§v
);

167 
out_upd©e_backíd
:

169 
	`upd©e_backíd_weight
(
p
);

170 
out_upd©e_°©e
:

171 
§v
->
¥ev_°©e
 = srv->
°©e
;

172 
§v
->
¥ev_eweight
 = srv->
eweight
;

173 
	}
}

178 
	$fwlc_upd©e_£rvî_weight
(
£rvî
 *
§v
)

180 
ﬁd_°©e
, 
√w_°©e
;

181 
¥oxy
 *
p
 = 
§v
->proxy;

183 i‡(
§v
->
°©e
 =§v->
¥ev_°©e
 &&

184 
§v
->
eweight
 =§v->
¥ev_eweight
)

195 
ﬁd_°©e
 = 
	`§v_is_ußbÀ
(
§v
->
¥ev_°©e
, srv->
¥ev_eweight
);

196 
√w_°©e
 = 
	`§v_is_ußbÀ
(
§v
->
°©e
, srv->
eweight
);

198 i‡(!
ﬁd_°©e
 && !
√w_°©e
) {

199 
§v
->
¥ev_°©e
 = srv->
°©e
;

200 
§v
->
¥ev_eweight
 = srv->
eweight
;

203 i‡(!
ﬁd_°©e
 && 
√w_°©e
) {

204 
	`fwlc_£t_£rvî_°©us_up
(
§v
);

207 i‡(
ﬁd_°©e
 && !
√w_°©e
) {

208 
	`fwlc_£t_£rvî_°©us_down
(
§v
);

212 i‡(
§v
->
lb_åì
)

213 
	`fwlc_dequeue_§v
(
§v
);

215 i‡(
§v
->
°©e
 & 
SRV_BACKUP
) {

216 
p
->
lb¥m
.
tŸ_wbck
 +
§v
->
eweight
 - srv->
¥ev_eweight
;

217 
§v
->
lb_åì
 = &
p
->
lb¥m
.
fwlc
.
bck
;

219 
p
->
lb¥m
.
tŸ_wa˘
 +
§v
->
eweight
 - srv->
¥ev_eweight
;

220 
§v
->
lb_åì
 = &
p
->
lb¥m
.
fwlc
.
a˘
;

223 
	`fwlc_queue_§v
(
§v
);

225 
	`upd©e_backíd_weight
(
p
);

226 
§v
->
¥ev_°©e
 = srv->
°©e
;

227 
§v
->
¥ev_eweight
 = srv->
eweight
;

228 
	}
}

234 
	$fwlc_öô_£rvî_åì
(
¥oxy
 *
p
)

236 
£rvî
 *
§v
;

237 
eb_roŸ
 
öô_hód
 = 
EB_ROOT
;

239 
p
->
lb¥m
.
£t_£rvî_°©us_up
 = 
fwlc_£t_£rvî_°©us_up
;

240 
p
->
lb¥m
.
£t_£rvî_°©us_down
 = 
fwlc_£t_£rvî_°©us_down
;

241 
p
->
lb¥m
.
upd©e_£rvî_eweight
 = 
fwlc_upd©e_£rvî_weight
;

242 
p
->
lb¥m
.
£rvî_èke_c⁄n
 = 
fwlc_§v_ªposôi⁄
;

243 
p
->
lb¥m
.
£rvî_dr›_c⁄n
 = 
fwlc_§v_ªposôi⁄
;

245 
p
->
lb¥m
.
wdiv
 = 
BE_WEIGHT_SCALE
;

246 
§v
 = 
p
->§v; srv; srv = srv->
√xt
) {

247 
§v
->
¥ev_eweight
 = srv->
eweight
 = srv->
uweight
 * 
BE_WEIGHT_SCALE
;

248 
§v
->
¥ev_°©e
 = srv->
°©e
;

251 
	`ªcou¡_£rvîs
(
p
);

252 
	`upd©e_backíd_weight
(
p
);

254 
p
->
lb¥m
.
fwlc
.
a˘
 = 
öô_hód
;

255 
p
->
lb¥m
.
fwlc
.
bck
 = 
öô_hód
;

258 
§v
 = 
p
->§v; srv; srv = srv->
√xt
) {

259 i‡(!
	`§v_is_ußbÀ
(
§v
->
°©e
, srv->
eweight
))

261 
§v
->
lb_åì
 = (§v->
°©e
 & 
SRV_BACKUP
Ë? &
p
->
lb¥m
.
fwlc
.
bck
 : &p->lb¥m.fwlc.
a˘
;

262 
	`fwlc_queue_§v
(
§v
);

264 
	}
}

269 
£rvî
 *
	$fwlc_gë_√xt_£rvî
(
¥oxy
 *
p
, 
£rvî
 *
§vtﬂvoid
)

271 
£rvî
 *
§v
, *
avoided
;

272 
eb32_node
 *
node
;

274 
§v
 = 
avoided
 = 
NULL
;

276 i‡(
p
->
§v_a˘
)

277 
node
 = 
	`eb32_fú°
(&
p
->
lb¥m
.
fwlc
.
a˘
);

278 i‡(
p
->
lb¥m
.
fbck
)

279  
p
->
lb¥m
.
fbck
;

280 i‡(
p
->
§v_bck
)

281 
node
 = 
	`eb32_fú°
(&
p
->
lb¥m
.
fwlc
.
bck
);

283  
NULL
;

285 
node
) {

291 
£rvî
 *
s
;

293 
s
 = 
	`eb32_íåy
(
node
, 
£rvî
, 
lb_node
);

294 i‡(!
s
->
maxc⁄n
 || (!s->
nb≥nd
 && s->
£rved
 < 
	`§v_dy«mic_maxc⁄n
(s))) {

295 i‡(
s
 !
§vtﬂvoid
) {

296 
§v
 = 
s
;

299 
avoided
 = 
s
;

301 
node
 = 
	`eb32_√xt
(node);

304 i‡(!
§v
)

305 
§v
 = 
avoided
;

307  
§v
;

308 
	}
}

	@src/lb_fwrr.c

13 
	~<comm⁄/com∑t.h
>

14 
	~<comm⁄/c⁄fig.h
>

15 
	~<comm⁄/debug.h
>

16 
	~<eb32åì.h
>

18 
	~<ty≥s/globÆ.h
>

19 
	~<ty≥s/£rvî.h
>

21 
	~<¥Ÿo/backíd.h
>

22 
	~<¥Ÿo/queue.h
>

24 
ölöe
 
fwº_ªmove_‰om_åì
(
£rvî
 *
s
);

25 
ölöe
 
fwº_queue_by_weight
(
eb_roŸ
 *
roŸ
, 
£rvî
 *
s
);

26 
ölöe
 
fwº_dequeue_§v
(
£rvî
 *
s
);

27 
fwº_gë_§v
(
£rvî
 *
s
);

28 
fwº_queue_§v
(
£rvî
 *
s
);

37 
	$fwº_£t_£rvî_°©us_down
(
£rvî
 *
§v
)

39 
¥oxy
 *
p
 = 
§v
->proxy;

40 
fwº_group
 *
gΩ
;

42 i‡(
§v
->
°©e
 =§v->
¥ev_°©e
 &&

43 
§v
->
eweight
 =§v->
¥ev_eweight
)

46 i‡(
	`§v_is_ußbÀ
(
§v
->
°©e
, srv->
eweight
))

47 
out_upd©e_°©e
;

49 i‡(!
	`§v_is_ußbÀ
(
§v
->
¥ev_°©e
, srv->
¥ev_eweight
))

51 
out_upd©e_backíd
;

53 
gΩ
 = (
§v
->
°©e
 & 
SRV_BACKUP
Ë? &
p
->
lb¥m
.
fwº
.
bck
 : &p->lb¥m.fwº.
a˘
;

54 
gΩ
->
√xt_weight
 -
§v
->
¥ev_eweight
;

56 i‡(
§v
->
°©e
 & 
SRV_BACKUP
) {

57 
p
->
lb¥m
.
tŸ_wbck
 =Ö->lb¥m.
fwº
.
bck
.
√xt_weight
;

58 
p
->
§v_bck
--;

60 i‡(
§v
 =
p
->
lb¥m
.
fbck
) {

64 
£rvî
 *
§v2
 = 
p
->
lb¥m
.
fbck
;

66 
§v2
 = srv2->
√xt
;

67 } 
§v2
 &&

68 !((
§v2
->
°©e
 & 
SRV_BACKUP
) &&

69 
	`§v_is_ußbÀ
(
§v2
->
°©e
, srv2->
eweight
)));

70 
p
->
lb¥m
.
fbck
 = 
§v2
;

73 
p
->
lb¥m
.
tŸ_wa˘
 =Ö->lb¥m.
fwº
.
a˘
.
√xt_weight
;

74 
p
->
§v_a˘
--;

77 
	`fwº_dequeue_§v
(
§v
);

78 
	`fwº_ªmove_‰om_åì
(
§v
);

80 
out_upd©e_backíd
:

82 
	`upd©e_backíd_weight
(
p
);

83 
out_upd©e_°©e
:

84 
§v
->
¥ev_°©e
 = srv->
°©e
;

85 
§v
->
¥ev_eweight
 = srv->
eweight
;

86 
	}
}

95 
	$fwº_£t_£rvî_°©us_up
(
£rvî
 *
§v
)

97 
¥oxy
 *
p
 = 
§v
->proxy;

98 
fwº_group
 *
gΩ
;

100 i‡(
§v
->
°©e
 =§v->
¥ev_°©e
 &&

101 
§v
->
eweight
 =§v->
¥ev_eweight
)

104 i‡(!
	`§v_is_ußbÀ
(
§v
->
°©e
, srv->
eweight
))

105 
out_upd©e_°©e
;

107 i‡(
	`§v_is_ußbÀ
(
§v
->
¥ev_°©e
, srv->
¥ev_eweight
))

109 
out_upd©e_backíd
;

111 
gΩ
 = (
§v
->
°©e
 & 
SRV_BACKUP
Ë? &
p
->
lb¥m
.
fwº
.
bck
 : &p->lb¥m.fwº.
a˘
;

112 
gΩ
->
√xt_weight
 +
§v
->
eweight
;

114 i‡(
§v
->
°©e
 & 
SRV_BACKUP
) {

115 
p
->
lb¥m
.
tŸ_wbck
 =Ö->lb¥m.
fwº
.
bck
.
√xt_weight
;

116 
p
->
§v_bck
++;

118 i‡(!(
p
->
›ti⁄s
 & 
PR_O_USE_ALL_BK
)) {

119 i‡(!
p
->
lb¥m
.
fbck
) {

121 
p
->
lb¥m
.
fbck
 = 
§v
;

126 
£rvî
 *
§v2
 = 
§v
;

128 
§v2
 = srv2->
√xt
;

129 } 
§v2
 && (§v2 !
p
->
lb¥m
.
fbck
));

130 i‡(
§v2
)

131 
p
->
lb¥m
.
fbck
 = 
§v
;

135 
p
->
lb¥m
.
tŸ_wa˘
 =Ö->lb¥m.
fwº
.
a˘
.
√xt_weight
;

136 
p
->
§v_a˘
++;

140 
	`fwº_gë_§v
(
§v
);

141 
§v
->
≈os
 = 
gΩ
->
cuº_pos
 + (gΩ->
√xt_weight
 + gΩ->
cuº_weight
 - gΩ->cuº_posË/ srv->
eweight
;

142 
	`fwº_queue_§v
(
§v
);

144 
out_upd©e_backíd
:

146 
	`upd©e_backíd_weight
(
p
);

147 
out_upd©e_°©e
:

148 
§v
->
¥ev_°©e
 = srv->
°©e
;

149 
§v
->
¥ev_eweight
 = srv->
eweight
;

150 
	}
}

155 
	$fwº_upd©e_£rvî_weight
(
£rvî
 *
§v
)

157 
ﬁd_°©e
, 
√w_°©e
;

158 
¥oxy
 *
p
 = 
§v
->proxy;

159 
fwº_group
 *
gΩ
;

161 i‡(
§v
->
°©e
 =§v->
¥ev_°©e
 &&

162 
§v
->
eweight
 =§v->
¥ev_eweight
)

173 
ﬁd_°©e
 = 
	`§v_is_ußbÀ
(
§v
->
¥ev_°©e
, srv->
¥ev_eweight
);

174 
√w_°©e
 = 
	`§v_is_ußbÀ
(
§v
->
°©e
, srv->
eweight
);

176 i‡(!
ﬁd_°©e
 && !
√w_°©e
) {

177 
§v
->
¥ev_°©e
 = srv->
°©e
;

178 
§v
->
¥ev_eweight
 = srv->
eweight
;

181 i‡(!
ﬁd_°©e
 && 
√w_°©e
) {

182 
	`fwº_£t_£rvî_°©us_up
(
§v
);

185 i‡(
ﬁd_°©e
 && !
√w_°©e
) {

186 
	`fwº_£t_£rvî_°©us_down
(
§v
);

190 
gΩ
 = (
§v
->
°©e
 & 
SRV_BACKUP
Ë? &
p
->
lb¥m
.
fwº
.
bck
 : &p->lb¥m.fwº.
a˘
;

191 
gΩ
->
√xt_weight
 = gΩ->√xt_weighà- 
§v
->
¥ev_eweight
 + srv->
eweight
;

193 
p
->
lb¥m
.
tŸ_wa˘
 =Ö->lb¥m.
fwº
.
a˘
.
√xt_weight
;

194 
p
->
lb¥m
.
tŸ_wbck
 =Ö->lb¥m.
fwº
.
bck
.
√xt_weight
;

196 i‡(
§v
->
lb_åì
 =
gΩ
->
öô
) {

197 
	`fwº_dequeue_§v
(
§v
);

198 
	`fwº_queue_by_weight
(
gΩ
->
öô
, 
§v
);

200 i‡(!
§v
->
lb_åì
) {

204 
	`fwº_dequeue_§v
(
§v
);

205 
	`fwº_gë_§v
(
§v
);

206 
§v
->
≈os
 = 
gΩ
->
cuº_pos
 + (gΩ->
√xt_weight
 + gΩ->
cuº_weight
 - gΩ->cuº_posË/ srv->
eweight
;

207 
	`fwº_queue_§v
(
§v
);

213 
	`fwº_gë_§v
(
§v
);

215 i‡(
§v
->
eweight
 > 0) {

216 
¥ev_√xt
 = 
§v
->
≈os
;

217 
°ï
 = 
gΩ
->
√xt_weight
 / 
§v
->
eweight
;

219 
§v
->
≈os
 = srv->
Õos
 + 
°ï
;

220 
§v
->
rweight
 = 0;

222 i‡(
§v
->
≈os
 > 
¥ev_√xt
)

223 
§v
->
≈os
 = 
¥ev_√xt
;

224 i‡(
§v
->
≈os
 < 
gΩ
->
cuº_pos
 + 2)

225 
§v
->
≈os
 = 
gΩ
->
cuº_pos
 + 
°ï
;

228 
§v
->
≈os
 = 
gΩ
->
cuº_pos
 + gΩ->
cuº_weight
;

231 
	`fwº_dequeue_§v
(
§v
);

232 
	`fwº_queue_§v
(
§v
);

235 
	`upd©e_backíd_weight
(
p
);

236 
§v
->
¥ev_°©e
 = srv->
°©e
;

237 
§v
->
¥ev_eweight
 = srv->
eweight
;

238 
	}
}

244 
ölöe
 
	$fwº_ªmove_‰om_åì
(
£rvî
 *
s
)

246 
s
->
lb_åì
 = 
NULL
;

247 
	}
}

253 
ölöe
 
	$fwº_queue_by_weight
(
eb_roŸ
 *
roŸ
, 
£rvî
 *
s
)

255 
s
->
lb_node
.
key
 = 
SRV_EWGHT_MAX
 - s->
eweight
;

256 
	`eb32_ö£π
(
roŸ
, &
s
->
lb_node
);

257 
s
->
lb_åì
 = 
roŸ
;

258 
	}
}

264 
	$fwº_öô_£rvî_groups
(
¥oxy
 *
p
)

266 
£rvî
 *
§v
;

267 
eb_roŸ
 
öô_hód
 = 
EB_ROOT
;

269 
p
->
lb¥m
.
£t_£rvî_°©us_up
 = 
fwº_£t_£rvî_°©us_up
;

270 
p
->
lb¥m
.
£t_£rvî_°©us_down
 = 
fwº_£t_£rvî_°©us_down
;

271 
p
->
lb¥m
.
upd©e_£rvî_eweight
 = 
fwº_upd©e_£rvî_weight
;

273 
p
->
lb¥m
.
wdiv
 = 
BE_WEIGHT_SCALE
;

274 
§v
 = 
p
->§v; srv; srv = srv->
√xt
) {

275 
§v
->
¥ev_eweight
 = srv->
eweight
 = srv->
uweight
 * 
BE_WEIGHT_SCALE
;

276 
§v
->
¥ev_°©e
 = srv->
°©e
;

279 
	`ªcou¡_£rvîs
(
p
);

280 
	`upd©e_backíd_weight
(
p
);

283 
p
->
lb¥m
.
fwº
.
a˘
.
cuº_pos
 =Ö->lb¥m.fwº.a˘.
cuº_weight
 =

284 
p
->
lb¥m
.
fwº
.
a˘
.
√xt_weight
 =Ö->lb¥m.
tŸ_wa˘
;

285 
p
->
lb¥m
.
fwº
.
a˘
.
cuº
 =Ö->lb¥m.fwº.a˘.
t0
 =

286 
p
->
lb¥m
.
fwº
.
a˘
.
t1
 = 
öô_hód
;

287 
p
->
lb¥m
.
fwº
.
a˘
.
öô
 = &p->lb¥m.fwº.a˘.
t0
;

288 
p
->
lb¥m
.
fwº
.
a˘
.
√xt
 = &p->lb¥m.fwº.a˘.
t1
;

291 
p
->
lb¥m
.
fwº
.
bck
.
cuº_pos
 =Ö->lb¥m.fwº.bck.
cuº_weight
 =

292 
p
->
lb¥m
.
fwº
.
bck
.
√xt_weight
 =Ö->lb¥m.
tŸ_wbck
;

293 
p
->
lb¥m
.
fwº
.
bck
.
cuº
 =Ö->lb¥m.fwº.bck.
t0
 =

294 
p
->
lb¥m
.
fwº
.
bck
.
t1
 = 
öô_hód
;

295 
p
->
lb¥m
.
fwº
.
bck
.
öô
 = &p->lb¥m.fwº.bck.
t0
;

296 
p
->
lb¥m
.
fwº
.
bck
.
√xt
 = &p->lb¥m.fwº.bck.
t1
;

299 
§v
 = 
p
->§v; srv; srv = srv->
√xt
) {

300 i‡(!
	`§v_is_ußbÀ
(
§v
->
°©e
, srv->
eweight
))

302 
	`fwº_queue_by_weight
((
§v
->
°©e
 & 
SRV_BACKUP
) ?

303 
p
->
lb¥m
.
fwº
.
bck
.
öô
 :

304 
p
->
lb¥m
.
fwº
.
a˘
.
öô
,

305 
§v
);

307 
	}
}

310 
ölöe
 
	$fwº_dequeue_§v
(
£rvî
 *
s
)

312 
	`eb32_dñëe
(&
s
->
lb_node
);

313 
	}
}

319 
	$fwº_queue_§v
(
£rvî
 *
s
)

321 
¥oxy
 *
p
 = 
s
->proxy;

322 
fwº_group
 *
gΩ
;

324 
gΩ
 = (
s
->
°©e
 & 
SRV_BACKUP
Ë? &
p
->
lb¥m
.
fwº
.
bck
 : &p->lb¥m.fwº.
a˘
;

329 i‡(!
	`§v_is_ußbÀ
(
s
->
°©e
, s->
eweight
)) {

330 
	`fwº_ªmove_‰om_åì
(
s
);

332 i‡(
s
->
eweight
 <= 0 ||

333 
s
->
≈os
 >2 * 
gΩ
->
cuº_weight
 ||

334 
s
->
≈os
 >
gΩ
->
cuº_weight
 + gΩ->
√xt_weight
) {

337 
s
->
≈os
 -
gΩ
->
cuº_weight
;

338 
	`fwº_queue_by_weight
(
gΩ
->
√xt
, 
s
);

348 
s
->
lb_node
.
key
 = 
SRV_UWGHT_RANGE
 * s->
≈os
 +

349 ()(
SRV_EWGHT_MAX
 + 
s
->
rweight
 - s->
eweight
Ë/ 
BE_WEIGHT_SCALE
;

351 
	`eb32_ö£π
(&
gΩ
->
cuº
, &
s
->
lb_node
);

352 
s
->
lb_åì
 = &
gΩ
->
cuº
;

354 
	}
}

357 
ölöe
 
	$fwº_gë_§v_öô
(
£rvî
 *
s
)

359 
s
->
≈os
 = s->
rweight
 = 0;

360 
	}
}

363 
ölöe
 
	$fwº_gë_§v_√xt
(
£rvî
 *
s
)

365 
fwº_group
 *
gΩ
 = (
s
->
°©e
 & 
SRV_BACKUP
) ?

366 &
s
->
¥oxy
->
lb¥m
.
fwº
.
bck
 :

367 &
s
->
¥oxy
->
lb¥m
.
fwº
.
a˘
;

369 
s
->
≈os
 +
gΩ
->
cuº_weight
;

370 
	}
}

373 
ölöe
 
	$fwº_gë_§v_down
(
£rvî
 *
s
)

375 
fwº_group
 *
gΩ
 = (
s
->
°©e
 & 
SRV_BACKUP
) ?

376 &
s
->
¥oxy
->
lb¥m
.
fwº
.
bck
 :

377 &
s
->
¥oxy
->
lb¥m
.
fwº
.
a˘
;

379 
s
->
≈os
 = 
gΩ
->
cuº_pos
;

380 
	}
}

383 
	$fwº_gë_§v
(
£rvî
 *
s
)

385 
¥oxy
 *
p
 = 
s
->proxy;

386 
fwº_group
 *
gΩ
 = (
s
->
°©e
 & 
SRV_BACKUP
) ?

387 &
p
->
lb¥m
.
fwº
.
bck
 :

388 &
p
->
lb¥m
.
fwº
.
a˘
;

390 i‡(
s
->
lb_åì
 =
gΩ
->
öô
) {

391 
	`fwº_gë_§v_öô
(
s
);

393 i‡(
s
->
lb_åì
 =
gΩ
->
√xt
) {

394 
	`fwº_gë_§v_√xt
(
s
);

396 i‡(
s
->
lb_åì
 =
NULL
) {

397 
	`fwº_gë_§v_down
(
s
);

399 
	}
}

404 
ölöe
 
	$fwº_swôch_åìs
(
fwº_group
 *
gΩ
)

406 
eb_roŸ
 *
sw≠
;

407 
sw≠
 = 
gΩ
->
öô
;

408 
gΩ
->
öô
 = gΩ->
√xt
;

409 
gΩ
->
√xt
 = 
sw≠
;

410 
gΩ
->
cuº_weight
 = gΩ->
√xt_weight
;

411 
gΩ
->
cuº_pos
 = gΩ->
cuº_weight
;

412 
	}
}

417 
£rvî
 *
	$fwº_gë_£rvî_‰om_group
(
fwº_group
 *
gΩ
)

419 
eb32_node
 *
node
;

420 
£rvî
 *
s
;

422 
node
 = 
	`eb32_fú°
(&
gΩ
->
cuº
);

423 
s
 = 
	`eb32_íåy
(
node
, 
£rvî
, 
lb_node
);

425 i‡(!
node
 || 
s
->
≈os
 > 
gΩ
->
cuº_pos
) {

427 
eb32_node
 *
node2
;

428 
node2
 = 
	`eb32_fú°
(
gΩ
->
öô
);

429 i‡(
node2
) {

430 
node
 = 
node2
;

431 
s
 = 
	`eb32_íåy
(
node
, 
£rvî
, 
lb_node
);

432 
	`fwº_gë_§v_öô
(
s
);

433 i‡(
s
->
eweight
 == 0)

434 
node
 = 
NULL
;

437 i‡(
node
)

438  
s
;

440  
NULL
;

441 
	}
}

446 
ölöe
 
	$fwº_upd©e_posôi⁄
(
fwº_group
 *
gΩ
, 
£rvî
 *
s
)

448 i‡(!
s
->
≈os
) {

450 
s
->
Õos
 = 
gΩ
->
cuº_pos
;

451 
s
->
≈os
 = 
gΩ
->
cuº_pos
 + gΩ->
√xt_weight
 / s->
eweight
;

452 
s
->
rweight
 +
gΩ
->
√xt_weight
 % s->
eweight
;

454 i‡(
s
->
rweight
 >s->
eweight
) {

455 
s
->
rweight
 -s->
eweight
;

456 
s
->
≈os
++;

459 
s
->
Õos
 = s->
≈os
;

460 
s
->
≈os
 +
gΩ
->
√xt_weight
 / s->
eweight
;

461 
s
->
rweight
 +
gΩ
->
√xt_weight
 % s->
eweight
;

463 i‡(
s
->
rweight
 >s->
eweight
) {

464 
s
->
rweight
 -s->
eweight
;

465 
s
->
≈os
++;

468 
	}
}

474 
£rvî
 *
	$fwº_gë_√xt_£rvî
(
¥oxy
 *
p
, 
£rvî
 *
§vtﬂvoid
)

476 
£rvî
 *
§v
, *
fuŒ
, *
avoided
;

477 
fwº_group
 *
gΩ
;

478 
swôched
;

480 i‡(
p
->
§v_a˘
)

481 
gΩ
 = &
p
->
lb¥m
.
fwº
.
a˘
;

482 i‡(
p
->
lb¥m
.
fbck
)

483  
p
->
lb¥m
.
fbck
;

484 i‡(
p
->
§v_bck
)

485 
gΩ
 = &
p
->
lb¥m
.
fwº
.
bck
;

487  
NULL
;

489 
swôched
 = 0;

490 
avoided
 = 
NULL
;

491 
fuŒ
 = 
NULL
;

496 i‡(!
gΩ
->
cuº_weight
)

497 
gΩ
->
cuº_pos
 = gΩ->
cuº_weight
 = gΩ->
√xt_weight
;

503 
§v
 = 
	`fwº_gë_£rvî_‰om_group
(
gΩ
);

504 i‡(
§v
)

506 i‡(
swôched
) {

507 i‡(
avoided
) {

508 
§v
 = 
avoided
;

511 
ªqueue_£rvîs
;

513 
swôched
 = 1;

514 
	`fwº_swôch_åìs
(
gΩ
);

523 
	`fwº_upd©e_posôi⁄
(
gΩ
, 
§v
);

524 
	`fwº_dequeue_§v
(
§v
);

525 
gΩ
->
cuº_pos
++;

526 i‡(!
§v
->
maxc⁄n
 || (!§v->
nb≥nd
 && srv->
£rved
 < 
	`§v_dy«mic_maxc⁄n
(srv))) {

528 i‡(
§v
 !
§vtﬂvoid
 || 
avoided
)

531 
avoided
 = 
§v
;

535 
§v
->
√xt_fuŒ
 = 
fuŒ
;

536 
fuŒ
 = 
§v
;

540 
	`fwº_queue_§v
(
§v
);

542 
ªqueue_£rvîs
:

546 i‡(
	`u∆ikñy
(
fuŒ
 !
NULL
)) {

547 i‡(
swôched
) {

553 i‡(
	`likñy
(
fuŒ
 !
§v
))

554 
	`fwº_queue_by_weight
(
gΩ
->
öô
, 
fuŒ
);

555 
fuŒ
 = fuŒ->
√xt_fuŒ
;

556 } 
fuŒ
);

562 i‡(
	`likñy
(
fuŒ
 !
§v
))

563 
	`fwº_queue_§v
(
fuŒ
);

564 
fuŒ
 = fuŒ->
√xt_fuŒ
;

565 } 
fuŒ
);

568  
§v
;

569 
	}
}

	@src/lb_map.c

13 
	~<comm⁄/com∑t.h
>

14 
	~<comm⁄/c⁄fig.h
>

15 
	~<comm⁄/debug.h
>

16 
	~<eb32åì.h
>

18 
	~<ty≥s/globÆ.h
>

19 
	~<ty≥s/£rvî.h
>

21 
	~<¥Ÿo/backíd.h
>

22 
	~<¥Ÿo/¥Ÿo_hâp.h
>

23 
	~<¥Ÿo/¥Ÿo_t˝.h
>

24 
	~<¥Ÿo/queue.h
>

27 
	$m≠_£t_£rvî_°©us_down
(
£rvî
 *
§v
)

29 
¥oxy
 *
p
 = 
§v
->proxy;

31 i‡(
§v
->
°©e
 =§v->
¥ev_°©e
 &&

32 
§v
->
eweight
 =§v->
¥ev_eweight
)

35 i‡(
	`§v_is_ußbÀ
(
§v
->
°©e
, srv->
eweight
))

36 
out_upd©e_°©e
;

39 
	`ªcou¡_£rvîs
(
p
);

40 
	`upd©e_backíd_weight
(
p
);

41 
p
->
lb¥m
.
m≠
.
°©e
 |
LB_MAP_RECALC
;

42 
out_upd©e_°©e
:

43 
§v
->
¥ev_°©e
 = srv->
°©e
;

44 
§v
->
¥ev_eweight
 = srv->
eweight
;

45 
	}
}

48 
	$m≠_£t_£rvî_°©us_up
(
£rvî
 *
§v
)

50 
¥oxy
 *
p
 = 
§v
->proxy;

52 i‡(
§v
->
°©e
 =§v->
¥ev_°©e
 &&

53 
§v
->
eweight
 =§v->
¥ev_eweight
)

56 i‡(!
	`§v_is_ußbÀ
(
§v
->
°©e
, srv->
eweight
))

57 
out_upd©e_°©e
;

60 
	`ªcou¡_£rvîs
(
p
);

61 
	`upd©e_backíd_weight
(
p
);

62 
p
->
lb¥m
.
m≠
.
°©e
 |
LB_MAP_RECALC
;

63 
out_upd©e_°©e
:

64 
§v
->
¥ev_°©e
 = srv->
°©e
;

65 
§v
->
¥ev_eweight
 = srv->
eweight
;

66 
	}
}

73 
	$ªˇlc_£rvî_m≠
(
¥oxy
 *
px
)

75 
o
, 
tŸ
, 
Êag
;

76 
£rvî
 *
cur
, *
be°
;

78 
px
->
lb¥m
.
tŸ_u£d
) {

80 
px
->
lb¥m
.
m≠
.
°©e
 &~
LB_MAP_RECALC
;

83 
tŸ
 = 
px
->
lb¥m
.
tŸ_weight
;

88 i‡(
px
->
§v_a˘
)

89 
Êag
 = 
SRV_RUNNING
;

91 
Êag
 = 
SRV_RUNNING
 | 
SRV_BACKUP
;

99 
cur
 = 
px
->
§v
; cur; cu∏cur->
√xt
)

100 
cur
->
wsc‹e
 = 0;

102 
o
 = 0; o < 
tŸ
; o++) {

103 
max
 = 0;

104 
be°
 = 
NULL
;

105 
cur
 = 
px
->
§v
; cur; cu∏cur->
√xt
) {

106 i‡(
cur
->
eweight
 &&

107 
Êag
 =(
cur
->
°©e
 &

108 (
SRV_RUNNING
 | 
SRV_GOINGDOWN
 | 
SRV_BACKUP
))) {

109 
v
;

115 i‡(
tŸ
 == 1) {

116 
be°
 = 
cur
;

121 
cur
->
wsc‹e
 +cur->
eweight
;

122 
v
 = (
cur
->
wsc‹e
 + 
tŸ
) /Åot;

123 i‡(
be°
 =
NULL
 || 
v
 > 
max
) {

124 
max
 = 
v
;

125 
be°
 = 
cur
;

129 
px
->
lb¥m
.
m≠
.
§v
[
o
] = 
be°
;

130 
be°
->
wsc‹e
 -
tŸ
;

132 
px
->
lb¥m
.
m≠
.
°©e
 &~
LB_MAP_RECALC
;

133 
	}
}

140 
	$öô_£rvî_m≠
(
¥oxy
 *
p
)

142 
£rvî
 *
§v
;

143 
pgcd
;

144 
a˘
, 
bck
;

146 
p
->
lb¥m
.
£t_£rvî_°©us_up
 = 
m≠_£t_£rvî_°©us_up
;

147 
p
->
lb¥m
.
£t_£rvî_°©us_down
 = 
m≠_£t_£rvî_°©us_down
;

148 
p
->
lb¥m
.
upd©e_£rvî_eweight
 = 
NULL
;

150 i‡(!
p
->
§v
)

158 
pgcd
 = 1;

159 
§v
 = 
p
->srv;

160 
§v
 && !§v->
uweight
)

161 
§v
 = srv->
√xt
;

163 i‡(
§v
) {

164 
pgcd
 = 
§v
->
uweight
;

165 
pgcd
 > 1 && (
§v
 = srv->
√xt
)) {

166 
w
 = 
§v
->
uweight
;

167 
w
) {

168 
t
 = 
pgcd
 % 
w
;

169 
pgcd
 = 
w
;

170 
w
 = 
t
;

179 
p
->
lb¥m
.
wmu…
 = 
pgcd
;

181 
a˘
 = 
bck
 = 0;

182 
§v
 = 
p
->§v; srv; srv = srv->
√xt
) {

183 
§v
->
eweight
 = srv->
uweight
 / 
pgcd
;

184 
§v
->
¥ev_eweight
 = srv->
eweight
;

185 
§v
->
¥ev_°©e
 = srv->
°©e
;

186 i‡(
§v
->
°©e
 & 
SRV_BACKUP
)

187 
bck
 +
§v
->
eweight
;

189 
a˘
 +
§v
->
eweight
;

193 i‡(
a˘
 < 
bck
)

194 
a˘
 = 
bck
;

196 i‡(!
a˘
)

197 
a˘
 = 1;

199 
p
->
lb¥m
.
m≠
.
§v
 = (
£rvî
 **)
	`ˇŒoc
(
a˘
, (server *));

201 
p
->
lb¥m
.
m≠
.
°©e
 = 
LB_MAP_RECALC
;

202 
	`ªcou¡_£rvîs
(
p
);

203 
	`upd©e_backíd_weight
(
p
);

204 
	`ªˇlc_£rvî_m≠
(
p
);

205 
	}
}

213 
£rvî
 *
	$m≠_gë_£rvî_º
(
¥oxy
 *
px
, 
£rvî
 *
§vtﬂvoid
)

215 
√widx
, 
avoididx
;

216 
£rvî
 *
§v
, *
avoided
;

218 i‡(
px
->
lb¥m
.
tŸ_weight
 == 0)

219  
NULL
;

221 i‡(
px
->
lb¥m
.
m≠
.
°©e
 & 
LB_MAP_RECALC
)

222 
	`ªˇlc_£rvî_m≠
(
px
);

224 i‡(
px
->
lb¥m
.
m≠
.
º_idx
 < 0 ||Öx->lb¥m.m≠.º_idx >px->lb¥m.
tŸ_weight
)

225 
px
->
lb¥m
.
m≠
.
º_idx
 = 0;

226 
√widx
 = 
px
->
lb¥m
.
m≠
.
º_idx
;

228 
avoided
 = 
NULL
;

229 
avoididx
 = 0;

231 
§v
 = 
px
->
lb¥m
.
m≠
.§v[
√widx
++];

232 i‡(!
§v
->
maxc⁄n
 || srv->
cur_£ss
 < 
	`§v_dy«mic_maxc⁄n
(srv)) {

234 i‡(
§v
 !
§vtﬂvoid
) {

235 
px
->
lb¥m
.
m≠
.
º_idx
 = 
√widx
;

236  
§v
;

239 
avoided
 = 
§v
;

240 
avoididx
 = 
√widx
;

242 i‡(
√widx
 =
px
->
lb¥m
.
tŸ_weight
)

243 
√widx
 = 0;

244 } 
√widx
 !
px
->
lb¥m
.
m≠
.
º_idx
);

246 i‡(
avoided
)

247 
px
->
lb¥m
.
m≠
.
º_idx
 = 
avoididx
;

250  
avoided
;

251 
	}
}

259 
£rvî
 *
	$m≠_gë_£rvî_hash
(
¥oxy
 *
px
, 
hash
)

261 i‡(
px
->
lb¥m
.
tŸ_weight
 == 0)

262  
NULL
;

264 i‡(
px
->
lb¥m
.
m≠
.
°©e
 & 
LB_MAP_RECALC
)

265 
	`ªˇlc_£rvî_m≠
(
px
);

267  
px
->
lb¥m
.
m≠
.
§v
[
hash
 %Öx->lb¥m.
tŸ_weight
];

268 
	}
}

	@src/log.c

13 
	~<f˙é.h
>

14 
	~<°d¨g.h
>

15 
	~<°dio.h
>

16 
	~<°dlib.h
>

17 
	~<°rög.h
>

18 
	~<sy¶og.h
>

19 
	~<time.h
>

20 
	~<uni°d.h
>

21 
	~<î∫o.h
>

23 
	~<sys/time.h
>

25 
	~<comm⁄/c⁄fig.h
>

26 
	~<comm⁄/com∑t.h
>

27 
	~<comm⁄/°™d¨d.h
>

28 
	~<comm⁄/time.h
>

30 
	~<ty≥s/globÆ.h
>

32 
	~<¥Ÿo/log.h
>

34 c⁄° *
	glog_Ácûôõs
[
NB_LOG_FACILITIES
] = {

44 c⁄° *
	glog_Àvñs
[
NB_LOG_LEVELS
] = {

49 c⁄° *
	gm⁄th«me
[12] = {

54 c⁄° 
	g£ss_ãrm_c⁄d
[8] = "-cCsSPRI";

55 c⁄° 
	g£ss_fö_°©e
[8] = "-RCHDLQT";

61 
	$AÀπ
(c⁄° *
fmt
, ...)

63 
va_li°
 
¨gp
;

64 
tm
Åm;

66 i‡(!(
globÆ
.
mode
 & 
MODE_QUIET
Ë|| (globÆ.modê& (
MODE_VERBOSE
 | 
MODE_STARTING
))) {

67 
	`va_°¨t
(
¨gp
, 
fmt
);

69 
	`gë_loˇ…ime
(
d©e
.
tv_£c
, &
tm
);

70 
	`Ârötf
(
°dîr
, "[ALERT] %03d/%02d%02d%02d (%d) : ",

71 
tm
.
tm_yday
,Åm.
tm_hour
,Åm.
tm_mö
,Åm.
tm_£c
, ()
	`gëpid
());

72 
	`vÂrötf
(
°dîr
, 
fmt
, 
¨gp
);

73 
	`fÊush
(
°dîr
);

74 
	`va_íd
(
¨gp
);

76 
	}
}

82 
	$W¨nög
(c⁄° *
fmt
, ...)

84 
va_li°
 
¨gp
;

85 
tm
Åm;

87 i‡(!(
globÆ
.
mode
 & 
MODE_QUIET
Ë|| (globÆ.modê& 
MODE_VERBOSE
)) {

88 
	`va_°¨t
(
¨gp
, 
fmt
);

90 
	`gë_loˇ…ime
(
d©e
.
tv_£c
, &
tm
);

91 
	`Ârötf
(
°dîr
, "[WARNING] %03d/%02d%02d%02d (%d) : ",

92 
tm
.
tm_yday
,Åm.
tm_hour
,Åm.
tm_mö
,Åm.
tm_£c
, ()
	`gëpid
());

93 
	`vÂrötf
(
°dîr
, 
fmt
, 
¨gp
);

94 
	`fÊush
(
°dîr
);

95 
	`va_íd
(
¨gp
);

97 
	}
}

102 
	$qÂrötf
(
FILE
 *
out
, c⁄° *
fmt
, ...)

104 
va_li°
 
¨gp
;

106 i‡(!(
globÆ
.
mode
 & 
MODE_QUIET
Ë|| (globÆ.modê& 
MODE_VERBOSE
)) {

107 
	`va_°¨t
(
¨gp
, 
fmt
);

108 
	`vÂrötf
(
out
, 
fmt
, 
¨gp
);

109 
	`fÊush
(
out
);

110 
	`va_íd
(
¨gp
);

112 
	}
}

117 
	$gë_log_Àvñ
(c⁄° *
Àv
)

119 
Àvñ
;

121 
Àvñ
 = 
NB_LOG_LEVELS
 - 1;

122 
Àvñ
 >0 && 
	`°rcmp
(
log_Àvñs
[Àvñ], 
Àv
))

123 
Àvñ
--;

125  
Àvñ
;

126 
	}
}

132 
	$gë_log_Ácûôy
(c⁄° *
Ác
)

134 
Ácûôy
;

136 
Ácûôy
 = 
NB_LOG_FACILITIES
 - 1;

137 
Ácûôy
 >0 && 
	`°rcmp
(
log_Ácûôõs
[Ácûôy], 
Ác
))

138 
Ácûôy
--;

140  
Ácûôy
;

141 
	}
}

146 
ölöe
 
	$log§v_addæí
(c⁄° 
log§v
 *logsrv)

148 
log§v
->
u
.
addr
.
ß_Ámûy
) {

149 
AF_UNIX
:

150  (
log§v
->
u
.
un
);

151 
AF_INET
:

152  (
log§v
->
u
.
ö
);

157 
	}
}

165 
	$£nd_log
(
¥oxy
 *
p
, 
Àvñ
, c⁄° *
mesßge
, ...)

167 
logfdunix
 = -1;

168 
logfdöë
 = -1;

169 
tv£c
 = -1;

170 
va_li°
 
¨gp
;

171 
logmsg
[
MAX_SYSLOG_LEN
];

172 *
d©≠å
 = 
NULL
;

173 
Ác_Àvñ
;

174 
hdr_Àn
, 
d©a_Àn
;

175 
log§v
 *
log§vs
[2];

176 
Ácûôõs
[2], 
logÀvñ
[2], 
mölvl
[2];

177 
nbloggî
;

178 
nbloggîs
 = 0;

179 *
log_±r
;

181 i‡(
Àvñ
 < 0 || 
¥og«me
 =
NULL
 || 
mesßge
 == NULL)

184 i‡(
	`u∆ikñy
(
d©e
.
tv_£c
 !
tv£c
 || 
d©≠å
 =
NULL
)) {

186 
tm
Åm;

188 
tv£c
 = 
d©e
.
tv_£c
;

189 
	`gë_loˇ…ime
(
tv£c
, &
tm
);

191 
hdr_Àn
 = 
	`¢¥ötf
(
logmsg
, (logmsg),

193 
m⁄th«me
[
tm
.
tm_m⁄
],

194 
tm
.
tm_mday
,Åm.
tm_hour
,Åm.
tm_mö
,Åm.
tm_£c
,

195 
¥og«me
, 
pid
);

200 i‡(
hdr_Àn
 < 0 || hdr_À¿> (
logmsg
))

201 
hdr_Àn
 = (
logmsg
);

203 
d©≠å
 = 
logmsg
 + 
hdr_Àn
;

206 
	`va_°¨t
(
¨gp
, 
mesßge
);

211 
d©a_Àn
 = 
	`v¢¥ötf
(
d©≠å
, 
logmsg
 + ÷ogmsgË- d©≠å, 
mesßge
, 
¨gp
);

212 i‡(
d©a_Àn
 < 0 || d©a_À¿> (
logmsg
 + ÷ogmsgË- 
d©≠å
))

213 
d©a_Àn
 = 
logmsg
 + ÷ogmsgË- 
d©≠å
;

214 
	`va_íd
(
¨gp
);

215 
d©≠å
[
d©a_Àn
 - 1] = '\n';

217 i‡(
p
 =
NULL
) {

218 i‡(
globÆ
.
logÁc1
 >= 0) {

219 
log§vs
[
nbloggîs
] = &
globÆ
.
log§v1
;

220 
Ácûôõs
[
nbloggîs
] = 
globÆ
.
logÁc1
;

221 
logÀvñ
[
nbloggîs
] = 
globÆ
.
logÀv1
;

222 
mölvl
[
nbloggîs
] = 
globÆ
.
mölvl1
;

223 
nbloggîs
++;

225 i‡(
globÆ
.
logÁc2
 >= 0) {

226 
log§vs
[
nbloggîs
] = &
globÆ
.
log§v2
;

227 
Ácûôõs
[
nbloggîs
] = 
globÆ
.
logÁc2
;

228 
logÀvñ
[
nbloggîs
] = 
globÆ
.
logÀv2
;

229 
mölvl
[
nbloggîs
] = 
globÆ
.
mölvl2
;

230 
nbloggîs
++;

233 i‡(
p
->
logÁc1
 >= 0) {

234 
log§vs
[
nbloggîs
] = &
p
->
log§v1
;

235 
Ácûôõs
[
nbloggîs
] = 
p
->
logÁc1
;

236 
logÀvñ
[
nbloggîs
] = 
p
->
logÀv1
;

237 
mölvl
[
nbloggîs
] = 
p
->
mölvl1
;

238 
nbloggîs
++;

240 i‡(
p
->
logÁc2
 >= 0) {

241 
log§vs
[
nbloggîs
] = &
p
->
log§v2
;

242 
Ácûôõs
[
nbloggîs
] = 
p
->
logÁc2
;

243 
logÀvñ
[
nbloggîs
] = 
p
->
logÀv2
;

244 
mölvl
[
nbloggîs
] = 
p
->
mölvl2
;

245 
nbloggîs
++;

251 
nbloggî
 = 0;Çbloggî < 
nbloggîs
;Çblogger++) {

252 c⁄° 
log§v
 *log§v = 
log§vs
[
nbloggî
];

253 
¥Ÿo
, *
∂ogfd
;

254 i‡(
log§v
->
u
.
addr
.
ß_Ámûy
 =
AF_UNIX
) {

255 
¥Ÿo
 = 0;

256 
∂ogfd
 = &
logfdunix
;

259 
¥Ÿo
 = 
IPPROTO_UDP
;

260 
∂ogfd
 = &
logfdöë
;

262 i‡(*
∂ogfd
 >= 0) {

266 i‡((*
∂ogfd
 = 
	`sockë
(
log§v
->
u
.
addr
.
ß_Ámûy
, 
SOCK_DGRAM
,

267 
¥Ÿo
)) < 0) {

268 
	`AÀπ
("socket forÜogger #%d failed: %s (errno=%d)\n",

269 
nbloggî
 + 1, 
	`°ªº‹
(
î∫o
),Érrno);

273 
	`£tsock›t
(*
∂ogfd
, 
SOL_SOCKET
, 
SO_RCVBUF
, &
zîo
, (zero));

275 
	`shutdown
(*
∂ogfd
, 
SHUT_RD
);

279 
nbloggî
 = 0;Çbloggî < 
nbloggîs
;Çblogger++) {

280 c⁄° 
log§v
 *log§v = 
log§vs
[
nbloggî
];

281 *
∂ogfd
 = 
log§v
->
u
.
addr
.
ß_Ámûy
 =
AF_UNIX
 ?

282 &
logfdunix
 : &
logfdöë
;

283 
£¡
;

286 i‡(
Àvñ
 > 
logÀvñ
[
nbloggî
])

296 
Ác_Àvñ
 = (
Ácûôõs
[
nbloggî
] << 3Ë+ 
	`MAX
(
Àvñ
, 
mölvl
[nblogger]);

297 
log_±r
 = 
logmsg
 + 3;

299 *
log_±r
 = '0' + 
Ác_Àvñ
 % 10;

300 
Ác_Àvñ
 /= 10;

301 
log_±r
--;

302 } 
Ác_Àvñ
 && 
log_±r
 > 
logmsg
);

303 *
log_±r
 = '<';

306 
£¡
 = 
	`£ndto
(*
∂ogfd
, 
log_±r
, 
d©≠å
 + 
d©a_Àn
 -Üog_ptr,

307 
MSG_DONTWAIT
 | 
MSG_NOSIGNAL
, &
log§v
->
u
.
addr
, 
	`log§v_addæí
(logsrv));

308 i‡(
£¡
 < 0) {

309 
	`AÀπ
("sendtoÜogger #%d failed: %s (errno=%d)\n",

310 
nbloggî
, 
	`°ªº‹
(
î∫o
),Érrno);

313 
	}
}

319 
	$t˝_£ss_log
(
£ssi⁄
 *
s
)

321 
≤
[
INET6_ADDRSTRLEN
 + 
	`°æí
(":65535")];

322 
¥oxy
 *
„
 = 
s
->fe;

323 
¥oxy
 *
be
 = 
s
->be;

324 
¥oxy
 *
¥x_log
;

325 
tﬁog
, 
Àvñ
, 
îr
;

326 *
svid
;

327 
tm
Åm;

330 
îr
 = (
s
->
Êags
 & (
SN_ERR_MASK
 | 
SN_REDISP
)Ë|| (s->
c⁄n_ªåõs
 !
be
->conn_retries);

331 i‡(!
îr
 && (
„
->
›ti⁄s2
 & 
PR_O2_NOLOGNORM
))

334 i‡(
s
->
˛i_addr
.
ss_Ámûy
 =
AF_INET
)

335 
	`öë_¡›
(
AF_INET
,

336 (c⁄° *)&((
sockaddr_ö
 *)&
s
->
˛i_addr
)->
sö_addr
,

337 
≤
, (pn));

339 
	`öë_¡›
(
AF_INET6
,

340 (c⁄° *)&((
sockaddr_ö6
 *)(&
s
->
˛i_addr
))->
sö6_addr
,

341 
≤
, (pn));

343 
	`gë_loˇ…ime
(
s
->
logs
.
tv_ac˚±
.
tv_£c
, &
tm
);

345 i‡(
„
->
logÁc1
 < 0 && fe->
logÁc2
 < 0)

348 
¥x_log
 = 
„
;

349 
tﬁog
 = 
„
->
to_log
;

350 
svid
 = (
tﬁog
 & 
LW_SVID
Ë? (
s
->
§v
 !
NULL
Ë? s->§v->
id
 : "<NOSRV>" : "-";

352 
Àvñ
 = 
LOG_INFO
;

353 i‡(
îr
 && (
„
->
›ti⁄s2
 & 
PR_O2_LOGERRORS
))

354 
Àvñ
 = 
LOG_ERR
;

356 
	`£nd_log
(
¥x_log
, 
Àvñ
, "%s:%d [%02d/%s/%04d:%02d:%02d:%02d.%03d]"

359 
≤
,

360 (
s
->
˛i_addr
.
ss_Ámûy
 =
AF_INET
) ?

361 
	`¡ohs
(((
sockaddr_ö
 *)&
s
->
˛i_addr
)->
sö_p‹t
) :

362 
	`¡ohs
(((
sockaddr_ö6
 *)&
s
->
˛i_addr
)->
sö6_p‹t
),

363 
tm
.
tm_mday
, 
m⁄th«me
[tm.
tm_m⁄
],Åm.
tm_yór
+1900,

364 
tm
.
tm_hour
,Åm.
tm_mö
,Åm.
tm_£c
, ()
s
->
logs
.
tv_ac˚±
.
tv_u£c
/1000,

365 
„
->
id
, 
be
->id, 
svid
,

366 (
s
->
logs
.
t_queue
 >= 0) ? s->logs.t_queue : -1,

367 (
s
->
logs
.
t_c⁄√˘
 >0Ë? s->logs.t_c⁄√˘ - s->logs.
t_queue
 : -1,

368 (
tﬁog
 & 
LW_BYTES
Ë? "" : "+", 
s
->
logs
.
t_˛o£
,

369 (
tﬁog
 & 
LW_BYTES
Ë? "" : "+", 
s
->
logs
.
byãs_out
,

370 
£ss_ãrm_c⁄d
[(
s
->
Êags
 & 
SN_ERR_MASK
Ë>> 
SN_ERR_SHIFT
],

371 
£ss_fö_°©e
[(
s
->
Êags
 & 
SN_FINST_MASK
Ë>> 
SN_FINST_SHIFT
],

372 
a˘c⁄n
, 
„
->
„c⁄n
, 
be
->
bec⁄n
, 
s
->
§v
 ? s->§v->
cur_£ss
 : 0,

373 (
s
->
Êags
 & 
SN_REDISP
)?"+":"",

374 (
s
->
c⁄n_ªåõs
>0)?(
be
->conn_retries - s->conn_retries):be->conn_retries,

375 
s
->
logs
.
§v_queue_size
, s->logs.
¥x_queue_size
);

377 
s
->
logs
.
logwaô
 = 0;

378 
	}
}

	@src/memory.c

13 
	~<comm⁄/c⁄fig.h
>

14 
	~<comm⁄/debug.h
>

15 
	~<comm⁄/mem‹y.h
>

16 
	~<comm⁄/möi-˛i°.h
>

17 
	~<comm⁄/°™d¨d.h
>

19 
	~<¥Ÿo/log.h
>

21 
li°
 
	gpoﬁs
 = 
LIST_HEAD_INIT
(
poﬁs
);

27 
poﬁ_hód
 *
	$¸óã_poﬁ
(*
«me
, 
size
, 
Êags
)

29 
poﬁ_hód
 *
poﬁ
;

30 
poﬁ_hód
 *
íåy
;

31 
li°
 *
°¨t
;

32 
Æign
;

40 
Æign
 = 16;

41 
size
 = (sizê+ 
Æign
 - 1) & -align;

43 
°¨t
 = &
poﬁs
;

44 
poﬁ
 = 
NULL
;

46 
	`li°_f‹_óch_íåy
(
íåy
, &
poﬁs
, 
li°
) {

47 i‡(
íåy
->
size
 == size) {

52 i‡(
Êags
 & 
íåy
->Êag†& 
MEM_F_SHARED
) {

54 
poﬁ
 = 
íåy
;

55 
	`DPRINTF
(
°dîr
, "Sh¨ög %†wôh %s\n", 
«me
, 
poﬁ
->name);

59 i‡(
íåy
->
size
 > size) {

61 
°¨t
 = &
íåy
->
li°
;

66 i‡(!
poﬁ
) {

67 
poﬁ
 = 
	`CALLOC
(1, (*pool));

68 i‡(!
poﬁ
)

69  
NULL
;

70 i‡(
«me
)

71 
	`°æ˝y2
(
poﬁ
->
«me
,Çame, (pool->name));

72 
poﬁ
->
size
 = size;

73 
poﬁ
->
Êags
 = flags;

74 
	`LIST_ADDQ
(
°¨t
, &
poﬁ
->
li°
);

76 
poﬁ
->
u£rs
++;

77  
poﬁ
;

78 
	}
}

84 *
	$poﬁ_ªfûl_Æloc
(
poﬁ_hód
 *
poﬁ
)

86 *
ªt
;

88 i‡(
poﬁ
->
limô
 && (poﬁ->
Æloˇãd
 >=Öool->limit))

89  
NULL
;

90 
ªt
 = 
	`MALLOC
(
poﬁ
->
size
);

91 i‡(!
ªt
) {

92 
	`poﬁ_gc2
();

93 
ªt
 = 
	`MALLOC
(
poﬁ
->
size
);

94 i‡(!
ªt
)

95  
NULL
;

97 
poﬁ
->
Æloˇãd
++;

98 
poﬁ
->
u£d
++;

99  
ªt
;

100 
	}
}

105 
	$poﬁ_Êush2
(
poﬁ_hód
 *
poﬁ
)

107 *
ãmp
, *
√xt
;

108 i‡(!
poﬁ
)

111 
√xt
 = 
poﬁ
->
‰ì_li°
;

112 
√xt
) {

113 
ãmp
 = 
√xt
;

114 
√xt
 = *(**)
ãmp
;

115 
poﬁ
->
Æloˇãd
--;

116 
	`FREE
(
ãmp
);

118 
poﬁ
->
‰ì_li°
 = 
√xt
;

121 
	}
}

128 
	$poﬁ_gc2
()

130 
ªcur£
;

131 
poﬁ_hód
 *
íåy
;

133 i‡(
ªcur£
++)

134 
out
;

136 
	`li°_f‹_óch_íåy
(
íåy
, &
poﬁs
, 
li°
) {

137 *
ãmp
, *
√xt
;

139 
√xt
 = 
íåy
->
‰ì_li°
;

140 
√xt
 &&

141 
íåy
->
Æloˇãd
 >É¡ry->
möavaû
 &&

142 
íåy
->
Æloˇãd
 >É¡ry->
u£d
) {

143 
ãmp
 = 
√xt
;

144 
√xt
 = *(**)
ãmp
;

145 
íåy
->
Æloˇãd
--;

146 
	`FREE
(
ãmp
);

148 
íåy
->
‰ì_li°
 = 
√xt
;

150 
out
:

151 
ªcur£
--;

152 
	}
}

161 *
	$poﬁ_de°roy2
(
poﬁ_hód
 *
poﬁ
)

163 i‡(
poﬁ
) {

164 
	`poﬁ_Êush2
(
poﬁ
);

165 i‡(
poﬁ
->
u£d
)

166  
poﬁ
;

167 
poﬁ
->
u£rs
--;

168 i‡(!
poﬁ
->
u£rs
) {

169 
	`LIST_DEL
(&
poﬁ
->
li°
);

170 
	`FREE
(
poﬁ
);

173  
NULL
;

174 
	}
}

178 
	$dump_poﬁs
()

180 
poﬁ_hód
 *
íåy
;

181 
Æloˇãd
, 
u£d
;

182 
nbpoﬁs
;

184 
Æloˇãd
 = 
u£d
 = 
nbpoﬁs
 = 0;

185 
	`qÂrötf
(
°dîr
, "DumpingÖools usage.\n");

186 
	`li°_f‹_óch_íåy
(
íåy
, &
poﬁs
, 
li°
) {

187 
	`qÂrötf
(
°dîr
, " - Pool %s (%d bytes) : %dállocated (%u bytes), %d used, %d users%s\n",

188 
íåy
->
«me
,É¡ry->
size
,É¡ry->
Æloˇãd
,

189 
íåy
->
size
 *É¡ry->
Æloˇãd
,É¡ry->
u£d
,

190 
íåy
->
u£rs
, (íåy->
Êags
 & 
MEM_F_SHARED
) ? " [SHARED]" : "");

192 
Æloˇãd
 +
íåy
->Æloˇãd *É¡ry->
size
;

193 
u£d
 +
íåy
->u£d *É¡ry->
size
;

194 
nbpoﬁs
++;

196 
	`qÂrötf
(
°dîr
, "Total: %dÖools, %lu bytesállocated, %lu used.\n",

197 
nbpoﬁs
, 
Æloˇãd
, 
u£d
);

198 
	}
}

	@src/pattern.c

13 
	~<°rög.h
>

14 
	~<¨∑/öë.h
>

15 
	~<ty≥s/°ick_èbÀ.h
>

17 
	~<¥Ÿo/∑âîn.h
>

18 
	~<comm⁄/°™d¨d.h
>

21 
∑âîn
 
	g•©ã∫
;

24 
chunk
 
	gåash_chunk
;

27 
	g∑âîn_åash_buf1
[
BUFSIZE
];

28 
	g∑âîn_åash_buf2
[
BUFSIZE
];

31 *
	g∑âîn_åash_buf
 = 
∑âîn_åash_buf1
;

34 
°kèbÀ_key
 
	g°abÀ_key
;

37 
∑âîn_„tch_kw_li°
 
	g∑âîn_„tches
 = {

38 .
li°
 = 
LIST_HEAD_INIT
(
∑âîn_„tches
.list)

42 
∑âîn_c⁄v_kw_li°
 
	g∑âîn_c⁄vs
 = {

43 .
li°
 = 
LIST_HEAD_INIT
(
∑âîn_c⁄vs
.list)

50 
	$∑âîn_ªgi°î_„tches
(
∑âîn_„tch_kw_li°
 *
pfkl
)

52 
	`LIST_ADDQ
(&
∑âîn_„tches
.
li°
, &
pfkl
->list);

53 
	}
}

59 
	$∑âîn_ªgi°î_c⁄vs
(
∑âîn_c⁄v_kw_li°
 *
pckl
)

61 
	`LIST_ADDQ
(&
∑âîn_c⁄vs
.
li°
, &
pckl
->list);

62 
	}
}

69 
∑âîn_„tch
 *
	$föd_∑âîn_„tch
(c⁄° *
kw
, 
Àn
)

71 
ödex
;

72 
∑âîn_„tch_kw_li°
 *
kwl
;

74 
	`li°_f‹_óch_íåy
(
kwl
, &
∑âîn_„tches
.
li°
,Üist) {

75 
ödex
 = 0; 
kwl
->
kw
[ödex].kw !
NULL
; index++) {

76 i‡(
	`°∫cmp
(
kwl
->
kw
[
ödex
].kw, kw, 
Àn
) == 0 &&

77 
kwl
->
kw
[
ödex
].kw[
Àn
] == '\0')

78  &
kwl
->
kw
[
ödex
];

81  
NULL
;

82 
	}
}

89 
∑âîn_c⁄v
 *
	$föd_∑âîn_c⁄v
(c⁄° *
kw
, 
Àn
)

91 
ödex
;

92 
∑âîn_c⁄v_kw_li°
 *
kwl
;

94 
	`li°_f‹_óch_íåy
(
kwl
, &
∑âîn_c⁄vs
.
li°
,Üist) {

95 
ödex
 = 0; 
kwl
->
kw
[ödex].kw !
NULL
; index++) {

96 i‡(
	`°∫cmp
(
kwl
->
kw
[
ödex
].kw, kw, 
Àn
) == 0 &&

97 
kwl
->
kw
[
ödex
].kw[
Àn
] == '\0')

98  &
kwl
->
kw
[
ödex
];

101  
NULL
;

102 
	}
}

109 
chunk
 *
	$gë_åash_chunk
()

111 i‡(
∑âîn_åash_buf
 =
∑âîn_åash_buf1
)

112 
∑âîn_åash_buf
 = 
∑âîn_åash_buf2
;

114 
∑âîn_åash_buf
 = 
∑âîn_åash_buf1
;

116 
åash_chunk
.
°r
 = 
∑âîn_åash_buf
;

117 
åash_chunk
.
Àn
 = 0;

118 
åash_chunk
.
size
 = 
BUFSIZE
;

120  &
åash_chunk
;

121 
	}
}

126 
	$∑âîn_d©a_£t°rög
(
∑âîn_d©a
 *
d©a
, 
chunk
 *
c
)

128 
d©a
->
°r
.°∏
c
->str;

129 
d©a
->
°r
.
Àn
 = 
c
->len;

130 
d©a
->
°r
.
size
 = 
c
->size;

131 
	}
}

137 
	$c_ù2öt
(
∑âîn_d©a
 *
d©a
)

139 
d©a
->
öãgî
 = 
	`¡ohl
(d©a->
ù
.
s_addr
);

141 
	}
}

143 
	$c_ù2°r
(
∑âîn_d©a
 *
d©a
)

145 
chunk
 *
åash
 = 
	`gë_åash_chunk
();

147 i‡(!
	`öë_¡›
(
AF_INET
, (*)&
d©a
->
ù
, 
åash
->
°r
,Åøsh->
size
))

150 
åash
->
Àn
 = 
	`°æí
—øsh->
°r
);

151 
	`∑âîn_d©a_£t°rög
(
d©a
, 
åash
);

154 
	}
}

156 
	$c_öt2ù
(
∑âîn_d©a
 *
d©a
)

158 
d©a
->
ù
.
s_addr
 = 
	`ht⁄l
(d©a->
öãgî
);

160 
	}
}

165 
	$buf2ù
(c⁄° *
buf
, 
size_t
 
Àn
, 
ö_addr
 *
d°
)

167 c⁄° *
addr
;

168 
ßw_digô
, 
o˘ës
, 
ch
;

169 
u_ch¨
 
tmp
[4], *
ç
;

170 c⁄° *
˝
 = 
buf
;

172 
ßw_digô
 = 0;

173 
o˘ës
 = 0;

174 *(
ç
 = 
tmp
) = 0;

176 
addr
 = 
buf
;ádd∏- bu‡< 
Àn
;áddr++) {

177 
digô
 = (
ch
 = *
addr
) - '0';

179 i‡(
digô
 > 9 && 
ch
 != '.')

182 i‡(
digô
 <= 9) {

183 
u_öt
 
√w
 = *
ç
 * 10 + 
digô
;

185 i‡(
√w
 > 255)

188 *
ç
 = 
√w
;

190 i‡(!
ßw_digô
) {

191 i‡(++
o˘ës
 > 4)

193 
ßw_digô
 = 1;

195 } i‡(
ch
 ='.' && 
ßw_digô
) {

196 i‡(
o˘ës
 == 4)

199 *++
ç
 = 0;

200 
ßw_digô
 = 0;

205 i‡(
o˘ës
 < 4)

208 
	`mem˝y
(&
d°
->
s_addr
, 
tmp
, 4);

209  
addr
 - 
˝
;

210 
	}
}

212 
	$c_°r2ù
(
∑âîn_d©a
 *
d©a
)

214 i‡(!
	`buf2ù
(
d©a
->
°r
.°r, d©a->°r.
Àn
, &d©a->
ù
))

217 
	}
}

219 
	$c_öt2°r
(
∑âîn_d©a
 *
d©a
)

221 
chunk
 *
åash
 = 
	`gë_åash_chunk
();

222 *
pos
;

224 
pos
 = 
	`u…ﬂ_r
(
d©a
->
öãgî
, 
åash
->
°r
,Åøsh->
size
);

226 i‡(!
pos
)

229 
åash
->
°r
 = 
pos
;

230 
åash
->
Àn
 = 
	`°æí
(
pos
);

232 
	`∑âîn_d©a_£t°rög
(
d©a
, 
åash
);

235 
	}
}

237 
	$c_d⁄Ÿhög
(
∑âîn_d©a
 *
d©a
)

240 
	}
}

242 
	$c_°r2öt
(
∑âîn_d©a
 *
d©a
)

244 
i
;

245 
uöt32_t
 
ªt
 = 0;

247 
i
 = 0; i < 
d©a
->
°r
.
Àn
; i++) {

248 
uöt32_t
 
vÆ
 = 
d©a
->
°r
.°r[
i
] - '0';

250 i‡(
vÆ
 > 9)

253 
ªt
 =Ñë * 10 + 
vÆ
;

256 
d©a
->
öãgî
 = 
ªt
;

258 
	}
}

266 (*
	t∑âîn_ˇ°
)(
	t∑âîn_d©a
 *
	td©a
);

267 
∑âîn_ˇ°
 
∑âîn_ˇ°s
[
PATTERN_TYPES
][PATTERN_TYPES] = { { 
c_d⁄Ÿhög
, 
c_ù2öt
, 
c_ù2°r
 },

268 { 
c_öt2ù
, 
c_d⁄Ÿhög
, 
c_öt2°r
 },

269 { 
c_°r2ù
, 
c_°r2öt
, 
c_d⁄Ÿhög
 } 
	}
};

276 *
	$k_öt2öt
(
∑âîn_d©a
 *
pd©a
, 
°kèbÀ_key_d©a
 *
kd©a
, 
size_t
 *
Àn
)

278  (*)&
pd©a
->
öãgî
;

279 
	}
}

281 *
	$k_ù2ù
(
∑âîn_d©a
 *
pd©a
, 
°kèbÀ_key_d©a
 *
kd©a
, 
size_t
 *
Àn
)

283  (*)&
pd©a
->
ù
.
s_addr
;

284 
	}
}

286 *
	$k_ù2öt
(
∑âîn_d©a
 *
pd©a
, 
°kèbÀ_key_d©a
 *
kd©a
, 
size_t
 *
Àn
)

288 
kd©a
->
öãgî
 = 
	`¡ohl
(
pd©a
->
ù
.
s_addr
);

289  (*)&
kd©a
->
öãgî
;

290 
	}
}

292 *
	$k_öt2ù
(
∑âîn_d©a
 *
pd©a
, 
°kèbÀ_key_d©a
 *
kd©a
, 
size_t
 *
Àn
)

294 
kd©a
->
ù
.
s_addr
 = 
	`ht⁄l
(
pd©a
->
öãgî
);

295  (*)&
kd©a
->
ù
.
s_addr
;

296 
	}
}

298 *
	$k_°r2°r
(
∑âîn_d©a
 *
pd©a
, 
°kèbÀ_key_d©a
 *
kd©a
, 
size_t
 *
Àn
)

300 *
Àn
 = 
pd©a
->
°r
.len;

301  (*)
pd©a
->
°r
.str;

302 
	}
}

304 *
	$k_ù2°r
(
∑âîn_d©a
 *
pd©a
, 
°kèbÀ_key_d©a
 *
kd©a
, 
size_t
 *
Àn
)

306 i‡(!
	`öë_¡›
(
AF_INET
, &
pd©a
->
ù
, 
kd©a
->
buf
, (kdata->buf)))

307  
NULL
;

309 *
Àn
 = 
	`°æí
((c⁄° *)
kd©a
->
buf
);

310  (*)
kd©a
->
buf
;

311 
	}
}

313 *
	$k_öt2°r
(
∑âîn_d©a
 *
pd©a
, 
°kèbÀ_key_d©a
 *
kd©a
, 
size_t
 *
Àn
)

315 *
key
;

317 
key
 = (*)
	`u…ﬂ_r
(
pd©a
->
öãgî
, 
kd©a
->
buf
, (kdata->buf));

318 i‡(!
key
)

319  
NULL
;

321 *
Àn
 = 
	`°æí
((c⁄° *)
key
);

322  
key
;

323 
	}
}

325 *
	$k_°r2ù
(
∑âîn_d©a
 *
pd©a
, 
°kèbÀ_key_d©a
 *
kd©a
, 
size_t
 *
Àn
)

327 i‡(!
	`buf2ù
(
pd©a
->
°r
.°r,Öd©a->°r.
Àn
, &
kd©a
->
ù
))

328  
NULL
;

330  (*)&
kd©a
->
ù
.
s_addr
;

331 
	}
}

334 *
	$k_°r2öt
(
∑âîn_d©a
 *
pd©a
, 
°kèbÀ_key_d©a
 *
kd©a
, 
size_t
 *
Àn
)

336 
i
;

338 
kd©a
->
öãgî
 = 0;

339 
i
 = 0; i < 
pd©a
->
°r
.
Àn
; i++) {

340 
uöt32_t
 
vÆ
 = 
pd©a
->
°r
.°r[
i
] - '0';

342 i‡(
vÆ
 > 9)

345 
kd©a
->
öãgî
 = kd©a->öãgî * 10 + 
vÆ
;

347  (*)&
kd©a
->
öãgî
;

348 
	}
}

356 *(*
	t∑âîn_key
)(
	t∑âîn_d©a
 *
	tpd©a
, 
	t°kèbÀ_key_d©a
 *
	tkd©a
, 
	tsize_t
 *
	tÀn
);

357 
∑âîn_key
 
	g∑âîn_keys
[
PATTERN_TYPES
][
STKTABLE_TYPES
] = { { 
k_ù2ù
, 
k_ù2öt
, 
k_ù2°r
 },

358 { 
k_öt2ù
, 
k_öt2öt
, 
k_öt2°r
 },

359 { 
k_°r2ù
, 
k_°r2öt
, 
k_°r2°r
 } };

365 
∑âîn_ex¥
 *
	$∑âîn_∑r£_ex¥
(**
°r
, *
idx
)

367 c⁄° *
ídw
;

368 c⁄° *
íd
;

369 
∑âîn_ex¥
 *
ex¥
;

370 
∑âîn_„tch
 *
„tch
;

371 
∑âîn_c⁄v
 *
c⁄v
;

372 
¥ev_ty≥
;

374 i‡(!
°r
[*
idx
])

375 
out_îr‹
;

377 
íd
 = 
°r
[*
idx
] + 
	`°æí
(str[*idx]);

378 
ídw
 = 
	`°rchr
(
°r
[*
idx
], '(');

380 i‡(!
ídw
)

381 
ídw
 = 
íd
;

382 i‡((
íd
-1)[0] != ')')

383 
out_îr‹
;

385 
„tch
 = 
	`föd_∑âîn_„tch
(
°r
[*
idx
], 
ídw
 - str[*idx]);

386 i‡(!
„tch
)

387 
out_îr‹
;

389 i‡(
„tch
->
out_ty≥
 >
PATTERN_TYPES
)

390 
out_îr‹
;

392 
¥ev_ty≥
 = 
„tch
->
out_ty≥
;

393 
ex¥
 = 
	`ˇŒoc
(1, (
∑âîn_ex¥
));

395 
	`LIST_INIT
(&(
ex¥
->
c⁄v_ex¥s
));

396 
ex¥
->
„tch
 = fetch;

398 i‡(
íd
 !
ídw
) {

399 
ex¥
->
¨g_Àn
 = 
íd
 - 
ídw
 - 2;

400 
ex¥
->
¨g
 = 
	`my_°∫dup
(
ídw
 + 1,Éx¥->
¨g_Àn
);

403 *
idx
 +1; *(
°r
[*idx]); (*idx)++) {

404 
∑âîn_c⁄v_ex¥
 *
c⁄v_ex¥
;

406 
íd
 = 
°r
[*
idx
] + 
	`°æí
(str[*idx]);

407 
ídw
 = 
	`°rchr
(
°r
[*
idx
], '(');

409 i‡(!
ídw
)

410 
ídw
 = 
íd
;

411 i‡((
íd
-1)[0] != ')')

412 
out_îr‹
;

414 
c⁄v
 = 
	`föd_∑âîn_c⁄v
(
°r
[*
idx
], 
ídw
 - str[*idx]);

415 i‡(!
c⁄v
)

418 i‡(
c⁄v
->
ö_ty≥
 >
PATTERN_TYPES
 ||

419 
c⁄v
->
out_ty≥
 >
PATTERN_TYPES
)

420 
out_îr‹
;

423 i‡(!
∑âîn_ˇ°s
[
¥ev_ty≥
][
c⁄v
->
ö_ty≥
])

424 
out_îr‹
;

426 
¥ev_ty≥
 = 
c⁄v
->
out_ty≥
;

427 
c⁄v_ex¥
 = 
	`ˇŒoc
(1, (
∑âîn_c⁄v_ex¥
));

429 
	`LIST_ADDQ
(&(
ex¥
->
c⁄v_ex¥s
), &(
c⁄v_ex¥
->
li°
));

430 
c⁄v_ex¥
->
c⁄v
 = conv;

432 i‡(
íd
 !
ídw
) {

433 
i
 = 
íd
 - 
ídw
 - 2;

434 *
p
 = 
	`my_°∫dup
(
ídw
 + 1, 
i
);

436 i‡(
c⁄v
->
∑r£_¨gs
) {

437 
i
 = 
c⁄v
->
	`∑r£_¨gs
(
p
, &
c⁄v_ex¥
->
¨g_p
, &c⁄v_ex¥->
¨g_i
);

438 
	`‰ì
(
p
);

439 i‡(!
i
)

440 
out_îr‹
;

442 
c⁄v_ex¥
->
¨g_i
 = 
i
;

443 
c⁄v_ex¥
->
¨g_p
 = 
p
;

447  
ex¥
;

449 
out_îr‹
:

451  
NULL
;

452 
	}
}

462 
∑âîn
 *
	$∑âîn_¥o˚ss
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

463 
∑âîn_ex¥
 *
ex¥
, 
∑âîn
 *
p
)

465 
∑âîn_c⁄v_ex¥
 *
c⁄v_ex¥
;

467 i‡(
p
 =
NULL
)

468 
p
 = &
•©ã∫
;

470 i‡(!
ex¥
->
„tch
->
	`¥o˚ss
(
px
, 
l4
, 
l7
, 
dú
,Éx¥->
¨g
,Éx¥->
¨g_Àn
, &
p
->
d©a
))

471  
NULL
;

473 
p
->
ty≥
 = 
ex¥
->
„tch
->
out_ty≥
;

475 
	`li°_f‹_óch_íåy
(
c⁄v_ex¥
, &
ex¥
->
c⁄v_ex¥s
, 
li°
) {

476 i‡(!
∑âîn_ˇ°s
[
p
->
ty≥
][
c⁄v_ex¥
->
c⁄v
->
ö_ty≥
](&p->
d©a
))

477  
NULL
;

479 
p
->
ty≥
 = 
c⁄v_ex¥
->
c⁄v
->
ö_ty≥
;

480 i‡(!
c⁄v_ex¥
->
c⁄v
->
	`¥o˚ss
(c⁄v_ex¥->
¨g_p
, c⁄v_ex¥->
¨g_i
, &
p
->
d©a
))

481  
NULL
;

483 
p
->
ty≥
 = 
c⁄v_ex¥
->
c⁄v
->
out_ty≥
;

485  
p
;

486 
	}
}

494 
°kèbÀ_key
 *
	$∑âîn_¥o˚ss_key
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

495 
∑âîn_ex¥
 *
ex¥
, 
èbÀ_ty≥
)

497 
∑âîn
 *
±∫
;

499 
±∫
 = 
	`∑âîn_¥o˚ss
(
px
, 
l4
, 
l7
, 
dú
, 
ex¥
, 
NULL
);

500 i‡(!
±∫
)

501  
NULL
;

503 
°abÀ_key
.
key_Àn
 = (
size_t
)-1;

504 
°abÀ_key
.
key
 = 
∑âîn_keys
[
±∫
->
ty≥
][
èbÀ_ty≥
](&±∫->
d©a
, &°abÀ_key.d©a, &°abÀ_key.
key_Àn
);

506 i‡(!
°abÀ_key
.
key
)

507  
NULL
;

509  &
°abÀ_key
;

510 
	}
}

518 
	$∑âîn_nŸußbÀ_key
(
∑âîn_ex¥
 *
ex¥
, 
èbÀ_ty≥
)

521 i‡(
èbÀ_ty≥
 >
STKTABLE_TYPES
)

524 i‡(
	`LIST_ISEMPTY
(&
ex¥
->
c⁄v_ex¥s
)) {

525 i‡(!
∑âîn_keys
[
ex¥
->
„tch
->
out_ty≥
][
èbÀ_ty≥
])

528 
∑âîn_c⁄v_ex¥
 *
c⁄v_ex¥
;

529 
c⁄v_ex¥
 = 
	`LIST_PREV
(&
ex¥
->
c⁄v_ex¥s
, 
	`ty≥of
(c⁄v_ex¥), 
li°
);

531 i‡(!
∑âîn_keys
[
c⁄v_ex¥
->
c⁄v
->
out_ty≥
][
èbÀ_ty≥
])

535 
	}
}

540 
	$∑âîn_c⁄v_¨g_to_ùmask
(c⁄° *
¨g_°r
, **
¨g_p
, *
¨g_i
)

542 
ö_addr
 
mask
;

544 i‡(!
	`°r2mask
(
¨g_°r
, &
mask
))

547 *
¨g_i
 = 
mask
.
s_addr
;

549 
	}
}

555 
	$∑âîn_c⁄v_°r2lowî
(c⁄° *
¨g_p
, 
¨g_i
, 
∑âîn_d©a
 *
d©a
)

557 
i
;

559 
i
 = 0; i < 
d©a
->
°r
.
Àn
; i++) {

560 i‡((
d©a
->
°r
.°r[
i
] >= 'A') && (data->str.str[i] <= 'Z'))

561 
d©a
->
°r
.°r[
i
] += 'a' - 'A';

564 
	}
}

566 
	$∑âîn_c⁄v_°r2uµî
(c⁄° *
¨g_p
, 
¨g_i
, 
∑âîn_d©a
 *
d©a
)

568 
i
;

570 
i
 = 0; i < 
d©a
->
°r
.
Àn
; i++) {

571 i‡((
d©a
->
°r
.°r[
i
] >= 'a') && (data->str.str[i] <= 'z'))

572 
d©a
->
°r
.°r[
i
] += 'A' - 'a';

575 
	}
}

578 
	$∑âîn_c⁄v_ùmask
(c⁄° *
¨g_p
, 
¨g_i
, 
∑âîn_d©a
 *
d©a
)

580 
d©a
->
ù
.
s_addr
 &
¨g_i
;

582 
	}
}

585 
∑âîn_c⁄v_kw_li°
 
	g∑âîn_c⁄v_kws
 = {{ },{

586 { "uµî", 
∑âîn_c⁄v_°r2uµî
, 
PATTERN_TYPE_STRING
, PATTERN_TYPE_STRING },

587 { "lowî", 
∑âîn_c⁄v_°r2lowî
, 
PATTERN_TYPE_STRING
, PATTERN_TYPE_STRING },

588 { "ùmask", 
∑âîn_c⁄v_ùmask
, 
PATTERN_TYPE_IP
, PATTERN_TYPE_IP, 
∑âîn_c⁄v_¨g_to_ùmask
 },

589 { 
NULL
, NULL, 0, 0 },

592 
__©åibuã__
((
c⁄°ru˘‹
))

593 
	$__∑âîn_öô
()

596 
	`∑âîn_ªgi°î_c⁄vs
(&
∑âîn_c⁄v_kws
);

597 
	}
}

	@src/pipe.c

13 
	~<uni°d.h
>

15 
	~<comm⁄/c⁄fig.h
>

16 
	~<comm⁄/mem‹y.h
>

18 
	~<ty≥s/globÆ.h
>

19 
	~<ty≥s/pùe.h
>

21 
poﬁ_hód
 *
	gpoﬁ2_pùe
 = 
NULL
;

22 
pùe
 *
	gpùes_live
 = 
NULL
;

23 
	gpùes_u£d
 = 0;

24 
	gpùes_‰ì
 = 0;

27 
	$öô_pùe
()

29 
poﬁ2_pùe
 = 
	`¸óã_poﬁ
("pùe", (
pùe
), 
MEM_F_SHARED
);

30 
pùes_u£d
 = 0;

31 
pùes_‰ì
 = 0;

32 
	}
}

37 
pùe
 *
	$gë_pùe
()

39 
pùe
 *
ªt
;

40 
pùefd
[2];

42 i‡(
	`likñy
(
pùes_live
)) {

43 
ªt
 = 
pùes_live
;

44 
pùes_live
 =Öùes_live->
√xt
;

45 
pùes_‰ì
--;

46 
pùes_u£d
++;

47  
ªt
;

50 i‡(
pùes_u£d
 >
globÆ
.
maxpùes
)

51  
NULL
;

53 
ªt
 = 
	`poﬁ_Æloc2
(
poﬁ2_pùe
);

54 i‡(!
ªt
)

55  
NULL
;

57 i‡(
	`pùe
(
pùefd
) < 0) {

58 
	`poﬁ_‰ì2
(
poﬁ2_pùe
, 
ªt
);

59  
NULL
;

61 
ªt
->
d©a
 = 0;

62 
ªt
->
¥od
 = 
pùefd
[1];

63 
ªt
->
c⁄s
 = 
pùefd
[0];

64 
ªt
->
√xt
 = 
NULL
;

65 
pùes_u£d
++;

66  
ªt
;

67 
	}
}

72 
	$kûl_pùe
(
pùe
 *
p
)

74 
	`˛o£
(
p
->
¥od
);

75 
	`˛o£
(
p
->
c⁄s
);

76 
	`poﬁ_‰ì2
(
poﬁ2_pùe
, 
p
);

77 
pùes_u£d
--;

79 
	}
}

85 
	$put_pùe
(
pùe
 *
p
)

87 i‡(
p
->
d©a
) {

88 
	`kûl_pùe
(
p
);

91 
p
->
√xt
 = 
pùes_live
;

92 
pùes_live
 = 
p
;

93 
pùes_‰ì
++;

94 
pùes_u£d
--;

95 
	}
}

98 
__©åibuã__
((
c⁄°ru˘‹
))

99 
	$__pùe_moduÀ_öô
()

101 
	`öô_pùe
();

102 
	}
}

	@src/proto_http.c

13 
	~<˘y≥.h
>

14 
	~<î∫o.h
>

15 
	~<f˙é.h
>

16 
	~<°dio.h
>

17 
	~<°dlib.h
>

18 
	~<°rög.h
>

19 
	~<sy¶og.h
>

20 
	~<time.h
>

22 
	~<sys/sockë.h
>

23 
	~<sys/°©.h
>

24 
	~<sys/ty≥s.h
>

26 
	~<comm⁄/≠p£ssi⁄.h
>

27 
	~<comm⁄/ba£64.h
>

28 
	~<comm⁄/com∑t.h
>

29 
	~<comm⁄/c⁄fig.h
>

30 
	~<comm⁄/debug.h
>

31 
	~<comm⁄/mem‹y.h
>

32 
	~<comm⁄/möi-˛i°.h
>

33 
	~<comm⁄/°™d¨d.h
>

34 
	~<comm⁄/ticks.h
>

35 
	~<comm⁄/time.h
>

36 
	~<comm⁄/uri_auth.h
>

37 
	~<comm⁄/vîsi⁄.h
>

39 
	~<ty≥s/ˇ±uª.h
>

40 
	~<ty≥s/globÆ.h
>

42 
	~<¥Ÿo/a˛.h
>

43 
	~<¥Ÿo/auth.h
>

44 
	~<¥Ÿo/backíd.h
>

45 
	~<¥Ÿo/buf„rs.h
>

46 
	~<¥Ÿo/checks.h
>

47 
	~<¥Ÿo/˛õ¡.h
>

48 
	~<¥Ÿo/dump°©s.h
>

49 
	~<¥Ÿo/fd.h
>

50 
	~<¥Ÿo/log.h
>

51 
	~<¥Ÿo/hdr_idx.h
>

52 
	~<¥Ÿo/∑âîn.h
>

53 
	~<¥Ÿo/¥Ÿo_t˝.h
>

54 
	~<¥Ÿo/¥Ÿo_hâp.h
>

55 
	~<¥Ÿo/¥oxy.h
>

56 
	~<¥Ÿo/queue.h
>

57 
	~<¥Ÿo/£rvî.h
>

58 
	~<¥Ÿo/£ssi⁄.h
>

59 
	~<¥Ÿo/°ªam_öãrÁ˚.h
>

60 
	~<¥Ÿo/°ªam_sock.h
>

61 
	~<¥Ÿo/èsk.h
>

63 c⁄° 
	gHTTP_100
[] =

66 c⁄° 
chunk
 
	ghâp_100_chunk
 = {

67 .
°r
 = (*)&
HTTP_100
,

68 .
	gÀn
 = (
HTTP_100
)-1

72 c⁄° 
	gHTTP_200
[] =

80 c⁄° 
chunk
 
	ghâp_200_chunk
 = {

81 .
°r
 = (*)&
HTTP_200
,

82 .
	gÀn
 = (
HTTP_200
)-1

86 c⁄° *
	gHTTP_301
 =

92 c⁄° *
	gHTTP_302
 =

99 c⁄° *
	gHTTP_303
 =

106 c⁄° *
	gHTTP_401_fmt
 =

115 c⁄° *
	gHTTP_407_fmt
 =

125 c⁄° 
	ghâp_îr_codes
[
HTTP_ERR_SIZE
] = {

126 [
HTTP_ERR_400
] = 400,

127 [
HTTP_ERR_403
] = 403,

128 [
HTTP_ERR_408
] = 408,

129 [
HTTP_ERR_500
] = 500,

130 [
HTTP_ERR_502
] = 502,

131 [
HTTP_ERR_503
] = 503,

132 [
HTTP_ERR_504
] = 504,

135 c⁄° *
	ghâp_îr_msgs
[
HTTP_ERR_SIZE
] = {

136 [
HTTP_ERR_400
] =

144 [
HTTP_ERR_403
] =

152 [
HTTP_ERR_408
] =

160 [
HTTP_ERR_500
] =

168 [
HTTP_ERR_502
] =

176 [
HTTP_ERR_503
] =

184 [
HTTP_ERR_504
] =

197 
chunk
 
	ghâp_îr_chunks
[
HTTP_ERR_SIZE
];

199 
	#FD_SETS_ARE_BITFIELDS


	)

200 #ifde‡
FD_SETS_ARE_BITFIELDS


208 
fd_£t
 
	ghdr_ícode_m≠
[((fd_set) > (256/8)) ? 1 : ((256/8) / (fd_set))];

209 
fd_£t
 
	guæ_ícode_m≠
[((fd_set) > (256/8)) ? 1 : ((256/8) / (fd_set))];

215 
	$öô_¥Ÿo_hâp
()

217 
i
;

218 *
tmp
;

219 
msg
;

221 
msg
 = 0; msg < 
HTTP_ERR_SIZE
; msg++) {

222 i‡(!
hâp_îr_msgs
[
msg
]) {

223 
	`AÀπ
("I¡î«»îr‹:Çÿmesßgêdeföed f‹ HTTPÑëu∫ codê%d. Ab‹tög.\n", 
msg
);

224 
	`ab‹t
();

227 
hâp_îr_chunks
[
msg
].
°r
 = (*)
hâp_îr_msgs
[msg];

228 
hâp_îr_chunks
[
msg
].
Àn
 = 
	`°æí
(
hâp_îr_msgs
[msg]);

236 
	`mem£t
(
hdr_ícode_m≠
, 0, (hdr_encode_map));

237 
	`mem£t
(
uæ_ícode_m≠
, 0, (url_encode_map));

238 
i
 = 0; i < 32; i++) {

239 
	`FD_SET
(
i
, 
hdr_ícode_m≠
);

240 
	`FD_SET
(
i
, 
uæ_ícode_m≠
);

242 
i
 = 127; i < 256; i++) {

243 
	`FD_SET
(
i
, 
hdr_ícode_m≠
);

244 
	`FD_SET
(
i
, 
uæ_ícode_m≠
);

247 
tmp
 = "\"#{|}";

248 *
tmp
) {

249 
	`FD_SET
(*
tmp
, 
hdr_ícode_m≠
);

250 
tmp
++;

253 
tmp
 = "\"#";

254 *
tmp
) {

255 
	`FD_SET
(*
tmp
, 
uæ_ícode_m≠
);

256 
tmp
++;

260 
poﬁ2_ªquri
 = 
	`¸óã_poﬁ
("ªquri", 
REQURI_LEN
, 
MEM_F_SHARED
);

261 
poﬁ2_ˇ±uª
 = 
	`¸óã_poﬁ
("ˇ±uª", 
CAPTURE_LEN
, 
MEM_F_SHARED
);

262 
	}
}

268 
	shâp_mëhod_desc
 {

269 
hâp_mëh_t
 
	mmëh
;

270 
	mÀn
;

271 c⁄° 
	mãxt
[8];

274 c⁄° 
hâp_mëhod_desc
 
	ghâp_mëhods
[26][3] = {

276 [0] = { .
mëh
 = 
HTTP_METH_CONNECT
 , .
	gÀn
=7, .
	gãxt
="CONNECT" },

279 [0] = { .
mëh
 = 
HTTP_METH_DELETE
 , .
	gÀn
=6, .
	gãxt
="DELETE" },

282 [0] = { .
mëh
 = 
HTTP_METH_GET
 , .
	gÀn
=3, .
	gãxt
="GET" },

285 [0] = { .
mëh
 = 
HTTP_METH_HEAD
 , .
	gÀn
=4, .
	gãxt
="HEAD" },

288 [0] = { .
mëh
 = 
HTTP_METH_POST
 , .
	gÀn
=4, .
	gãxt
="POST" },

289 [1] = { .
mëh
 = 
HTTP_METH_PUT
 , .
	gÀn
=3, .
	gãxt
="PUT" },

292 [0] = { .
mëh
 = 
HTTP_METH_TRACE
 , .
	gÀn
=5, .
	gãxt
="TRACE" },

304 c⁄° 
	ghâp_is_•ht
[256] = {

308 c⁄° 
	ghâp_is_¸lf
[256] = {

312 c⁄° 
	ghâp_is_lws
[256] = {

317 c⁄° 
	ghâp_is_£p
[256] = {

325 c⁄° 
	ghâp_is_˘l
[256] = {

335 c⁄° 
	ghâp_is_tokí
[256] = {

367 c⁄° 
	ghâp_is_vî_tokí
[256] = {

378 #i‡
deföed
(
DEBUG_FSM
)

379 
	$hâp_sûít_debug
(
löe
, 
£ssi⁄
 *
s
)

381 
size
 = 0;

382 
size
 +
	`¢¥ötf
(
åash
 + size, (trash) - size,

384 
löe
,

385 
s
->
si
[0].
°©e
, s->si[0].
fd
, s->
txn
.
ªq
.
msg_°©e
, s->ªq->
Êags
, s->ªq->
™Æy£rs
,

386 
s
->
ªq
->
d©a
, s->ªq->
size
, s->ªq->
l
, s->ªq->
w
, s->ªq->
r
, s->ªq->
Ã
, s->ªq->
£nd_max
, s->ªq->
to_f‹w¨d
, s->
txn
.
Êags
);

387 
	`wrôe
(-1, 
åash
, 
size
);

388 
size
 = 0;

389 
size
 +
	`¢¥ötf
(
åash
 + size, (trash) - size,

391 
löe
,

392 
s
->
si
[1].
°©e
, s->si[1].
fd
, s->
txn
.
r•
.
msg_°©e
, s->
ªp
->
Êags
, s->ªp->
™Æy£rs
,

393 
s
->
ªp
->
d©a
, s->ªp->
size
, s->ªp->
l
, s->ªp->
w
, s->ªp->
r
, s->ªp->
Ã
, s->ªp->
£nd_max
, s->ªp->
to_f‹w¨d
);

395 
	`wrôe
(-1, 
åash
, 
size
);

396 
	}
}

398 
	#hâp_sûít_debug
(
l
,
s
Ëdÿ{ } 0)

	)

408 
	$hâp_hódî_add_èû
(
buf„r
 *
b
, 
hâp_msg
 *
msg
,

409 
hdr_idx
 *hdr_idx, c⁄° *
ãxt
)

411 
byãs
, 
Àn
;

413 
Àn
 = 
	`°æí
(
ãxt
);

414 
byãs
 = 
	`buf„r_ö£π_löe2
(
b
, b->
d©a
 + 
msg
->
eoh
, 
ãxt
, 
Àn
);

415 i‡(!
byãs
)

417 
	`hâp_msg_move_íd
(
msg
, 
byãs
);

418  
	`hdr_idx_add
(
Àn
, 1, 
hdr_idx
, hdr_idx->
èû
);

419 
	}
}

429 
	$hâp_hódî_add_èû2
(
buf„r
 *
b
, 
hâp_msg
 *
msg
,

430 
hdr_idx
 *hdr_idx, c⁄° *
ãxt
, 
Àn
)

432 
byãs
;

434 
byãs
 = 
	`buf„r_ö£π_löe2
(
b
, b->
d©a
 + 
msg
->
eoh
, 
ãxt
, 
Àn
);

435 i‡(!
byãs
)

437 
	`hâp_msg_move_íd
(
msg
, 
byãs
);

438  
	`hdr_idx_add
(
Àn
, 1, 
hdr_idx
, hdr_idx->
èû
);

439 
	}
}

448 
	$hâp_hódî_m©ch2
(c⁄° *
hdr
, c⁄° *
íd
,

449 c⁄° *
«me
, 
Àn
)

451 c⁄° *
vÆ
;

453 i‡(
hdr
 + 
Àn
 >
íd
)

455 i‡(
hdr
[
Àn
] != ':')

457 i‡(
	`°∫ˇ£cmp
(
hdr
, 
«me
, 
Àn
) != 0)

459 
vÆ
 = 
hdr
 + 
Àn
 + 1;

460 
vÆ
 < 
íd
 && 
	`HTTP_IS_SPHT
(*val))

461 
vÆ
++;

462 i‡((
vÆ
 >
íd
Ë&& (
Àn
 + 2 <íd - 
hdr
))

463  
Àn
 + 2;

464  
vÆ
 - 
hdr
;

465 
	}
}

471 *
	$föd_hdr_vÆue_íd
(*
s
, c⁄° *
e
)

473 
quŸed
, 
qd∑ú
;

475 
quŸed
 = 
qd∑ú
 = 0;

476 ; 
s
 < 
e
; s++) {

477 i‡(
qd∑ú
) qdpair = 0;

478 i‡(
quŸed
) {

479 i‡(*
s
 ='\\'Ë
qd∑ú
 = 1;

480 i‡(*
s
 ='"'Ë
quŸed
 = 0;

482 i‡(*
s
 ='"'Ë
quŸed
 = 1;

483 i‡(*
s
 == ',')  s;

485  
s
;

486 
	}
}

498 
	$hâp_föd_hódî2
(c⁄° *
«me
, 
Àn
,

499 *
sﬁ
, 
hdr_idx
 *
idx
,

500 
hdr_˘x
 *
˘x
)

502 *
eﬁ
, *
sov
;

503 
cur_idx
, 
ﬁd_idx
;

505 
cur_idx
 = 
˘x
->
idx
;

506 i‡(
cur_idx
) {

510 
sﬁ
 = 
˘x
->
löe
;

511 
˘x
->
dñ
 = ctx->
vÆ
 + ctx->
vÀn
;

512 
sov
 = 
sﬁ
 + 
˘x
->
dñ
;

513 
eﬁ
 = 
sﬁ
 + 
idx
->
v
[
cur_idx
].
Àn
;

515 i‡(
sov
 >
eﬁ
)

517 
√xt_hdr
;

522 
sov
++;

523 
sov
 < 
eﬁ
 && 
hâp_is_lws
[()*sov])

524 
sov
++;

526 
ªtu∫_hdr
;

530 
sﬁ
 +
	`hdr_idx_fú°_pos
(
idx
);

531 
ﬁd_idx
 = 0;

532 
cur_idx
 = 
	`hdr_idx_fú°_idx
(
idx
);

533 
cur_idx
) {

534 
eﬁ
 = 
sﬁ
 + 
idx
->
v
[
cur_idx
].
Àn
;

536 i‡(
Àn
 == 0) {

539 
sﬁ
 + 
Àn
 < 
eﬁ
 && sol[len] != ':')

540 
Àn
++;

541 
«me
 = 
sﬁ
;

544 i‡((
Àn
 < 
eﬁ
 - 
sﬁ
) &&

545 (
sﬁ
[
Àn
] == ':') &&

546 (
	`°∫ˇ£cmp
(
sﬁ
, 
«me
, 
Àn
) == 0)) {

547 
˘x
->
dñ
 = 
Àn
;

548 
sov
 = 
sﬁ
 + 
Àn
 + 1;

549 
sov
 < 
eﬁ
 && 
hâp_is_lws
[()*sov])

550 
sov
++;

552 
˘x
->
löe
 = 
sﬁ
;

553 
˘x
->
¥ev
 = 
ﬁd_idx
;

554 
ªtu∫_hdr
:

555 
˘x
->
idx
 = 
cur_idx
;

556 
˘x
->
vÆ
 = 
sov
 - 
sﬁ
;

558 
eﬁ
 = 
	`föd_hdr_vÆue_íd
(
sov
,Éol);

559 
˘x
->
vÀn
 = 
eﬁ
 - 
sov
;

562 
√xt_hdr
:

563 
sﬁ
 = 
eﬁ
 + 
idx
->
v
[
cur_idx
].
¸
 + 1;

564 
ﬁd_idx
 = 
cur_idx
;

565 
cur_idx
 = 
idx
->
v
[cur_idx].
√xt
;

568 
	}
}

570 
	$hâp_föd_hódî
(c⁄° *
«me
,

571 *
sﬁ
, 
hdr_idx
 *
idx
,

572 
hdr_˘x
 *
˘x
)

574  
	`hâp_föd_hódî2
(
«me
, 
	`°æí
“ame), 
sﬁ
, 
idx
, 
˘x
);

575 
	}
}

585 
	$hâp_ªmove_hódî2
(
hâp_msg
 *
msg
, 
buf„r
 *
buf
,

586 
hdr_idx
 *
idx
, 
hdr_˘x
 *
˘x
)

588 
cur_idx
 = 
˘x
->
idx
;

589 *
sﬁ
 = 
˘x
->
löe
;

590 
hdr_idx_ñem
 *
hdr
;

591 
dñè
, 
skù_comma
;

593 i‡(!
cur_idx
)

596 
hdr
 = &
idx
->
v
[
cur_idx
];

597 i‡(
sﬁ
[
˘x
->
dñ
] =':' && ctx->
vÆ
 + ctx->
vÀn
 =
hdr
->
Àn
) {

599 
dñè
 = 
	`buf„r_ª∂a˚2
(
buf
, 
sﬁ
, sﬁ + 
hdr
->
Àn
 + hdr->
¸
 + 1, 
NULL
, 0);

600 
	`hâp_msg_move_íd
(
msg
, 
dñè
);

601 
idx
->
u£d
--;

602 
hdr
->
Àn
 = 0;

603 
idx
->
v
[
˘x
->
¥ev
].
√xt
 = idx->v[ctx->idx].next;

604 
˘x
->
idx
 = ctx->
¥ev
;

605 
˘x
->
löe
 -
idx
->
v
[˘x->idx].
Àn
 + idx->v[
cur_idx
].
¸
 + 1;

606 
˘x
->
vÆ
 = 
idx
->
v
[˘x->idx].
Àn
;

607 
˘x
->
vÀn
 = 0;

608  
˘x
->
idx
;

616 
skù_comma
 = (
˘x
->
vÆ
 + ctx->
vÀn
 =
hdr
->
Àn
) ? 0 : 1;

617 
dñè
 = 
	`buf„r_ª∂a˚2
(
buf
, 
sﬁ
 + 
˘x
->
dñ
 + 
skù_comma
,

618 
sﬁ
 + 
˘x
->
vÆ
 + ctx->
vÀn
 + 
skù_comma
,

619 
NULL
, 0);

620 
hdr
->
Àn
 +
dñè
;

621 
	`hâp_msg_move_íd
(
msg
, 
dñè
);

622 
˘x
->
vÆ
 = ctx->
dñ
;

623 
˘x
->
vÀn
 = 0;

624  
˘x
->
idx
;

625 
	}
}

633 
	$hâp_£rvî_îr‹
(
£ssi⁄
 *
t
, 
°ªam_öãrÁ˚
 *
si
,

634 
îr
, 
fö°
, 
°©us
, c⁄° 
chunk
 *
msg
)

636 
	`buf„r_auto_ªad
(
si
->
ob
);

637 
	`buf„r_ab‹t
(
si
->
ob
);

638 
	`buf„r_auto_˛o£
(
si
->
ob
);

639 
	`buf„r_îa£
(
si
->
ob
);

640 
	`buf„r_auto_˛o£
(
si
->
ib
);

641 
	`buf„r_auto_ªad
(
si
->
ib
);

642 i‡(
°©us
 > 0 && 
msg
) {

643 
t
->
txn
.
°©us
 = status;

644 
	`buf„r_wrôe
(
si
->
ib
, 
msg
->
°r
, msg->
Àn
);

646 i‡(!(
t
->
Êags
 & 
SN_ERR_MASK
))

647 
t
->
Êags
 |
îr
;

648 i‡(!(
t
->
Êags
 & 
SN_FINST_MASK
))

649 
t
->
Êags
 |
fö°
;

650 
	}
}

656 
chunk
 *
	$îr‹_mesßge
(
£ssi⁄
 *
s
, 
msgnum
)

658 i‡(
s
->
be
->
îrmsg
[
msgnum
].
°r
)

659  &
s
->
be
->
îrmsg
[
msgnum
];

660 i‡(
s
->
„
->
îrmsg
[
msgnum
].
°r
)

661  &
s
->
„
->
îrmsg
[
msgnum
];

663  &
hâp_îr_chunks
[
msgnum
];

664 
	}
}

670 
hâp_mëh_t
 
	$föd_hâp_mëh
(c⁄° *
°r
, c⁄° 
Àn
)

672 
m
;

673 c⁄° 
hâp_mëhod_desc
 *
h
;

675 
m
 = (()*
°r
 - 'A');

677 i‡(
m
 < 26) {

678 
h
 = 
hâp_mëhods
[
m
]; h->
Àn
 > 0; h++) {

679 i‡(
	`u∆ikñy
(
h
->
Àn
 !=Üen))

681 i‡(
	`likñy
(
	`memcmp
(
°r
, 
h
->
ãxt
, h->
Àn
) == 0))

682  
h
->
mëh
;

684  
HTTP_METH_OTHER
;

686  
HTTP_METH_NONE
;

688 
	}
}

695 
	$hâp_gë_∑th
(
hâp_txn
 *
txn
)

697 *
±r
, *
íd
;

699 
±r
 = 
txn
->
ªq
.
sﬁ
 +Åxn->ªq.
¶
.
rq
.
u
;

700 
íd
 = 
±r
 + 
txn
->
ªq
.
¶
.
rq
.
u_l
;

702 i‡(
±r
 >
íd
)

703  
NULL
;

709 i‡(*
±r
 == '*')

710  
NULL
;

712 i‡(
	`ißÕha
(()*
±r
)) {

714 
±r
++;

715 
±r
 < 
íd
 &&

716 (
	`iß um
(()*
±r
) || *ptr == '+' || *ptr == '-' || *ptr == '.'))

717 
±r
++;

719 i‡(
±r
 =
íd
 || *ptr++ != ':')

720  
NULL
;

721 i‡(
±r
 =
íd
 || *ptr++ != '/')

722  
NULL
;

723 i‡(
±r
 =
íd
 || *ptr++ != '/')

724  
NULL
;

728 
±r
 < 
íd
 && *ptr != '/')

729 
±r
++;

731 i‡(
±r
 =
íd
)

732  
NULL
;

735  
±r
;

736 
	}
}

742 
	$≥rf‹m_hâp_ªdúe˘
(
£ssi⁄
 *
s
, 
°ªam_öãrÁ˚
 *
si
)

744 
hâp_txn
 *
txn
;

745 
chunk
 
rdr
;

746 *
∑th
;

747 
Àn
;

750 
rdr
.
Àn
 = 
	`°æí
(
HTTP_302
);

751 
rdr
.
°r
 = 
åash
;

752 
rdr
.
size
 = (
åash
);

753 
	`mem˝y
(
rdr
.
°r
, 
HTTP_302
,Ñdr.
Àn
);

756 i‡(
rdr
.
Àn
 + 
s
->
§v
->
rdr_Àn
 >Ñdr.
size
)

760 i‡(
s
->
§v
->
rdr_Àn
 !1 || *s->§v->
rdr_pfx
 != '/') {

761 
	`mem˝y
(
rdr
.
°r
 +Ñdr.
Àn
, 
s
->
§v
->
rdr_pfx
, s->§v->
rdr_Àn
);

762 
rdr
.
Àn
 +
s
->
§v
->
rdr_Àn
;

766 
txn
 = &
s
->txn;

767 
∑th
 = 
	`hâp_gë_∑th
(
txn
);

768 i‡(!
∑th
)

771 
Àn
 = 
txn
->
ªq
.
¶
.
rq
.
u_l
 + (txn->ªq.
sﬁ
 +Åxn->ªq.¶.rq.
u
Ë- 
∑th
;

772 i‡(
rdr
.
Àn
 +Üí >Ñdr.
size
 - 4)

775 
	`mem˝y
(
rdr
.
°r
 +Ñdr.
Àn
, 
∑th
,Üen);

776 
rdr
.
Àn
 +=Üen;

778 i‡(
	`u∆ikñy
(
txn
->
Êags
 & 
TX_USE_PX_CONN
)) {

779 
	`mem˝y
(
rdr
.
°r
 +Ñdr.
Àn
, "\r\nProxy-Connection: close\r\n\r\n", 29);

780 
rdr
.
Àn
 += 29;

782 
	`mem˝y
(
rdr
.
°r
 +Ñdr.
Àn
, "\r\nConnection: close\r\n\r\n", 23);

783 
rdr
.
Àn
 += 23;

787 
si
->
	`shuå
(si);

788 
si
->
	`shutw
(si);

789 
si
->
îr_ty≥
 = 
SI_ET_NONE
;

790 
si
->
îr_loc
 = 
NULL
;

791 
si
->
°©e
 = 
SI_ST_CLO
;

794 
	`hâp_£rvî_îr‹
(
s
, 
si
, 
SN_ERR_PRXCOND
, 
SN_FINST_C
, 302, &
rdr
);

797 i‡(
s
->
§v
)

798 
	`§v_öc_£ss_˘r
(
s
->
§v
);

799 
	}
}

810 
	$hâp_ªtu∫_§v_îr‹
(
£ssi⁄
 *
s
, 
°ªam_öãrÁ˚
 *
si
)

812 
îr_ty≥
 = 
si
->err_type;

814 i‡(
îr_ty≥
 & 
SI_ET_QUEUE_ABRT
)

815 
	`hâp_£rvî_îr‹
(
s
, 
si
, 
SN_ERR_CLICL
, 
SN_FINST_Q
,

816 503, 
	`îr‹_mesßge
(
s
, 
HTTP_ERR_503
));

817 i‡(
îr_ty≥
 & 
SI_ET_CONN_ABRT
)

818 
	`hâp_£rvî_îr‹
(
s
, 
si
, 
SN_ERR_CLICL
, 
SN_FINST_C
,

819 503, 
	`îr‹_mesßge
(
s
, 
HTTP_ERR_503
));

820 i‡(
îr_ty≥
 & 
SI_ET_QUEUE_TO
)

821 
	`hâp_£rvî_îr‹
(
s
, 
si
, 
SN_ERR_SRVTO
, 
SN_FINST_Q
,

822 503, 
	`îr‹_mesßge
(
s
, 
HTTP_ERR_503
));

823 i‡(
îr_ty≥
 & 
SI_ET_QUEUE_ERR
)

824 
	`hâp_£rvî_îr‹
(
s
, 
si
, 
SN_ERR_SRVCL
, 
SN_FINST_Q
,

825 503, 
	`îr‹_mesßge
(
s
, 
HTTP_ERR_503
));

826 i‡(
îr_ty≥
 & 
SI_ET_CONN_TO
)

827 
	`hâp_£rvî_îr‹
(
s
, 
si
, 
SN_ERR_SRVTO
, 
SN_FINST_C
,

828 503, 
	`îr‹_mesßge
(
s
, 
HTTP_ERR_503
));

829 i‡(
îr_ty≥
 & 
SI_ET_CONN_ERR
)

830 
	`hâp_£rvî_îr‹
(
s
, 
si
, 
SN_ERR_SRVCL
, 
SN_FINST_C
,

831 503, 
	`îr‹_mesßge
(
s
, 
HTTP_ERR_503
));

833 
	`hâp_£rvî_îr‹
(
s
, 
si
, 
SN_ERR_INTERNAL
, 
SN_FINST_C
,

834 500, 
	`îr‹_mesßge
(
s
, 
HTTP_ERR_500
));

835 
	}
}

837 c⁄° 
£ss_ãrm_c⁄d
[8];

838 c⁄° 
£ss_fö_°©e
[8];

839 c⁄° *
m⁄th«me
[12];

840 c⁄° 
	g£ss_cookõ
[8] = "NIDVEO67";

841 c⁄° 
	g£ss_£t_cookõ
[8] = "NPDIRU67";

844 
poﬁ_hód
 *
	gpoﬁ2_ªquri
;

845 
poﬁ_hód
 *
	gpoﬁ2_ˇ±uª
;

847 
	$hâp_£ss_˛Êog
(
£ssi⁄
 *
s
)

849 
≤
[
INET6_ADDRSTRLEN
 + 
	`°æí
(":65535")];

850 
¥oxy
 *
„
 = 
s
->fe;

851 
¥oxy
 *
be
 = 
s
->be;

852 
¥oxy
 *
¥x_log
;

853 
hâp_txn
 *
txn
 = &
s
->txn;

854 
tﬁog
, 
Àvñ
, 
îr
;

855 *
uri
, *
h
;

856 *
svid
;

857 
tm
Åm;

858 
tm∂öe
[
MAX_SYSLOG_LEN
];

859 
hdr
;

860 
size_t
 
w
;

861 
t_ªque°
;

863 
¥x_log
 = 
„
;

864 
îr
 = (
s
->
Êags
 & (
SN_ERR_MASK
 | 
SN_REDISP
)) ||

865 (
s
->
c⁄n_ªåõs
 !
be
->conn_retries) ||

866 
txn
->
°©us
 >= 500;

868 i‡(
s
->
˛i_addr
.
ss_Ámûy
 =
AF_INET
)

869 
	`öë_¡›
(
AF_INET
,

870 (c⁄° *)&((
sockaddr_ö
 *)&
s
->
˛i_addr
)->
sö_addr
,

871 
≤
, (pn));

873 
	`öë_¡›
(
AF_INET6
,

874 (c⁄° *)&((
sockaddr_ö6
 *)(&
s
->
˛i_addr
))->
sö6_addr
,

875 
≤
, (pn));

877 
	`gë_gmtime
(
s
->
logs
.
ac˚±_d©e
.
tv_£c
, &
tm
);

880 
tﬁog
 = 
„
->
to_log
;

882 
h
 = 
tm∂öe
;

884 
w
 = 
	`¢¥ötf
(
h
, (
tm∂öe
),

886 
≤
,

887 
tm
.
tm_mday
, 
m⁄th«me
[tm.
tm_m⁄
],Åm.
tm_yór
+1900,

888 
tm
.
tm_hour
,Åm.
tm_mö
,Åm.
tm_£c
);

889 i‡(
w
 < 0 || w >(
tm∂öe
Ë- (
h
 -Åmpline))

890 
åunc
;

891 
h
 +
w
;

893 i‡(
h
 >
tm∂öe
 + (tmpline) - 4)

894 
åunc
;

896 *(
h
++) = ' ';

897 *(
h
++) = '\"';

898 
uri
 = 
txn
->uri ?Åxn->uri : "<BADREQ>";

899 
h
 = 
	`ícode_°rög
(h, 
tm∂öe
 + (tmpline) - 1,

900 '#', 
uæ_ícode_m≠
, 
uri
);

901 *(
h
++) = '\"';

903 
w
 = 
	`¢¥ötf
(
h
, (
tm∂öe
Ë- (h -Åm∂öe), " %d %Œd", 
txn
->
°©us
, 
s
->
logs
.
byãs_out
);

904 i‡(
w
 < 0 || w >(
tm∂öe
Ë- (
h
 -Åmpline))

905 
åunc
;

906 
h
 +
w
;

908 i‡(
h
 >
tm∂öe
 + (tmpline) - 9)

909 
åunc
;

910 
	`mem˝y
(
h
, " \"-\" \"-\"", 8);

911 
h
 += 8;

913 
w
 = 
	`¢¥ötf
(
h
, (
tm∂öe
) - (h -Åmpline),

915 (
s
->
˛i_addr
.
ss_Ámûy
 =
AF_INET
) ?

916 
	`¡ohs
(((
sockaddr_ö
 *)&
s
->
˛i_addr
)->
sö_p‹t
) :

917 
	`¡ohs
(((
sockaddr_ö6
 *)&
s
->
˛i_addr
)->
sö6_p‹t
),

918 ()
s
->
logs
.
ac˚±_d©e
.
tv_u£c
/1000);

919 i‡(
w
 < 0 || w >(
tm∂öe
Ë- (
h
 -Åmpline))

920 
åunc
;

921 
h
 +
w
;

923 
w
 = 
	`°æí
(
„
->
id
);

924 i‡(
h
 >
tm∂öe
 + —m∂öeË- 4 - 
w
)

925 
åunc
;

926 *(
h
++) = ' ';

927 *(
h
++) = '\"';

928 
	`mem˝y
(
h
, 
„
->
id
, 
w
);

929 
h
 +
w
;

930 *(
h
++) = '\"';

932 
w
 = 
	`°æí
(
be
->
id
);

933 i‡(
h
 >
tm∂öe
 + —m∂öeË- 4 - 
w
)

934 
åunc
;

935 *(
h
++) = ' ';

936 *(
h
++) = '\"';

937 
	`mem˝y
(
h
, 
be
->
id
, 
w
);

938 
h
 +
w
;

939 *(
h
++) = '\"';

941 
svid
 = (
tﬁog
 & 
LW_SVID
) ?

942 (
s
->
d©a_sour˚
 !
DATA_SRC_STATS
) ?

943 (
s
->
§v
 !
NULL
Ë? s->§v->
id
 : "<NOSRV>" : "<STATS>" : "-";

945 
w
 = 
	`°æí
(
svid
);

946 i‡(
h
 >
tm∂öe
 + —m∂öeË- 4 - 
w
)

947 
åunc
;

948 *(
h
++) = ' ';

949 *(
h
++) = '\"';

950 
	`mem˝y
(
h
, 
svid
, 
w
);

951 
h
 +
w
;

952 *(
h
++) = '\"';

954 
t_ªque°
 = -1;

955 i‡(
	`tv_isge
(&
s
->
logs
.
tv_ªque°
, &s->logs.
tv_ac˚±
))

956 
t_ªque°
 = 
	`tv_ms_ñ≠£d
(&
s
->
logs
.
tv_ac˚±
, &s->logs.
tv_ªque°
);

957 
w
 = 
	`¢¥ötf
(
h
, (
tm∂öe
) - (h -Åmpline),

959 
t_ªque°
,

960 (
s
->
logs
.
t_queue
 >0Ë? s->logs.t_queuê- 
t_ªque°
 : -1,

961 (
s
->
logs
.
t_c⁄√˘
 >0Ë? s->logs.t_c⁄√˘ - s->logs.
t_queue
 : -1,

962 (
s
->
logs
.
t_d©a
 >0Ë? s->logs.t_d©®- s->logs.
t_c⁄√˘
 : -1,

963 
s
->
logs
.
t_˛o£
);

964 i‡(
w
 < 0 || w >(
tm∂öe
Ë- (
h
 -Åmpline))

965 
åunc
;

966 
h
 +
w
;

968 i‡(
h
 >
tm∂öe
 + (tmpline) - 8)

969 
åunc
;

970 *(
h
++) = ' ';

971 *(
h
++) = '\"';

972 *(
h
++Ë
£ss_ãrm_c⁄d
[(
s
->
Êags
 & 
SN_ERR_MASK
Ë>> 
SN_ERR_SHIFT
];

973 *(
h
++Ë
£ss_fö_°©e
[(
s
->
Êags
 & 
SN_FINST_MASK
Ë>> 
SN_FINST_SHIFT
];

974 *(
h
++Ë(
be
->
›ti⁄s
 & 
PR_O_COOK_ANY
Ë? 
£ss_cookõ
[(
txn
->
Êags
 & 
TX_CK_MASK
Ë>> 
TX_CK_SHIFT
] : '-',

975 *(
h
++Ë(
be
->
›ti⁄s
 & 
PR_O_COOK_ANY
Ë? 
£ss_£t_cookõ
[(
txn
->
Êags
 & 
TX_SCK_MASK
Ë>> 
TX_SCK_SHIFT
] : '-';

976 *(
h
++) = '\"';

978 
w
 = 
	`¢¥ötf
(
h
, (
tm∂öe
) - (h -Åmpline),

980 
a˘c⁄n
, 
„
->
„c⁄n
, 
be
->
bec⁄n
, 
s
->
§v
 ? s->§v->
cur_£ss
 : 0,

981 (
s
->
c⁄n_ªåõs
 > 0Ë? (
be
->conn_retries - s->conn_retries) : be->conn_retries,

982 
s
->
logs
.
§v_queue_size
, s->logs.
¥x_queue_size
);

984 i‡(
w
 < 0 || w >(
tm∂öe
Ë- (
h
 -Åmpline))

985 
åunc
;

986 
h
 +
w
;

988 i‡(
txn
->
˛i_cookõ
) {

989 
w
 = 
	`°æí
(
txn
->
˛i_cookõ
);

990 i‡(
h
 >
tm∂öe
 + —m∂öeË- 4 - 
w
)

991 
åunc
;

992 *(
h
++) = ' ';

993 *(
h
++) = '\"';

994 
	`mem˝y
(
h
, 
txn
->
˛i_cookõ
, 
w
);

995 
h
 +
w
;

996 *(
h
++) = '\"';

998 i‡(
h
 >
tm∂öe
 + (tmpline) - 5)

999 
åunc
;

1000 
	`mem˝y
(
h
, " \"-\"", 4);

1001 
h
 += 4;

1004 i‡(
txn
->
§v_cookõ
) {

1005 
w
 = 
	`°æí
(
txn
->
§v_cookõ
);

1006 i‡(
h
 >
tm∂öe
 + —m∂öeË- 4 - 
w
)

1007 
åunc
;

1008 *(
h
++) = ' ';

1009 *(
h
++) = '\"';

1010 
	`mem˝y
(
h
, 
txn
->
§v_cookõ
, 
w
);

1011 
h
 +
w
;

1012 *(
h
++) = '\"';

1014 i‡(
h
 >
tm∂öe
 + (tmpline) - 5)

1015 
åunc
;

1016 
	`mem˝y
(
h
, " \"-\"", 4);

1017 
h
 += 4;

1020 i‡((
„
->
to_log
 & 
LW_REQHDR
Ë&& 
txn
->
ªq
.
ˇp
) {

1021 
hdr
 = 0; hd∏< 
„
->
nb_ªq_ˇp
; hdr++) {

1022 i‡(
h
 > (
tm∂öe
) +Åmpline - 4)

1023 
åunc
;

1024 i‡(
txn
->
ªq
.
ˇp
[
hdr
] !
NULL
) {

1025 *(
h
++) = ' ';

1026 *(
h
++) = '\"';

1027 
h
 = 
	`ícode_°rög
(h, 
tm∂öe
 + (tmpline) - 2,

1028 '#', 
hdr_ícode_m≠
, 
txn
->
ªq
.
ˇp
[
hdr
]);

1029 *(
h
++) = '\"';

1031 
	`mem˝y
(
h
, " \"-\"", 4);

1032 
h
 += 4;

1037 i‡((
„
->
to_log
 & 
LW_RSPHDR
Ë&& 
txn
->
r•
.
ˇp
) {

1038 
hdr
 = 0; hd∏< 
„
->
nb_r•_ˇp
; hdr++) {

1039 i‡(
h
 > (
tm∂öe
) +Åmpline - 4)

1040 
åunc
;

1041 i‡(
txn
->
r•
.
ˇp
[
hdr
] !
NULL
) {

1042 *(
h
++) = ' ';

1043 *(
h
++) = '\"';

1044 
h
 = 
	`ícode_°rög
(h, 
tm∂öe
 + (tmpline) - 2,

1045 '#', 
hdr_ícode_m≠
, 
txn
->
r•
.
ˇp
[
hdr
]);

1046 *(
h
++) = '\"';

1048 
	`mem˝y
(
h
, " \"-\"", 4);

1049 
h
 += 4;

1054 
åunc
:

1055 *
h
 = '\0';

1057 
Àvñ
 = 
LOG_INFO
;

1058 i‡(
îr
 && (
„
->
›ti⁄s2
 & 
PR_O2_LOGERRORS
))

1059 
Àvñ
 = 
LOG_ERR
;

1061 
	`£nd_log
(
¥x_log
, 
Àvñ
, "%s\n", 
tm∂öe
);

1063 
s
->
logs
.
logwaô
 = 0;

1064 
	}
}

1070 
	$hâp_£ss_log
(
£ssi⁄
 *
s
)

1072 
≤
[
INET6_ADDRSTRLEN
 + 
	`°æí
(":65535")];

1073 
¥oxy
 *
„
 = 
s
->fe;

1074 
¥oxy
 *
be
 = 
s
->be;

1075 
¥oxy
 *
¥x_log
;

1076 
hâp_txn
 *
txn
 = &
s
->txn;

1077 
tﬁog
, 
Àvñ
, 
îr
;

1078 *
uri
, *
h
;

1079 *
svid
;

1080 
tm
Åm;

1081 
tm∂öe
[
MAX_SYSLOG_LEN
];

1082 
t_ªque°
;

1083 
hdr
;

1086 
îr
 = (
s
->
Êags
 & (
SN_ERR_MASK
 | 
SN_REDISP
)) ||

1087 (
s
->
c⁄n_ªåõs
 !
be
->conn_retries) ||

1088 
txn
->
°©us
 >= 500;

1089 i‡(!
îr
 && (
„
->
›ti⁄s2
 & 
PR_O2_NOLOGNORM
))

1092 i‡(
„
->
logÁc1
 < 0 && fe->
logÁc2
 < 0)

1094 
¥x_log
 = 
„
;

1096 i‡(
¥x_log
->
›ti⁄s2
 & 
PR_O2_CLFLOG
)

1097  
	`hâp_£ss_˛Êog
(
s
);

1099 i‡(
s
->
˛i_addr
.
ss_Ámûy
 =
AF_INET
)

1100 
	`öë_¡›
(
AF_INET
,

1101 (c⁄° *)&((
sockaddr_ö
 *)&
s
->
˛i_addr
)->
sö_addr
,

1102 
≤
, (pn));

1104 
	`öë_¡›
(
AF_INET6
,

1105 (c⁄° *)&((
sockaddr_ö6
 *)(&
s
->
˛i_addr
))->
sö6_addr
,

1106 
≤
, (pn));

1108 
	`gë_loˇ…ime
(
s
->
logs
.
ac˚±_d©e
.
tv_£c
, &
tm
);

1111 
tﬁog
 = 
„
->
to_log
;

1113 
h
 = 
tm∂öe
;

1114 i‡(
„
->
to_log
 & 
LW_REQHDR
 &&

1115 
txn
->
ªq
.
ˇp
 &&

1116 (
h
 < 
tm∂öe
 + (tmpline) - 10)) {

1117 *(
h
++) = ' ';

1118 *(
h
++) = '{';

1119 
hdr
 = 0; hd∏< 
„
->
nb_ªq_ˇp
; hdr++) {

1120 i‡(
hdr
)

1121 *(
h
++) = '|';

1122 i‡(
txn
->
ªq
.
ˇp
[
hdr
] !
NULL
)

1123 
h
 = 
	`ícode_°rög
(h, 
tm∂öe
 + (tmpline) - 7,

1124 '#', 
hdr_ícode_m≠
, 
txn
->
ªq
.
ˇp
[
hdr
]);

1126 *(
h
++) = '}';

1129 i‡(
„
->
to_log
 & 
LW_RSPHDR
 &&

1130 
txn
->
r•
.
ˇp
 &&

1131 (
h
 < 
tm∂öe
 + (tmpline) - 7)) {

1132 *(
h
++) = ' ';

1133 *(
h
++) = '{';

1134 
hdr
 = 0; hd∏< 
„
->
nb_r•_ˇp
; hdr++) {

1135 i‡(
hdr
)

1136 *(
h
++) = '|';

1137 i‡(
txn
->
r•
.
ˇp
[
hdr
] !
NULL
)

1138 
h
 = 
	`ícode_°rög
(h, 
tm∂öe
 + (tmpline) - 4,

1139 '#', 
hdr_ícode_m≠
, 
txn
->
r•
.
ˇp
[
hdr
]);

1141 *(
h
++) = '}';

1144 i‡(
h
 < 
tm∂öe
 + (tmpline) - 4) {

1145 *(
h
++) = ' ';

1146 *(
h
++) = '"';

1147 
uri
 = 
txn
->uri ?Åxn->uri : "<BADREQ>";

1148 
h
 = 
	`ícode_°rög
(h, 
tm∂öe
 + (tmpline) - 1,

1149 '#', 
uæ_ícode_m≠
, 
uri
);

1150 *(
h
++) = '"';

1152 *
h
 = '\0';

1154 
svid
 = (
tﬁog
 & 
LW_SVID
) ?

1155 (
s
->
d©a_sour˚
 !
DATA_SRC_STATS
) ?

1156 (
s
->
§v
 !
NULL
Ë? s->§v->
id
 : "<NOSRV>" : "<STATS>" : "-";

1158 
t_ªque°
 = -1;

1159 i‡(
	`tv_isge
(&
s
->
logs
.
tv_ªque°
, &s->logs.
tv_ac˚±
))

1160 
t_ªque°
 = 
	`tv_ms_ñ≠£d
(&
s
->
logs
.
tv_ac˚±
, &s->logs.
tv_ªque°
);

1162 
Àvñ
 = 
LOG_INFO
;

1163 i‡(
îr
 && (
„
->
›ti⁄s2
 & 
PR_O2_LOGERRORS
))

1164 
Àvñ
 = 
LOG_ERR
;

1166 
	`£nd_log
(
¥x_log
, 
Àvñ
,

1170 
≤
,

1171 (
s
->
˛i_addr
.
ss_Ámûy
 =
AF_INET
) ?

1172 
	`¡ohs
(((
sockaddr_ö
 *)&
s
->
˛i_addr
)->
sö_p‹t
) :

1173 
	`¡ohs
(((
sockaddr_ö6
 *)&
s
->
˛i_addr
)->
sö6_p‹t
),

1174 
tm
.
tm_mday
, 
m⁄th«me
[tm.
tm_m⁄
],Åm.
tm_yór
+1900,

1175 
tm
.
tm_hour
,Åm.
tm_mö
,Åm.
tm_£c
, ()
s
->
logs
.
ac˚±_d©e
.
tv_u£c
/1000,

1176 
„
->
id
, 
be
->id, 
svid
,

1177 
t_ªque°
,

1178 (
s
->
logs
.
t_queue
 >0Ë? s->logs.t_queuê- 
t_ªque°
 : -1,

1179 (
s
->
logs
.
t_c⁄√˘
 >0Ë? s->logs.t_c⁄√˘ - s->logs.
t_queue
 : -1,

1180 (
s
->
logs
.
t_d©a
 >0Ë? s->logs.t_d©®- s->logs.
t_c⁄√˘
 : -1,

1181 (
tﬁog
 & 
LW_BYTES
Ë? "" : "+", 
s
->
logs
.
t_˛o£
,

1182 
txn
->
°©us
,

1183 (
tﬁog
 & 
LW_BYTES
Ë? "" : "+", 
s
->
logs
.
byãs_out
,

1184 
txn
->
˛i_cookõ
 ?Åxn->cli_cookie : "-",

1185 
txn
->
§v_cookõ
 ?Åxn->srv_cookie : "-",

1186 
£ss_ãrm_c⁄d
[(
s
->
Êags
 & 
SN_ERR_MASK
Ë>> 
SN_ERR_SHIFT
],

1187 
£ss_fö_°©e
[(
s
->
Êags
 & 
SN_FINST_MASK
Ë>> 
SN_FINST_SHIFT
],

1188 (
be
->
›ti⁄s
 & 
PR_O_COOK_ANY
Ë? 
£ss_cookõ
[(
txn
->
Êags
 & 
TX_CK_MASK
Ë>> 
TX_CK_SHIFT
] : '-',

1189 (
be
->
›ti⁄s
 & 
PR_O_COOK_ANY
Ë? 
£ss_£t_cookõ
[(
txn
->
Êags
 & 
TX_SCK_MASK
Ë>> 
TX_SCK_SHIFT
] : '-',

1190 
a˘c⁄n
, 
„
->
„c⁄n
, 
be
->
bec⁄n
, 
s
->
§v
 ? s->§v->
cur_£ss
 : 0,

1191 (
s
->
Êags
 & 
SN_REDISP
)?"+":"",

1192 (
s
->
c⁄n_ªåõs
>0)?(
be
->conn_retries - s->conn_retries):be->conn_retries,

1193 
s
->
logs
.
§v_queue_size
, s->logs.
¥x_queue_size
, 
tm∂öe
);

1195 
s
->
logs
.
logwaô
 = 0;

1196 
	}
}

1203 
	$ˇ±uª_hódîs
(*
som
, 
hdr_idx
 *
idx
,

1204 **
ˇp
, 
ˇp_hdr
 *cap_hdr)

1206 *
eﬁ
, *
sﬁ
, *
cﬁ
, *
sov
;

1207 
cur_idx
;

1208 
ˇp_hdr
 *
h
;

1209 
Àn
;

1211 
sﬁ
 = 
som
 + 
	`hdr_idx_fú°_pos
(
idx
);

1212 
cur_idx
 = 
	`hdr_idx_fú°_idx
(
idx
);

1214 
cur_idx
) {

1215 
eﬁ
 = 
sﬁ
 + 
idx
->
v
[
cur_idx
].
Àn
;

1217 
cﬁ
 = 
sﬁ
;

1218 
cﬁ
 < 
eﬁ
 && *col != ':')

1219 
cﬁ
++;

1221 
sov
 = 
cﬁ
 + 1;

1222 
sov
 < 
eﬁ
 && 
hâp_is_lws
[()*sov])

1223 
sov
++;

1225 
h
 = 
ˇp_hdr
; h; h = h->
√xt
) {

1226 i‡((
h
->
«mñí
 =
cﬁ
 - 
sﬁ
) &&

1227 (
	`°∫ˇ£cmp
(
sﬁ
, 
h
->
«me
, h->
«mñí
) == 0)) {

1228 i‡(
ˇp
[
h
->
ödex
] =
NULL
)

1229 
ˇp
[
h
->
ödex
] =

1230 
	`poﬁ_Æloc2
(
h
->
poﬁ
);

1232 i‡(
ˇp
[
h
->
ödex
] =
NULL
) {

1233 
	`AÀπ
("HTTP capture : out of memory.\n");

1237 
Àn
 = 
eﬁ
 - 
sov
;

1238 i‡(
Àn
 > 
h
->len)

1239 
Àn
 = 
h
->len;

1241 
	`mem˝y
(
ˇp
[
h
->
ödex
], 
sov
, 
Àn
);

1242 
ˇp
[
h
->
ödex
][
Àn
]=0;

1245 
sﬁ
 = 
eﬁ
 + 
idx
->
v
[
cur_idx
].
¸
 + 1;

1246 
cur_idx
 = 
idx
->
v
[cur_idx].
√xt
;

1248 
	}
}

1253 
	#EXPECT_LF_HERE
(
±r
, 
bad
Ëdÿ{ i‡(
	`u∆ikñy
(*’åË!'\n')Ëbad; } 0)

	)

1258 
	#EAT_AND_JUMP_OR_RETURN
(
good
, 
°
) do { \

1259 
±r
++; \

1260 i‡(
	`likñy
(
±r
 < 
íd
)) \

1261 
good
; \

1263 
°©e
 = (
°
); \

1264 
hâp_msg_ood
; \

1266 } 0)

	)

1288 c⁄° *
	$hâp_∑r£_°¶öe
(
hâp_msg
 *
msg
, c⁄° *
msg_buf
,

1289 
°©e
, c⁄° *
±r
, c⁄° *
íd
,

1290 **
ªt_±r
, *
ªt_°©e
)

1292 
°©e
) {

1293 
HTTP_MSG_RPVER
:

1294 
hâp_msg_Ωvî
:

1295 i‡(
	`likñy
(
	`HTTP_IS_VER_TOKEN
(*
±r
)))

1296 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_Ωvî
, 
HTTP_MSG_RPVER
);

1298 i‡(
	`likñy
(
	`HTTP_IS_SPHT
(*
±r
))) {

1299 
msg
->
¶
.
°
.
v_l
 = (
±r
 - 
msg_buf
Ë- msg->
som
;

1300 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_Ωvî_•
, 
HTTP_MSG_RPVER_SP
);

1302 
°©e
 = 
HTTP_MSG_ERROR
;

1305 
HTTP_MSG_RPVER_SP
:

1306 
hâp_msg_Ωvî_•
:

1307 i‡(
	`likñy
(!
	`HTTP_IS_LWS
(*
±r
))) {

1308 
msg
->
¶
.
°
.
c
 = (
±r
 - 
msg_buf
Ë- msg->
som
;

1309 
hâp_msg_Ωcode
;

1311 i‡(
	`likñy
(
	`HTTP_IS_SPHT
(*
±r
)))

1312 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_Ωvî_•
, 
HTTP_MSG_RPVER_SP
);

1314 
°©e
 = 
HTTP_MSG_ERROR
;

1317 
HTTP_MSG_RPCODE
:

1318 
hâp_msg_Ωcode
:

1319 i‡(
	`likñy
(!
	`HTTP_IS_LWS
(*
±r
)))

1320 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_Ωcode
, 
HTTP_MSG_RPCODE
);

1322 i‡(
	`likñy
(
	`HTTP_IS_SPHT
(*
±r
))) {

1323 
msg
->
¶
.
°
.
c_l
 = (
±r
 - 
msg_buf
Ë- msg->
som
 - msg->¶.°.
c
;

1324 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_Ωcode_•
, 
HTTP_MSG_RPCODE_SP
);

1328 
msg
->
¶
.
°
.
c_l
 = (
±r
 - 
msg_buf
Ë- msg->
som
 - msg->¶.°.
c
;

1329 
hâp_msg_r•_ªas⁄
:

1331 
msg
->
¶
.
°
.
r
 = (
±r
 - 
msg_buf
Ë- msg->
som
;

1332 
msg
->
¶
.
°
.
r_l
 = 0;

1333 
hâp_msg_Ωlöe_eﬁ
;

1335 
HTTP_MSG_RPCODE_SP
:

1336 
hâp_msg_Ωcode_•
:

1337 i‡(
	`likñy
(!
	`HTTP_IS_LWS
(*
±r
))) {

1338 
msg
->
¶
.
°
.
r
 = (
±r
 - 
msg_buf
Ë- msg->
som
;

1339 
hâp_msg_Ωªas⁄
;

1341 i‡(
	`likñy
(
	`HTTP_IS_SPHT
(*
±r
)))

1342 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_Ωcode_•
, 
HTTP_MSG_RPCODE_SP
);

1344 
hâp_msg_r•_ªas⁄
;

1346 
HTTP_MSG_RPREASON
:

1347 
hâp_msg_Ωªas⁄
:

1348 i‡(
	`likñy
(!
	`HTTP_IS_CRLF
(*
±r
)))

1349 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_Ωªas⁄
, 
HTTP_MSG_RPREASON
);

1350 
msg
->
¶
.
°
.
r_l
 = (
±r
 - 
msg_buf
Ë- msg->
som
 - msg->¶.°.
r
;

1351 
hâp_msg_Ωlöe_eﬁ
:

1358 
msg
->
¶
.
°
.
l
 = 
±r
 - msg->
sﬁ
;

1359  
±r
;

1361 #ifde‡
DEBUG_FULL


1363 
	`Ârötf
(
°dîr
, "FIXME !!!! impossibÀ sèãáà%s:%d = %d\n", 
__FILE__
, 
__LINE__
, 
°©e
);

1364 
	`exô
(1);

1368 
hâp_msg_ood
:

1370 i‡(
ªt_°©e
)

1371 *
ªt_°©e
 = 
°©e
;

1372 i‡(
ªt_±r
)

1373 *
ªt_±r
 = (*)
±r
;

1374  
NULL
;

1375 
	}
}

1396 c⁄° *
	$hâp_∑r£_ªqlöe
(
hâp_msg
 *
msg
, c⁄° *
msg_buf
,

1397 
°©e
, c⁄° *
±r
, c⁄° *
íd
,

1398 **
ªt_±r
, *
ªt_°©e
)

1400 
°©e
) {

1401 
HTTP_MSG_RQMETH
:

1402 
hâp_msg_rqmëh
:

1403 i‡(
	`likñy
(
	`HTTP_IS_TOKEN
(*
±r
)))

1404 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_rqmëh
, 
HTTP_MSG_RQMETH
);

1406 i‡(
	`likñy
(
	`HTTP_IS_SPHT
(*
±r
))) {

1407 
msg
->
¶
.
rq
.
m_l
 = (
±r
 - 
msg_buf
Ë- msg->
som
;

1408 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_rqmëh_•
, 
HTTP_MSG_RQMETH_SP
);

1411 i‡(
	`likñy
(
	`HTTP_IS_CRLF
(*
±r
))) {

1413 
msg
->
¶
.
rq
.
m_l
 = (
±r
 - 
msg_buf
Ë- msg->
som
;

1414 
hâp_msg_ªq09_uri
:

1415 
msg
->
¶
.
rq
.
u
 = (
±r
 - 
msg_buf
Ë- msg->
som
;

1416 
hâp_msg_ªq09_uri_e
:

1417 
msg
->
¶
.
rq
.
u_l
 = (
±r
 - 
msg_buf
Ë- msg->
som
 - msg->¶.rq.
u
;

1418 
hâp_msg_ªq09_vî
:

1419 
msg
->
¶
.
rq
.
v
 = (
±r
 - 
msg_buf
Ë- msg->
som
;

1420 
msg
->
¶
.
rq
.
v_l
 = 0;

1421 
hâp_msg_rqlöe_eﬁ
;

1423 
°©e
 = 
HTTP_MSG_ERROR
;

1426 
HTTP_MSG_RQMETH_SP
:

1427 
hâp_msg_rqmëh_•
:

1428 i‡(
	`likñy
(!
	`HTTP_IS_LWS
(*
±r
))) {

1429 
msg
->
¶
.
rq
.
u
 = (
±r
 - 
msg_buf
Ë- msg->
som
;

1430 
hâp_msg_rquri
;

1432 i‡(
	`likñy
(
	`HTTP_IS_SPHT
(*
±r
)))

1433 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_rqmëh_•
, 
HTTP_MSG_RQMETH_SP
);

1435 
hâp_msg_ªq09_uri
;

1437 
HTTP_MSG_RQURI
:

1438 
hâp_msg_rquri
:

1439 i‡(
	`likñy
(!
	`HTTP_IS_LWS
(*
±r
)))

1440 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_rquri
, 
HTTP_MSG_RQURI
);

1442 i‡(
	`likñy
(
	`HTTP_IS_SPHT
(*
±r
))) {

1443 
msg
->
¶
.
rq
.
u_l
 = (
±r
 - 
msg_buf
Ë- msg->
som
 - msg->¶.rq.
u
;

1444 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_rquri_•
, 
HTTP_MSG_RQURI_SP
);

1448 
hâp_msg_ªq09_uri_e
;

1450 
HTTP_MSG_RQURI_SP
:

1451 
hâp_msg_rquri_•
:

1452 i‡(
	`likñy
(!
	`HTTP_IS_LWS
(*
±r
))) {

1453 
msg
->
¶
.
rq
.
v
 = (
±r
 - 
msg_buf
Ë- msg->
som
;

1454 
hâp_msg_rqvî
;

1456 i‡(
	`likñy
(
	`HTTP_IS_SPHT
(*
±r
)))

1457 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_rquri_•
, 
HTTP_MSG_RQURI_SP
);

1459 
hâp_msg_ªq09_vî
;

1461 
HTTP_MSG_RQVER
:

1462 
hâp_msg_rqvî
:

1463 i‡(
	`likñy
(
	`HTTP_IS_VER_TOKEN
(*
±r
)))

1464 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_rqvî
, 
HTTP_MSG_RQVER
);

1466 i‡(
	`likñy
(
	`HTTP_IS_CRLF
(*
±r
))) {

1467 
msg
->
¶
.
rq
.
v_l
 = (
±r
 - 
msg_buf
Ë- msg->
som
 - msg->¶.rq.
v
;

1468 
hâp_msg_rqlöe_eﬁ
:

1475 
msg
->
¶
.
rq
.
l
 = 
±r
 - msg->
sﬁ
;

1476  
±r
;

1480 
°©e
 = 
HTTP_MSG_ERROR
;

1483 #ifde‡
DEBUG_FULL


1485 
	`Ârötf
(
°dîr
, "FIXME !!!! impossibÀ sèãáà%s:%d = %d\n", 
__FILE__
, 
__LINE__
, 
°©e
);

1486 
	`exô
(1);

1490 
hâp_msg_ood
:

1492 i‡(
ªt_°©e
)

1493 *
ªt_°©e
 = 
°©e
;

1494 i‡(
ªt_±r
)

1495 *
ªt_±r
 = (*)
±r
;

1496  
NULL
;

1497 
	}
}

1506 
	ggë_hâp_auth_buff
[
BUFSIZE
];

1509 
	$gë_hâp_auth
(
£ssi⁄
 *
s
)

1512 
hâp_txn
 *
txn
 = &
s
->txn;

1513 
chunk
 
auth_mëhod
;

1514 
hdr_˘x
 
˘x
;

1515 *
h
, *
p
;

1516 
Àn
;

1518 #ifde‡
DEBUG_AUTH


1519 
	`¥ötf
("Auth f‹ sessi⁄ %p: %d\n", 
s
, 
txn
->
auth
.
mëhod
);

1522 i‡(
txn
->
auth
.
mëhod
 =
HTTP_AUTH_WRONG
)

1525 i‡(
txn
->
auth
.
mëhod
)

1528 
txn
->
auth
.
mëhod
 = 
HTTP_AUTH_WRONG
;

1530 
˘x
.
idx
 = 0;

1532 i‡(
txn
->
Êags
 & 
TX_USE_PX_CONN
) {

1533 
h
 = "Proxy-Authorization";

1534 
Àn
 = 
	`°æí
(
h
);

1536 
h
 = "Authorization";

1537 
Àn
 = 
	`°æí
(
h
);

1540 i‡(!
	`hâp_föd_hódî2
(
h
, 
Àn
, 
txn
->
ªq
.
sﬁ
, &txn->
hdr_idx
, &
˘x
))

1543 
h
 = 
˘x
.
löe
 + ctx.
vÆ
;

1545 
p
 = 
	`memchr
(
h
, ' ', 
˘x
.
vÀn
);

1546 i‡(!
p
 ||Ö =
h
)

1549 
	`chunk_öôÀn
(&
auth_mëhod
, 
h
, 0, 
p
-h);

1550 
	`chunk_öôÀn
(&
txn
->
auth
.
mëhod_d©a
, 
p
+1, 0, 
˘x
.
vÀn
-’-
h
)-1);

1552 i‡(!
	`°∫ˇ£cmp
("Basic", 
auth_mëhod
.
°r
,áuth_mëhod.
Àn
)) {

1554 
Àn
 = 
	`ba£64dec
(
txn
->
auth
.
mëhod_d©a
.
°r
,Åxn->auth.method_data.len,

1555 
gë_hâp_auth_buff
, 
BUFSIZE
 - 1);

1557 i‡(
Àn
 < 0)

1561 
gë_hâp_auth_buff
[
Àn
] = '\0';

1563 
p
 = 
	`°rchr
(
gë_hâp_auth_buff
, ':');

1565 i‡(!
p
)

1568 
txn
->
auth
.
u£r
 = 
gë_hâp_auth_buff
;

1569 *
p
 = '\0';

1570 
txn
->
auth
.
∑ss
 = 
p
+1;

1572 
txn
->
auth
.
mëhod
 = 
HTTP_AUTH_BASIC
;

1577 
	}
}

1590 
	$hâp_msg_™Æyzî
(
buf„r
 *
buf
, 
hâp_msg
 *
msg
, 
hdr_idx
 *
idx
)

1592 
°©e
;

1593 *
±r
, *
íd
;

1595 
°©e
 = 
msg
->
msg_°©e
;

1596 
±r
 = 
buf
->
Ã
;

1597 
íd
 = 
buf
->
r
;

1599 i‡(
	`u∆ikñy
(
±r
 >
íd
))

1600 
hâp_msg_ood
;

1602 
°©e
) {

1608 
HTTP_MSG_RPBEFORE
:

1609 
hâp_msg_Ωbef‹e
:

1610 i‡(
	`likñy
(
	`HTTP_IS_TOKEN
(*
±r
))) {

1615 *
beg
 = 
buf
->
w
 + buf->
£nd_max
;

1616 i‡(
beg
 >
buf
->
d©a
 + buf->
size
)

1617 
beg
 -
buf
->
size
;

1618 i‡(
	`u∆ikñy
(
±r
 !
beg
)) {

1619 i‡(
buf
->
£nd_max
)

1620 
hâp_msg_ood
;

1622 
	`buf„r_ign‹e
(
buf
, 
±r
 - 
beg
);

1624 
msg
->
som
 = 
±r
 - 
buf
->
d©a
;

1625 
msg
->
sﬁ
 = 
±r
;

1626 
	`hdr_idx_öô
(
idx
);

1627 
°©e
 = 
HTTP_MSG_RPVER
;

1628 
hâp_msg_Ωvî
;

1631 i‡(
	`u∆ikñy
(!
	`HTTP_IS_CRLF
(*
±r
)))

1632 
hâp_msg_övÆid
;

1634 i‡(
	`u∆ikñy
(*
±r
 == '\n'))

1635 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_Ωbef‹e
, 
HTTP_MSG_RPBEFORE
);

1636 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_Ωbef‹e_¸
, 
HTTP_MSG_RPBEFORE_CR
);

1639 
HTTP_MSG_RPBEFORE_CR
:

1640 
hâp_msg_Ωbef‹e_¸
:

1641 
	`EXPECT_LF_HERE
(
±r
, 
hâp_msg_övÆid
);

1642 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_Ωbef‹e
, 
HTTP_MSG_RPBEFORE
);

1645 
HTTP_MSG_RPVER
:

1646 
hâp_msg_Ωvî
:

1647 
HTTP_MSG_RPVER_SP
:

1648 
HTTP_MSG_RPCODE
:

1649 
HTTP_MSG_RPCODE_SP
:

1650 
HTTP_MSG_RPREASON
:

1651 
±r
 = (*)
	`hâp_∑r£_°¶öe
(
msg
, 
buf
->
d©a
, 
°©e
,Öå, 
íd
,

1652 &
buf
->
Ã
, &
msg
->
msg_°©e
);

1653 i‡(
	`u∆ikñy
(!
±r
))

1660 
	`hdr_idx_£t_°¨t
(
idx
, 
msg
->
¶
.
°
.
l
, *
±r
 == '\r');

1662 
msg
->
sﬁ
 = 
±r
;

1663 i‡(
	`likñy
(*
±r
 == '\r'))

1664 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_Ωlöe_íd
, 
HTTP_MSG_RPLINE_END
);

1665 
hâp_msg_Ωlöe_íd
;

1667 
HTTP_MSG_RPLINE_END
:

1668 
hâp_msg_Ωlöe_íd
:

1670 
	`EXPECT_LF_HERE
(
±r
, 
hâp_msg_övÆid
);

1671 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_hdr_fú°
, 
HTTP_MSG_HDR_FIRST
);

1677 
HTTP_MSG_RQBEFORE
:

1678 
hâp_msg_rqbef‹e
:

1679 i‡(
	`likñy
(
	`HTTP_IS_TOKEN
(*
±r
))) {

1684 *
beg
 = 
buf
->
w
 + buf->
£nd_max
;

1685 i‡(
beg
 >
buf
->
d©a
 + buf->
size
)

1686 
beg
 -
buf
->
size
;

1687 i‡(
	`likñy
(
±r
 !
beg
)) {

1688 i‡(
buf
->
£nd_max
)

1689 
hâp_msg_ood
;

1691 
	`buf„r_ign‹e
(
buf
, 
±r
 - 
beg
);

1693 
msg
->
som
 = 
±r
 - 
buf
->
d©a
;

1694 
msg
->
sﬁ
 = 
±r
;

1698 
°©e
 = 
HTTP_MSG_RQMETH
;

1699 
hâp_msg_rqmëh
;

1702 i‡(
	`u∆ikñy
(!
	`HTTP_IS_CRLF
(*
±r
)))

1703 
hâp_msg_övÆid
;

1705 i‡(
	`u∆ikñy
(*
±r
 == '\n'))

1706 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_rqbef‹e
, 
HTTP_MSG_RQBEFORE
);

1707 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_rqbef‹e_¸
, 
HTTP_MSG_RQBEFORE_CR
);

1710 
HTTP_MSG_RQBEFORE_CR
:

1711 
hâp_msg_rqbef‹e_¸
:

1712 
	`EXPECT_LF_HERE
(
±r
, 
hâp_msg_övÆid
);

1713 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_rqbef‹e
, 
HTTP_MSG_RQBEFORE
);

1716 
HTTP_MSG_RQMETH
:

1717 
hâp_msg_rqmëh
:

1718 
HTTP_MSG_RQMETH_SP
:

1719 
HTTP_MSG_RQURI
:

1720 
HTTP_MSG_RQURI_SP
:

1721 
HTTP_MSG_RQVER
:

1722 
±r
 = (*)
	`hâp_∑r£_ªqlöe
(
msg
, 
buf
->
d©a
, 
°©e
,Öå, 
íd
,

1723 &
buf
->
Ã
, &
msg
->
msg_°©e
);

1724 i‡(
	`u∆ikñy
(!
±r
))

1731 
	`hdr_idx_£t_°¨t
(
idx
, 
msg
->
¶
.
rq
.
l
, *
±r
 == '\r');

1733 
msg
->
sﬁ
 = 
±r
;

1734 i‡(
	`likñy
(*
±r
 == '\r'))

1735 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_rqlöe_íd
, 
HTTP_MSG_RQLINE_END
);

1736 
hâp_msg_rqlöe_íd
;

1738 
HTTP_MSG_RQLINE_END
:

1739 
hâp_msg_rqlöe_íd
:

1743 i‡(
	`u∆ikñy
(
msg
->
¶
.
rq
.
v_l
 == 0))

1744 
hâp_msg_œ°_lf
;

1746 
	`EXPECT_LF_HERE
(
±r
, 
hâp_msg_övÆid
);

1747 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_hdr_fú°
, 
HTTP_MSG_HDR_FIRST
);

1753 
HTTP_MSG_HDR_FIRST
:

1754 
hâp_msg_hdr_fú°
:

1755 
msg
->
sﬁ
 = 
±r
;

1756 i‡(
	`likñy
(!
	`HTTP_IS_CRLF
(*
±r
))) {

1757 
hâp_msg_hdr_«me
;

1760 i‡(
	`likñy
(*
±r
 == '\r'))

1761 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_œ°_lf
, 
HTTP_MSG_LAST_LF
);

1762 
hâp_msg_œ°_lf
;

1764 
HTTP_MSG_HDR_NAME
:

1765 
hâp_msg_hdr_«me
:

1767 i‡(
	`likñy
(
	`HTTP_IS_TOKEN
(*
±r
)))

1768 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_hdr_«me
, 
HTTP_MSG_HDR_NAME
);

1770 i‡(
	`likñy
(*
±r
 == ':')) {

1771 
msg
->
cﬁ
 = 
±r
 - 
buf
->
d©a
;

1772 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_hdr_l1_•
, 
HTTP_MSG_HDR_L1_SP
);

1775 i‡(
	`likñy
(
msg
->
îr_pos
 < -1Ë|| *
±r
 == '\n')

1776 
hâp_msg_övÆid
;

1778 i‡(
msg
->
îr_pos
 == -1)

1779 
msg
->
îr_pos
 = 
±r
 - 
buf
->
d©a
;

1782 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_hdr_«me
, 
HTTP_MSG_HDR_NAME
);

1784 
HTTP_MSG_HDR_L1_SP
:

1785 
hâp_msg_hdr_l1_•
:

1787 i‡(
	`likñy
(
	`HTTP_IS_SPHT
(*
±r
)))

1788 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_hdr_l1_•
, 
HTTP_MSG_HDR_L1_SP
);

1791 
msg
->
sov
 = 
±r
 - 
buf
->
d©a
;

1793 i‡(
	`likñy
(!
	`HTTP_IS_CRLF
(*
±r
))) {

1794 
hâp_msg_hdr_vÆ
;

1797 i‡(
	`likñy
(*
±r
 == '\r'))

1798 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_hdr_l1_lf
, 
HTTP_MSG_HDR_L1_LF
);

1799 
hâp_msg_hdr_l1_lf
;

1801 
HTTP_MSG_HDR_L1_LF
:

1802 
hâp_msg_hdr_l1_lf
:

1803 
	`EXPECT_LF_HERE
(
±r
, 
hâp_msg_övÆid
);

1804 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_hdr_l1_lws
, 
HTTP_MSG_HDR_L1_LWS
);

1806 
HTTP_MSG_HDR_L1_LWS
:

1807 
hâp_msg_hdr_l1_lws
:

1808 i‡(
	`likñy
(
	`HTTP_IS_SPHT
(*
±r
))) {

1810 ; 
buf
->
d©a
+
msg
->
sov
 < 
±r
; msg->sov++)

1811 
buf
->
d©a
[
msg
->
sov
] = ' ';

1812 
hâp_msg_hdr_l1_•
;

1815 
msg
->
eﬁ
 = 
buf
->
d©a
 + msg->
sov
;

1816 
hâp_msg_com∂ëe_hódî
;

1818 
HTTP_MSG_HDR_VAL
:

1819 
hâp_msg_hdr_vÆ
:

1824 i‡(
	`likñy
(!
	`HTTP_IS_CRLF
(*
±r
)))

1825 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_hdr_vÆ
, 
HTTP_MSG_HDR_VAL
);

1827 
msg
->
eﬁ
 = 
±r
;

1832 i‡(
	`likñy
(*
±r
 == '\r'))

1833 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_hdr_l2_lf
, 
HTTP_MSG_HDR_L2_LF
);

1834 
hâp_msg_hdr_l2_lf
;

1836 
HTTP_MSG_HDR_L2_LF
:

1837 
hâp_msg_hdr_l2_lf
:

1838 
	`EXPECT_LF_HERE
(
±r
, 
hâp_msg_övÆid
);

1839 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_hdr_l2_lws
, 
HTTP_MSG_HDR_L2_LWS
);

1841 
HTTP_MSG_HDR_L2_LWS
:

1842 
hâp_msg_hdr_l2_lws
:

1843 i‡(
	`u∆ikñy
(
	`HTTP_IS_SPHT
(*
±r
))) {

1845 ; 
msg
->
eﬁ
 < 
±r
; msg->eol++)

1846 *
msg
->
eﬁ
 = ' ';

1847 
hâp_msg_hdr_vÆ
;

1849 
hâp_msg_com∂ëe_hódî
:

1863 i‡(
	`u∆ikñy
(
	`hdr_idx_add
(
msg
->
eﬁ
 - msg->
sﬁ
, *msg->eol == '\r',

1864 
idx
, idx->
èû
) < 0))

1865 
hâp_msg_övÆid
;

1867 
msg
->
sﬁ
 = 
±r
;

1868 i‡(
	`likñy
(!
	`HTTP_IS_CRLF
(*
±r
))) {

1869 
hâp_msg_hdr_«me
;

1872 i‡(
	`likñy
(*
±r
 == '\r'))

1873 
	`EAT_AND_JUMP_OR_RETURN
(
hâp_msg_œ°_lf
, 
HTTP_MSG_LAST_LF
);

1874 
hâp_msg_œ°_lf
;

1876 
HTTP_MSG_LAST_LF
:

1877 
hâp_msg_œ°_lf
:

1879 
	`EXPECT_LF_HERE
(
±r
, 
hâp_msg_övÆid
);

1880 
±r
++;

1881 
buf
->
Ã
 = 
±r
;

1882 
msg
->
cﬁ
 = msg->
sov
 = 
buf
->
Ã
 - buf->
d©a
;

1883 
msg
->
eoh
 = msg->
sﬁ
 - 
buf
->
d©a
;

1884 
msg
->
sﬁ
 = 
buf
->
d©a
 + msg->
som
;

1885 
msg
->
msg_°©e
 = 
HTTP_MSG_BODY
;

1887 #ifde‡
DEBUG_FULL


1889 
	`Ârötf
(
°dîr
, "FIXME !!!! impossibÀ sèãáà%s:%d = %d\n", 
__FILE__
, 
__LINE__
, 
°©e
);

1890 
	`exô
(1);

1893 
hâp_msg_ood
:

1895 
msg
->
msg_°©e
 = 
°©e
;

1896 
buf
->
Ã
 = 
±r
;

1899 
hâp_msg_övÆid
:

1901 
msg
->
msg_°©e
 = 
HTTP_MSG_ERROR
;

1902 
buf
->
Ã
 = 
±r
;

1904 
	}
}

1910 
	$hâp_upgøde_v09_to_v10
(
buf„r
 *
ªq
, 
hâp_msg
 *
msg
, 
hâp_txn
 *
txn
)

1912 
dñè
;

1913 *
cur_íd
;

1915 i‡(
msg
->
¶
.
rq
.
v_l
 != 0)

1918 
cur_íd
 = 
msg
->
sﬁ
 + msg->
¶
.
rq
.
l
;

1919 
dñè
 = 0;

1921 i‡(
msg
->
¶
.
rq
.
u_l
 == 0) {

1923 
dñè
 = 
	`buf„r_ª∂a˚2
(
ªq
, 
cur_íd
, cur_end, " /", 2);

1924 
cur_íd
 +
dñè
;

1925 
	`hâp_msg_move_íd
(
msg
, 
dñè
);

1928 
dñè
 = 
	`buf„r_ª∂a˚2
(
ªq
, 
cur_íd
, cur_end, " HTTP/1.0\r\n", 11);

1929 
	`hâp_msg_move_íd
(
msg
, 
dñè
);

1930 
cur_íd
 +
dñè
;

1931 
cur_íd
 = (*)
	`hâp_∑r£_ªqlöe
(
msg
, 
ªq
->
d©a
,

1932 
HTTP_MSG_RQMETH
,

1933 
msg
->
sﬁ
, 
cur_íd
 + 1,

1934 
NULL
, NULL);

1935 i‡(
	`u∆ikñy
(!
cur_íd
))

1941 
	`hdr_idx_£t_°¨t
(&
txn
->
hdr_idx
, 
msg
->
¶
.
rq
.
l
, *
cur_íd
 == '\r');

1943 
	}
}

1957 
	$hâp_∑r£_c⁄√˘i⁄_hódî
(
hâp_txn
 *
txn
, 
hâp_msg
 *
msg
, 
buf„r
 *
buf
, 
to_dñ
)

1959 
hdr_˘x
 
˘x
;

1960 c⁄° *
hdr_vÆ
 = "Connection";

1961 
hdr_Àn
 = 10;

1963 i‡(
txn
->
Êags
 & 
TX_HDR_CONN_PRS
)

1966 i‡(
	`u∆ikñy
(
txn
->
Êags
 & 
TX_USE_PX_CONN
)) {

1967 
hdr_vÆ
 = "Proxy-Connection";

1968 
hdr_Àn
 = 16;

1971 
˘x
.
idx
 = 0;

1972 
txn
->
Êags
 &~(
TX_CON_KAL_SET
|
TX_CON_CLO_SET
);

1973 
	`hâp_föd_hódî2
(
hdr_vÆ
, 
hdr_Àn
, 
msg
->
sﬁ
, &
txn
->
hdr_idx
, &
˘x
)) {

1974 i‡(
˘x
.
vÀn
 >10 && 
	`w‹d_m©ch
(˘x.
löe
 + ctx.
vÆ
, ctx.vlen, "keep-alive", 10)) {

1975 
txn
->
Êags
 |
TX_HDR_CONN_KAL
;

1976 i‡((
to_dñ
 & 2Ë&& 
buf
)

1977 
	`hâp_ªmove_hódî2
(
msg
, 
buf
, &
txn
->
hdr_idx
, &
˘x
);

1979 
txn
->
Êags
 |
TX_CON_KAL_SET
;

1981 i‡(
˘x
.
vÀn
 >5 && 
	`w‹d_m©ch
(˘x.
löe
 + ctx.
vÆ
, ctx.vlen, "close", 5)) {

1982 
txn
->
Êags
 |
TX_HDR_CONN_CLO
;

1983 i‡((
to_dñ
 & 1Ë&& 
buf
)

1984 
	`hâp_ªmove_hódî2
(
msg
, 
buf
, &
txn
->
hdr_idx
, &
˘x
);

1986 
txn
->
Êags
 |
TX_CON_CLO_SET
;

1990 
txn
->
Êags
 |
TX_HDR_CONN_PRS
;

1992 
	}
}

1999 
	$hâp_ch™ge_c⁄√˘i⁄_hódî
(
hâp_txn
 *
txn
, 
hâp_msg
 *
msg
, 
buf„r
 *
buf
, 
w™ãd
)

2001 
hdr_˘x
 
˘x
;

2002 c⁄° *
hdr_vÆ
 = "Connection";

2003 
hdr_Àn
 = 10;

2005 
˘x
.
idx
 = 0;

2008 i‡(
	`u∆ikñy
(
txn
->
Êags
 & 
TX_USE_PX_CONN
)) {

2009 
hdr_vÆ
 = "Proxy-Connection";

2010 
hdr_Àn
 = 16;

2013 
txn
->
Êags
 &~(
TX_CON_CLO_SET
 | 
TX_CON_KAL_SET
);

2014 
	`hâp_föd_hódî2
(
hdr_vÆ
, 
hdr_Àn
, 
msg
->
sﬁ
, &
txn
->
hdr_idx
, &
˘x
)) {

2015 i‡(
˘x
.
vÀn
 >10 && 
	`w‹d_m©ch
(˘x.
löe
 + ctx.
vÆ
, ctx.vlen, "keep-alive", 10)) {

2016 i‡(
w™ãd
 & 
TX_CON_KAL_SET
)

2017 
txn
->
Êags
 |
TX_CON_KAL_SET
;

2019 
	`hâp_ªmove_hódî2
(
msg
, 
buf
, &
txn
->
hdr_idx
, &
˘x
);

2021 i‡(
˘x
.
vÀn
 >5 && 
	`w‹d_m©ch
(˘x.
löe
 + ctx.
vÆ
, ctx.vlen, "close", 5)) {

2022 i‡(
w™ãd
 & 
TX_CON_CLO_SET
)

2023 
txn
->
Êags
 |
TX_CON_CLO_SET
;

2025 
	`hâp_ªmove_hódî2
(
msg
, 
buf
, &
txn
->
hdr_idx
, &
˘x
);

2029 i‡(
w™ãd
 =(
txn
->
Êags
 & (
TX_CON_CLO_SET
|
TX_CON_KAL_SET
)))

2032 i‡((
w™ãd
 & 
TX_CON_CLO_SET
Ë&& !(
txn
->
Êags
 & TX_CON_CLO_SET)) {

2033 
txn
->
Êags
 |
TX_CON_CLO_SET
;

2034 
hdr_vÆ
 = "Connection: close";

2035 
hdr_Àn
 = 17;

2036 i‡(
	`u∆ikñy
(
txn
->
Êags
 & 
TX_USE_PX_CONN
)) {

2037 
hdr_vÆ
 = "Proxy-Connection: close";

2038 
hdr_Àn
 = 23;

2040 
	`hâp_hódî_add_èû2
(
buf
, 
msg
, &
txn
->
hdr_idx
, 
hdr_vÆ
, 
hdr_Àn
);

2043 i‡((
w™ãd
 & 
TX_CON_KAL_SET
Ë&& !(
txn
->
Êags
 & TX_CON_KAL_SET)) {

2044 
txn
->
Êags
 |
TX_CON_KAL_SET
;

2045 
hdr_vÆ
 = "Connection: keep-alive";

2046 
hdr_Àn
 = 22;

2047 i‡(
	`u∆ikñy
(
txn
->
Êags
 & 
TX_USE_PX_CONN
)) {

2048 
hdr_vÆ
 = "Proxy-Connection: keep-alive";

2049 
hdr_Àn
 = 28;

2051 
	`hâp_hódî_add_èû2
(
buf
, 
msg
, &
txn
->
hdr_idx
, 
hdr_vÆ
, 
hdr_Àn
);

2054 
	}
}

2064 
	$hâp_∑r£_chunk_size
(
buf„r
 *
buf
, 
hâp_msg
 *
msg
)

2066 *
±r
 = 
buf
->
Ã
;

2067 *
íd
 = 
buf
->
d©a
 + buf->
size
;

2068 
chunk
 = 0;

2075 
c
;

2076 i‡(
±r
 =
buf
->
r
)

2078 
c
 = 
	`hex2i
(*
±r
);

2079 i‡(
c
 < 0)

2081 i‡(++
±r
 >
íd
)

2082 
±r
 = 
buf
->
d©a
;

2083 i‡(
chunk
 & 0xF000000)

2085 
chunk
 = (chunk << 4Ë+ 
c
;

2089 i‡(
±r
 =
buf
->
Ã
)

2092 
hâp_is_•ht
[()*
±r
]) {

2093 i‡(++
±r
 >
íd
)

2094 
±r
 = 
buf
->
d©a
;

2095 i‡(
±r
 =
buf
->
r
)

2103 i‡(
	`likñy
(
	`HTTP_IS_CRLF
(*
±r
))) {

2105 i‡(
	`likñy
(*
±r
 == '\r')) {

2106 i‡(++
±r
 >
íd
)

2107 
±r
 = 
buf
->
d©a
;

2108 i‡(
±r
 =
buf
->
r
)

2112 i‡(*
±r
 != '\n')

2114 i‡(++
±r
 >
íd
)

2115 
±r
 = 
buf
->
d©a
;

2119 i‡(*
±r
 == ';') {

2121 i‡(++
±r
 >
íd
)

2122 
±r
 = 
buf
->
d©a
;

2123 i‡(
±r
 =
buf
->
r
)

2126 !
	`HTTP_IS_CRLF
(*
±r
)) {

2127 i‡(++
±r
 >
íd
)

2128 
±r
 = 
buf
->
d©a
;

2129 i‡(
±r
 =
buf
->
r
)

2143 
msg
->
sov
 +
±r
 - 
buf
->
Ã
;

2144 
buf
->
Ã
 = 
±r
;

2145 
msg
->
hdr_c⁄ã¡_Àn
 = 
chunk
;

2146 
msg
->
msg_°©e
 = 
chunk
 ? 
HTTP_MSG_DATA
 : 
HTTP_MSG_TRAILERS
;

2148 
	}
}

2165 
	$hâp_f‹w¨d_åaûîs
(
buf„r
 *
buf
, 
hâp_msg
 *
msg
)

2169 *
p1
 = 
NULL
, *
p2
 = NULL;

2170 *
±r
 = 
buf
->
Ã
;

2171 
byãs
;

2175 i‡(
±r
 =
buf
->
r
)

2178 i‡(*
±r
 == '\n') {

2179 i‡(!
p1
)

2180 
p1
 = 
±r
;

2181 
p2
 = 
±r
;

2185 i‡(*
±r
 == '\r') {

2186 i‡(
p1
)

2188 
p1
 = 
±r
;

2191 
±r
++;

2192 i‡(
±r
 >
buf
->
d©a
 + buf->
size
)

2193 
±r
 = 
buf
->
d©a
;

2197 
p2
++;

2198 i‡(
p2
 >
buf
->
d©a
 + buf->
size
)

2199 
p2
 = 
buf
->
d©a
;

2201 
byãs
 = 
p2
 - 
buf
->
Ã
;

2202 i‡(
byãs
 < 0)

2203 
byãs
 +
buf
->
size
;

2206 
msg
->
sov
 +
byãs
;

2207 i‡(
msg
->
sov
 >
buf
->
size
)

2208 
msg
->
sov
 -
buf
->
size
;

2210 i‡(
p1
 =
buf
->
Ã
) {

2215 
buf
->
Ã
 = 
p2
;

2216 
msg
->
msg_°©e
 = 
HTTP_MSG_DONE
;

2220 
buf
->
Ã
 = 
p2
;

2222 
	}
}

2233 
	$hâp_skù_chunk_¸lf
(
buf„r
 *
buf
, 
hâp_msg
 *
msg
)

2235 *
±r
;

2236 
byãs
;

2242 
byãs
 = 1;

2243 
±r
 = 
buf
->
Ã
;

2244 i‡(*
±r
 == '\r') {

2245 
byãs
++;

2246 
±r
++;

2247 i‡(
±r
 >
buf
->
d©a
 + buf->
size
)

2248 
±r
 = 
buf
->
d©a
;

2251 i‡(
byãs
 > 
buf
->
l
 - buf->
£nd_max
)

2254 i‡(*
±r
 != '\n')

2257 
±r
++;

2258 i‡(
±r
 >
buf
->
d©a
 + buf->
size
)

2259 
±r
 = 
buf
->
d©a
;

2260 
buf
->
Ã
 = 
±r
;

2262 
msg
->
sov
 = 
±r
 - 
buf
->
d©a
;

2263 
msg
->
som
 = msg->
sov
 - 
byãs
;

2264 
msg
->
msg_°©e
 = 
HTTP_MSG_CHUNK_SIZE
;

2266 
	}
}

2268 
	$hâp_buf„r_hóvy_ªÆign
(
buf„r
 *
buf
, 
hâp_msg
 *
msg
)

2270 *
íd
 = 
buf
->
d©a
 + buf->
size
;

2271 
off
 = 
buf
->
d©a
 + buf->
size
 - buf->
w
;

2277 i‡(
buf
->
l
) {

2278 
block1
 = 
buf
->
l
;

2279 
block2
 = 0;

2280 i‡(
buf
->
r
 <buf->
w
) {

2282 
block1
 = 
buf
->
d©a
 + buf->
size
 - buf->
w
;

2283 
block2
 = 
buf
->
r
 - buf->
d©a
;

2285 i‡(
block2
)

2286 
	`mem˝y
(
sw≠_buf„r
, 
buf
->
d©a
, 
block2
);

2287 
	`memmove
(
buf
->
d©a
, buf->
w
, 
block1
);

2288 i‡(
block2
)

2289 
	`mem˝y
(
buf
->
d©a
 + 
block1
, 
sw≠_buf„r
, 
block2
);

2293 
buf
->
w
 = buf->
d©a
;

2294 
buf
->
Ã
 +
off
; i‡(buf->Ã >
íd
Ëbuf->Ã -buf->
size
;

2295 
buf
->
r
 +
off
; i‡(buf->∏>
íd
Ëbuf->∏-buf->
size
;

2296 
msg
->
sﬁ
 +
off
; i‡(msg->sﬁ >
íd
Ëmsg->sﬁ -
buf
->
size
;

2297 
msg
->
eﬁ
 +
off
; i‡(msg->eﬁ >
íd
Ëmsg->eﬁ -
buf
->
size
;

2300 
msg
->
som
 = 0;

2301 
msg
->
eoh
 +
off
; i‡(msg->eoh >
buf
->
size
) msg->eoh -= buf->size;

2302 
msg
->
cﬁ
 +
off
; i‡(msg->cﬁ >
buf
->
size
) msg->col -= buf->size;

2303 
msg
->
sov
 +
off
; i‡(msg->sov >
buf
->
size
) msg->sov -= buf->size;

2305 i‡(
msg
->
îr_pos
 >= 0) {

2306 
msg
->
îr_pos
 +
off
;

2307 i‡(
msg
->
îr_pos
 >
buf
->
size
)

2308 
msg
->
îr_pos
 -
buf
->
size
;

2311 
buf
->
Êags
 &~
BF_FULL
;

2312 i‡(
buf
->
l
 >
	`buf„r_max_Àn
(buf))

2313 
buf
->
Êags
 |
BF_FULL
;

2314 
	}
}

2323 
	$hâp_waô_f‹_ªque°
(
£ssi⁄
 *
s
, 
buf„r
 *
ªq
, 
™_bô
)

2346 
cur_idx
;

2347 
u£_˛o£_⁄ly
;

2348 
hâp_txn
 *
txn
 = &
s
->txn;

2349 
hâp_msg
 *
msg
 = &
txn
->
ªq
;

2350 
hdr_˘x
 
˘x
;

2352 
	`DPRINTF
(
°dîr
,"[%u] %s: session=%p b=%p,Éxp(r,w)=%u,%u bf=%08x bl=%dánalysers=%02x\n",

2353 
now_ms
, 
__FUNCTION__
,

2354 
s
,

2355 
ªq
,

2356 
ªq
->
ªx
,Ñeq->
wex
,

2357 
ªq
->
Êags
,

2358 
ªq
->
l
,

2359 
ªq
->
™Æy£rs
);

2362 
s
->
§v_îr‹
 = 
hâp_ªtu∫_§v_îr‹
;

2369 i‡(
ªq
->
l
 && 
msg
->
msg_°©e
 < 
HTTP_MSG_ERROR
) {

2370 i‡((
txn
->
Êags
 & 
TX_NOT_FIRST
) &&

2371 
	`u∆ikñy
((
ªq
->
Êags
 & 
BF_FULL
) ||

2372 
ªq
->
r
 <Ñeq->
Ã
 ||

2373 
ªq
->
r
 >Ñeq->
d©a
 +Ñeq->
size
 - 
globÆ
.
tu√
.
maxªwrôe
)) {

2374 i‡(
ªq
->
£nd_max
) {

2375 i‡(
ªq
->
Êags
 & (
BF_SHUTW
|
BF_SHUTW_NOW
|
BF_WRITE_ERROR
|
BF_WRITE_TIMEOUT
))

2376 
Áûed_kìp_Æive
;

2378 
	`buf„r_d⁄t_c⁄√˘
(
ªq
);

2379 
ªq
->
Êags
 |
BF_READ_DONTWAIT
;

2382 i‡(
ªq
->
l
 <ªq->
size
 - 
globÆ
.
tu√
.
maxªwrôe
)

2383 
	`hâp_buf„r_hóvy_ªÆign
(
ªq
, 
msg
);

2393 i‡((
txn
->
Êags
 & 
TX_NOT_FIRST
) &&

2394 
	`u∆ikñy
((
s
->
ªp
->
Êags
 & 
BF_FULL
) ||

2395 
s
->
ªp
->
r
 < s->ªp->
Ã
 ||

2396 
s
->
ªp
->
r
 > s->ªp->
d©a
 + s->ªp->
size
 - 
globÆ
.
tu√
.
maxªwrôe
)) {

2397 i‡(
s
->
ªp
->
£nd_max
) {

2398 i‡(
s
->
ªp
->
Êags
 & (
BF_SHUTW
|
BF_SHUTW_NOW
|
BF_WRITE_ERROR
|
BF_WRITE_TIMEOUT
))

2399 
Áûed_kìp_Æive
;

2401 
	`buf„r_d⁄t_c⁄√˘
(
ªq
);

2402 
s
->
ªp
->
Êags
 &~
BF_EXPECT_MORE
;

2407 i‡(
	`likñy
(
ªq
->
Ã
 <Ñeq->
r
))

2408 
	`hâp_msg_™Æyzî
(
ªq
, 
msg
, &
txn
->
hdr_idx
);

2412 i‡(
	`u∆ikñy
((
globÆ
.
mode
 & 
MODE_DEBUG
) &&

2413 (!(
globÆ
.
mode
 & 
MODE_QUIET
Ë|| (globÆ.modê& 
MODE_VERBOSE
)) &&

2414 
msg
->
sﬁ
 &&

2415 (
msg
->
msg_°©e
 >
HTTP_MSG_BODY
 || msg->msg_°©ê=
HTTP_MSG_ERROR
))) {

2416 *
eﬁ
, *
sﬁ
;

2418 
sﬁ
 = 
ªq
->
d©a
 + 
msg
->
som
;

2419 
eﬁ
 = 
sﬁ
 + 
msg
->
¶
.
rq
.
l
;

2420 
	`debug_hdr
("˛úeq", 
s
, 
sﬁ
, 
eﬁ
);

2422 
sﬁ
 +
	`hdr_idx_fú°_pos
(&
txn
->
hdr_idx
);

2423 
cur_idx
 = 
	`hdr_idx_fú°_idx
(&
txn
->
hdr_idx
);

2425 
cur_idx
) {

2426 
eﬁ
 = 
sﬁ
 + 
txn
->
hdr_idx
.
v
[
cur_idx
].
Àn
;

2427 
	`debug_hdr
("˛ihdr", 
s
, 
sﬁ
, 
eﬁ
);

2428 
sﬁ
 = 
eﬁ
 + 
txn
->
hdr_idx
.
v
[
cur_idx
].
¸
 + 1;

2429 
cur_idx
 = 
txn
->
hdr_idx
.
v
[cur_idx].
√xt
;

2446 i‡(
	`u∆ikñy
(
msg
->
msg_°©e
 < 
HTTP_MSG_BODY
)) {

2450 i‡(
	`u∆ikñy
(
msg
->
msg_°©e
 =
HTTP_MSG_ERROR
)) {

2451 
	`¥oxy_öc_„_ªq_˘r
(
s
->
„
);

2452 
ªtu∫_bad_ªq
;

2460 i‡(
	`u∆ikñy
(
ªq
->
Êags
 & 
BF_FULL
)) {

2464 
	`¥oxy_öc_„_ªq_˘r
(
s
->
„
);

2465 
ªtu∫_bad_ªq
;

2469 i‡(
ªq
->
Êags
 & 
BF_READ_ERROR
) {

2470 i‡(!(
s
->
Êags
 & 
SN_ERR_MASK
))

2471 
s
->
Êags
 |
SN_ERR_CLICL
;

2473 i‡(
txn
->
Êags
 & 
TX_WAIT_NEXT_RQ
)

2474 
Áûed_kìp_Æive
;

2477 i‡(
msg
->
îr_pos
 >= 0)

2478 
	`hâp_ˇ±uª_bad_mesßge
(&
s
->
„
->
övÆid_ªq
, s, 
ªq
, 
msg
, s->fe);

2479 
msg
->
msg_°©e
 = 
HTTP_MSG_ERROR
;

2480 
ªq
->
™Æy£rs
 = 0;

2482 
	`¥oxy_öc_„_ªq_˘r
(
s
->
„
);

2483 
s
->
„
->
cou¡îs
.
Áûed_ªq
++;

2484 i‡(
s
->
li°íî
->
cou¡îs
)

2485 
s
->
li°íî
->
cou¡îs
->
Áûed_ªq
++;

2487 i‡(!(
s
->
Êags
 & 
SN_FINST_MASK
))

2488 
s
->
Êags
 |
SN_FINST_R
;

2493 i‡(
ªq
->
Êags
 & 
BF_READ_TIMEOUT
 || 
	`tick_is_expúed
‘eq->
™Æy£_exp
, 
now_ms
)) {

2494 i‡(!(
s
->
Êags
 & 
SN_ERR_MASK
))

2495 
s
->
Êags
 |
SN_ERR_CLITO
;

2497 i‡(
txn
->
Êags
 & 
TX_WAIT_NEXT_RQ
)

2498 
Áûed_kìp_Æive
;

2501 i‡(
msg
->
îr_pos
 >= 0)

2502 
	`hâp_ˇ±uª_bad_mesßge
(&
s
->
„
->
övÆid_ªq
, s, 
ªq
, 
msg
, s->fe);

2503 
txn
->
°©us
 = 408;

2504 
	`°ªam_öt_ªä˛o£
(
ªq
->
¥od
, 
	`îr‹_mesßge
(
s
, 
HTTP_ERR_408
));

2505 
msg
->
msg_°©e
 = 
HTTP_MSG_ERROR
;

2506 
ªq
->
™Æy£rs
 = 0;

2508 
	`¥oxy_öc_„_ªq_˘r
(
s
->
„
);

2509 
s
->
„
->
cou¡îs
.
Áûed_ªq
++;

2510 i‡(
s
->
li°íî
->
cou¡îs
)

2511 
s
->
li°íî
->
cou¡îs
->
Áûed_ªq
++;

2513 i‡(!(
s
->
Êags
 & 
SN_FINST_MASK
))

2514 
s
->
Êags
 |
SN_FINST_R
;

2519 i‡(
ªq
->
Êags
 & 
BF_SHUTR
) {

2520 i‡(!(
s
->
Êags
 & 
SN_ERR_MASK
))

2521 
s
->
Êags
 |
SN_ERR_CLICL
;

2523 i‡(
txn
->
Êags
 & 
TX_WAIT_NEXT_RQ
)

2524 
Áûed_kìp_Æive
;

2526 i‡(
msg
->
îr_pos
 >= 0)

2527 
	`hâp_ˇ±uª_bad_mesßge
(&
s
->
„
->
övÆid_ªq
, s, 
ªq
, 
msg
, s->fe);

2528 
txn
->
°©us
 = 400;

2529 
	`°ªam_öt_ªä˛o£
(
ªq
->
¥od
, 
	`îr‹_mesßge
(
s
, 
HTTP_ERR_400
));

2530 
msg
->
msg_°©e
 = 
HTTP_MSG_ERROR
;

2531 
ªq
->
™Æy£rs
 = 0;

2533 
	`¥oxy_öc_„_ªq_˘r
(
s
->
„
);

2534 
s
->
„
->
cou¡îs
.
Áûed_ªq
++;

2535 i‡(
s
->
li°íî
->
cou¡îs
)

2536 
s
->
li°íî
->
cou¡îs
->
Áûed_ªq
++;

2538 i‡(!(
s
->
Êags
 & 
SN_FINST_MASK
))

2539 
s
->
Êags
 |
SN_FINST_R
;

2543 
	`buf„r_d⁄t_c⁄√˘
(
ªq
);

2544 
ªq
->
Êags
 |
BF_READ_DONTWAIT
;

2545 
s
->
ªp
->
Êags
 &~
BF_EXPECT_MORE
;

2547 i‡((
msg
->
msg_°©e
 !
HTTP_MSG_RQBEFORE
Ë&& (
txn
->
Êags
 & 
TX_WAIT_NEXT_RQ
)) {

2551 
txn
->
Êags
 &~
TX_WAIT_NEXT_RQ
;

2552 
ªq
->
™Æy£_exp
 = 
TICK_ETERNITY
;

2556 i‡(!
	`tick_is£t
(
ªq
->
™Æy£_exp
)) {

2557 i‡((
msg
->
msg_°©e
 =
HTTP_MSG_RQBEFORE
) &&

2558 (
txn
->
Êags
 & 
TX_WAIT_NEXT_RQ
) &&

2559 
	`tick_is£t
(
s
->
be
->
timeout
.
hâpka
))

2560 
ªq
->
™Æy£_exp
 = 
	`tick_add
(
now_ms
, 
s
->
be
->
timeout
.
hâpka
);

2562 
ªq
->
™Æy£_exp
 = 
	`tick_add_if£t
(
now_ms
, 
s
->
be
->
timeout
.
hâ¥eq
);

2568 
Áûed_kìp_Æive
:

2574 
txn
->
°©us
 = 0;

2575 
msg
->
msg_°©e
 = 
HTTP_MSG_RQBEFORE
;

2576 
ªq
->
™Æy£rs
 = 0;

2577 
s
->
logs
.
logwaô
 = 0;

2578 
s
->
ªp
->
Êags
 &~
BF_EXPECT_MORE
;

2579 
	`°ªam_öt_ªä˛o£
(
ªq
->
¥od
, 
NULL
);

2593 
	`¥oxy_öc_„_ªq_˘r
(
s
->
„
);

2595 i‡(
txn
->
Êags
 & 
TX_WAIT_NEXT_RQ
) {

2597 
txn
->
Êags
 &~
TX_WAIT_NEXT_RQ
;

2598 
ªq
->
™Æy£_exp
 = 
TICK_ETERNITY
;

2605 i‡(
	`u∆ikñy
(
msg
->
îr_pos
 >= 0))

2606 
	`hâp_ˇ±uª_bad_mesßge
(&
s
->
„
->
övÆid_ªq
, s, 
ªq
, 
msg
, s->fe);

2611 
txn
->
mëh
 = 
	`föd_hâp_mëh
(
msg
->
sﬁ
, msg->
¶
.
rq
.
m_l
);

2614 i‡(
txn
->
mëh
 =
HTTP_METH_GET
 ||Åxn->mëh =
HTTP_METH_HEAD
)

2615 
s
->
Êags
 |
SN_REDIRECTABLE
;

2622 i‡(
	`u∆ikñy
((
s
->
„
->
m⁄ô‹_uri_Àn
 != 0) &&

2623 (
s
->
„
->
m⁄ô‹_uri_Àn
 =
msg
->
¶
.
rq
.
u_l
) &&

2624 !
	`memcmp
(
msg
->
sﬁ
 + msg->
¶
.
rq
.
u
,

2625 
s
->
„
->
m⁄ô‹_uri
,

2626 
s
->
„
->
m⁄ô‹_uri_Àn
))) {

2630 
a˛_c⁄d
 *
c⁄d
;

2632 
s
->
Êags
 |
SN_MONITOR
;

2635 
	`li°_f‹_óch_íåy
(
c⁄d
, &
s
->
„
->
m⁄_Áû_c⁄d
, 
li°
) {

2636 
ªt
 = 
	`a˛_exec_c⁄d
(
c⁄d
, 
s
->
„
, s, 
txn
, 
ACL_DIR_REQ
);

2638 
ªt
 = 
	`a˛_∑ss
(ret);

2639 i‡(
c⁄d
->
pﬁ
 =
ACL_COND_UNLESS
)

2640 
ªt
 = !ret;

2642 i‡(
ªt
) {

2644 
txn
->
°©us
 = 503;

2645 
	`°ªam_öt_ªä˛o£
(
ªq
->
¥od
, 
	`îr‹_mesßge
(
s
, 
HTTP_ERR_503
));

2646 
ªtu∫_¥x_c⁄d
;

2651 
txn
->
°©us
 = 200;

2652 
	`°ªam_öt_ªä˛o£
(
ªq
->
¥od
, &
hâp_200_chunk
);

2653 
ªtu∫_¥x_c⁄d
;

2661 i‡(
	`u∆ikñy
(
s
->
logs
.
logwaô
 & 
LW_REQ
)) {

2663 i‡((
txn
->
uri
 = 
	`poﬁ_Æloc2
(
poﬁ2_ªquri
)Ë!
NULL
) {

2664 
urûí
 = 
msg
->
¶
.
rq
.
l
;

2666 i‡(
urûí
 >
REQURI_LEN
)

2667 
urûí
 = 
REQURI_LEN
 - 1;

2668 
	`mem˝y
(
txn
->
uri
, &
ªq
->
d©a
[
msg
->
som
], 
urûí
);

2669 
txn
->
uri
[
urûí
] = 0;

2671 i‡(!(
s
->
logs
.
logwaô
 &~
LW_REQ
))

2672 
s
->
	`do_log
(s);

2674 
	`AÀπ
("HTTPÜogging : out of memory.\n");

2679 i‡(
	`u∆ikñy
(
msg
->
¶
.
rq
.
v_l
 =0Ë&& !
	`hâp_upgøde_v09_to_v10
(
ªq
, msg, 
txn
))

2680 
ªtu∫_bad_ªq
;

2683 i‡((
msg
->
¶
.
rq
.
v_l
 == 8) &&

2684 ((
msg
->
sﬁ
[msg->
¶
.
rq
.
v
 + 5] > '1') ||

2685 ((
msg
->
sﬁ
[msg->
¶
.
rq
.
v
 + 5] == '1') &&

2686 (
msg
->
sﬁ
[msg->
¶
.
rq
.
v
 + 7] >= '1'))))

2687 
txn
->
Êags
 |
TX_REQ_VER_11
;

2690 
txn
->
Êags
 &~(
TX_HDR_CONN_PRS
 | 
TX_HDR_CONN_CLO
 | 
TX_HDR_CONN_KAL
);

2701 i‡((
s
->
„
->
›ti⁄s2
 & 
PR_O2_USE_PXHDR
) &&

2702 
msg
->
sﬁ
[msg->
¶
.
rq
.
u
] != '/' && msg->sol[msg->sl.rq.u] != '*')

2703 
txn
->
Êags
 |
TX_USE_PX_CONN
;

2706 
txn
->
Êags
 &~
TX_REQ_XFER_LEN
;

2709 i‡(
	`u∆ikñy
((
s
->
logs
.
logwaô
 & 
LW_REQHDR
Ë&& s->
„
->
ªq_ˇp
))

2710 
	`ˇ±uª_hódîs
(
msg
->
sﬁ
, &
txn
->
hdr_idx
,

2711 
txn
->
ªq
.
ˇp
, 
s
->
„
->
ªq_ˇp
);

2751 
u£_˛o£_⁄ly
 = 0;

2752 
˘x
.
idx
 = 0;

2754 (
txn
->
Êags
 & 
TX_REQ_VER_11
) &&

2755 
	`hâp_föd_hódî2
("Tøns„r-Encodög", 17, 
msg
->
sﬁ
, &
txn
->
hdr_idx
, &
˘x
)) {

2756 i‡(
˘x
.
vÀn
 =7 && 
	`°∫ˇ£cmp
(˘x.
löe
 + ctx.
vÆ
, "chunked", 7) == 0)

2757 
txn
->
Êags
 |(
TX_REQ_TE_CHNK
 | 
TX_REQ_XFER_LEN
);

2758 i‡(
txn
->
Êags
 & 
TX_REQ_TE_CHNK
) {

2760 
u£_˛o£_⁄ly
 = 1;

2761 
txn
->
Êags
 &~(
TX_REQ_TE_CHNK
 | 
TX_REQ_XFER_LEN
);

2766 
˘x
.
idx
 = 0;

2767 !(
txn
->
Êags
 & 
TX_REQ_TE_CHNK
Ë&& !
u£_˛o£_⁄ly
 &&

2768 
	`hâp_föd_hódî2
("C⁄ã¡-Lígth", 14, 
msg
->
sﬁ
, &
txn
->
hdr_idx
, &
˘x
)) {

2769 sig√d 
˛
;

2771 i‡(!
˘x
.
vÀn
)

2772 
ªtu∫_bad_ªq
;

2774 i‡(
	`°æ2Œrc
(
˘x
.
löe
 + ctx.
vÆ
, ctx.
vÀn
, &
˛
))

2775 
ªtu∫_bad_ªq
;

2777 i‡(
˛
 < 0)

2778 
ªtu∫_bad_ªq
;

2780 i‡((
txn
->
Êags
 & 
TX_REQ_CNT_LEN
Ë&& (
msg
->
hdr_c⁄ã¡_Àn
 !
˛
))

2781 
ªtu∫_bad_ªq
;

2783 
txn
->
Êags
 |
TX_REQ_CNT_LEN
 | 
TX_REQ_XFER_LEN
;

2784 
msg
->
hdr_c⁄ã¡_Àn
 = 
˛
;

2788 i‡(!
u£_˛o£_⁄ly
)

2789 
txn
->
Êags
 |
TX_REQ_XFER_LEN
;

2792 
ªq
->
™Æy£rs
 &~
™_bô
;

2793 
ªq
->
™Æy£_exp
 = 
TICK_ETERNITY
;

2796 
ªtu∫_bad_ªq
:

2798 i‡(
	`u∆ikñy
(
msg
->
msg_°©e
 =
HTTP_MSG_ERROR
Ë|| msg->
îr_pos
 >= 0) {

2802 
	`hâp_ˇ±uª_bad_mesßge
(&
s
->
„
->
övÆid_ªq
, s, 
ªq
, 
msg
, s->fe);

2805 
txn
->
ªq
.
msg_°©e
 = 
HTTP_MSG_ERROR
;

2806 
txn
->
°©us
 = 400;

2807 
	`°ªam_öt_ªä˛o£
(
ªq
->
¥od
, 
	`îr‹_mesßge
(
s
, 
HTTP_ERR_400
));

2809 
s
->
„
->
cou¡îs
.
Áûed_ªq
++;

2810 i‡(
s
->
li°íî
->
cou¡îs
)

2811 
s
->
li°íî
->
cou¡îs
->
Áûed_ªq
++;

2813 
ªtu∫_¥x_c⁄d
:

2814 i‡(!(
s
->
Êags
 & 
SN_ERR_MASK
))

2815 
s
->
Êags
 |
SN_ERR_PRXCOND
;

2816 i‡(!(
s
->
Êags
 & 
SN_FINST_MASK
))

2817 
s
->
Êags
 |
SN_FINST_R
;

2819 
ªq
->
™Æy£rs
 = 0;

2820 
ªq
->
™Æy£_exp
 = 
TICK_ETERNITY
;

2822 
	}
}

2829 
	$hâp_¥o˚ss_ªq_°©_po°
(
£ssi⁄
 *
s
, 
buf„r
 *
ªq
)

2831 
hâp_txn
 *
txn
 = &
s
->txn;

2832 
¥oxy
 *
px
;

2833 
£rvî
 *
sv
;

2835 *
backíd
 = 
NULL
;

2836 
a˘i⁄
 = 0;

2838 *
fú°_∑øm
, *
cur_∑øm
, *
√xt_∑øm
, *
íd_∑øms
;

2840 
fú°_∑øm
 = 
ªq
->
d©a
 + 
txn
->ªq.
eoh
 + 2;

2841 
íd_∑øms
 = 
fú°_∑øm
 + 
txn
->
ªq
.
hdr_c⁄ã¡_Àn
;

2843 
cur_∑øm
 = 
√xt_∑øm
 = 
íd_∑øms
;

2845 i‡(
íd_∑øms
 >
ªq
->
d©a
 +Ñeq->
size
) {

2847 
s
->
d©a_˘x
.
°©s
.
°_code
 = 
STAT_STATUS_EXCD
;

2850 i‡(
íd_∑øms
 > 
ªq
->
d©a
 +Ñeq->
l
) {

2852 
s
->
d©a_˘x
.
°©s
.
°_code
 = 
STAT_STATUS_EXCD
;

2856 *
íd_∑øms
 = '\0';

2858 
s
->
d©a_˘x
.
°©s
.
°_code
 = 
STAT_STATUS_NONE
;

2864 
cur_∑øm
 > 
fú°_∑øm
) {

2865 *
key
, *
vÆue
;

2867 
cur_∑øm
--;

2868 i‡((*
cur_∑øm
 ='&'Ë|| (cur_∑øm =
fú°_∑øm
)) {

2870 
key
 = 
cur_∑øm
;

2871 i‡(
cur_∑øm
 !
fú°_∑øm
) {

2873 *
key
++ = '\0';

2877 
vÆue
 = 
key
;

2878 *
vÆue
 != '\0' && *value != '=') {

2879 
vÆue
++;

2881 i‡(*
vÆue
 == '=') {

2883 *
vÆue
++ = '\0';

2887 i‡(!
backíd
 && 
	`°rcmp
(
key
, "b") == 0) {

2888 
backíd
 = 
vÆue
;

2890 i‡(!
a˘i⁄
 && 
	`°rcmp
(
key
, "action") == 0) {

2891 i‡(
	`°rcmp
(
vÆue
, "disable") == 0) {

2892 
a˘i⁄
 = 1;

2894 i‡(
	`°rcmp
(
vÆue
, "enable") == 0) {

2895 
a˘i⁄
 = 2;

2901 i‡(
	`°rcmp
(
key
, "s") == 0) {

2902 i‡(
backíd
 && 
a˘i⁄
 && 
	`gë_backíd_£rvî
(backíd, 
vÆue
, &
px
, &
sv
)) {

2903 
a˘i⁄
) {

2905 i‡(! (
sv
->
°©e
 & 
SRV_MAINTAIN
)) {

2907 
sv
->
°©e
 |
SRV_MAINTAIN
;

2908 
	`£t_£rvî_down
(
sv
);

2909 
s
->
d©a_˘x
.
°©s
.
°_code
 = 
STAT_STATUS_DONE
;

2913 i‡((
sv
->
°©e
 & 
SRV_MAINTAIN
)) {

2915 
	`£t_£rvî_up
(
sv
);

2916 
sv
->
hó…h
 = sv->
ri£
;

2917 
s
->
d©a_˘x
.
°©s
.
°_code
 = 
STAT_STATUS_DONE
;

2923 
√xt_∑øm
 = 
cur_∑øm
;

2927 
	}
}

2936 
	$hâp_¥o˚ss_ªq_comm⁄
(
£ssi⁄
 *
s
, 
buf„r
 *
ªq
, 
™_bô
, 
¥oxy
 *
px
)

2938 
hâp_txn
 *
txn
 = &
s
->txn;

2939 
hâp_msg
 *
msg
 = &
txn
->
ªq
;

2940 
a˛_c⁄d
 *
c⁄d
;

2941 
ªq_a˛_ruÀ
 *
ªq_a˛
, *
ªq_a˛_föÆ
 = 
NULL
;

2942 
ªdúe˘_ruÀ
 *
ruÀ
;

2943 
c⁄d_w‹dli°
 *
wl
;

2944 
dñ_ka
, 
dñ_˛
, 
do_°©s
;

2946 i‡(
	`u∆ikñy
(
msg
->
msg_°©e
 < 
HTTP_MSG_BODY
)) {

2948 
	`buf„r_d⁄t_c⁄√˘
(
ªq
);

2952 
ªq
->
™Æy£rs
 &~
™_bô
;

2953 
ªq
->
™Æy£_exp
 = 
TICK_ETERNITY
;

2955 
	`DPRINTF
(
°dîr
,"[%u] %s: session=%p b=%p,Éxp(r,w)=%u,%u bf=%08x bl=%dánalysers=%02x\n",

2956 
now_ms
, 
__FUNCTION__
,

2957 
s
,

2958 
ªq
,

2959 
ªq
->
ªx
,Ñeq->
wex
,

2960 
ªq
->
Êags
,

2961 
ªq
->
l
,

2962 
ªq
->
™Æy£rs
);

2965 
	`li°_f‹_óch_íåy
(
c⁄d
, &
px
->
block_c⁄d
, 
li°
) {

2966 
ªt
 = 
	`a˛_exec_c⁄d
(
c⁄d
, 
px
, 
s
, 
txn
, 
ACL_DIR_REQ
);

2968 
ªt
 = 
	`a˛_∑ss
(ret);

2969 i‡(
c⁄d
->
pﬁ
 =
ACL_COND_UNLESS
)

2970 
ªt
 = !ret;

2972 i‡(
ªt
) {

2973 
txn
->
°©us
 = 403;

2975 
s
->
logs
.
tv_ªque°
 = 
now
;

2976 
	`°ªam_öt_ªä˛o£
(
ªq
->
¥od
, 
	`îr‹_mesßge
(
s
, 
HTTP_ERR_403
));

2977 
ªtu∫_¥x_c⁄d
;

2981 
do_°©s
 = 
	`°©s_check_uri
(
s
, 
px
);

2983 
	`li°_f‹_óch_íåy
(
ªq_a˛
, (
do_°©s
?&
px
->
uri_auth
->ªq_a˛:&px->ªq_a˛), 
li°
) {

2984 
ªt
 = 1;

2986 i‡(
ªq_a˛
->
a˘i⁄
 >
PR_REQ_ACL_ACT_MAX
)

2990 i‡(
ªq_a˛
->
c⁄d
) {

2991 
ªt
 = 
	`a˛_exec_c⁄d
(
ªq_a˛
->
c⁄d
, 
px
, 
s
, 
txn
, 
ACL_DIR_REQ
);

2992 
ªt
 = 
	`a˛_∑ss
(ret);

2994 i‡(
ªq_a˛
->
c⁄d
->
pﬁ
 =
ACL_COND_UNLESS
)

2995 
ªt
 = !ret;

2998 i‡(
ªt
) {

2999 
ªq_a˛_föÆ
 = 
ªq_a˛
;

3004 i‡(
ªq_a˛_föÆ
 &&Ñeq_a˛_föÆ->
a˘i⁄
 =
PR_REQ_ACL_ACT_DENY
) {

3005 
txn
->
°©us
 = 403;

3006 
s
->
logs
.
tv_ªque°
 = 
now
;

3007 
	`°ªam_öt_ªä˛o£
(
ªq
->
¥od
, 
	`îr‹_mesßge
(
s
, 
HTTP_ERR_403
));

3008 
ªtu∫_¥x_c⁄d
;

3012 i‡(
px
->
ªq_exp
 !
NULL
) {

3013 i‡(
	`≠∂y_fûãrs_to_ªque°
(
s
, 
ªq
, 
px
) < 0)

3014 
ªtu∫_bad_ªq
;

3017 i‡(
txn
->
Êags
 & 
TX_CLDENY
) {

3019 
txn
->
°©us
 = 403;

3021 
s
->
logs
.
tv_ªque°
 = 
now
;

3022 
	`°ªam_öt_ªä˛o£
(
ªq
->
¥od
, 
	`îr‹_mesßge
(
s
, 
HTTP_ERR_403
));

3023 
ªtu∫_¥x_c⁄d
;

3031 i‡(
txn
->
Êags
 & 
TX_CLTARPIT
) {

3032 
	`buf„r_îa£
(
s
->
ªq
);

3036 
	`buf„r_d⁄t_c⁄√˘
(
ªq
);

3037 
ªq
->
™Æy£rs
 = 0;

3038 
ªq
->
™Æy£rs
 |
AN_REQ_HTTP_TARPIT
;

3039 
ªq
->
™Æy£_exp
 = 
	`tick_add_if£t
(
now_ms
, 
s
->
be
->
timeout
.
èΩô
);

3040 i‡(!
ªq
->
™Æy£_exp
)

3041 
ªq
->
™Æy£_exp
 = 
	`tick_add
(
now_ms
, 0);

3057 
dñ_˛
 = 
dñ_ka
 = 0;

3059 i‡((!(
txn
->
Êags
 & 
TX_HDR_CONN_PRS
) &&

3060 (
s
->
„
->
›ti⁄s
 & (
PR_O_KEEPALIVE
|
PR_O_SERVER_CLO
|
PR_O_HTTP_CLOSE
|
PR_O_FORCE_CLO
))) ||

3061 ((
s
->
„
->
›ti⁄s
 & (
PR_O_KEEPALIVE
|
PR_O_SERVER_CLO
|
PR_O_HTTP_CLOSE
|
PR_O_FORCE_CLO
)) !=

3062 (
s
->
be
->
›ti⁄s
 & (
PR_O_KEEPALIVE
|
PR_O_SERVER_CLO
|
PR_O_HTTP_CLOSE
|
PR_O_FORCE_CLO
)))) {

3063 
tmp
 = 
TX_CON_WANT_TUN
;

3065 i‡((
s
->
„
->
›ti⁄s
|s->
be
->›ti⁄sË& 
PR_O_KEEPALIVE
)

3066 
tmp
 = 
TX_CON_WANT_KAL
;

3067 i‡((
s
->
„
->
›ti⁄s
|s->
be
->›ti⁄sË& 
PR_O_SERVER_CLO
)

3068 
tmp
 = 
TX_CON_WANT_SCL
;

3069 i‡((
s
->
„
->
›ti⁄s
|s->
be
->›ti⁄sË& 
PR_O_FORCE_CLO
)

3070 
tmp
 = 
TX_CON_WANT_CLO
;

3072 i‡((
txn
->
Êags
 & 
TX_CON_WANT_MSK
Ë< 
tmp
)

3073 
txn
->
Êags
 = (txn->Êag†& ~
TX_CON_WANT_MSK
Ë| 
tmp
;

3075 i‡(!(
txn
->
Êags
 & 
TX_HDR_CONN_PRS
)) {

3077 
to_dñ
 = 0;

3078 i‡((
txn
->
Êags
 & 
TX_REQ_VER_11
) ||

3079 ((
txn
->
Êags
 & 
TX_CON_WANT_MSK
Ë>
TX_CON_WANT_SCL
 &&

3080 !((
s
->
„
->
›ti⁄s2
|s->
be
->›ti⁄s2Ë& 
PR_O2_FAKE_KA
)))

3081 
to_dñ
 |= 2;

3082 i‡(!(
txn
->
Êags
 & 
TX_REQ_VER_11
))

3083 
to_dñ
 |= 1;

3084 
	`hâp_∑r£_c⁄√˘i⁄_hódî
(
txn
, 
msg
, 
ªq
, 
to_dñ
);

3088 i‡(((
txn
->
Êags
 & 
TX_CON_WANT_MSK
Ë=
TX_CON_WANT_KAL
 ||

3089 (
txn
->
Êags
 & 
TX_CON_WANT_MSK
Ë=
TX_CON_WANT_SCL
) &&

3090 ((
txn
->
Êags
 & 
TX_HDR_CONN_CLO
) ||

3091 (
txn
->
Êags
 & (
TX_REQ_VER_11
|
TX_HDR_CONN_KAL
)) == 0 ||

3092 (((
s
->
„
->
›ti⁄s
|s->
be
->›ti⁄sË& 
PR_O_HTTP_CLOSE
) &&

3094 !(
txn
->
Êags
 & 
TX_REQ_XFER_LEN
) ||

3095 
s
->
„
->
°©e
 =
PR_STSTOPPED
))

3096 
txn
->
Êags
 = (txn->Êag†& ~
TX_CON_WANT_MSK
Ë| 
TX_CON_WANT_CLO
;

3100 
	`li°_f‹_óch_íåy
(
wl
, &
px
->
ªq_add
, 
li°
) {

3101 i‡(
wl
->
c⁄d
) {

3102 
ªt
 = 
	`a˛_exec_c⁄d
(
wl
->
c⁄d
, 
px
, 
s
, 
txn
, 
ACL_DIR_REQ
);

3103 
ªt
 = 
	`a˛_∑ss
(ret);

3104 i‡(((
a˛_c⁄d
 *)
wl
->
c⁄d
)->
pﬁ
 =
ACL_COND_UNLESS
)

3105 
ªt
 = !ret;

3106 i‡(!
ªt
)

3110 i‡(
	`u∆ikñy
(
	`hâp_hódî_add_èû
(
ªq
, &
txn
->ªq, &txn->
hdr_idx
, 
wl
->
s
) < 0))

3111 
ªtu∫_bad_ªq
;

3114 i‡(
ªq_a˛_föÆ
 &&Ñeq_a˛_föÆ->
a˘i⁄
 =
PR_REQ_ACL_ACT_HTTP_AUTH
) {

3115 
chunk
 
msg
;

3116 *
ªÆm
 = 
ªq_a˛
->
hâp_auth
.realm;

3118 i‡(!
ªÆm
)

3119 
ªÆm
 = 
do_°©s
?
STATS_DEFAULT_REALM
:
px
->
id
;

3121 
	`•rötf
(
åash
, (
txn
->
Êags
 & 
TX_USE_PX_CONN
Ë? 
HTTP_407_fmt
 : 
HTTP_401_fmt
, 
ªÆm
);

3122 
	`chunk_öôÀn
(&
msg
, 
åash
, —øsh), 
	`°æí
(trash));

3123 
txn
->
°©us
 = 401;

3124 
	`°ªam_öt_ªä˛o£
(
ªq
->
¥od
, &
msg
);

3125 
ªtu∫_¥x_c⁄d
;

3128 i‡(
do_°©s
) {

3129 
°©s_admö_ruÀ
 *stats_admin_rule;

3137 
	`li°_f‹_óch_íåy
(
°©s_admö_ruÀ
, &
s
->
be
->
uri_auth
->
admö_ruÀs
, 
li°
) {

3138 
ªt
 = 1;

3140 i‡(
°©s_admö_ruÀ
->
c⁄d
) {

3141 
ªt
 = 
	`a˛_exec_c⁄d
(
°©s_admö_ruÀ
->
c⁄d
, 
s
->
be
, s, &s->
txn
, 
ACL_DIR_REQ
);

3142 
ªt
 = 
	`a˛_∑ss
(ret);

3143 i‡(
°©s_admö_ruÀ
->
c⁄d
->
pﬁ
 =
ACL_COND_UNLESS
)

3144 
ªt
 = !ret;

3147 i‡(
ªt
) {

3149 
s
->
d©a_˘x
.
°©s
.
Êags
 |
STAT_ADMIN
;

3155 i‡(
txn
->
mëh
 =
HTTP_METH_POST
) {

3156 i‡(
s
->
d©a_˘x
.
°©s
.
Êags
 & 
STAT_ADMIN
) {

3157 
	`hâp_¥o˚ss_ªq_°©_po°
(
s
, 
ªq
);

3159 
s
->
d©a_˘x
.
°©s
.
°_code
 = 
STAT_STATUS_DENY
;

3163 
s
->
logs
.
tv_ªque°
 = 
now
;

3164 
s
->
d©a_sour˚
 = 
DATA_SRC_STATS
;

3165 
s
->
d©a_°©e
 = 
DATA_ST_INIT
;

3166 
s
->
èsk
->
ni˚
 = -32;

3167 
	`°ªam_öt_ªgi°î_h™dÀr
(
s
->
ªp
->
¥od
, 
hâp_°©s_io_h™dÀr
);

3168 
s
->
ªp
->
¥od
->
¥iv©e
 = s;

3169 
s
->
ªp
->
¥od
->
°0
 = s->ªp->¥od->
°1
 = 0;

3170 
ªq
->
™Æy£rs
 = 0;

3177 
	`li°_f‹_óch_íåy
(
ruÀ
, &
px
->
ªdúe˘_ruÀs
, 
li°
) {

3178 
ªt
 = 
ACL_PAT_PASS
;

3180 i‡(
ruÀ
->
c⁄d
) {

3181 
ªt
 = 
	`a˛_exec_c⁄d
(
ruÀ
->
c⁄d
, 
px
, 
s
, 
txn
, 
ACL_DIR_REQ
);

3182 
ªt
 = 
	`a˛_∑ss
(ret);

3183 i‡(
ruÀ
->
c⁄d
->
pﬁ
 =
ACL_COND_UNLESS
)

3184 
ªt
 = !ret;

3187 i‡(
ªt
) {

3188 
chunk
 
rdr
 = { .
°r
 = 
åash
, .
size
 = —øsh), .
Àn
 = 0 };

3189 c⁄° *
msg_fmt
;

3192 
ruÀ
->
code
) {

3194 
msg_fmt
 = 
HTTP_303
;

3197 
msg_fmt
 = 
HTTP_301
;

3201 
msg_fmt
 = 
HTTP_302
;

3205 i‡(
	`u∆ikñy
(!
	`chunk_°r˝y
(&
rdr
, 
msg_fmt
)))

3206 
ªtu∫_bad_ªq
;

3208 
ruÀ
->
ty≥
) {

3209 
REDIRECT_TYPE_PREFIX
: {

3210 c⁄° *
∑th
;

3211 
∑thÀn
;

3213 
∑th
 = 
	`hâp_gë_∑th
(
txn
);

3215 i‡(
∑th
) {

3216 
∑thÀn
 = 
txn
->
ªq
.
¶
.
rq
.
u_l
 + (txn->ªq.
sﬁ
 +Åxn->ªq.¶.rq.
u
Ë- 
∑th
;

3217 i‡(
ruÀ
->
Êags
 & 
REDIRECT_FLAG_DROP_QS
) {

3218 
qs
 = 0;

3219 
qs
 < 
∑thÀn
) {

3220 i‡(
∑th
[
qs
] == '?') {

3221 
∑thÀn
 = 
qs
;

3224 
qs
++;

3228 
∑th
 = "/";

3229 
∑thÀn
 = 1;

3232 i‡(
rdr
.
Àn
 + 
ruÀ
->
rdr_Àn
 + 
∑thÀn
 >Ñdr.
size
 - 4)

3233 
ªtu∫_bad_ªq
;

3239 i‡(
ruÀ
->
rdr_Àn
 !1 || *ruÀ->
rdr_°r
 != '/') {

3240 
	`mem˝y
(
rdr
.
°r
 +Ñdr.
Àn
, 
ruÀ
->
rdr_°r
,ÑuÀ->
rdr_Àn
);

3241 
rdr
.
Àn
 +
ruÀ
->
rdr_Àn
;

3245 
	`mem˝y
(
rdr
.
°r
 +Ñdr.
Àn
, 
∑th
, 
∑thÀn
);

3246 
rdr
.
Àn
 +
∑thÀn
;

3249 i‡(
rdr
.
Àn
 &&Ñdr.
°r
[rdr.len - 1] != '/' &&

3250 (
ruÀ
->
Êags
 & 
REDIRECT_FLAG_APPEND_SLASH
)) {

3251 i‡(
rdr
.
Àn
 >Ñdr.
size
 - 5)

3252 
ªtu∫_bad_ªq
;

3253 
rdr
.
°r
[rdr.
Àn
] = '/';

3254 
rdr
.
Àn
++;

3259 
REDIRECT_TYPE_LOCATION
:

3261 i‡(
rdr
.
Àn
 + 
ruÀ
->
rdr_Àn
 >Ñdr.
size
 - 4)

3262 
ªtu∫_bad_ªq
;

3265 
	`mem˝y
(
rdr
.
°r
 +Ñdr.
Àn
, 
ruÀ
->
rdr_°r
,ÑuÀ->
rdr_Àn
);

3266 
rdr
.
Àn
 +
ruÀ
->
rdr_Àn
;

3270 i‡(
ruÀ
->
cookõ_Àn
) {

3271 
	`mem˝y
(
rdr
.
°r
 +Ñdr.
Àn
, "\r\nSet-Cookie: ", 14);

3272 
rdr
.
Àn
 += 14;

3273 
	`mem˝y
(
rdr
.
°r
 +Ñdr.
Àn
, 
ruÀ
->
cookõ_°r
,ÑuÀ->
cookõ_Àn
);

3274 
rdr
.
Àn
 +
ruÀ
->
cookõ_Àn
;

3275 
	`mem˝y
(
rdr
.
°r
 +Ñdr.
Àn
, "\r\n", 2);

3276 
rdr
.
Àn
 += 2;

3284 
txn
->
°©us
 = 
ruÀ
->
code
;

3286 
s
->
logs
.
tv_ªque°
 = 
now
;

3288 i‡(
ruÀ
->
rdr_Àn
 >1 && *ruÀ->
rdr_°r
 == '/' &&

3289 (
txn
->
Êags
 & 
TX_REQ_XFER_LEN
) &&

3290 !(
txn
->
Êags
 & 
TX_REQ_TE_CHNK
Ë&& !txn->
ªq
.
hdr_c⁄ã¡_Àn
 &&

3291 ((
txn
->
Êags
 & 
TX_CON_WANT_MSK
Ë=
TX_CON_WANT_SCL
 ||

3292 (
txn
->
Êags
 & 
TX_CON_WANT_MSK
Ë=
TX_CON_WANT_KAL
)) {

3294 i‡(!(
txn
->
Êags
 & 
TX_REQ_VER_11
)) {

3295 i‡(
	`u∆ikñy
(
txn
->
Êags
 & 
TX_USE_PX_CONN
)) {

3296 
	`mem˝y
(
rdr
.
°r
 +Ñdr.
Àn
, "\r\nProxy-Connection: keep-alive", 30);

3297 
rdr
.
Àn
 += 30;

3299 
	`mem˝y
(
rdr
.
°r
 +Ñdr.
Àn
, "\r\nConnection: keep-alive", 24);

3300 
rdr
.
Àn
 += 24;

3303 
	`mem˝y
(
rdr
.
°r
 +Ñdr.
Àn
, "\r\n\r\n", 4);

3304 
rdr
.
Àn
 += 4;

3305 
	`buf„r_wrôe
(
ªq
->
¥od
->
ob
, 
rdr
.
°r
,Ñdr.
Àn
);

3307 
	`buf„r_ign‹e
(
ªq
, 
msg
->
sov
 - msg->
som
);

3308 
msg
->
som
 = msg->
sov
;

3309 
ªq
->
™Æy£rs
 = 
AN_REQ_HTTP_XFER_BODY
;

3310 
s
->
ªp
->
™Æy£rs
 = 
AN_RES_HTTP_XFER_BODY
;

3311 
txn
->
ªq
.
msg_°©e
 = 
HTTP_MSG_CLOSED
;

3312 
txn
->
r•
.
msg_°©e
 = 
HTTP_MSG_DONE
;

3316 i‡(
	`u∆ikñy
(
txn
->
Êags
 & 
TX_USE_PX_CONN
)) {

3317 
	`mem˝y
(
rdr
.
°r
 +Ñdr.
Àn
, "\r\nProxy-Connection: close\r\n\r\n", 29);

3318 
rdr
.
Àn
 += 29;

3320 
	`mem˝y
(
rdr
.
°r
 +Ñdr.
Àn
, "\r\nConnection: close\r\n\r\n", 23);

3321 
rdr
.
Àn
 += 23;

3323 
	`°ªam_öt_ªä˛o£
(
ªq
->
¥od
, &
rdr
);

3324 
ªtu∫_¥x_c⁄d
;

3336 
ªq
->
Êags
 |
BF_SEND_DONTWAIT
;

3341 
ªtu∫_bad_ªq
:

3343 i‡(
	`u∆ikñy
(
msg
->
msg_°©e
 =
HTTP_MSG_ERROR
Ë|| msg->
îr_pos
 >= 0) {

3347 
	`hâp_ˇ±uª_bad_mesßge
(&
s
->
„
->
övÆid_ªq
, s, 
ªq
, 
msg
, s->fe);

3350 
txn
->
ªq
.
msg_°©e
 = 
HTTP_MSG_ERROR
;

3351 
txn
->
°©us
 = 400;

3352 
	`°ªam_öt_ªä˛o£
(
ªq
->
¥od
, 
	`îr‹_mesßge
(
s
, 
HTTP_ERR_400
));

3354 
s
->
„
->
cou¡îs
.
Áûed_ªq
++;

3355 i‡(
s
->
li°íî
->
cou¡îs
)

3356 
s
->
li°íî
->
cou¡îs
->
Áûed_ªq
++;

3358 
ªtu∫_¥x_c⁄d
:

3359 i‡(!(
s
->
Êags
 & 
SN_ERR_MASK
))

3360 
s
->
Êags
 |
SN_ERR_PRXCOND
;

3361 i‡(!(
s
->
Êags
 & 
SN_FINST_MASK
))

3362 
s
->
Êags
 |
SN_FINST_R
;

3364 
ªq
->
™Æy£rs
 = 0;

3365 
ªq
->
™Æy£_exp
 = 
TICK_ETERNITY
;

3367 
	}
}

3374 
	$hâp_¥o˚ss_ªque°
(
£ssi⁄
 *
s
, 
buf„r
 *
ªq
, 
™_bô
)

3376 
hâp_txn
 *
txn
 = &
s
->txn;

3377 
hâp_msg
 *
msg
 = &
txn
->
ªq
;

3379 i‡(
	`u∆ikñy
(
msg
->
msg_°©e
 < 
HTTP_MSG_BODY
)) {

3381 
	`buf„r_d⁄t_c⁄√˘
(
ªq
);

3385 
	`DPRINTF
(
°dîr
,"[%u] %s: session=%p b=%p,Éxp(r,w)=%u,%u bf=%08x bl=%dánalysers=%02x\n",

3386 
now_ms
, 
__FUNCTION__
,

3387 
s
,

3388 
ªq
,

3389 
ªq
->
ªx
,Ñeq->
wex
,

3390 
ªq
->
Êags
,

3391 
ªq
->
l
,

3392 
ªq
->
™Æy£rs
);

3405 i‡((
s
->
be
->
›ti⁄s
 & 
PR_O_HTTP_PROXY
Ë&& !(s->
Êags
 & 
SN_ADDR_SET
)) {

3406 
	`uæ2ß
(
msg
->
sﬁ
 + msg->
¶
.
rq
.
u
, msg->¶.rq.
u_l
, &
s
->
§v_addr
);

3415 i‡((
s
->
be
->
cookõ_«me
 || s->be->
≠p£ssi⁄_«me
 || s->
„
->
ˇ±uª_«me
)

3416 && !(
txn
->
Êags
 & (
TX_CLDENY
|
TX_CLTARPIT
)))

3417 
	`m™age_˛õ¡_side_cookõs
(
s
, 
ªq
);

3425 i‡((
txn
->
£ssid
 =
NULL
Ë&& 
s
->
be
->
≠p£ssi⁄_«me
 && !(s->
Êags
 & 
SN_IGNORE_PRST
)) {

3426 
	`gë_§v_‰om_≠p£ssi⁄
(
s
, 
msg
->
sﬁ
 + msg->
¶
.
rq
.
u
, msg->¶.rq.
u_l
);

3433 i‡((
s
->
„
->
›ti⁄s
 | s->
be
->›ti⁄sË& 
PR_O_FWDFOR
) {

3434 i‡(
s
->
˛i_addr
.
ss_Ámûy
 =
AF_INET
) {

3438 i‡((!
s
->
„
->
ex˚±_mask
.
s_addr
 ||

3439 (((
sockaddr_ö
 *)&
s
->
˛i_addr
)->
sö_addr
.
s_addr
 & s->
„
->
ex˚±_mask
.s_addr)

3440 !
s
->
„
->
ex˚±_√t
.
s_addr
) &&

3441 (!
s
->
be
->
ex˚±_mask
.
s_addr
 ||

3442 (((
sockaddr_ö
 *)&
s
->
˛i_addr
)->
sö_addr
.
s_addr
 & s->
be
->
ex˚±_mask
.s_addr)

3443 !
s
->
be
->
ex˚±_√t
.
s_addr
)) {

3444 
Àn
;

3445 *
≤
;

3446 
≤
 = (*)&((
sockaddr_ö
 *)&
s
->
˛i_addr
)->
sö_addr
;

3453 i‡(
s
->
be
->
fwdf‹_hdr_Àn
) {

3454 
Àn
 = 
s
->
be
->
fwdf‹_hdr_Àn
;

3455 
	`mem˝y
(
åash
, 
s
->
be
->
fwdf‹_hdr_«me
, 
Àn
);

3457 
Àn
 = 
s
->
„
->
fwdf‹_hdr_Àn
;

3458 
	`mem˝y
(
åash
, 
s
->
„
->
fwdf‹_hdr_«me
, 
Àn
);

3460 
Àn
 +
	`•rötf
(
åash
 +Üí, ": %d.%d.%d.%d", 
≤
[0],Ön[1],Ön[2],Ön[3]);

3462 i‡(
	`u∆ikñy
(
	`hâp_hódî_add_èû2
(
ªq
, &
txn
->req,

3463 &
txn
->
hdr_idx
, 
åash
, 
Àn
) < 0))

3464 
ªtu∫_bad_ªq
;

3467 i‡(
s
->
˛i_addr
.
ss_Ámûy
 =
AF_INET6
) {

3471 
Àn
;

3472 
≤
[
INET6_ADDRSTRLEN
];

3473 
	`öë_¡›
(
AF_INET6
,

3474 (c⁄° *)&((
sockaddr_ö6
 *)(&
s
->
˛i_addr
))->
sö6_addr
,

3475 
≤
, (pn));

3482 i‡(
s
->
be
->
fwdf‹_hdr_Àn
) {

3483 
Àn
 = 
s
->
be
->
fwdf‹_hdr_Àn
;

3484 
	`mem˝y
(
åash
, 
s
->
be
->
fwdf‹_hdr_«me
, 
Àn
);

3486 
Àn
 = 
s
->
„
->
fwdf‹_hdr_Àn
;

3487 
	`mem˝y
(
åash
, 
s
->
„
->
fwdf‹_hdr_«me
, 
Àn
);

3489 
Àn
 +
	`•rötf
(
åash
 +Üí, ": %s", 
≤
);

3491 i‡(
	`u∆ikñy
(
	`hâp_hódî_add_èû2
(
ªq
, &
txn
->req,

3492 &
txn
->
hdr_idx
, 
åash
, 
Àn
) < 0))

3493 
ªtu∫_bad_ªq
;

3501 i‡((
s
->
„
->
›ti⁄s
 | s->
be
->›ti⁄sË& 
PR_O_ORGTO
) {

3504 i‡(
s
->
˛i_addr
.
ss_Ámûy
 =
AF_INET
) {

3508 i‡(!(
s
->
Êags
 & 
SN_FRT_ADDR_SET
))

3509 
	`gë_‰t_addr
(
s
);

3511 i‡((!
s
->
„
->
ex˚±_mask_to
.
s_addr
 ||

3512 (((
sockaddr_ö
 *)&
s
->
‰t_addr
)->
sö_addr
.
s_addr
 & s->
„
->
ex˚±_mask_to
.s_addr)

3513 !
s
->
„
->
ex˚±_to
.
s_addr
) &&

3514 (!
s
->
be
->
ex˚±_mask_to
.
s_addr
 ||

3515 (((
sockaddr_ö
 *)&
s
->
‰t_addr
)->
sö_addr
.
s_addr
 & s->
be
->
ex˚±_mask_to
.s_addr)

3516 !
s
->
be
->
ex˚±_to
.
s_addr
)) {

3517 
Àn
;

3518 *
≤
;

3519 
≤
 = (*)&((
sockaddr_ö
 *)&
s
->
‰t_addr
)->
sö_addr
;

3526 i‡(
s
->
be
->
‹gto_hdr_Àn
) {

3527 
Àn
 = 
s
->
be
->
‹gto_hdr_Àn
;

3528 
	`mem˝y
(
åash
, 
s
->
be
->
‹gto_hdr_«me
, 
Àn
);

3530 
Àn
 = 
s
->
„
->
‹gto_hdr_Àn
;

3531 
	`mem˝y
(
åash
, 
s
->
„
->
‹gto_hdr_«me
, 
Àn
);

3533 
Àn
 +
	`•rötf
(
åash
 +Üí, ": %d.%d.%d.%d", 
≤
[0],Ön[1],Ön[2],Ön[3]);

3535 i‡(
	`u∆ikñy
(
	`hâp_hódî_add_èû2
(
ªq
, &
txn
->req,

3536 &
txn
->
hdr_idx
, 
åash
, 
Àn
) < 0))

3537 
ªtu∫_bad_ªq
;

3543 i‡(((
txn
->
Êags
 & 
TX_CON_WANT_MSK
Ë!
TX_CON_WANT_TUN
) ||

3544 ((
s
->
„
->
›ti⁄s
|s->
be
->›ti⁄sË& 
PR_O_HTTP_CLOSE
) ||

3545 ((
s
->
„
->
›ti⁄s2
|s->
be
->›ti⁄s2Ë& 
PR_O2_FAKE_KA
)) {

3546 
w™t_Êags
 = 0;

3548 i‡(
txn
->
Êags
 & 
TX_REQ_VER_11
) {

3549 i‡(((
txn
->
Êags
 & 
TX_CON_WANT_MSK
Ë>
TX_CON_WANT_SCL
 ||

3550 ((
s
->
„
->
›ti⁄s
|s->
be
->›ti⁄sË& 
PR_O_HTTP_CLOSE
)) &&

3551 !((
s
->
„
->
›ti⁄s2
|s->
be
->›ti⁄s2Ë& 
PR_O2_FAKE_KA
))

3552 
w™t_Êags
 |
TX_CON_CLO_SET
;

3554 i‡(((
txn
->
Êags
 & 
TX_CON_WANT_MSK
Ë=
TX_CON_WANT_KAL
 &&

3555 !((
s
->
„
->
›ti⁄s
|s->
be
->›ti⁄sË& 
PR_O_HTTP_CLOSE
)) ||

3556 ((
s
->
„
->
›ti⁄s2
|s->
be
->›ti⁄s2Ë& 
PR_O2_FAKE_KA
))

3557 
w™t_Êags
 |
TX_CON_KAL_SET
;

3560 i‡(
w™t_Êags
 !(
txn
->
Êags
 & (
TX_CON_CLO_SET
|
TX_CON_KAL_SET
)))

3561 
	`hâp_ch™ge_c⁄√˘i⁄_hódî
(
txn
, 
msg
, 
ªq
, 
w™t_Êags
);

3569 i‡(!(
s
->
Êags
 & (
SN_ASSIGNED
|
SN_DIRECT
)) &&

3570 
s
->
txn
.
mëh
 =
HTTP_METH_POST
 && s->
be
->
uæ_∑øm_«me
 !
NULL
 &&

3571 
s
->
be
->
uæ_∑øm_po°_limô
 != 0 &&

3572 (
txn
->
Êags
 & (
TX_REQ_CNT_LEN
|
TX_REQ_TE_CHNK
)) &&

3573 
	`memchr
(
msg
->
sﬁ
 + msg->
¶
.
rq
.
u
, '?', msg->¶.rq.
u_l
Ë=
NULL
) {

3574 
	`buf„r_d⁄t_c⁄√˘
(
ªq
);

3575 
ªq
->
™Æy£rs
 |
AN_REQ_HTTP_BODY
;

3578 i‡(
txn
->
Êags
 & 
TX_REQ_XFER_LEN
)

3579 
ªq
->
™Æy£rs
 |
AN_REQ_HTTP_XFER_BODY
;

3585 
ªq
->
™Æy£_exp
 = 
TICK_ETERNITY
;

3586 
ªq
->
™Æy£rs
 &~
™_bô
;

3588 
s
->
logs
.
tv_ªque°
 = 
now
;

3592 
ªtu∫_bad_ªq
:

3593 i‡(
	`u∆ikñy
(
msg
->
msg_°©e
 =
HTTP_MSG_ERROR
Ë|| msg->
îr_pos
 >= 0) {

3597 
	`hâp_ˇ±uª_bad_mesßge
(&
s
->
„
->
övÆid_ªq
, s, 
ªq
, 
msg
, s->fe);

3600 
txn
->
ªq
.
msg_°©e
 = 
HTTP_MSG_ERROR
;

3601 
txn
->
°©us
 = 400;

3602 
ªq
->
™Æy£rs
 = 0;

3603 
	`°ªam_öt_ªä˛o£
(
ªq
->
¥od
, 
	`îr‹_mesßge
(
s
, 
HTTP_ERR_400
));

3605 
s
->
„
->
cou¡îs
.
Áûed_ªq
++;

3606 i‡(
s
->
li°íî
->
cou¡îs
)

3607 
s
->
li°íî
->
cou¡îs
->
Áûed_ªq
++;

3609 i‡(!(
s
->
Êags
 & 
SN_ERR_MASK
))

3610 
s
->
Êags
 |
SN_ERR_PRXCOND
;

3611 i‡(!(
s
->
Êags
 & 
SN_FINST_MASK
))

3612 
s
->
Êags
 |
SN_FINST_R
;

3614 
	}
}

3620 
	$hâp_¥o˚ss_èΩô
(
£ssi⁄
 *
s
, 
buf„r
 *
ªq
, 
™_bô
)

3622 
hâp_txn
 *
txn
 = &
s
->txn;

3629 
	`buf„r_d⁄t_c⁄√˘
(
ªq
);

3630 i‡((
ªq
->
Êags
 & (
BF_SHUTR
|
BF_READ_ERROR
)) == 0 &&

3631 !
	`tick_is_expúed
(
ªq
->
™Æy£_exp
, 
now_ms
))

3640 
s
->
logs
.
t_queue
 = 
	`tv_ms_ñ≠£d
(&s->logs.
tv_ac˚±
, &
now
);

3642 
txn
->
°©us
 = 500;

3643 i‡(
ªq
->
Êags
 !
BF_READ_ERROR
)

3644 
	`°ªam_öt_ªä˛o£
(
ªq
->
¥od
, 
	`îr‹_mesßge
(
s
, 
HTTP_ERR_500
));

3646 
ªq
->
™Æy£rs
 = 0;

3647 
ªq
->
™Æy£_exp
 = 
TICK_ETERNITY
;

3649 
s
->
„
->
cou¡îs
.
Áûed_ªq
++;

3650 i‡(
s
->
li°íî
->
cou¡îs
)

3651 
s
->
li°íî
->
cou¡îs
->
Áûed_ªq
++;

3653 i‡(!(
s
->
Êags
 & 
SN_ERR_MASK
))

3654 
s
->
Êags
 |
SN_ERR_PRXCOND
;

3655 i‡(!(
s
->
Êags
 & 
SN_FINST_MASK
))

3656 
s
->
Êags
 |
SN_FINST_T
;

3658 
	}
}

3666 
	$hâp_¥o˚ss_ªque°_body
(
£ssi⁄
 *
s
, 
buf„r
 *
ªq
, 
™_bô
)

3668 
hâp_txn
 *
txn
 = &
s
->txn;

3669 
hâp_msg
 *
msg
 = &
s
->
txn
.
ªq
;

3670 
limô
 = 
s
->
be
->
uæ_∑øm_po°_limô
;

3678 i‡(
	`u∆ikñy
(
msg
->
msg_°©e
 < 
HTTP_MSG_BODY
))

3679 
missög_d©a
;

3681 i‡(
msg
->
msg_°©e
 < 
HTTP_MSG_100_SENT
) {

3685 i‡(
txn
->
Êags
 & 
TX_REQ_VER_11
) {

3686 
hdr_˘x
 
˘x
;

3687 
˘x
.
idx
 = 0;

3689 i‡(
	`hâp_föd_hódî2
("Ex≥˘", 6, 
msg
->
sﬁ
, &
txn
->
hdr_idx
, &
˘x
) &&

3690 
	`u∆ikñy
(
˘x
.
vÀn
 =12 && 
	`°∫ˇ£cmp
(˘x.
löe
+˘x.
vÆ
, "100-continue", 12) == 0)) {

3691 
	`buf„r_wrôe
(
s
->
ªp
, 
hâp_100_chunk
.
°r
, hâp_100_chunk.
Àn
);

3694 
msg
->
msg_°©e
 = 
HTTP_MSG_100_SENT
;

3697 i‡(
msg
->
msg_°©e
 < 
HTTP_MSG_CHUNK_SIZE
) {

3703 
ªq
->
Ã
 =Ñeq->
d©a
 + 
msg
->
sov
;

3704 i‡(
txn
->
Êags
 & 
TX_REQ_TE_CHNK
)

3705 
msg
->
msg_°©e
 = 
HTTP_MSG_CHUNK_SIZE
;

3707 
msg
->
msg_°©e
 = 
HTTP_MSG_DATA
;

3710 i‡(
msg
->
msg_°©e
 =
HTTP_MSG_CHUNK_SIZE
) {

3715 
ªt
 = 
	`hâp_∑r£_chunk_size
(
ªq
, 
msg
);

3717 i‡(!
ªt
)

3718 
missög_d©a
;

3719 i‡(
ªt
 < 0)

3720 
ªtu∫_bad_ªq
;

3730 i‡(
msg
->
hdr_c⁄ã¡_Àn
 < 
limô
)

3731 
limô
 = 
msg
->
hdr_c⁄ã¡_Àn
;

3733 i‡(
ªq
->
l
 - (
msg
->
sov
 - msg->
som
Ë>
limô
)

3734 
hâp_íd
;

3736 
missög_d©a
:

3738 i‡(
ªq
->
Êags
 & 
BF_FULL
)

3739 
ªtu∫_bad_ªq
;

3741 i‡((
ªq
->
Êags
 & 
BF_READ_TIMEOUT
Ë|| 
	`tick_is_expúed
‘eq->
™Æy£_exp
, 
now_ms
)) {

3742 
txn
->
°©us
 = 408;

3743 
	`°ªam_öt_ªä˛o£
(
ªq
->
¥od
, 
	`îr‹_mesßge
(
s
, 
HTTP_ERR_408
));

3745 i‡(!(
s
->
Êags
 & 
SN_ERR_MASK
))

3746 
s
->
Êags
 |
SN_ERR_CLITO
;

3747 i‡(!(
s
->
Êags
 & 
SN_FINST_MASK
))

3748 
s
->
Êags
 |
SN_FINST_D
;

3749 
ªtu∫_îr_msg
;

3753 i‡(!(
ªq
->
Êags
 & (
BF_FULL
 | 
BF_READ_ERROR
 | 
BF_SHUTR
))) {

3760 
	`buf„r_d⁄t_c⁄√˘
(
ªq
);

3761 i‡(!
	`tick_is£t
(
ªq
->
™Æy£_exp
))

3762 
ªq
->
™Æy£_exp
 = 
	`tick_add_if£t
(
now_ms
, 
s
->
be
->
timeout
.
hâ¥eq
);

3766 
hâp_íd
:

3768 
s
->
logs
.
tv_ªque°
 = 
now
;

3769 
ªq
->
™Æy£rs
 &~
™_bô
;

3770 
ªq
->
™Æy£_exp
 = 
TICK_ETERNITY
;

3773 
ªtu∫_bad_ªq
:

3774 
txn
->
ªq
.
msg_°©e
 = 
HTTP_MSG_ERROR
;

3775 
txn
->
°©us
 = 400;

3776 
	`°ªam_öt_ªä˛o£
(
ªq
->
¥od
, 
	`îr‹_mesßge
(
s
, 
HTTP_ERR_400
));

3778 i‡(!(
s
->
Êags
 & 
SN_ERR_MASK
))

3779 
s
->
Êags
 |
SN_ERR_PRXCOND
;

3780 i‡(!(
s
->
Êags
 & 
SN_FINST_MASK
))

3781 
s
->
Êags
 |
SN_FINST_R
;

3783 
ªtu∫_îr_msg
:

3784 
ªq
->
™Æy£rs
 = 0;

3785 
s
->
„
->
cou¡îs
.
Áûed_ªq
++;

3786 i‡(
s
->
li°íî
->
cou¡îs
)

3787 
s
->
li°íî
->
cou¡îs
->
Áûed_ªq
++;

3789 
	}
}

3794 
	$hâp_íd_txn_˛ón_£ssi⁄
(
£ssi⁄
 *
s
)

3801 
	`hâp_sûít_debug
(
__LINE__
, 
s
);

3803 
s
->
ªq
->
c⁄s
->
Êags
 |
SI_FL_NOLINGER
;

3804 
s
->
ªq
->
c⁄s
->
	`shuå
(s->req->cons);

3805 
s
->
ªq
->
c⁄s
->
	`shutw
(s->req->cons);

3807 
	`hâp_sûít_debug
(
__LINE__
, 
s
);

3809 i‡(
s
->
Êags
 & 
SN_BE_ASSIGNED
)

3810 
s
->
be
->
bec⁄n
--;

3812 
s
->
logs
.
t_˛o£
 = 
	`tv_ms_ñ≠£d
(&s->logs.
tv_ac˚±
, &
now
);

3813 
	`£ssi⁄_¥o˚ss_cou¡îs
(
s
);

3815 i‡(
s
->
txn
.
°©us
) {

3816 
n
;

3818 
n
 = 
s
->
txn
.
°©us
 / 100;

3819 i‡(
n
 < 1 ||Ç > 5)

3820 
n
 = 0;

3822 i‡(
s
->
„
->
mode
 =
PR_MODE_HTTP
)

3823 
s
->
„
->
cou¡îs
.„.
hâp
.
r•
[
n
]++;

3825 i‡((
s
->
Êags
 & 
SN_BE_ASSIGNED
) &&

3826 (
s
->
be
->
mode
 =
PR_MODE_HTTP
))

3827 
s
->
be
->
cou¡îs
.be.
hâp
.
r•
[
n
]++;

3831 
s
->
logs
.
byãs_ö
 -s->
ªq
->
l
 - s->ªq->
£nd_max
;

3832 
s
->
logs
.
byãs_out
 -s->
ªp
->
l
 - s->ªp->
£nd_max
;

3835 i‡(
s
->
logs
.
logwaô
 &&

3836 !(
s
->
Êags
 & 
SN_MONITOR
) &&

3837 (!(
s
->
„
->
›ti⁄s
 & 
PR_O_NULLNOLOG
Ë|| s->
ªq
->
tŸÆ
)) {

3838 
s
->
	`do_log
(s);

3841 
s
->
logs
.
ac˚±_d©e
 = 
d©e
;

3842 
s
->
logs
.
tv_ac˚±
 = 
now
;

3843 
	`tv_zîo
(&
s
->
logs
.
tv_ªque°
);

3844 
s
->
logs
.
t_queue
 = -1;

3845 
s
->
logs
.
t_c⁄√˘
 = -1;

3846 
s
->
logs
.
t_d©a
 = -1;

3847 
s
->
logs
.
t_˛o£
 = 0;

3848 
s
->
logs
.
¥x_queue_size
 = 0;

3849 
s
->
logs
.
§v_queue_size
 = 0;

3851 
s
->
logs
.
byãs_ö
 = s->
ªq
->
tŸÆ
 = s->ªq->
l
 - s->ªq->
£nd_max
;

3852 
s
->
logs
.
byãs_out
 = s->
ªp
->
tŸÆ
 = s->ªp->
l
 - s->ªp->
£nd_max
;

3854 i‡(
s
->
≥nd_pos
)

3855 
	`≥ndc⁄n_‰ì
(
s
->
≥nd_pos
);

3857 i‡(
s
->
§v
) {

3858 i‡(
s
->
Êags
 & 
SN_CURR_SESS
) {

3859 
s
->
Êags
 &~
SN_CURR_SESS
;

3860 
s
->
§v
->
cur_£ss
--;

3862 i‡(
	`may_dequeue_èsks
(
s
->
§v
, s->
be
))

3863 
	`¥o˚ss_§v_queue
(
s
->
§v
);

3866 i‡(
	`u∆ikñy
(
s
->
§v_c⁄n
))

3867 
	`£ss_ch™ge_£rvî
(
s
, 
NULL
);

3868 
s
->
§v
 = 
NULL
;

3870 
s
->
ªq
->
c⁄s
->
°©e
 = s->ªq->c⁄s->
¥ev_°©e
 = 
SI_ST_INI
;

3871 
s
->
ªq
->
c⁄s
->
fd
 = -1;

3872 
s
->
ªq
->
c⁄s
->
îr_ty≥
 = 
SI_ET_NONE
;

3873 
s
->
ªq
->
c⁄s
->
îr_loc
 = 
NULL
;

3874 
s
->
ªq
->
c⁄s
->
exp
 = 
TICK_ETERNITY
;

3875 
s
->
ªq
->
c⁄s
->
Êags
 = 
SI_FL_NONE
;

3876 
s
->
ªq
->
Êags
 &~(
BF_SHUTW
|
BF_SHUTW_NOW
|
BF_AUTO_CONNECT
|
BF_WRITE_ERROR
|
BF_STREAMER
|
BF_STREAMER_FAST
);

3877 
s
->
ªp
->
Êags
 &~(
BF_SHUTR
|
BF_SHUTR_NOW
|
BF_READ_ATTACHED
|
BF_READ_ERROR
|
BF_READ_NOEXP
|
BF_STREAMER
|
BF_STREAMER_FAST
|
BF_WRITE_PARTIAL
);

3878 
s
->
Êags
 &~(
SN_DIRECT
|
SN_ASSIGNED
|
SN_ADDR_SET
|
SN_BE_ASSIGNED
|
SN_FORCE_PRST
|
SN_IGNORE_PRST
);

3879 
s
->
Êags
 &~(
SN_CURR_SESS
|
SN_REDIRECTABLE
);

3880 
s
->
txn
.
mëh
 = 0;

3881 
	`hâp_ª£t_txn
(
s
);

3882 
s
->
txn
.
Êags
 |
TX_NOT_FIRST
 | 
TX_WAIT_NEXT_RQ
;

3883 i‡(
s
->
be
->
›ti⁄s2
 & 
PR_O2_INDEPSTR
)

3884 
s
->
ªq
->
c⁄s
->
Êags
 |
SI_FL_INDEP_STR
;

3893 i‡(
s
->
ªq
->
l
 > s->ªq->
£nd_max
) {

3894 i‡(
s
->
ªp
->
£nd_max
 &&

3895 !(
s
->
ªp
->
Êags
 & 
BF_FULL
) &&

3896 
s
->
ªp
->
r
 <s->ªp->
d©a
 + s->ªp->
size
 - 
globÆ
.
tu√
.
maxªwrôe
)

3897 
s
->
ªp
->
Êags
 |
BF_EXPECT_MORE
;

3901 
	`buf„r_auto_ªad
(
s
->
ªq
);

3902 
	`buf„r_auto_˛o£
(
s
->
ªq
);

3903 
	`buf„r_auto_ªad
(
s
->
ªp
);

3904 
	`buf„r_auto_˛o£
(
s
->
ªp
);

3907 
s
->
ªq
->
Ã
 = s->ªq->
w
 + s->ªq->
£nd_max
;

3908 i‡(
s
->
ªq
->
Ã
 >s->ªq->
d©a
 + s->ªq->
size
)

3909 
s
->
ªq
->
Ã
 -s->ªq->
size
;

3910 
s
->
ªp
->
Ã
 = s->ªp->
w
 + s->ªp->
£nd_max
;

3911 i‡(
s
->
ªp
->
Ã
 >s->ªp->
d©a
 + s->ªp->
size
)

3912 
s
->
ªp
->
Ã
 -s->
ªq
->
size
;

3914 
s
->
ªq
->
™Æy£rs
 |s->
„
->
„_ªq_™a
;

3915 
s
->
ªp
->
™Æy£rs
 = 0;

3917 
	`hâp_sûít_debug
(
__LINE__
, 
s
);

3918 
	}
}

3928 
	$hâp_sync_ªq_°©e
(
£ssi⁄
 *
s
)

3930 
buf„r
 *
buf
 = 
s
->
ªq
;

3931 
hâp_txn
 *
txn
 = &
s
->txn;

3932 
ﬁd_Êags
 = 
buf
->
Êags
;

3933 
ﬁd_°©e
 = 
txn
->
ªq
.
msg_°©e
;

3935 
	`hâp_sûít_debug
(
__LINE__
, 
s
);

3936 i‡(
	`u∆ikñy
(
txn
->
ªq
.
msg_°©e
 < 
HTTP_MSG_BODY
))

3939 i‡(
txn
->
ªq
.
msg_°©e
 =
HTTP_MSG_DONE
) {

3948 i‡(!(
s
->
be
->
›ti⁄s
 & 
PR_O_ABRT_CLOSE
Ë&& 
txn
->
mëh
 !
HTTP_METH_POST
)

3949 
	`buf„r_d⁄t_ªad
(
buf
);

3951 i‡(
txn
->
r•
.
msg_°©e
 =
HTTP_MSG_ERROR
)

3952 
waô_Ÿhî_side
;

3954 i‡(
txn
->
r•
.
msg_°©e
 < 
HTTP_MSG_DONE
) {

3958 
waô_Ÿhî_side
;

3961 i‡(
txn
->
r•
.
msg_°©e
 =
HTTP_MSG_TUNNEL
) {

3963 
	`buf„r_auto_ªad
(
buf
);

3964 
txn
->
ªq
.
msg_°©e
 = 
HTTP_MSG_TUNNEL
;

3965 
waô_Ÿhî_side
;

3974 i‡((
txn
->
Êags
 & 
TX_CON_WANT_MSK
Ë=
TX_CON_WANT_SCL
) {

3976 i‡(!(
buf
->
Êags
 & (
BF_SHUTW
|
BF_SHUTW_NOW
)))

3977 
	`buf„r_shutw_now
(
buf
);

3979 i‡((
txn
->
Êags
 & 
TX_CON_WANT_MSK
Ë=
TX_CON_WANT_CLO
) {

3985 i‡(!(
buf
->
Êags
 & (
BF_SHUTW
|
BF_SHUTW_NOW
))) {

3986 
	`buf„r_shuå_now
(
buf
);

3987 
	`buf„r_shutw_now
(
buf
);

3996 
	`buf„r_auto_ªad
(
buf
);

3997 
txn
->
ªq
.
msg_°©e
 = 
HTTP_MSG_TUNNEL
;

4000 i‡(
buf
->
Êags
 & (
BF_SHUTW
|
BF_SHUTW_NOW
)) {

4002 
buf
->
c⁄s
->
Êags
 |
SI_FL_NOLINGER
;

4004 i‡(!(
buf
->
Êags
 & 
BF_OUT_EMPTY
)) {

4005 
txn
->
ªq
.
msg_°©e
 = 
HTTP_MSG_CLOSING
;

4006 
hâp_msg_˛osög
;

4009 
txn
->
ªq
.
msg_°©e
 = 
HTTP_MSG_CLOSED
;

4010 
hâp_msg_˛o£d
;

4013 
waô_Ÿhî_side
;

4016 i‡(
txn
->
ªq
.
msg_°©e
 =
HTTP_MSG_CLOSING
) {

4017 
hâp_msg_˛osög
:

4021 i‡(
buf
->
Êags
 & 
BF_OUT_EMPTY
) {

4022 
txn
->
ªq
.
msg_°©e
 = 
HTTP_MSG_CLOSED
;

4023 
hâp_msg_˛o£d
;

4025 i‡(
buf
->
Êags
 & 
BF_SHUTW
) {

4026 
txn
->
ªq
.
msg_°©e
 = 
HTTP_MSG_ERROR
;

4027 
waô_Ÿhî_side
;

4031 i‡(
txn
->
ªq
.
msg_°©e
 =
HTTP_MSG_CLOSED
) {

4032 
hâp_msg_˛o£d
:

4033 
waô_Ÿhî_side
;

4036 
waô_Ÿhî_side
:

4037 
	`hâp_sûít_debug
(
__LINE__
, 
s
);

4038  
txn
->
ªq
.
msg_°©e
 !
ﬁd_°©e
 || 
buf
->
Êags
 !
ﬁd_Êags
;

4039 
	}
}

4049 
	$hâp_sync_ªs_°©e
(
£ssi⁄
 *
s
)

4051 
buf„r
 *
buf
 = 
s
->
ªp
;

4052 
hâp_txn
 *
txn
 = &
s
->txn;

4053 
ﬁd_Êags
 = 
buf
->
Êags
;

4054 
ﬁd_°©e
 = 
txn
->
r•
.
msg_°©e
;

4056 
	`hâp_sûít_debug
(
__LINE__
, 
s
);

4057 i‡(
	`u∆ikñy
(
txn
->
r•
.
msg_°©e
 < 
HTTP_MSG_BODY
))

4060 i‡(
txn
->
r•
.
msg_°©e
 =
HTTP_MSG_DONE
) {

4068 i‡(
txn
->
ªq
.
msg_°©e
 =
HTTP_MSG_ERROR
)

4069 
waô_Ÿhî_side
;

4071 i‡(
txn
->
ªq
.
msg_°©e
 < 
HTTP_MSG_DONE
) {

4077 
waô_Ÿhî_side
;

4080 i‡(
txn
->
ªq
.
msg_°©e
 =
HTTP_MSG_TUNNEL
) {

4082 
	`buf„r_auto_ªad
(
buf
);

4083 
txn
->
r•
.
msg_°©e
 = 
HTTP_MSG_TUNNEL
;

4084 
waô_Ÿhî_side
;

4093 i‡((
txn
->
Êags
 & 
TX_CON_WANT_MSK
Ë=
TX_CON_WANT_SCL
) {

4099 i‡(!(
buf
->
Êags
 & (
BF_SHUTR
|
BF_SHUTR_NOW
)))

4100 
	`buf„r_shuå_now
(
buf
);

4102 i‡((
txn
->
Êags
 & 
TX_CON_WANT_MSK
Ë=
TX_CON_WANT_CLO
) {

4108 i‡(!(
buf
->
Êags
 & (
BF_SHUTW
|
BF_SHUTW_NOW
))) {

4109 
	`buf„r_shuå_now
(
buf
);

4110 
	`buf„r_shutw_now
(
buf
);

4119 
	`buf„r_auto_ªad
(
buf
);

4120 
txn
->
r•
.
msg_°©e
 = 
HTTP_MSG_TUNNEL
;

4123 i‡(
buf
->
Êags
 & (
BF_SHUTW
|
BF_SHUTW_NOW
)) {

4125 i‡(!(
buf
->
Êags
 & 
BF_OUT_EMPTY
)) {

4126 
txn
->
r•
.
msg_°©e
 = 
HTTP_MSG_CLOSING
;

4127 
hâp_msg_˛osög
;

4130 
txn
->
r•
.
msg_°©e
 = 
HTTP_MSG_CLOSED
;

4131 
hâp_msg_˛o£d
;

4134 
waô_Ÿhî_side
;

4137 i‡(
txn
->
r•
.
msg_°©e
 =
HTTP_MSG_CLOSING
) {

4138 
hâp_msg_˛osög
:

4142 i‡(
buf
->
Êags
 & 
BF_OUT_EMPTY
) {

4143 
txn
->
r•
.
msg_°©e
 = 
HTTP_MSG_CLOSED
;

4144 
hâp_msg_˛o£d
;

4146 i‡(
buf
->
Êags
 & 
BF_SHUTW
) {

4147 
txn
->
r•
.
msg_°©e
 = 
HTTP_MSG_ERROR
;

4148 
s
->
be
->
cou¡îs
.
˛i_ab‹ts
++;

4149 i‡(
s
->
§v
)

4150 
s
->
§v
->
cou¡îs
.
˛i_ab‹ts
++;

4151 
waô_Ÿhî_side
;

4155 i‡(
txn
->
r•
.
msg_°©e
 =
HTTP_MSG_CLOSED
) {

4156 
hâp_msg_˛o£d
:

4158 
	`buf„r_ign‹e
(
buf
, buf->
l
 - buf->
£nd_max
);

4159 
	`buf„r_auto_˛o£
(
buf
);

4160 
	`buf„r_auto_ªad
(
buf
);

4161 
waô_Ÿhî_side
;

4164 
waô_Ÿhî_side
:

4165 
	`hâp_sûít_debug
(
__LINE__
, 
s
);

4166  
txn
->
r•
.
msg_°©e
 !
ﬁd_°©e
 || 
buf
->
Êags
 !
ﬁd_Êags
;

4167 
	}
}

4173 
	$hâp_ªsync_°©es
(
£ssi⁄
 *
s
)

4175 
hâp_txn
 *
txn
 = &
s
->txn;

4176 
ﬁd_ªq_°©e
 = 
txn
->
ªq
.
msg_°©e
;

4177 
ﬁd_ªs_°©e
 = 
txn
->
r•
.
msg_°©e
;

4179 
	`hâp_sûít_debug
(
__LINE__
, 
s
);

4180 
	`hâp_sync_ªq_°©e
(
s
);

4182 
	`hâp_sûít_debug
(
__LINE__
, 
s
);

4183 i‡(!
	`hâp_sync_ªs_°©e
(
s
))

4185 
	`hâp_sûít_debug
(
__LINE__
, 
s
);

4186 i‡(!
	`hâp_sync_ªq_°©e
(
s
))

4189 
	`hâp_sûít_debug
(
__LINE__
, 
s
);

4202 i‡(
txn
->
ªq
.
msg_°©e
 =
HTTP_MSG_TUNNEL
 ||

4203 
txn
->
r•
.
msg_°©e
 =
HTTP_MSG_TUNNEL
 ||

4204 (
txn
->
ªq
.
msg_°©e
 =
HTTP_MSG_CLOSED
 &&

4205 
txn
->
r•
.
msg_°©e
 =
HTTP_MSG_CLOSED
)) {

4206 
s
->
ªq
->
™Æy£rs
 = 0;

4207 
	`buf„r_auto_˛o£
(
s
->
ªq
);

4208 
	`buf„r_auto_ªad
(
s
->
ªq
);

4209 
s
->
ªp
->
™Æy£rs
 = 0;

4210 
	`buf„r_auto_˛o£
(
s
->
ªp
);

4211 
	`buf„r_auto_ªad
(
s
->
ªp
);

4213 i‡(
txn
->
r•
.
msg_°©e
 =
HTTP_MSG_CLOSED
 ||

4214 
txn
->
r•
.
msg_°©e
 =
HTTP_MSG_ERROR
 ||

4215 (
s
->
ªp
->
Êags
 & 
BF_SHUTW
)) {

4216 
s
->
ªp
->
™Æy£rs
 = 0;

4217 
	`buf„r_auto_˛o£
(
s
->
ªp
);

4218 
	`buf„r_auto_ªad
(
s
->
ªp
);

4219 
s
->
ªq
->
™Æy£rs
 = 0;

4220 
	`buf„r_ab‹t
(
s
->
ªq
);

4221 
	`buf„r_auto_˛o£
(
s
->
ªq
);

4222 
	`buf„r_auto_ªad
(
s
->
ªq
);

4223 
	`buf„r_ign‹e
(
s
->
ªq
, s->ªq->
l
 - s->ªq->
£nd_max
);

4225 i‡(
txn
->
ªq
.
msg_°©e
 =
HTTP_MSG_CLOSED
 &&

4226 
txn
->
r•
.
msg_°©e
 =
HTTP_MSG_DONE
 &&

4227 ((
txn
->
Êags
 & 
TX_CON_WANT_MSK
Ë=
TX_CON_WANT_SCL
)) {

4231 
	`hâp_íd_txn_˛ón_£ssi⁄
(
s
);

4234 
	`hâp_sûít_debug
(
__LINE__
, 
s
);

4235  
txn
->
ªq
.
msg_°©e
 !
ﬁd_ªq_°©e
 ||

4236 
txn
->
r•
.
msg_°©e
 !
ﬁd_ªs_°©e
;

4237 
	}
}

4250 
	$hâp_ªque°_f‹w¨d_body
(
£ssi⁄
 *
s
, 
buf„r
 *
ªq
, 
™_bô
)

4252 
hâp_txn
 *
txn
 = &
s
->txn;

4253 
hâp_msg
 *
msg
 = &
s
->
txn
.
ªq
;

4255 i‡(
	`u∆ikñy
(
msg
->
msg_°©e
 < 
HTTP_MSG_BODY
))

4258 i‡((
ªq
->
Êags
 & (
BF_READ_ERROR
|
BF_READ_TIMEOUT
|
BF_WRITE_ERROR
|
BF_WRITE_TIMEOUT
)) ||

4259 ((
ªq
->
Êags
 & 
BF_SHUTW
Ë&& (ªq->
to_f‹w¨d
 ||Ñeq->
£nd_max
))) {

4261 
	`buf„r_ign‹e
(
ªq
,Ñeq->
l
 -Ñeq->
£nd_max
);

4262 
	`buf„r_auto_ªad
(
ªq
);

4263 
	`buf„r_auto_˛o£
(
ªq
);

4264 
ªq
->
™Æy£rs
 &~
™_bô
;

4268 
	`buf„r_d⁄t_˛o£
(
ªq
);

4276 i‡(
msg
->
msg_°©e
 < 
HTTP_MSG_CHUNK_SIZE
) {

4282 
ªq
->
Ã
 =Ñeq->
d©a
 + 
msg
->
sov
;

4283 i‡(
txn
->
Êags
 & 
TX_REQ_TE_CHNK
)

4284 
msg
->
msg_°©e
 = 
HTTP_MSG_CHUNK_SIZE
;

4286 
msg
->
msg_°©e
 = 
HTTP_MSG_DATA
;

4291 
	`hâp_sûít_debug
(
__LINE__
, 
s
);

4293 i‡(
msg
->
hdr_c⁄ã¡_Àn
 || msg->
som
 !msg->
sov
) {

4294 
byãs
 = 
msg
->
sov
 - msg->
som
;

4295 i‡(
byãs
 < 0)

4296 
byãs
 +
ªq
->
size
;

4297 
	`buf„r_f‹w¨d
(
ªq
, 
byãs
 + 
msg
->
hdr_c⁄ã¡_Àn
);

4298 
msg
->
hdr_c⁄ã¡_Àn
 = 0;

4299 
msg
->
som
 = msg->
sov
;

4302 i‡(
msg
->
msg_°©e
 =
HTTP_MSG_DATA
) {

4304 i‡(
ªq
->
to_f‹w¨d
)

4305 
missög_d©a
;

4308 i‡(
txn
->
Êags
 & 
TX_REQ_TE_CHNK
)

4309 
msg
->
msg_°©e
 = 
HTTP_MSG_DATA_CRLF
;

4311 
msg
->
msg_°©e
 = 
HTTP_MSG_DONE
;

4313 i‡(
msg
->
msg_°©e
 =
HTTP_MSG_CHUNK_SIZE
) {

4318 
ªt
 = 
	`hâp_∑r£_chunk_size
(
ªq
, 
msg
);

4320 i‡(!
ªt
)

4321 
missög_d©a
;

4322 i‡(
ªt
 < 0)

4323 
ªtu∫_bad_ªq
;

4326 i‡(
msg
->
msg_°©e
 =
HTTP_MSG_DATA_CRLF
) {

4328 
ªt
;

4330 
ªq
->
Ã
 =Ñeq->
w
 +Ñeq->
£nd_max
;

4331 i‡(
ªq
->
Ã
 >ªq->
d©a
 +Ñeq->
size
)

4332 
ªq
->
Ã
 -ªq->
size
;

4334 
ªt
 = 
	`hâp_skù_chunk_¸lf
(
ªq
, 
msg
);

4336 i‡(
ªt
 == 0)

4337 
missög_d©a
;

4338 i‡(
ªt
 < 0)

4339 
ªtu∫_bad_ªq
;

4342 i‡(
msg
->
msg_°©e
 =
HTTP_MSG_TRAILERS
) {

4343 
ªt
 = 
	`hâp_f‹w¨d_åaûîs
(
ªq
, 
msg
);

4345 i‡(
ªt
 == 0)

4346 
missög_d©a
;

4347 i‡(
ªt
 < 0)

4348 
ªtu∫_bad_ªq
;

4353 i‡(
	`hâp_ªsync_°©es
(
s
)) {

4357 i‡(
	`u∆ikñy
(
msg
->
msg_°©e
 =
HTTP_MSG_ERROR
))

4358 
ªtu∫_bad_ªq
;

4368 i‡(
s
->
be
->
›ti⁄s
 & 
PR_O_ABRT_CLOSE
) {

4369 
	`buf„r_auto_ªad
(
ªq
);

4370 
	`buf„r_auto_˛o£
(
ªq
);

4372 i‡(
s
->
txn
.
mëh
 =
HTTP_METH_POST
) {

4378 
	`buf„r_auto_ªad
(
ªq
);

4385 
missög_d©a
:

4387 i‡(
ªq
->
Êags
 & 
BF_SHUTR
) {

4388 i‡(!(
s
->
Êags
 & 
SN_ERR_MASK
))

4389 
s
->
Êags
 |
SN_ERR_CLICL
;

4390 i‡(!(
s
->
Êags
 & 
SN_FINST_MASK
))

4391 
s
->
Êags
 |
SN_FINST_D
;

4392 
ªtu∫_bad_ªq
;

4396 i‡(
ªq
->
Êags
 & 
BF_SHUTW
) {

4397 i‡(!(
s
->
Êags
 & 
SN_ERR_MASK
))

4398 
s
->
Êags
 |
SN_ERR_SRVCL
;

4399 i‡(!(
s
->
Êags
 & 
SN_FINST_MASK
))

4400 
s
->
Êags
 |
SN_FINST_D
;

4401 
ªtu∫_bad_ªq
;

4404 
	`hâp_sûít_debug
(
__LINE__
, 
s
);

4407 
ªtu∫_bad_ªq
:

4408 
txn
->
ªq
.
msg_°©e
 = 
HTTP_MSG_ERROR
;

4409 
txn
->
°©us
 = 400;

4411 
	`°ªam_öt_ªä˛o£
(
ªq
->
¥od
, (
txn
->
r•
.
msg_°©e
 < 
HTTP_MSG_BODY
Ë? 
	`îr‹_mesßge
(
s
, 
HTTP_ERR_400
Ë: 
NULL
);

4412 
ªq
->
™Æy£rs
 = 0;

4413 
s
->
„
->
cou¡îs
.
Áûed_ªq
++;

4414 i‡(
s
->
li°íî
->
cou¡îs
)

4415 
s
->
li°íî
->
cou¡îs
->
Áûed_ªq
++;

4417 i‡(!(
s
->
Êags
 & 
SN_ERR_MASK
))

4418 
s
->
Êags
 |
SN_ERR_PRXCOND
;

4419 i‡(!(
s
->
Êags
 & 
SN_FINST_MASK
))

4420 
s
->
Êags
 |
SN_FINST_R
;

4421 
	`hâp_sûít_debug
(
__LINE__
, 
s
);

4423 
	}
}

4432 
	$hâp_waô_f‹_ª•⁄£
(
£ssi⁄
 *
s
, 
buf„r
 *
ªp
, 
™_bô
)

4434 
hâp_txn
 *
txn
 = &
s
->txn;

4435 
hâp_msg
 *
msg
 = &
txn
->
r•
;

4436 
hdr_˘x
 
˘x
;

4437 
u£_˛o£_⁄ly
;

4438 
cur_idx
;

4439 
n
;

4441 
	`DPRINTF
(
°dîr
,"[%u] %s: session=%p b=%p,Éxp(r,w)=%u,%u bf=%08x bl=%dánalysers=%02x\n",

4442 
now_ms
, 
__FUNCTION__
,

4443 
s
,

4444 
ªp
,

4445 
ªp
->
ªx
,Ñï->
wex
,

4446 
ªp
->
Êags
,

4447 
ªp
->
l
,

4448 
ªp
->
™Æy£rs
);

4472 i‡(
ªp
->
l
 && 
msg
->
msg_°©e
 < 
HTTP_MSG_ERROR
) {

4473 i‡(
	`u∆ikñy
((
ªp
->
Êags
 & 
BF_FULL
) ||

4474 
ªp
->
r
 <Ñï->
Ã
 ||

4475 
ªp
->
r
 >Ñï->
d©a
 +Ñï->
size
 - 
globÆ
.
tu√
.
maxªwrôe
)) {

4476 i‡(
ªp
->
£nd_max
) {

4478 i‡(
ªp
->
Êags
 & (
BF_SHUTW
|
BF_SHUTW_NOW
|
BF_WRITE_ERROR
|
BF_WRITE_TIMEOUT
))

4479 
ab‹t_ª•⁄£
;

4480 
	`buf„r_d⁄t_˛o£
(
ªp
);

4481 
ªp
->
Êags
 |
BF_READ_DONTWAIT
;

4484 i‡(
ªp
->
l
 <ªp->
size
 - 
globÆ
.
tu√
.
maxªwrôe
)

4485 
	`hâp_buf„r_hóvy_ªÆign
(
ªp
, 
msg
);

4488 i‡(
	`likñy
(
ªp
->
Ã
 <Ñï->
r
))

4489 
	`hâp_msg_™Æyzî
(
ªp
, 
msg
, &
txn
->
hdr_idx
);

4493 i‡(
	`u∆ikñy
((
globÆ
.
mode
 & 
MODE_DEBUG
) &&

4494 (!(
globÆ
.
mode
 & 
MODE_QUIET
Ë|| (globÆ.modê& 
MODE_VERBOSE
)) &&

4495 
msg
->
sﬁ
 &&

4496 (
msg
->
msg_°©e
 >
HTTP_MSG_BODY
 || msg->msg_°©ê=
HTTP_MSG_ERROR
))) {

4497 *
eﬁ
, *
sﬁ
;

4499 
sﬁ
 = 
ªp
->
d©a
 + 
msg
->
som
;

4500 
eﬁ
 = 
sﬁ
 + 
msg
->
¶
.
°
.
l
;

4501 
	`debug_hdr
("§vªp", 
s
, 
sﬁ
, 
eﬁ
);

4503 
sﬁ
 +
	`hdr_idx_fú°_pos
(&
txn
->
hdr_idx
);

4504 
cur_idx
 = 
	`hdr_idx_fú°_idx
(&
txn
->
hdr_idx
);

4506 
cur_idx
) {

4507 
eﬁ
 = 
sﬁ
 + 
txn
->
hdr_idx
.
v
[
cur_idx
].
Àn
;

4508 
	`debug_hdr
("§vhdr", 
s
, 
sﬁ
, 
eﬁ
);

4509 
sﬁ
 = 
eﬁ
 + 
txn
->
hdr_idx
.
v
[
cur_idx
].
¸
 + 1;

4510 
cur_idx
 = 
txn
->
hdr_idx
.
v
[cur_idx].
√xt
;

4527 i‡(
	`u∆ikñy
(
msg
->
msg_°©e
 < 
HTTP_MSG_BODY
)) {

4529 i‡(
	`u∆ikñy
(
msg
->
msg_°©e
 =
HTTP_MSG_ERROR
)) {

4533 
hdr_ª•⁄£_bad
:

4534 i‡(
msg
->
msg_°©e
 =
HTTP_MSG_ERROR
 || msg->
îr_pos
 >= 0)

4535 
	`hâp_ˇ±uª_bad_mesßge
(&
s
->
be
->
övÆid_ªp
, s, 
ªp
, 
msg
, s->
„
);

4537 
s
->
be
->
cou¡îs
.
Áûed_ª•
++;

4538 i‡(
s
->
§v
) {

4539 
s
->
§v
->
cou¡îs
.
Áûed_ª•
++;

4540 
	`hó…h_adju°
(
s
->
§v
, 
HANA_STATUS_HTTP_HDRRSP
);

4542 
ab‹t_ª•⁄£
:

4543 
	`buf„r_auto_˛o£
(
ªp
);

4544 
ªp
->
™Æy£rs
 = 0;

4545 
txn
->
°©us
 = 502;

4546 
ªp
->
¥od
->
Êags
 |
SI_FL_NOLINGER
;

4547 
	`buf„r_ign‹e
(
ªp
,Ñï->
l
 -Ñï->
£nd_max
);

4548 
	`°ªam_öt_ªä˛o£
(
ªp
->
c⁄s
, 
	`îr‹_mesßge
(
s
, 
HTTP_ERR_502
));

4550 i‡(!(
s
->
Êags
 & 
SN_ERR_MASK
))

4551 
s
->
Êags
 |
SN_ERR_PRXCOND
;

4552 i‡(!(
s
->
Êags
 & 
SN_FINST_MASK
))

4553 
s
->
Êags
 |
SN_FINST_H
;

4559 i‡(
ªp
->
Êags
 & 
BF_FULL
) {

4560 
hdr_ª•⁄£_bad
;

4564 i‡(
ªp
->
Êags
 & 
BF_READ_ERROR
) {

4565 i‡(
msg
->
îr_pos
 >= 0)

4566 
	`hâp_ˇ±uª_bad_mesßge
(&
s
->
be
->
övÆid_ªp
, s, 
ªp
, 
msg
, s->
„
);

4568 
s
->
be
->
cou¡îs
.
Áûed_ª•
++;

4569 i‡(
s
->
§v
) {

4570 
s
->
§v
->
cou¡îs
.
Áûed_ª•
++;

4571 
	`hó…h_adju°
(
s
->
§v
, 
HANA_STATUS_HTTP_READ_ERROR
);

4574 
	`buf„r_auto_˛o£
(
ªp
);

4575 
ªp
->
™Æy£rs
 = 0;

4576 
txn
->
°©us
 = 502;

4577 
ªp
->
¥od
->
Êags
 |
SI_FL_NOLINGER
;

4578 
	`buf„r_ign‹e
(
ªp
,Ñï->
l
 -Ñï->
£nd_max
);

4579 
	`°ªam_öt_ªä˛o£
(
ªp
->
c⁄s
, 
	`îr‹_mesßge
(
s
, 
HTTP_ERR_502
));

4581 i‡(!(
s
->
Êags
 & 
SN_ERR_MASK
))

4582 
s
->
Êags
 |
SN_ERR_SRVCL
;

4583 i‡(!(
s
->
Êags
 & 
SN_FINST_MASK
))

4584 
s
->
Êags
 |
SN_FINST_H
;

4589 i‡(
ªp
->
Êags
 & 
BF_READ_TIMEOUT
) {

4590 i‡(
msg
->
îr_pos
 >= 0)

4591 
	`hâp_ˇ±uª_bad_mesßge
(&
s
->
be
->
övÆid_ªp
, s, 
ªp
, 
msg
, s->
„
);

4593 
s
->
be
->
cou¡îs
.
Áûed_ª•
++;

4594 i‡(
s
->
§v
) {

4595 
s
->
§v
->
cou¡îs
.
Áûed_ª•
++;

4596 
	`hó…h_adju°
(
s
->
§v
, 
HANA_STATUS_HTTP_READ_TIMEOUT
);

4599 
	`buf„r_auto_˛o£
(
ªp
);

4600 
ªp
->
™Æy£rs
 = 0;

4601 
txn
->
°©us
 = 504;

4602 
ªp
->
¥od
->
Êags
 |
SI_FL_NOLINGER
;

4603 
	`buf„r_ign‹e
(
ªp
,Ñï->
l
 -Ñï->
£nd_max
);

4604 
	`°ªam_öt_ªä˛o£
(
ªp
->
c⁄s
, 
	`îr‹_mesßge
(
s
, 
HTTP_ERR_504
));

4606 i‡(!(
s
->
Êags
 & 
SN_ERR_MASK
))

4607 
s
->
Êags
 |
SN_ERR_SRVTO
;

4608 i‡(!(
s
->
Êags
 & 
SN_FINST_MASK
))

4609 
s
->
Êags
 |
SN_FINST_H
;

4614 i‡(
ªp
->
Êags
 & 
BF_SHUTR
) {

4615 i‡(
msg
->
îr_pos
 >= 0)

4616 
	`hâp_ˇ±uª_bad_mesßge
(&
s
->
be
->
övÆid_ªp
, s, 
ªp
, 
msg
, s->
„
);

4618 
s
->
be
->
cou¡îs
.
Áûed_ª•
++;

4619 i‡(
s
->
§v
) {

4620 
s
->
§v
->
cou¡îs
.
Áûed_ª•
++;

4621 
	`hó…h_adju°
(
s
->
§v
, 
HANA_STATUS_HTTP_BROKEN_PIPE
);

4624 
	`buf„r_auto_˛o£
(
ªp
);

4625 
ªp
->
™Æy£rs
 = 0;

4626 
txn
->
°©us
 = 502;

4627 
ªp
->
¥od
->
Êags
 |
SI_FL_NOLINGER
;

4628 
	`buf„r_ign‹e
(
ªp
,Ñï->
l
 -Ñï->
£nd_max
);

4629 
	`°ªam_öt_ªä˛o£
(
ªp
->
c⁄s
, 
	`îr‹_mesßge
(
s
, 
HTTP_ERR_502
));

4631 i‡(!(
s
->
Êags
 & 
SN_ERR_MASK
))

4632 
s
->
Êags
 |
SN_ERR_SRVCL
;

4633 i‡(!(
s
->
Êags
 & 
SN_FINST_MASK
))

4634 
s
->
Êags
 |
SN_FINST_H
;

4639 i‡(
ªp
->
Êags
 & 
BF_WRITE_ERROR
) {

4640 i‡(
msg
->
îr_pos
 >= 0)

4641 
	`hâp_ˇ±uª_bad_mesßge
(&
s
->
be
->
övÆid_ªp
, s, 
ªp
, 
msg
, s->
„
);

4643 
s
->
be
->
cou¡îs
.
Áûed_ª•
++;

4644 
ªp
->
™Æy£rs
 = 0;

4645 
	`buf„r_auto_˛o£
(
ªp
);

4647 i‡(!(
s
->
Êags
 & 
SN_ERR_MASK
))

4648 
s
->
Êags
 |
SN_ERR_CLICL
;

4649 i‡(!(
s
->
Êags
 & 
SN_FINST_MASK
))

4650 
s
->
Êags
 |
SN_FINST_H
;

4656 
	`buf„r_d⁄t_˛o£
(
ªp
);

4665 i‡(
	`u∆ikñy
(
msg
->
îr_pos
 >= 0))

4666 
	`hâp_ˇ±uª_bad_mesßge
(&
s
->
be
->
övÆid_ªp
, s, 
ªp
, 
msg
, s->
„
);

4671 
n
 = 
msg
->
sﬁ
[msg->
¶
.
°
.
c
] - '0';

4672 i‡(
n
 < 1 ||Ç > 5)

4673 
n
 = 0;

4674 i‡(
s
->
§v
)

4675 
s
->
§v
->
cou¡îs
.
p
.
hâp
.
r•
[
n
]++;

4678 i‡((
msg
->
¶
.
°
.
v_l
 == 8) &&

4679 ((
msg
->
sﬁ
[5] > '1') ||

4680 ((
msg
->
sﬁ
[5] == '1') &&

4681 (
msg
->
sﬁ
[7] >= '1'))))

4682 
txn
->
Êags
 |
TX_RES_VER_11
;

4685 
txn
->
Êags
 &~(
TX_HDR_CONN_PRS
|
TX_HDR_CONN_CLO
|
TX_HDR_CONN_KAL
|
TX_CON_CLO_SET
|
TX_CON_KAL_SET
);

4688 
txn
->
Êags
 &~
TX_RES_XFER_LEN
;

4690 
txn
->
°©us
 = 
	`°æ2ui
(
msg
->
sﬁ
 + msg->
¶
.
°
.
c
, msg->¶.°.
c_l
);

4696 i‡(
s
->
§v
) {

4697 i‡(
txn
->
°©us
 >= 100 && (txn->status < 500 ||Åxn->status == 501 ||Åxn->status == 505))

4698 
	`hó…h_adju°
(
s
->
§v
, 
HANA_STATUS_HTTP_OK
);

4700 
	`hó…h_adju°
(
s
->
§v
, 
HANA_STATUS_HTTP_STS
);

4707 
txn
->
°©us
) {

4725 i‡(
	`likñy
(
txn
->
mëh
 !
HTTP_METH_POST
) &&

4726 (
s
->
be
->
›ti⁄s
 & (
PR_O_CHK_CACHE
|
PR_O_COOK_NOC
)))

4727 
txn
->
Êags
 |
TX_CACHEABLE
 | 
TX_CACHE_COOK
;

4736 
s
->
logs
.
logwaô
 &~
LW_RESP
;

4737 i‡(
	`u∆ikñy
((
s
->
logs
.
logwaô
 & 
LW_RSPHDR
Ë&& s->
„
->
r•_ˇp
))

4738 
	`ˇ±uª_hódîs
(
msg
->
sﬁ
, &
txn
->
hdr_idx
,

4739 
txn
->
r•
.
ˇp
, 
s
->
„
->
r•_ˇp
);

4786 i‡(
txn
->
mëh
 =
HTTP_METH_HEAD
 ||

4787 (
txn
->
°©us
 >= 100 &&Åxn->status < 200) ||

4788 
txn
->
°©us
 == 204 ||Åxn->status == 304) {

4789 
txn
->
Êags
 |
TX_RES_XFER_LEN
;

4790 
skù_c⁄ã¡_Àngth
;

4793 
u£_˛o£_⁄ly
 = 0;

4794 
˘x
.
idx
 = 0;

4795 (
txn
->
Êags
 & 
TX_RES_VER_11
) &&

4796 
	`hâp_föd_hódî2
("Tøns„r-Encodög", 17, 
msg
->
sﬁ
, &
txn
->
hdr_idx
, &
˘x
)) {

4797 i‡(
˘x
.
vÀn
 =7 && 
	`°∫ˇ£cmp
(˘x.
löe
 + ctx.
vÆ
, "chunked", 7) == 0)

4798 
txn
->
Êags
 |(
TX_RES_TE_CHNK
 | 
TX_RES_XFER_LEN
);

4799 i‡(
txn
->
Êags
 & 
TX_RES_TE_CHNK
) {

4801 
u£_˛o£_⁄ly
 = 1;

4802 
txn
->
Êags
 &~(
TX_RES_TE_CHNK
 | 
TX_RES_XFER_LEN
);

4808 
˘x
.
idx
 = 0;

4809 !(
txn
->
Êags
 & 
TX_RES_TE_CHNK
Ë&& !
u£_˛o£_⁄ly
 &&

4810 
	`hâp_föd_hódî2
("C⁄ã¡-Lígth", 14, 
msg
->
sﬁ
, &
txn
->
hdr_idx
, &
˘x
)) {

4811 sig√d 
˛
;

4813 i‡(!
˘x
.
vÀn
)

4814 
hdr_ª•⁄£_bad
;

4816 i‡(
	`°æ2Œrc
(
˘x
.
löe
 + ctx.
vÆ
, ctx.
vÀn
, &
˛
))

4817 
hdr_ª•⁄£_bad
;

4819 i‡(
˛
 < 0)

4820 
hdr_ª•⁄£_bad
;

4822 i‡((
txn
->
Êags
 & 
TX_RES_CNT_LEN
Ë&& (
msg
->
hdr_c⁄ã¡_Àn
 !
˛
))

4823 
hdr_ª•⁄£_bad
;

4825 
txn
->
Êags
 |
TX_RES_CNT_LEN
 | 
TX_RES_XFER_LEN
;

4826 
msg
->
hdr_c⁄ã¡_Àn
 = 
˛
;

4832 
skù_c⁄ã¡_Àngth
:

4835 
ªp
->
™Æy£rs
 &~
™_bô
;

4836 
ªp
->
™Æy£_exp
 = 
TICK_ETERNITY
;

4837 
	`buf„r_auto_˛o£
(
ªp
);

4839 
	}
}

4846 
	$hâp_¥o˚ss_ªs_comm⁄
(
£ssi⁄
 *
t
, 
buf„r
 *
ªp
, 
™_bô
, 
¥oxy
 *
px
)

4848 
hâp_txn
 *
txn
 = &
t
->txn;

4849 
hâp_msg
 *
msg
 = &
txn
->
r•
;

4850 
¥oxy
 *
cur_¥oxy
;

4851 
c⁄d_w‹dli°
 *
wl
;

4853 
	`DPRINTF
(
°dîr
,"[%u] %s: session=%p b=%p,Éxp(r,w)=%u,%u bf=%08x bl=%dánalysers=%02x\n",

4854 
now_ms
, 
__FUNCTION__
,

4855 
t
,

4856 
ªp
,

4857 
ªp
->
ªx
,Ñï->
wex
,

4858 
ªp
->
Êags
,

4859 
ªp
->
l
,

4860 
ªp
->
™Æy£rs
);

4862 i‡(
	`u∆ikñy
(
msg
->
msg_°©e
 < 
HTTP_MSG_BODY
))

4865 
ªp
->
™Æy£rs
 &~
™_bô
;

4866 
ªp
->
™Æy£_exp
 = 
TICK_ETERNITY
;

4885 i‡(
	`u∆ikñy
((
txn
->
mëh
 =
HTTP_METH_CONNECT
 &&Åxn->
°©us
 == 200) ||

4886 
txn
->
°©us
 == 101)) {

4896 
txn
->
Êags
 = (txn->Êag†& ~
TX_CON_WANT_MSK
Ë| 
TX_CON_WANT_TUN
;

4898 i‡((
txn
->
°©us
 >200Ë&& !—xn->
Êags
 & 
TX_HDR_CONN_PRS
) &&

4899 ((
txn
->
Êags
 & 
TX_CON_WANT_MSK
Ë!
TX_CON_WANT_TUN
 ||

4900 ((
t
->
„
->
›ti⁄s
|t->
be
->›ti⁄sË& 
PR_O_HTTP_CLOSE
))) {

4901 
to_dñ
 = 0;

4904 i‡(!(
txn
->
Êags
 & 
TX_RES_XFER_LEN
) &&

4905 (
txn
->
Êags
 & 
TX_CON_WANT_MSK
Ë!
TX_CON_WANT_TUN
)

4906 
txn
->
Êags
 = (txn->Êag†& ~
TX_CON_WANT_MSK
Ë| 
TX_CON_WANT_CLO
;

4909 i‡((
txn
->
Êags
 & 
TX_CON_WANT_MSK
Ë=
TX_CON_WANT_TUN
 ||

4910 (
txn
->
Êags
 & 
TX_CON_WANT_MSK
Ë=
TX_CON_WANT_CLO
) {

4911 
to_dñ
 |= 2;

4912 i‡(!(
txn
->
Êags
 & 
TX_RES_VER_11
))

4913 
to_dñ
 |= 1;

4916 
to_dñ
 |= 1;

4917 i‡((
txn
->
Êags
 & (
TX_RES_VER_11
|
TX_REQ_VER_11
)) == (TX_RES_VER_11|TX_REQ_VER_11))

4918 
to_dñ
 |= 2;

4922 
	`hâp_∑r£_c⁄√˘i⁄_hódî
(
txn
, 
msg
, 
ªp
, 
to_dñ
);

4927 i‡((
txn
->
Êags
 & 
TX_CON_WANT_MSK
Ë=
TX_CON_WANT_KAL
) {

4928 i‡((
txn
->
Êags
 & 
TX_HDR_CONN_CLO
) ||

4929 (
txn
->
Êags
 & (
TX_HDR_CONN_KAL
|
TX_RES_VER_11
)) == 0)

4930 
txn
->
Êags
 = (txn->Êag†& ~
TX_CON_WANT_MSK
Ë| 
TX_CON_WANT_SCL
;

4945 
cur_¥oxy
 = 
t
->
be
;

4947 
¥oxy
 *
ruÀ_£t
 = 
cur_¥oxy
;

4950 i‡(
ruÀ_£t
->
r•_exp
 !
NULL
) {

4951 i‡(
	`≠∂y_fûãrs_to_ª•⁄£
(
t
, 
ªp
, 
ruÀ_£t
) < 0) {

4952 
ªtu∫_bad_ª•
:

4953 i‡(
t
->
§v
) {

4954 
t
->
§v
->
cou¡îs
.
Áûed_ª•
++;

4955 
	`hó…h_adju°
(
t
->
§v
, 
HANA_STATUS_HTTP_RSP
);

4957 
cur_¥oxy
->
cou¡îs
.
Áûed_ª•
++;

4958 
ªtu∫_§v_¥x_502
:

4959 
ªp
->
™Æy£rs
 = 0;

4960 
txn
->
°©us
 = 502;

4961 
ªp
->
¥od
->
Êags
 |
SI_FL_NOLINGER
;

4962 
	`buf„r_ign‹e
(
ªp
,Ñï->
l
 -Ñï->
£nd_max
);

4963 
	`°ªam_öt_ªä˛o£
(
ªp
->
c⁄s
, 
	`îr‹_mesßge
(
t
, 
HTTP_ERR_502
));

4964 i‡(!(
t
->
Êags
 & 
SN_ERR_MASK
))

4965 
t
->
Êags
 |
SN_ERR_PRXCOND
;

4966 i‡(!(
t
->
Êags
 & 
SN_FINST_MASK
))

4967 
t
->
Êags
 |
SN_FINST_H
;

4973 i‡(
txn
->
Êags
 & 
TX_SVDENY
) {

4974 i‡(
t
->
§v
)

4975 
t
->
§v
->
cou¡îs
.
Áûed_£cu
++;

4977 
cur_¥oxy
->
cou¡îs
.
díõd_ª•
++;

4978 i‡(
t
->
li°íî
->
cou¡îs
)

4979 
t
->
li°íî
->
cou¡îs
->
díõd_ª•
++;

4981 
ªtu∫_§v_¥x_502
;

4985 
	`li°_f‹_óch_íåy
(
wl
, &
ruÀ_£t
->
r•_add
, 
li°
) {

4986 i‡(
txn
->
°©us
 < 200)

4988 i‡(
wl
->
c⁄d
) {

4989 
ªt
 = 
	`a˛_exec_c⁄d
(
wl
->
c⁄d
, 
px
, 
t
, 
txn
, 
ACL_DIR_RTR
);

4990 
ªt
 = 
	`a˛_∑ss
(ret);

4991 i‡(((
a˛_c⁄d
 *)
wl
->
c⁄d
)->
pﬁ
 =
ACL_COND_UNLESS
)

4992 
ªt
 = !ret;

4993 i‡(!
ªt
)

4996 i‡(
	`u∆ikñy
(
	`hâp_hódî_add_èû
(
ªp
, &
txn
->
r•
, &txn->
hdr_idx
, 
wl
->
s
) < 0))

4997 
ªtu∫_bad_ª•
;

5001 i‡(
cur_¥oxy
 =
t
->
„
)

5003 
cur_¥oxy
 = 
t
->
„
;

5012 i‡(
	`u∆ikñy
(
txn
->
°©us
 == 100)) {

5013 
	`hdr_idx_öô
(&
txn
->
hdr_idx
);

5014 
	`buf„r_f‹w¨d
(
ªp
,Ñï->
Ã
 - 
msg
->
sﬁ
);

5015 
msg
->
msg_°©e
 = 
HTTP_MSG_RPBEFORE
;

5016 
txn
->
°©us
 = 0;

5017 
ªp
->
™Æy£rs
 |
AN_RES_WAIT_HTTP
 | 
™_bô
;

5020 i‡(
	`u∆ikñy
(
txn
->
°©us
 < 200))

5021 
skù_hódî_m™glög
;

5028 i‡(
t
->
be
->
cookõ_«me
 ||Å->be->
≠p£ssi⁄_«me
 ||Å->
„
->
ˇ±uª_«me
 ||

5029 (
t
->
be
->
›ti⁄s
 & 
PR_O_CHK_CACHE
))

5030 
	`m™age_£rvî_side_cookõs
(
t
, 
ªp
);

5036 i‡((
t
->
be
->
›ti⁄s
 & (
PR_O_COOK_NOC
 | 
PR_O_CHK_CACHE
)) != 0)

5037 
	`check_ª•⁄£_f‹_ˇchóbûôy
(
t
, 
ªp
);

5042 i‡((
t
->
§v
Ë&& (t->
be
->
›ti⁄s
 & 
PR_O_COOK_INS
) &&

5043 !((
txn
->
Êags
 & 
TX_SCK_FOUND
Ë&& (
t
->
be
->
›ti⁄s2
 & 
PR_O2_COOK_PSV
)) &&

5044 (!(
t
->
Êags
 & 
SN_DIRECT
) ||

5045 ((
t
->
be
->
cookõ_maxidÀ
 || 
txn
->
cookõ_œ°_d©e
) &&

5046 (!
txn
->
cookõ_œ°_d©e
 || (txn->cookõ_œ°_d©ê- 
d©e
.
tv_£c
) < 0)) ||

5047 (
t
->
be
->
cookõ_maxli„
 && !
txn
->
cookõ_fú°_d©e
) ||

5048 (!
t
->
be
->
cookõ_maxli„
 && 
txn
->
cookõ_fú°_d©e
)) &&

5049 (!(
t
->
be
->
›ti⁄s
 & 
PR_O_COOK_POST
Ë|| (
txn
->
mëh
 =
HTTP_METH_POST
)) &&

5050 !(
t
->
Êags
 & 
SN_IGNORE_PRST
)) {

5051 
Àn
;

5058 i‡(!
t
->
§v
->
cookõ
) {

5059 
Àn
 = 
	`•rötf
(
åash
,

5061 
t
->
be
->
cookõ_«me
);

5064 
Àn
 = 
	`•rötf
(
åash
, "Së-Cookõ: %s=%s", 
t
->
be
->
cookõ_«me
,Å->
§v
->
cookõ
);

5066 i‡(
t
->
be
->
cookõ_maxidÀ
 ||Å->be->
cookõ_maxli„
) {

5068 
åash
[
Àn
++] = 
COOKIE_DELIM_DATE
;

5069 
	`s30tob64
((
d©e
.
tv_£c
+3Ë>> 2, 
åash
 + 
Àn
);Üen += 5;

5070 i‡(
t
->
be
->
cookõ_maxli„
) {

5074 
åash
[
Àn
++] = 
COOKIE_DELIM_DATE
;

5075 
	`s30tob64
(
txn
->
cookõ_fú°_d©e
 ?

5076 
txn
->
cookõ_fú°_d©e
 >> 2 :

5077 (
d©e
.
tv_£c
+3Ë>> 2, 
åash
 + 
Àn
);

5078 
Àn
 += 5;

5081 
Àn
 +
	`•rötf
(
åash
 +Üen, ";Öath=/");

5084 i‡(
t
->
be
->
cookõ_domaö
)

5085 
Àn
 +
	`•rötf
(
åash
+Àn, "; domaö=%s", 
t
->
be
->
cookõ_domaö
);

5087 i‡(
	`u∆ikñy
(
	`hâp_hódî_add_èû2
(
ªp
, &
txn
->
r•
, &txn->
hdr_idx
,

5088 
åash
, 
Àn
) < 0))

5089 
ªtu∫_bad_ª•
;

5091 
txn
->
Êags
 &~
TX_SCK_MASK
;

5092 i‡(
t
->
§v
->
cookõ
 && (t->
Êags
 & 
SN_DIRECT
))

5094 
txn
->
Êags
 |
TX_SCK_UPDATED
;

5096 
txn
->
Êags
 |
TX_SCK_INSERTED
;

5103 i‡((
t
->
be
->
›ti⁄s
 & 
PR_O_COOK_NOC
Ë&& (
txn
->
Êags
 & 
TX_CACHEABLE
)) {

5105 
txn
->
Êags
 &~
TX_CACHEABLE
 & ~
TX_CACHE_COOK
;

5107 i‡(
	`u∆ikñy
(
	`hâp_hódî_add_èû2
(
ªp
, &
txn
->
r•
, &txn->
hdr_idx
,

5109 
ªtu∫_bad_ª•
;

5118 i‡(((
txn
->
Êags
 & (
TX_CACHEABLE
 | 
TX_CACHE_COOK
 | 
TX_SCK_PRESENT
)) ==

5119 (
TX_CACHEABLE
 | 
TX_CACHE_COOK
 | 
TX_SCK_PRESENT
)) &&

5120 (
t
->
be
->
›ti⁄s
 & 
PR_O_CHK_CACHE
)) {

5126 i‡(
t
->
§v
)

5127 
t
->
§v
->
cou¡îs
.
Áûed_£cu
++;

5129 
cur_¥oxy
->
cou¡îs
.
díõd_ª•
++;

5130 i‡(
t
->
li°íî
->
cou¡îs
)

5131 
t
->
li°íî
->
cou¡îs
->
díõd_ª•
++;

5133 
	`AÀπ
("Blocking cacheable cookie inÑesponse from instance %s, server %s.\n",

5134 
t
->
be
->
id
,Å->
§v
?t->srv->id:"<dispatch>");

5135 
	`£nd_log
(
t
->
be
, 
LOG_ALERT
,

5137 
t
->
be
->
id
,Å->
§v
?t->srv->id:"<dispatch>");

5138 
ªtu∫_§v_¥x_502
;

5144 i‡(((
txn
->
Êags
 & 
TX_CON_WANT_MSK
Ë!
TX_CON_WANT_TUN
) ||

5145 ((
t
->
„
->
›ti⁄s
|t->
be
->›ti⁄sË& 
PR_O_HTTP_CLOSE
)) {

5146 
w™t_Êags
 = 0;

5148 i‡((
txn
->
Êags
 & 
TX_CON_WANT_MSK
Ë=
TX_CON_WANT_KAL
 ||

5149 (
txn
->
Êags
 & 
TX_CON_WANT_MSK
Ë=
TX_CON_WANT_SCL
) {

5153 i‡((
txn
->
Êags
 & (
TX_REQ_VER_11
|
TX_RES_VER_11
)) != (TX_REQ_VER_11|TX_RES_VER_11))

5154 
w™t_Êags
 |
TX_CON_KAL_SET
;

5160 i‡(
txn
->
Êags
 & 
TX_RES_VER_11
)

5161 
w™t_Êags
 |
TX_CON_CLO_SET
;

5164 i‡(
w™t_Êags
 !(
txn
->
Êags
 & (
TX_CON_CLO_SET
|
TX_CON_KAL_SET
)))

5165 
	`hâp_ch™ge_c⁄√˘i⁄_hódî
(
txn
, 
msg
, 
ªp
, 
w™t_Êags
);

5168 
skù_hódî_m™glög
:

5169 i‡((
txn
->
Êags
 & 
TX_RES_XFER_LEN
) ||

5170 (
txn
->
Êags
 & 
TX_CON_WANT_MSK
Ë=
TX_CON_WANT_TUN
)

5171 
ªp
->
™Æy£rs
 |
AN_RES_HTTP_XFER_BODY
;

5178 
t
->
logs
.
t_d©a
 = 
	`tv_ms_ñ≠£d
(&t->logs.
tv_ac˚±
, &
now
);

5184 i‡(
t
->
„
->
to_log
 && !—->
logs
.
logwaô
 & 
LW_BYTES
)) {

5185 
t
->
logs
.
t_˛o£
 =Å->logs.
t_d©a
;

5186 
t
->
logs
.
byãs_out
 = 
txn
->
r•
.
eoh
;

5187 
t
->
	`do_log
(t);

5188 
t
->
logs
.
byãs_out
 = 0;

5198 
	}
}

5211 
	$hâp_ª•⁄£_f‹w¨d_body
(
£ssi⁄
 *
s
, 
buf„r
 *
ªs
, 
™_bô
)

5213 
hâp_txn
 *
txn
 = &
s
->txn;

5214 
hâp_msg
 *
msg
 = &
s
->
txn
.
r•
;

5216 i‡(
	`u∆ikñy
(
msg
->
msg_°©e
 < 
HTTP_MSG_BODY
))

5219 i‡((
ªs
->
Êags
 & (
BF_READ_ERROR
|
BF_READ_TIMEOUT
|
BF_WRITE_ERROR
|
BF_WRITE_TIMEOUT
)) ||

5220 ((
ªs
->
Êags
 & 
BF_SHUTW
Ë&& (ªs->
to_f‹w¨d
 ||Ñes->
£nd_max
)) ||

5221 !
s
->
ªq
->
™Æy£rs
) {

5223 
	`buf„r_ign‹e
(
ªs
,Ñes->
l
 -Ñes->
£nd_max
);

5224 
	`buf„r_auto_ªad
(
ªs
);

5225 
	`buf„r_auto_˛o£
(
ªs
);

5226 
ªs
->
™Æy£rs
 &~
™_bô
;

5230 
	`buf„r_d⁄t_˛o£
(
ªs
);

5232 i‡(
msg
->
msg_°©e
 < 
HTTP_MSG_CHUNK_SIZE
) {

5238 
ªs
->
Ã
 =Ñes->
d©a
 + 
msg
->
sov
;

5239 i‡(
txn
->
Êags
 & 
TX_RES_TE_CHNK
)

5240 
msg
->
msg_°©e
 = 
HTTP_MSG_CHUNK_SIZE
;

5242 
msg
->
msg_°©e
 = 
HTTP_MSG_DATA
;

5247 
	`hâp_sûít_debug
(
__LINE__
, 
s
);

5249 i‡(
msg
->
hdr_c⁄ã¡_Àn
 || msg->
som
 !msg->
sov
) {

5250 
byãs
 = 
msg
->
sov
 - msg->
som
;

5251 i‡(
byãs
 < 0)

5252 
byãs
 +
ªs
->
size
;

5253 
	`buf„r_f‹w¨d
(
ªs
, 
byãs
 + 
msg
->
hdr_c⁄ã¡_Àn
);

5254 
msg
->
hdr_c⁄ã¡_Àn
 = 0;

5255 
msg
->
som
 = msg->
sov
;

5258 i‡(
msg
->
msg_°©e
 =
HTTP_MSG_DATA
) {

5260 i‡(
ªs
->
to_f‹w¨d
)

5261 
missög_d©a
;

5264 i‡(
txn
->
Êags
 & 
TX_RES_TE_CHNK
)

5265 
msg
->
msg_°©e
 = 
HTTP_MSG_DATA_CRLF
;

5267 
msg
->
msg_°©e
 = 
HTTP_MSG_DONE
;

5269 i‡(
msg
->
msg_°©e
 =
HTTP_MSG_CHUNK_SIZE
) {

5273 
ªt
 = 
	`hâp_∑r£_chunk_size
(
ªs
, 
msg
);

5275 i‡(!
ªt
)

5276 
missög_d©a
;

5277 i‡(
ªt
 < 0)

5278 
ªtu∫_bad_ªs
;

5281 i‡(
msg
->
msg_°©e
 =
HTTP_MSG_DATA_CRLF
) {

5283 
ªt
;

5285 
ªs
->
Ã
 =Ñes->
w
 +Ñes->
£nd_max
;

5286 i‡(
ªs
->
Ã
 >ªs->
d©a
 +Ñes->
size
)

5287 
ªs
->
Ã
 -ªs->
size
;

5289 
ªt
 = 
	`hâp_skù_chunk_¸lf
(
ªs
, 
msg
);

5291 i‡(!
ªt
)

5292 
missög_d©a
;

5293 i‡(
ªt
 < 0)

5294 
ªtu∫_bad_ªs
;

5297 i‡(
msg
->
msg_°©e
 =
HTTP_MSG_TRAILERS
) {

5298 
ªt
 = 
	`hâp_f‹w¨d_åaûîs
(
ªs
, 
msg
);

5300 i‡(
ªt
 == 0)

5301 
missög_d©a
;

5302 i‡(
ªt
 < 0)

5303 
ªtu∫_bad_ªs
;

5308 i‡(
	`hâp_ªsync_°©es
(
s
)) {

5309 
	`hâp_sûít_debug
(
__LINE__
, 
s
);

5313 i‡(
	`u∆ikñy
(
msg
->
msg_°©e
 =
HTTP_MSG_ERROR
))

5314 
ªtu∫_bad_ªs
;

5321 
missög_d©a
:

5323 i‡(
ªs
->
Êags
 & 
BF_SHUTR
) {

5324 i‡(!(
s
->
Êags
 & 
SN_ERR_MASK
))

5325 
s
->
Êags
 |
SN_ERR_SRVCL
;

5326 
s
->
be
->
cou¡îs
.
§v_ab‹ts
++;

5327 i‡(
s
->
§v
)

5328 
s
->
§v
->
cou¡îs
.
§v_ab‹ts
++;

5329 
ªtu∫_bad_ªs
;

5333 i‡(!
s
->
ªq
->
™Æy£rs
)

5334 
ªtu∫_bad_ªs
;

5337 i‡(
msg
->
hdr_c⁄ã¡_Àn
 || msg->
som
 !msg->
sov
) {

5338 
	`buf„r_f‹w¨d
(
ªs
, 
msg
->
sov
 - msg->
som
 + msg->
hdr_c⁄ã¡_Àn
);

5339 
msg
->
hdr_c⁄ã¡_Àn
 = 0;

5340 
msg
->
som
 = msg->
sov
;

5344 
	`hâp_sûít_debug
(
__LINE__
, 
s
);

5347 
ªtu∫_bad_ªs
:

5348 
txn
->
r•
.
msg_°©e
 = 
HTTP_MSG_ERROR
;

5350 
	`°ªam_öt_ªä˛o£
(
ªs
->
c⁄s
, 
NULL
);

5351 
ªs
->
™Æy£rs
 = 0;

5352 
s
->
be
->
cou¡îs
.
Áûed_ª•
++;

5353 i‡(
s
->
§v
) {

5354 
s
->
§v
->
cou¡îs
.
Áûed_ª•
++;

5355 
	`hó…h_adju°
(
s
->
§v
, 
HANA_STATUS_HTTP_HDRRSP
);

5358 i‡(!(
s
->
Êags
 & 
SN_ERR_MASK
))

5359 
s
->
Êags
 |
SN_ERR_PRXCOND
;

5360 i‡(!(
s
->
Êags
 & 
SN_FINST_MASK
))

5361 
s
->
Êags
 |
SN_FINST_D
;

5362 
	`hâp_sûít_debug
(
__LINE__
, 
s
);

5364 
	}
}

5371 
	$≠∂y_fûãr_to_ªq_hódîs
(
£ssi⁄
 *
t
, 
buf„r
 *
ªq
, 
hdr_exp
 *
exp
)

5373 
ãrm
;

5374 *
cur_±r
, *
cur_íd
, *
cur_√xt
;

5375 
cur_idx
, 
ﬁd_idx
, 
œ°_hdr
;

5376 
hâp_txn
 *
txn
 = &
t
->txn;

5377 
hdr_idx_ñem
 *
cur_hdr
;

5378 
Àn
, 
dñè
;

5380 
œ°_hdr
 = 0;

5382 
cur_√xt
 = 
txn
->
ªq
.
sﬁ
 + 
	`hdr_idx_fú°_pos
(&txn->
hdr_idx
);

5383 
ﬁd_idx
 = 0;

5385 !
œ°_hdr
) {

5386 i‡(
	`u∆ikñy
(
txn
->
Êags
 & (
TX_CLDENY
 | 
TX_CLTARPIT
)))

5388 i‡(
	`u∆ikñy
(
txn
->
Êags
 & 
TX_CLALLOW
) &&

5389 (
exp
->
a˘i⁄
 =
ACT_ALLOW
 ||

5390 
exp
->
a˘i⁄
 =
ACT_DENY
 ||

5391 
exp
->
a˘i⁄
 =
ACT_TARPIT
))

5394 
cur_idx
 = 
txn
->
hdr_idx
.
v
[
ﬁd_idx
].
√xt
;

5395 i‡(!
cur_idx
)

5398 
cur_hdr
 = &
txn
->
hdr_idx
.
v
[
cur_idx
];

5399 
cur_±r
 = 
cur_√xt
;

5400 
cur_íd
 = 
cur_±r
 + 
cur_hdr
->
Àn
;

5401 
cur_√xt
 = 
cur_íd
 + 
cur_hdr
->
¸
 + 1;

5412 
ãrm
 = *
cur_íd
;

5413 *
cur_íd
 = '\0';

5415 i‡(
	`ªgexec
(
exp
->
¥eg
, 
cur_±r
, 
MAX_MATCH
, 
pm©ch
, 0) == 0) {

5416 
exp
->
a˘i⁄
) {

5417 
ACT_SETBE
:

5422 i‡(
t
->
be
 !t->
„
)

5426 
	`£ssi⁄_£t_backíd
(
t
, (
¥oxy
 *)
exp
->
ª∂a˚
);

5427 
œ°_hdr
 = 1;

5430 
ACT_ALLOW
:

5431 
txn
->
Êags
 |
TX_CLALLOW
;

5432 
œ°_hdr
 = 1;

5435 
ACT_DENY
:

5436 
txn
->
Êags
 |
TX_CLDENY
;

5437 
œ°_hdr
 = 1;

5439 
t
->
be
->
cou¡îs
.
díõd_ªq
++;

5440 i‡(
t
->
li°íî
->
cou¡îs
)

5441 
t
->
li°íî
->
cou¡îs
->
díõd_ªq
++;

5445 
ACT_TARPIT
:

5446 
txn
->
Êags
 |
TX_CLTARPIT
;

5447 
œ°_hdr
 = 1;

5449 
t
->
be
->
cou¡îs
.
díõd_ªq
++;

5450 i‡(
t
->
li°íî
->
cou¡îs
)

5451 
t
->
li°íî
->
cou¡îs
->
díõd_ªq
++;

5455 
ACT_REPLACE
:

5456 
Àn
 = 
	`exp_ª∂a˚
(
åash
, 
cur_±r
, 
exp
->
ª∂a˚
, 
pm©ch
);

5457 
dñè
 = 
	`buf„r_ª∂a˚2
(
ªq
, 
cur_±r
, 
cur_íd
, 
åash
, 
Àn
);

5463 
cur_íd
 +
dñè
;

5464 
cur_√xt
 +
dñè
;

5465 
cur_hdr
->
Àn
 +
dñè
;

5466 
	`hâp_msg_move_íd
(&
txn
->
ªq
, 
dñè
);

5469 
ACT_REMOVE
:

5470 
dñè
 = 
	`buf„r_ª∂a˚2
(
ªq
, 
cur_±r
, 
cur_√xt
, 
NULL
, 0);

5471 
cur_√xt
 +
dñè
;

5473 
	`hâp_msg_move_íd
(&
txn
->
ªq
, 
dñè
);

5474 
txn
->
hdr_idx
.
v
[
ﬁd_idx
].
√xt
 = 
cur_hdr
->next;

5475 
txn
->
hdr_idx
.
u£d
--;

5476 
cur_hdr
->
Àn
 = 0;

5477 
cur_íd
 = 
NULL
;

5482 i‡(
cur_íd
)

5483 *
cur_íd
 = 
ãrm
;

5488 
ﬁd_idx
 = 
cur_idx
;

5491 
	}
}

5500 
	$≠∂y_fûãr_to_ªq_löe
(
£ssi⁄
 *
t
, 
buf„r
 *
ªq
, 
hdr_exp
 *
exp
)

5502 
ãrm
;

5503 *
cur_±r
, *
cur_íd
;

5504 
d⁄e
;

5505 
hâp_txn
 *
txn
 = &
t
->txn;

5506 
Àn
, 
dñè
;

5509 i‡(
	`u∆ikñy
(
txn
->
Êags
 & (
TX_CLDENY
 | 
TX_CLTARPIT
)))

5511 i‡(
	`u∆ikñy
(
txn
->
Êags
 & 
TX_CLALLOW
) &&

5512 (
exp
->
a˘i⁄
 =
ACT_ALLOW
 ||

5513 
exp
->
a˘i⁄
 =
ACT_DENY
 ||

5514 
exp
->
a˘i⁄
 =
ACT_TARPIT
))

5516 i‡(
exp
->
a˘i⁄
 =
ACT_REMOVE
)

5519 
d⁄e
 = 0;

5521 
cur_±r
 = 
txn
->
ªq
.
sﬁ
;

5522 
cur_íd
 = 
cur_±r
 + 
txn
->
ªq
.
¶
.
rq
.
l
;

5531 
ãrm
 = *
cur_íd
;

5532 *
cur_íd
 = '\0';

5534 i‡(
	`ªgexec
(
exp
->
¥eg
, 
cur_±r
, 
MAX_MATCH
, 
pm©ch
, 0) == 0) {

5535 
exp
->
a˘i⁄
) {

5536 
ACT_SETBE
:

5541 i‡(
t
->
be
 !t->
„
)

5545 
	`£ssi⁄_£t_backíd
(
t
, (
¥oxy
 *)
exp
->
ª∂a˚
);

5546 
d⁄e
 = 1;

5549 
ACT_ALLOW
:

5550 
txn
->
Êags
 |
TX_CLALLOW
;

5551 
d⁄e
 = 1;

5554 
ACT_DENY
:

5555 
txn
->
Êags
 |
TX_CLDENY
;

5557 
t
->
be
->
cou¡îs
.
díõd_ªq
++;

5558 i‡(
t
->
li°íî
->
cou¡îs
)

5559 
t
->
li°íî
->
cou¡îs
->
díõd_ªq
++;

5561 
d⁄e
 = 1;

5564 
ACT_TARPIT
:

5565 
txn
->
Êags
 |
TX_CLTARPIT
;

5567 
t
->
be
->
cou¡îs
.
díõd_ªq
++;

5568 i‡(
t
->
li°íî
->
cou¡îs
)

5569 
t
->
li°íî
->
cou¡îs
->
díõd_ªq
++;

5571 
d⁄e
 = 1;

5574 
ACT_REPLACE
:

5575 *
cur_íd
 = 
ãrm
;

5576 
Àn
 = 
	`exp_ª∂a˚
(
åash
, 
cur_±r
, 
exp
->
ª∂a˚
, 
pm©ch
);

5577 
dñè
 = 
	`buf„r_ª∂a˚2
(
ªq
, 
cur_±r
, 
cur_íd
, 
åash
, 
Àn
);

5583 
	`hâp_msg_move_íd
(&
txn
->
ªq
, 
dñè
);

5584 
cur_íd
 +
dñè
;

5585 
cur_íd
 = (*)
	`hâp_∑r£_ªqlöe
(&
txn
->
ªq
,Ñeq->
d©a
,

5586 
HTTP_MSG_RQMETH
,

5587 
cur_±r
, 
cur_íd
 + 1,

5588 
NULL
, NULL);

5589 i‡(
	`u∆ikñy
(!
cur_íd
))

5595 
txn
->
mëh
 = 
	`föd_hâp_mëh
(
cur_±r
,Åxn->
ªq
.
¶
.
rq
.
m_l
);

5596 
	`hdr_idx_£t_°¨t
(&
txn
->
hdr_idx
,Åxn->
ªq
.
¶
.
rq
.
l
, *
cur_íd
 == '\r');

5601 *
cur_íd
 = 
ãrm
;

5602  
d⁄e
;

5603 
	}
}

5613 
	$≠∂y_fûãrs_to_ªque°
(
£ssi⁄
 *
s
, 
buf„r
 *
ªq
, 
¥oxy
 *
px
)

5615 
hâp_txn
 *
txn
 = &
s
->txn;

5616 
hdr_exp
 *
exp
;

5618 
exp
 = 
px
->
ªq_exp
;Éxp;Éx∞exp->
√xt
) {

5619 
ªt
;

5627 i‡(
txn
->
Êags
 & (
TX_CLDENY
|
TX_CLTARPIT
))

5630 i‡((
txn
->
Êags
 & 
TX_CLALLOW
) &&

5631 (
exp
->
a˘i⁄
 =
ACT_ALLOW
 ||Éxp->a˘i⁄ =
ACT_DENY
 ||

5632 
exp
->
a˘i⁄
 =
ACT_TARPIT
 ||Éxp->a˘i⁄ =
ACT_PASS
))

5638 i‡(
exp
->
c⁄d
) {

5639 
ªt
 = 
	`a˛_exec_c⁄d
(
exp
->
c⁄d
, 
px
, 
s
, 
txn
, 
ACL_DIR_REQ
);

5640 
ªt
 = 
	`a˛_∑ss
(ret);

5641 i‡(((
a˛_c⁄d
 *)
exp
->
c⁄d
)->
pﬁ
 =
ACL_COND_UNLESS
)

5642 
ªt
 = !ret;

5644 i‡(!
ªt
)

5649 
ªt
 = 
	`≠∂y_fûãr_to_ªq_löe
(
s
, 
ªq
, 
exp
);

5650 i‡(
	`u∆ikñy
(
ªt
 < 0))

5653 i‡(
	`likñy
(
ªt
 == 0)) {

5657 
	`≠∂y_fûãr_to_ªq_hódîs
(
s
, 
ªq
, 
exp
);

5661 
	}
}

5669 
	$m™age_˛õ¡_side_≠p£ssi⁄
(
£ssi⁄
 *
t
, c⁄° *
buf
, 
Àn
) {

5670 
hâp_txn
 *
txn
 = &
t
->txn;

5671 
≠p£ss
 *
a£ssi⁄
 = 
NULL
;

5672 *
£ssid_ãmp
 = 
NULL
;

5674 i‡(
Àn
 > 
t
->
be
->
≠p£ssi⁄_Àn
) {

5675 
Àn
 = 
t
->
be
->
≠p£ssi⁄_Àn
;

5678 i‡(
t
->
be
->
›ti⁄s2
 & 
PR_O2_AS_REQL
) {

5680 i‡(
txn
->
£ssid
 !
NULL
) {

5682 
	`poﬁ_‰ì2
(
≠oﬁs
.
£ssid
, 
txn
->sessid);

5685 i‡((
txn
->
£ssid
 = 
	`poﬁ_Æloc2
(
≠oﬁs
.£ssid)Ë=
NULL
) {

5686 
	`AÀπ
("NotÉnough memoryÖrocess_cli():asession->sessid:malloc().\n");

5687 
	`£nd_log
(
t
->
be
, 
LOG_ALERT
, "NotÉnough memoryÖrocess_cli():asession->sessid:malloc().\n");

5691 
	`mem˝y
(
txn
->
£ssid
, 
buf
, 
Àn
);

5692 
txn
->
£ssid
[
Àn
] = 0;

5695 i‡((
£ssid_ãmp
 = 
	`poﬁ_Æloc2
(
≠oﬁs
.
£ssid
)Ë=
NULL
) {

5696 
	`AÀπ
("NotÉnough memoryÖrocess_cli():asession->sessid:malloc().\n");

5697 
	`£nd_log
(
t
->
be
, 
LOG_ALERT
, "NotÉnough memoryÖrocess_cli():asession->sessid:malloc().\n");

5701 
	`mem˝y
(
£ssid_ãmp
, 
buf
, 
Àn
);

5702 
£ssid_ãmp
[
Àn
] = 0;

5704 
a£ssi⁄
 = 
	`≠p£ssi⁄_hash_lookup
(&(
t
->
be
->
htbl_¥oxy
), 
£ssid_ãmp
);

5706 
	`poﬁ_‰ì2
(
≠oﬁs
.
£ssid
, 
£ssid_ãmp
);

5708 i‡(
a£ssi⁄
 !
NULL
) {

5709 
a£ssi⁄
->
expúe
 = 
	`tick_add_if£t
(
now_ms
, 
t
->
be
->
timeout
.
≠p£ssi⁄
);

5710 i‡(!(
t
->
be
->
›ti⁄s2
 & 
PR_O2_AS_REQL
))

5711 
a£ssi⁄
->
ªque°_cou¡
++;

5713 i‡(
a£ssi⁄
->
£rvîid
 !
NULL
) {

5714 
£rvî
 *
§v
 = 
t
->
be
->srv;

5716 
§v
) {

5717 i‡(
	`°rcmp
(
§v
->
id
, 
a£ssi⁄
->
£rvîid
) == 0) {

5718 i‡((
§v
->
°©e
 & 
SRV_RUNNING
) ||

5719 (
t
->
be
->
›ti⁄s
 & 
PR_O_PERSIST
) ||

5720 (
t
->
Êags
 & 
SN_FORCE_PRST
)) {

5722 
txn
->
Êags
 &~
TX_CK_MASK
;

5723 
txn
->
Êags
 |(
§v
->
°©e
 & 
SRV_RUNNING
Ë? 
TX_CK_VALID
 : 
TX_CK_DOWN
;

5724 
t
->
Êags
 |
SN_DIRECT
 | 
SN_ASSIGNED
;

5725 
t
->
§v
 = srv;

5728 
txn
->
Êags
 &~
TX_CK_MASK
;

5729 
txn
->
Êags
 |
TX_CK_DOWN
;

5732 
§v
 = srv->
√xt
;

5736 
	}
}

5743 *
	$föd_cookõ_vÆue_íd
(*
s
, c⁄° *
e
)

5745 
quŸed
, 
qd∑ú
;

5747 
quŸed
 = 
qd∑ú
 = 0;

5748 ; 
s
 < 
e
; s++) {

5749 i‡(
qd∑ú
) qdpair = 0;

5750 i‡(
quŸed
) {

5751 i‡(*
s
 ='\\'Ë
qd∑ú
 = 1;

5752 i‡(*
s
 ='"'Ë
quŸed
 = 0;

5754 i‡(*
s
 ='"'Ë
quŸed
 = 1;

5755 i‡(*
s
 == ',' || *s == ';')  s;

5757  
s
;

5758 
	}
}

5777 
	$dñ_hdr_vÆue
(
buf„r
 *
buf
, **
‰om
, *
√xt
)

5779 *
¥ev
 = *
‰om
;

5781 i‡(*
¥ev
 == ':') {

5785 i‡(!
hâp_is_¸lf
[()*
√xt
])

5786 
√xt
++;

5787 
¥ev
++;

5788 i‡(
¥ev
 < 
√xt
)

5789 *
¥ev
++ = ' ';

5791 
hâp_is_•ht
[()*
√xt
])

5792 
√xt
++;

5795 
hâp_is_•ht
[()*(
¥ev
-1)])

5796 
¥ev
--;

5797 *
‰om
 = 
¥ev
;

5802 i‡(!
hâp_is_¸lf
[()*
√xt
]) {

5803 *
¥ev
++ = *
√xt
++;

5804 i‡(
¥ev
 + 1 < 
√xt
)

5805 *
¥ev
++ = ' ';

5806 
hâp_is_•ht
[()*
√xt
])

5807 
√xt
++;

5810  
	`buf„r_ª∂a˚2
(
buf
, 
¥ev
, 
√xt
, 
NULL
, 0);

5811 
	}
}

5819 
	$m™age_˛õ¡_side_cookõs
(
£ssi⁄
 *
t
, 
buf„r
 *
ªq
)

5821 
hâp_txn
 *
txn
 = &
t
->txn;

5822 
¥e£rve_hdr
;

5823 
cur_idx
, 
ﬁd_idx
;

5824 *
hdr_beg
, *
hdr_íd
, *
hdr_√xt
, *
dñ_‰om
;

5825 *
¥ev
, *
©t_beg
, *
©t_íd
, *
equÆ
, *
vÆ_beg
, *
vÆ_íd
, *
√xt
;

5828 
ﬁd_idx
 = 0;

5829 
hdr_√xt
 = 
txn
->
ªq
.
sﬁ
 + 
	`hdr_idx_fú°_pos
(&txn->
hdr_idx
);

5831 (
cur_idx
 = 
txn
->
hdr_idx
.
v
[
ﬁd_idx
].
√xt
)) {

5832 
hdr_idx_ñem
 *
cur_hdr
;

5833 
vÆ
;

5835 
cur_hdr
 = &
txn
->
hdr_idx
.
v
[
cur_idx
];

5836 
hdr_beg
 = 
hdr_√xt
;

5837 
hdr_íd
 = 
hdr_beg
 + 
cur_hdr
->
Àn
;

5838 
hdr_√xt
 = 
hdr_íd
 + 
cur_hdr
->
¸
 + 1;

5845 
vÆ
 = 
	`hâp_hódî_m©ch2
(
hdr_beg
, 
hdr_íd
, "Cookie", 6);

5846 i‡(!
vÆ
) {

5847 
ﬁd_idx
 = 
cur_idx
;

5851 
dñ_‰om
 = 
NULL
;

5852 
¥e£rve_hdr
 = 0;

5899 
¥ev
 = 
hdr_beg
 + 6;Öªv < 
hdr_íd
;Öªv = 
√xt
) {

5903 
©t_beg
 = 
¥ev
 + 1;

5904 
©t_beg
 < 
hdr_íd
 && 
hâp_is_•ht
[()*att_beg])

5905 
©t_beg
++;

5910 
equÆ
 = 
©t_íd
 = 
©t_beg
;

5912 
equÆ
 < 
hdr_íd
) {

5913 i‡(*
equÆ
 == '=' || *equal == ',' || *equal == ';')

5915 i‡(
hâp_is_•ht
[()*
equÆ
++])

5917 
©t_íd
 = 
equÆ
;

5925 i‡(
equÆ
 < 
hdr_íd
 && *equal == '=') {

5927 
vÆ_beg
 = 
equÆ
 + 1;

5928 
vÆ_beg
 < 
hdr_íd
 && 
hâp_is_•ht
[()*val_beg])

5929 
vÆ_beg
++;

5932 
√xt
 = 
	`föd_cookõ_vÆue_íd
(
vÆ_beg
, 
hdr_íd
);

5935 
vÆ_íd
 = 
√xt
;

5936 
vÆ_íd
 > 
vÆ_beg
 && 
hâp_is_•ht
[()*(val_end - 1)])

5937 
vÆ_íd
--;

5939 
vÆ_beg
 = 
vÆ_íd
 = 
√xt
 = 
equÆ
;

5946 i‡(*
©t_beg
 == '$')

5950 i‡(
equÆ
 =
√xt
) {

5955 
¥e£rve_hdr
 = 1;

5956 i‡(
dñ_‰om
 !
NULL
) {

5957 
dñè
 = 
	`dñ_hdr_vÆue
(
ªq
, &
dñ_‰om
, 
¥ev
);

5958 
vÆ_íd
 +
dñè
;

5959 
√xt
 +
dñè
;

5960 
hdr_íd
 +
dñè
;

5961 
hdr_√xt
 +
dñè
;

5962 
cur_hdr
->
Àn
 +
dñè
;

5963 
	`hâp_msg_move_íd
(&
txn
->
ªq
, 
dñè
);

5964 
¥ev
 = 
dñ_‰om
;

5965 
dñ_‰om
 = 
NULL
;

5975 i‡(
	`u∆ikñy
(
©t_íd
 !
equÆ
 || 
vÆ_beg
 >Équal + 1)) {

5976 
°rù≥d_bef‹e
 = 0;

5977 
°rù≥d_a·î
 = 0;

5979 i‡(
©t_íd
 !
equÆ
) {

5980 
°rù≥d_bef‹e
 = 
	`buf„r_ª∂a˚2
(
ªq
, 
©t_íd
, 
equÆ
, 
NULL
, 0);

5981 
equÆ
 +
°rù≥d_bef‹e
;

5982 
vÆ_beg
 +
°rù≥d_bef‹e
;

5985 i‡(
vÆ_beg
 > 
equÆ
 + 1) {

5986 
°rù≥d_a·î
 = 
	`buf„r_ª∂a˚2
(
ªq
, 
equÆ
 + 1, 
vÆ_beg
, 
NULL
, 0);

5987 
vÆ_beg
 +
°rù≥d_a·î
;

5988 
°rù≥d_bef‹e
 +
°rù≥d_a·î
;

5991 
vÆ_íd
 +
°rù≥d_bef‹e
;

5992 
√xt
 +
°rù≥d_bef‹e
;

5993 
hdr_íd
 +
°rù≥d_bef‹e
;

5994 
hdr_√xt
 +
°rù≥d_bef‹e
;

5995 
cur_hdr
->
Àn
 +
°rù≥d_bef‹e
;

5996 
	`hâp_msg_move_íd
(&
txn
->
ªq
, 
°rù≥d_bef‹e
);

6005 i‡(
t
->
„
->
ˇ±uª_«me
 !
NULL
 && 
txn
->
˛i_cookõ
 == NULL &&

6006 (
vÆ_íd
 - 
©t_beg
 >
t
->
„
->
ˇ±uª_«mñí
) &&

6007 
	`memcmp
(
©t_beg
, 
t
->
„
->
ˇ±uª_«me
,Å->„->
ˇ±uª_«mñí
) == 0) {

6008 
log_Àn
 = 
vÆ_íd
 - 
©t_beg
;

6010 i‡((
txn
->
˛i_cookõ
 = 
	`poﬁ_Æloc2
(
poﬁ2_ˇ±uª
)Ë=
NULL
) {

6011 
	`AÀπ
("HTTPÜogging : out of memory.\n");

6013 i‡(
log_Àn
 > 
t
->
„
->
ˇ±uª_Àn
)

6014 
log_Àn
 = 
t
->
„
->
ˇ±uª_Àn
;

6015 
	`mem˝y
(
txn
->
˛i_cookõ
, 
©t_beg
, 
log_Àn
);

6016 
txn
->
˛i_cookõ
[
log_Àn
] = 0;

6029 i‡((
©t_íd
 - 
©t_beg
 =
t
->
be
->
cookõ_Àn
Ë&& (t->be->
cookõ_«me
 !
NULL
) &&

6030 (
	`memcmp
(
©t_beg
, 
t
->
be
->
cookõ_«me
, 
©t_íd
 -átt_beg) == 0)) {

6031 
£rvî
 *
§v
 = 
t
->
be
->srv;

6032 *
dñim
;

6050 i‡(
t
->
be
->
›ti⁄s
 & 
PR_O_COOK_PFX
) {

6051 
dñim
 = 
vÆ_beg
; dñim < 
vÆ_íd
; delim++)

6052 i‡(*
dñim
 =
COOKIE_DELIM
)

6055 *
vb¨1
;

6056 
dñim
 = 
vÆ_íd
;

6061 
vb¨1
 = 
	`memchr
(
vÆ_beg
, 
COOKIE_DELIM_DATE
, 
vÆ_íd
 - val_beg);

6062 i‡(
vb¨1
) {

6068 
vÆ
;

6069 
dñim
 = 
vb¨1
++;

6070 i‡(
vÆ_íd
 - 
vb¨1
 >= 5) {

6071 
vÆ
 = 
	`b64tos30
(
vb¨1
);

6072 i‡(
vÆ
 > 0)

6073 
txn
->
cookõ_œ°_d©e
 = 
vÆ
 << 2;

6076 
vb¨1
 = 
	`memchr
(vb¨1, 
COOKIE_DELIM_DATE
, 
vÆ_íd
 - vbar1);

6077 i‡(
vb¨1
 && (
vÆ_íd
 - vbar1 > 5)) {

6078 
vÆ
 = 
	`b64tos30
(
vb¨1
 + 1);

6079 i‡(
vÆ
 > 0)

6080 
txn
->
cookõ_fú°_d©e
 = 
vÆ
 << 2;

6094 i‡(
txn
->
cookõ_fú°_d©e
 && 
t
->
be
->
cookõ_maxli„
 &&

6095 (((sig√d)(
d©e
.
tv_£c
 - 
txn
->
cookõ_fú°_d©e
Ë> (sig√d)
t
->
be
->
cookõ_maxli„
) ||

6096 ((sig√d)(
txn
->
cookõ_fú°_d©e
 - 
d©e
.
tv_£c
) > 86400))) {

6097 
txn
->
Êags
 &~
TX_CK_MASK
;

6098 
txn
->
Êags
 |
TX_CK_OLD
;

6099 
dñim
 = 
vÆ_beg
;

6100 
txn
->
cookõ_fú°_d©e
 = 0;

6101 
txn
->
cookõ_œ°_d©e
 = 0;

6103 i‡(
txn
->
cookõ_œ°_d©e
 && 
t
->
be
->
cookõ_maxidÀ
 &&

6104 (((sig√d)(
d©e
.
tv_£c
 - 
txn
->
cookõ_œ°_d©e
Ë> (sig√d)
t
->
be
->
cookõ_maxidÀ
) ||

6105 ((sig√d)(
txn
->
cookõ_œ°_d©e
 - 
d©e
.
tv_£c
) > 86400))) {

6106 
txn
->
Êags
 &~
TX_CK_MASK
;

6107 
txn
->
Êags
 |
TX_CK_EXPIRED
;

6108 
dñim
 = 
vÆ_beg
;

6109 
txn
->
cookõ_fú°_d©e
 = 0;

6110 
txn
->
cookõ_œ°_d©e
 = 0;

6121 i‡((
dñim
 =
vÆ_beg
Ë|| (
t
->
Êags
 & 
SN_IGNORE_PRST
))

6122 
§v
 = 
NULL
;

6124 
§v
) {

6125 i‡(
§v
->
cookõ
 && (§v->
ckÀn
 =
dñim
 - 
vÆ_beg
) &&

6126 !
	`memcmp
(
vÆ_beg
, 
§v
->
cookõ
, 
dñim
 - val_beg)) {

6127 i‡((
§v
->
°©e
 & 
SRV_RUNNING
) ||

6128 (
t
->
be
->
›ti⁄s
 & 
PR_O_PERSIST
) ||

6129 (
t
->
Êags
 & 
SN_FORCE_PRST
)) {

6131 
txn
->
Êags
 &~
TX_CK_MASK
;

6132 
txn
->
Êags
 |(
§v
->
°©e
 & 
SRV_RUNNING
Ë? 
TX_CK_VALID
 : 
TX_CK_DOWN
;

6133 
t
->
Êags
 |
SN_DIRECT
 | 
SN_ASSIGNED
;

6134 
t
->
§v
 = srv;

6141 
txn
->
Êags
 &~
TX_CK_MASK
;

6142 
txn
->
Êags
 |
TX_CK_DOWN
;

6145 
§v
 = srv->
√xt
;

6148 i‡(!
§v
 && !(
txn
->
Êags
 & (
TX_CK_DOWN
|
TX_CK_EXPIRED
|
TX_CK_OLD
))) {

6150 
txn
->
Êags
 &~
TX_CK_MASK
;

6151 
txn
->
Êags
 |
TX_CK_INVALID
;

6161 i‡((
t
->
be
->
›ti⁄s
 & 
PR_O_COOK_PFX
Ë&& (
dñim
 !
vÆ_íd
)) {

6162 
dñè
;

6164 
dñè
 = 
	`buf„r_ª∂a˚2
(
ªq
, 
vÆ_beg
, 
dñim
 + 1, 
NULL
, 0);

6165 
vÆ_íd
 +
dñè
;

6166 
√xt
 +
dñè
;

6167 
hdr_íd
 +
dñè
;

6168 
hdr_√xt
 +
dñè
;

6169 
cur_hdr
->
Àn
 +
dñè
;

6170 
	`hâp_msg_move_íd
(&
txn
->
ªq
, 
dñè
);

6172 
dñ_‰om
 = 
NULL
;

6173 
¥e£rve_hdr
 = 1;

6175 i‡(
dñ_‰om
 =
NULL
 &&

6176 (
t
->
be
->
›ti⁄s
 & (
PR_O_COOK_INS
 | 
PR_O_COOK_IND
)) == (PR_O_COOK_INS | PR_O_COOK_IND)) {

6177 
dñ_‰om
 = 
¥ev
;

6184 
¥e£rve_hdr
 = 1;

6186 i‡(
dñ_‰om
 !
NULL
) {

6187 
dñè
 = 
	`dñ_hdr_vÆue
(
ªq
, &
dñ_‰om
, 
¥ev
);

6188 
vÆ_íd
 +
dñè
;

6189 
√xt
 +
dñè
;

6190 
hdr_íd
 +
dñè
;

6191 
hdr_√xt
 +
dñè
;

6192 
cur_hdr
->
Àn
 +
dñè
;

6193 
	`hâp_msg_move_íd
(&
txn
->
ªq
, 
dñè
);

6194 
¥ev
 = 
dñ_‰om
;

6195 
dñ_‰om
 = 
NULL
;

6200 i‡(!(
t
->
Êags
 & 
SN_IGNORE_PRST
Ë&& (t->
be
->
≠p£ssi⁄_«me
 !
NULL
)) {

6201 
cmp_Àn
, 
vÆue_Àn
;

6202 *
vÆue_begö
;

6204 i‡(
t
->
be
->
›ti⁄s2
 & 
PR_O2_AS_PFX
) {

6205 
cmp_Àn
 = 
	`MIN
(
vÆ_íd
 - 
©t_beg
, 
t
->
be
->
≠p£ssi⁄_«me_Àn
);

6206 
vÆue_begö
 = 
©t_beg
 + 
t
->
be
->
≠p£ssi⁄_«me_Àn
;

6207 
vÆue_Àn
 = 
vÆ_íd
 - 
©t_beg
 - 
t
->
be
->
≠p£ssi⁄_«me_Àn
;

6209 
cmp_Àn
 = 
©t_íd
 - 
©t_beg
;

6210 
vÆue_begö
 = 
vÆ_beg
;

6211 
vÆue_Àn
 = 
vÆ_íd
 - 
vÆ_beg
;

6215 i‡(
cmp_Àn
 =
t
->
be
->
≠p£ssi⁄_«me_Àn
 &&

6216 
	`memcmp
(
©t_beg
, 
t
->
be
->
≠p£ssi⁄_«me
, 
cmp_Àn
) == 0) {

6217 
	`m™age_˛õ¡_side_≠p£ssi⁄
(
t
, 
vÆue_begö
, 
vÆue_Àn
);

6222 
©t_beg
 = 
√xt
;

6232 i‡(
dñ_‰om
) {

6233 
dñè
;

6234 i‡(
¥e£rve_hdr
) {

6235 
dñè
 = 
	`dñ_hdr_vÆue
(
ªq
, &
dñ_‰om
, 
hdr_íd
);

6236 
hdr_íd
 = 
dñ_‰om
;

6237 
cur_hdr
->
Àn
 +
dñè
;

6239 
dñè
 = 
	`buf„r_ª∂a˚2
(
ªq
, 
hdr_beg
, 
hdr_√xt
, 
NULL
, 0);

6242 
txn
->
hdr_idx
.
v
[
ﬁd_idx
].
√xt
 = 
cur_hdr
->next;

6243 
txn
->
hdr_idx
.
u£d
--;

6244 
cur_hdr
->
Àn
 = 0;

6246 
hdr_√xt
 +
dñè
;

6247 
	`hâp_msg_move_íd
(&
txn
->
ªq
, 
dñè
);

6251 
ﬁd_idx
 = 
cur_idx
;

6253 
	}
}

6259 
	$≠∂y_fûãr_to_ª•_hódîs
(
£ssi⁄
 *
t
, 
buf„r
 *
πr
, 
hdr_exp
 *
exp
)

6261 
ãrm
;

6262 *
cur_±r
, *
cur_íd
, *
cur_√xt
;

6263 
cur_idx
, 
ﬁd_idx
, 
œ°_hdr
;

6264 
hâp_txn
 *
txn
 = &
t
->txn;

6265 
hdr_idx_ñem
 *
cur_hdr
;

6266 
Àn
, 
dñè
;

6268 
œ°_hdr
 = 0;

6270 
cur_√xt
 = 
txn
->
r•
.
sﬁ
 + 
	`hdr_idx_fú°_pos
(&txn->
hdr_idx
);

6271 
ﬁd_idx
 = 0;

6273 !
œ°_hdr
) {

6274 i‡(
	`u∆ikñy
(
txn
->
Êags
 & 
TX_SVDENY
))

6276 i‡(
	`u∆ikñy
(
txn
->
Êags
 & 
TX_SVALLOW
) &&

6277 (
exp
->
a˘i⁄
 =
ACT_ALLOW
 ||

6278 
exp
->
a˘i⁄
 =
ACT_DENY
))

6281 
cur_idx
 = 
txn
->
hdr_idx
.
v
[
ﬁd_idx
].
√xt
;

6282 i‡(!
cur_idx
)

6285 
cur_hdr
 = &
txn
->
hdr_idx
.
v
[
cur_idx
];

6286 
cur_±r
 = 
cur_√xt
;

6287 
cur_íd
 = 
cur_±r
 + 
cur_hdr
->
Àn
;

6288 
cur_√xt
 = 
cur_íd
 + 
cur_hdr
->
¸
 + 1;

6299 
ãrm
 = *
cur_íd
;

6300 *
cur_íd
 = '\0';

6302 i‡(
	`ªgexec
(
exp
->
¥eg
, 
cur_±r
, 
MAX_MATCH
, 
pm©ch
, 0) == 0) {

6303 
exp
->
a˘i⁄
) {

6304 
ACT_ALLOW
:

6305 
txn
->
Êags
 |
TX_SVALLOW
;

6306 
œ°_hdr
 = 1;

6309 
ACT_DENY
:

6310 
txn
->
Êags
 |
TX_SVDENY
;

6311 
œ°_hdr
 = 1;

6314 
ACT_REPLACE
:

6315 
Àn
 = 
	`exp_ª∂a˚
(
åash
, 
cur_±r
, 
exp
->
ª∂a˚
, 
pm©ch
);

6316 
dñè
 = 
	`buf„r_ª∂a˚2
(
πr
, 
cur_±r
, 
cur_íd
, 
åash
, 
Àn
);

6322 
cur_íd
 +
dñè
;

6323 
cur_√xt
 +
dñè
;

6324 
cur_hdr
->
Àn
 +
dñè
;

6325 
	`hâp_msg_move_íd
(&
txn
->
r•
, 
dñè
);

6328 
ACT_REMOVE
:

6329 
dñè
 = 
	`buf„r_ª∂a˚2
(
πr
, 
cur_±r
, 
cur_√xt
, 
NULL
, 0);

6330 
cur_√xt
 +
dñè
;

6332 
	`hâp_msg_move_íd
(&
txn
->
r•
, 
dñè
);

6333 
txn
->
hdr_idx
.
v
[
ﬁd_idx
].
√xt
 = 
cur_hdr
->next;

6334 
txn
->
hdr_idx
.
u£d
--;

6335 
cur_hdr
->
Àn
 = 0;

6336 
cur_íd
 = 
NULL
;

6341 i‡(
cur_íd
)

6342 *
cur_íd
 = 
ãrm
;

6347 
ﬁd_idx
 = 
cur_idx
;

6350 
	}
}

6357 
	$≠∂y_fûãr_to_°s_löe
(
£ssi⁄
 *
t
, 
buf„r
 *
πr
, 
hdr_exp
 *
exp
)

6359 
ãrm
;

6360 *
cur_±r
, *
cur_íd
;

6361 
d⁄e
;

6362 
hâp_txn
 *
txn
 = &
t
->txn;

6363 
Àn
, 
dñè
;

6366 i‡(
	`u∆ikñy
(
txn
->
Êags
 & 
TX_SVDENY
))

6368 i‡(
	`u∆ikñy
(
txn
->
Êags
 & 
TX_SVALLOW
) &&

6369 (
exp
->
a˘i⁄
 =
ACT_ALLOW
 ||

6370 
exp
->
a˘i⁄
 =
ACT_DENY
))

6372 i‡(
exp
->
a˘i⁄
 =
ACT_REMOVE
)

6375 
d⁄e
 = 0;

6377 
cur_±r
 = 
txn
->
r•
.
sﬁ
;

6378 
cur_íd
 = 
cur_±r
 + 
txn
->
r•
.
¶
.
°
.
l
;

6387 
ãrm
 = *
cur_íd
;

6388 *
cur_íd
 = '\0';

6390 i‡(
	`ªgexec
(
exp
->
¥eg
, 
cur_±r
, 
MAX_MATCH
, 
pm©ch
, 0) == 0) {

6391 
exp
->
a˘i⁄
) {

6392 
ACT_ALLOW
:

6393 
txn
->
Êags
 |
TX_SVALLOW
;

6394 
d⁄e
 = 1;

6397 
ACT_DENY
:

6398 
txn
->
Êags
 |
TX_SVDENY
;

6399 
d⁄e
 = 1;

6402 
ACT_REPLACE
:

6403 *
cur_íd
 = 
ãrm
;

6404 
Àn
 = 
	`exp_ª∂a˚
(
åash
, 
cur_±r
, 
exp
->
ª∂a˚
, 
pm©ch
);

6405 
dñè
 = 
	`buf„r_ª∂a˚2
(
πr
, 
cur_±r
, 
cur_íd
, 
åash
, 
Àn
);

6411 
	`hâp_msg_move_íd
(&
txn
->
r•
, 
dñè
);

6412 
cur_íd
 +
dñè
;

6413 
cur_íd
 = (*)
	`hâp_∑r£_°¶öe
(&
txn
->
r•
, 
πr
->
d©a
,

6414 
HTTP_MSG_RPVER
,

6415 
cur_±r
, 
cur_íd
 + 1,

6416 
NULL
, NULL);

6417 i‡(
	`u∆ikñy
(!
cur_íd
))

6423 
txn
->
°©us
 = 
	`°æ2ui
—xn->
r•
.
sﬁ
 +Åxn->r•.
¶
.
°
.
c
,Åxn->r•.¶.°.
c_l
);

6424 
	`hdr_idx_£t_°¨t
(&
txn
->
hdr_idx
,Åxn->
r•
.
¶
.
°
.
l
, *
cur_íd
 == '\r');

6429 *
cur_íd
 = 
ãrm
;

6430  
d⁄e
;

6431 
	}
}

6440 
	$≠∂y_fûãrs_to_ª•⁄£
(
£ssi⁄
 *
s
, 
buf„r
 *
πr
, 
¥oxy
 *
px
)

6442 
hâp_txn
 *
txn
 = &
s
->txn;

6443 
hdr_exp
 *
exp
;

6445 
exp
 = 
px
->
r•_exp
;Éxp;Éx∞exp->
√xt
) {

6446 
ªt
;

6454 i‡(
txn
->
Êags
 & 
TX_SVDENY
)

6457 i‡((
txn
->
Êags
 & 
TX_SVALLOW
) &&

6458 (
exp
->
a˘i⁄
 =
ACT_ALLOW
 ||Éxp->a˘i⁄ =
ACT_DENY
 ||

6459 
exp
->
a˘i⁄
 =
ACT_PASS
)) {

6460 
exp
 =Éxp->
√xt
;

6467 i‡(
exp
->
c⁄d
) {

6468 
ªt
 = 
	`a˛_exec_c⁄d
(
exp
->
c⁄d
, 
px
, 
s
, 
txn
, 
ACL_DIR_RTR
);

6469 
ªt
 = 
	`a˛_∑ss
(ret);

6470 i‡(((
a˛_c⁄d
 *)
exp
->
c⁄d
)->
pﬁ
 =
ACL_COND_UNLESS
)

6471 
ªt
 = !ret;

6472 i‡(!
ªt
)

6477 
ªt
 = 
	`≠∂y_fûãr_to_°s_löe
(
s
, 
πr
, 
exp
);

6478 i‡(
	`u∆ikñy
(
ªt
 < 0))

6481 i‡(
	`likñy
(
ªt
 == 0)) {

6485 
	`≠∂y_fûãr_to_ª•_hódîs
(
s
, 
πr
, 
exp
);

6489 
	}
}

6497 
	$m™age_£rvî_side_cookõs
(
£ssi⁄
 *
t
, 
buf„r
 *
ªs
)

6499 
hâp_txn
 *
txn
 = &
t
->txn;

6500 
is_cookõ2
;

6501 
cur_idx
, 
ﬁd_idx
, 
dñè
;

6502 *
hdr_beg
, *
hdr_íd
, *
hdr_√xt
;

6503 *
¥ev
, *
©t_beg
, *
©t_íd
, *
equÆ
, *
vÆ_beg
, *
vÆ_íd
, *
√xt
;

6508 
ﬁd_idx
 = 0;

6509 
hdr_√xt
 = 
txn
->
r•
.
sﬁ
 + 
	`hdr_idx_fú°_pos
(&txn->
hdr_idx
);

6511 (
cur_idx
 = 
txn
->
hdr_idx
.
v
[
ﬁd_idx
].
√xt
)) {

6512 
hdr_idx_ñem
 *
cur_hdr
;

6513 
vÆ
;

6515 
cur_hdr
 = &
txn
->
hdr_idx
.
v
[
cur_idx
];

6516 
hdr_beg
 = 
hdr_√xt
;

6517 
hdr_íd
 = 
hdr_beg
 + 
cur_hdr
->
Àn
;

6518 
hdr_√xt
 = 
hdr_íd
 + 
cur_hdr
->
¸
 + 1;

6525 
is_cookõ2
 = 0;

6526 
¥ev
 = 
hdr_beg
 + 10;

6527 
vÆ
 = 
	`hâp_hódî_m©ch2
(
hdr_beg
, 
hdr_íd
, "Set-Cookie", 10);

6528 i‡(!
vÆ
) {

6529 
vÆ
 = 
	`hâp_hódî_m©ch2
(
hdr_beg
, 
hdr_íd
, "Set-Cookie2", 11);

6530 i‡(!
vÆ
) {

6531 
ﬁd_idx
 = 
cur_idx
;

6534 
is_cookõ2
 = 1;

6535 
¥ev
 = 
hdr_beg
 + 11;

6541 
txn
->
Êags
 |
TX_SCK_PRESENT
;

6547 i‡(
t
->
be
->
cookõ_«me
 =
NULL
 &&

6548 
t
->
be
->
≠p£ssi⁄_«me
 =
NULL
 &&

6549 
t
->
„
->
ˇ±uª_«me
 =
NULL
)

6587 ; 
¥ev
 < 
hdr_íd
;Öªv = 
√xt
) {

6591 
©t_beg
 = 
¥ev
 + 1;

6592 
©t_beg
 < 
hdr_íd
 && 
hâp_is_•ht
[()*att_beg])

6593 
©t_beg
++;

6598 
equÆ
 = 
©t_íd
 = 
©t_beg
;

6600 
equÆ
 < 
hdr_íd
) {

6601 i‡(*
equÆ
 ='=' || *equÆ =';' || (
is_cookõ2
 && *equal == ','))

6603 i‡(
hâp_is_•ht
[()*
equÆ
++])

6605 
©t_íd
 = 
equÆ
;

6613 i‡(
equÆ
 < 
hdr_íd
 && *equal == '=') {

6615 
vÆ_beg
 = 
equÆ
 + 1;

6616 
vÆ_beg
 < 
hdr_íd
 && 
hâp_is_•ht
[()*val_beg])

6617 
vÆ_beg
++;

6620 
√xt
 = 
	`föd_cookõ_vÆue_íd
(
vÆ_beg
, 
hdr_íd
);

6623 
vÆ_íd
 = 
√xt
;

6624 
vÆ_íd
 > 
vÆ_beg
 && 
hâp_is_•ht
[()*(val_end - 1)])

6625 
vÆ_íd
--;

6628 
vÆ_beg
 = 
vÆ_íd
 = 
√xt
 = 
equÆ
;

6631 i‡(
√xt
 < 
hdr_íd
) {

6637 i‡(
is_cookõ2
)

6638 
√xt
 = 
	`föd_hdr_vÆue_íd
“ext, 
hdr_íd
);

6640 
√xt
 = 
hdr_íd
;

6646 i‡(
equÆ
 =
vÆ_íd
)

6654 i‡(
	`u∆ikñy
(
©t_íd
 !
equÆ
 || 
vÆ_beg
 >Équal + 1)) {

6655 
°rù≥d_bef‹e
 = 0;

6656 
°rù≥d_a·î
 = 0;

6658 i‡(
©t_íd
 !
equÆ
) {

6659 
°rù≥d_bef‹e
 = 
	`buf„r_ª∂a˚2
(
ªs
, 
©t_íd
, 
equÆ
, 
NULL
, 0);

6660 
equÆ
 +
°rù≥d_bef‹e
;

6661 
vÆ_beg
 +
°rù≥d_bef‹e
;

6664 i‡(
vÆ_beg
 > 
equÆ
 + 1) {

6665 
°rù≥d_a·î
 = 
	`buf„r_ª∂a˚2
(
ªs
, 
equÆ
 + 1, 
vÆ_beg
, 
NULL
, 0);

6666 
vÆ_beg
 +
°rù≥d_a·î
;

6667 
°rù≥d_bef‹e
 +
°rù≥d_a·î
;

6670 
vÆ_íd
 +
°rù≥d_bef‹e
;

6671 
√xt
 +
°rù≥d_bef‹e
;

6672 
hdr_íd
 +
°rù≥d_bef‹e
;

6673 
hdr_√xt
 +
°rù≥d_bef‹e
;

6674 
cur_hdr
->
Àn
 +
°rù≥d_bef‹e
;

6675 
	`hâp_msg_move_íd
(&
txn
->
ªq
, 
°rù≥d_bef‹e
);

6683 i‡(
t
->
„
->
ˇ±uª_«me
 !
NULL
 &&

6684 
txn
->
§v_cookõ
 =
NULL
 &&

6685 (
vÆ_íd
 - 
©t_beg
 >
t
->
„
->
ˇ±uª_«mñí
) &&

6686 
	`memcmp
(
©t_beg
, 
t
->
„
->
ˇ±uª_«me
,Å->„->
ˇ±uª_«mñí
) == 0) {

6687 
log_Àn
 = 
vÆ_íd
 - 
©t_beg
;

6688 i‡((
txn
->
§v_cookõ
 = 
	`poﬁ_Æloc2
(
poﬁ2_ˇ±uª
)Ë=
NULL
) {

6689 
	`AÀπ
("HTTPÜogging : out of memory.\n");

6692 i‡(
log_Àn
 > 
t
->
„
->
ˇ±uª_Àn
)

6693 
log_Àn
 = 
t
->
„
->
ˇ±uª_Àn
;

6694 
	`mem˝y
(
txn
->
§v_cookõ
, 
©t_beg
, 
log_Àn
);

6695 
txn
->
§v_cookõ
[
log_Àn
] = 0;

6699 i‡(!(
t
->
Êags
 & 
SN_IGNORE_PRST
) &&

6700 (
©t_íd
 - 
©t_beg
 =
t
->
be
->
cookõ_Àn
Ë&& (t->be->
cookõ_«me
 !
NULL
) &&

6701 (
	`memcmp
(
©t_beg
, 
t
->
be
->
cookõ_«me
, 
©t_íd
 -átt_beg) == 0)) {

6703 
txn
->
Êags
 &~
TX_SCK_MASK
;

6704 
txn
->
Êags
 |
TX_SCK_FOUND
;

6711 i‡(
t
->
be
->
›ti⁄s2
 & 
PR_O2_COOK_PSV
) {

6716 i‡(((
t
->
§v
Ë&& (t->
be
->
›ti⁄s
 & 
PR_O_COOK_INS
)) ||

6717 ((
t
->
Êags
 & 
SN_DIRECT
Ë&& (t->
be
->
›ti⁄s
 & 
PR_O_COOK_IND
))) {

6719 i‡(*
¥ev
 =':' && 
√xt
 =
hdr_íd
) {

6721 
dñè
 = 
	`buf„r_ª∂a˚2
(
ªs
, 
hdr_beg
, 
hdr_√xt
, 
NULL
, 0);

6722 
txn
->
hdr_idx
.
v
[
ﬁd_idx
].
√xt
 = 
cur_hdr
->next;

6723 
txn
->
hdr_idx
.
u£d
--;

6724 
cur_hdr
->
Àn
 = 0;

6725 
hdr_√xt
 +
dñè
;

6726 
	`hâp_msg_move_íd
(&
txn
->
r•
, 
dñè
);

6732 
dñè
 = 
	`dñ_hdr_vÆue
(
ªs
, &
¥ev
, 
√xt
);

6733 
√xt
 = 
¥ev
;

6734 
hdr_íd
 +
dñè
;

6735 
hdr_√xt
 +
dñè
;

6736 
cur_hdr
->
Àn
 +
dñè
;

6737 
	`hâp_msg_move_íd
(&
txn
->
r•
, 
dñè
);

6739 
txn
->
Êags
 &~
TX_SCK_MASK
;

6740 
txn
->
Êags
 |
TX_SCK_DELETED
;

6743 i‡((
t
->
§v
Ë&& (t->§v->
cookõ
) &&

6744 (
t
->
be
->
›ti⁄s
 & 
PR_O_COOK_RW
)) {

6748 
dñè
 = 
	`buf„r_ª∂a˚2
(
ªs
, 
vÆ_beg
, 
vÆ_íd
, 
t
->
§v
->
cookõ
,Å->§v->
ckÀn
);

6749 
√xt
 +
dñè
;

6750 
hdr_íd
 +
dñè
;

6751 
hdr_√xt
 +
dñè
;

6752 
cur_hdr
->
Àn
 +
dñè
;

6753 
	`hâp_msg_move_íd
(&
txn
->
r•
, 
dñè
);

6755 
txn
->
Êags
 &~
TX_SCK_MASK
;

6756 
txn
->
Êags
 |
TX_SCK_REPLACED
;

6758 i‡((
t
->
§v
Ë&& (t->§v->
cookõ
) &&

6759 (
t
->
be
->
›ti⁄s
 & 
PR_O_COOK_PFX
)) {

6763 
dñè
 = 
	`buf„r_ª∂a˚2
(
ªs
, 
vÆ_beg
, vÆ_beg, 
t
->
§v
->
cookõ
,Å->§v->
ckÀn
 + 1);

6764 
√xt
 +
dñè
;

6765 
hdr_íd
 +
dñè
;

6766 
hdr_√xt
 +
dñè
;

6767 
cur_hdr
->
Àn
 +
dñè
;

6768 
	`hâp_msg_move_íd
(&
txn
->
r•
, 
dñè
);

6770 
vÆ_beg
[
t
->
§v
->
ckÀn
] = 
COOKIE_DELIM
;

6771 
txn
->
Êags
 &~
TX_SCK_MASK
;

6772 
txn
->
Êags
 |
TX_SCK_REPLACED
;

6776 i‡(!(
t
->
Êags
 & 
SN_IGNORE_PRST
Ë&& (t->
be
->
≠p£ssi⁄_«me
 !
NULL
)) {

6777 
cmp_Àn
, 
vÆue_Àn
;

6778 *
vÆue_begö
;

6780 i‡(
t
->
be
->
›ti⁄s2
 & 
PR_O2_AS_PFX
) {

6781 
cmp_Àn
 = 
	`MIN
(
vÆ_íd
 - 
©t_beg
, 
t
->
be
->
≠p£ssi⁄_«me_Àn
);

6782 
vÆue_begö
 = 
©t_beg
 + 
t
->
be
->
≠p£ssi⁄_«me_Àn
;

6783 
vÆue_Àn
 = 
	`MIN
(
t
->
be
->
≠p£ssi⁄_Àn
, 
vÆ_íd
 - 
©t_beg
 -Å->be->
≠p£ssi⁄_«me_Àn
);

6785 
cmp_Àn
 = 
©t_íd
 - 
©t_beg
;

6786 
vÆue_begö
 = 
vÆ_beg
;

6787 
vÆue_Àn
 = 
	`MIN
(
t
->
be
->
≠p£ssi⁄_Àn
, 
vÆ_íd
 - 
vÆ_beg
);

6790 i‡((
cmp_Àn
 =
t
->
be
->
≠p£ssi⁄_«me_Àn
) &&

6791 (
	`memcmp
(
©t_beg
, 
t
->
be
->
≠p£ssi⁄_«me
,Å->be->
≠p£ssi⁄_«me_Àn
) == 0)) {

6793 
	`poﬁ_‰ì2
(
≠oﬁs
.
£ssid
, 
txn
->sessid);

6796 i‡((
txn
->
£ssid
 = 
	`poﬁ_Æloc2
(
≠oﬁs
.£ssid)Ë=
NULL
) {

6797 
	`AÀπ
("NotÉnough MemoryÖrocess_srv():asession->sessid:malloc().\n");

6798 
	`£nd_log
(
t
->
be
, 
LOG_ALERT
, "NotÉnough MemoryÖrocess_srv():asession->sessid:malloc().\n");

6801 
	`mem˝y
(
txn
->
£ssid
, 
vÆue_begö
, 
vÆue_Àn
);

6802 
txn
->
£ssid
[
vÆue_Àn
] = 0;

6810 
ﬁd_idx
 = 
cur_idx
;

6813 i‡(
txn
->
£ssid
 !
NULL
) {

6814 
≠p£ss
 *
a£ssi⁄
 = 
NULL
;

6816 
a£ssi⁄
 = 
	`≠p£ssi⁄_hash_lookup
(&(
t
->
be
->
htbl_¥oxy
), 
txn
->
£ssid
);

6817 i‡(
a£ssi⁄
 =
NULL
) {

6818 
size_t
 
£rvî_id_Àn
;

6819 i‡((
a£ssi⁄
 = 
	`poﬁ_Æloc2
(
poﬁ2_≠p£ss
)Ë=
NULL
) {

6820 
	`AÀπ
("NotÉnough MemoryÖrocess_srv():asession:calloc().\n");

6821 
	`£nd_log
(
t
->
be
, 
LOG_ALERT
, "NotÉnough MemoryÖrocess_srv():asession:calloc().\n");

6824 i‡((
a£ssi⁄
->
£ssid
 = 
	`poﬁ_Æloc2
(
≠oﬁs
.£ssid)Ë=
NULL
) {

6825 
	`AÀπ
("NotÉnough MemoryÖrocess_srv():asession->sessid:malloc().\n");

6826 
	`£nd_log
(
t
->
be
, 
LOG_ALERT
, "NotÉnough MemoryÖrocess_srv():asession->sessid:malloc().\n");

6827 
t
->
be
->
htbl_¥oxy
.
	`de°roy
(
a£ssi⁄
);

6830 
	`mem˝y
(
a£ssi⁄
->
£ssid
, 
txn
->£ssid, 
t
->
be
->
≠p£ssi⁄_Àn
);

6831 
a£ssi⁄
->
£ssid
[
t
->
be
->
≠p£ssi⁄_Àn
] = 0;

6833 
£rvî_id_Àn
 = 
	`°æí
(
t
->
§v
->
id
) + 1;

6834 i‡((
a£ssi⁄
->
£rvîid
 = 
	`poﬁ_Æloc2
(
≠oﬁs
.£rvîid)Ë=
NULL
) {

6835 
	`AÀπ
("NotÉnough MemoryÖrocess_srv():asession->sessid:malloc().\n");

6836 
	`£nd_log
(
t
->
be
, 
LOG_ALERT
, "NotÉnough MemoryÖrocess_srv():asession->sessid:malloc().\n");

6837 
t
->
be
->
htbl_¥oxy
.
	`de°roy
(
a£ssi⁄
);

6840 
a£ssi⁄
->
£rvîid
[0] = '\0';

6841 
	`mem˝y
(
a£ssi⁄
->
£rvîid
, 
t
->
§v
->
id
, 
£rvî_id_Àn
);

6843 
a£ssi⁄
->
ªque°_cou¡
 = 0;

6844 
	`≠p£ssi⁄_hash_ö£π
(&(
t
->
be
->
htbl_¥oxy
), 
a£ssi⁄
);

6847 
a£ssi⁄
->
expúe
 = 
	`tick_add_if£t
(
now_ms
, 
t
->
be
->
timeout
.
≠p£ssi⁄
);

6848 
a£ssi⁄
->
ªque°_cou¡
++;

6850 
	}
}

6856 
	$check_ª•⁄£_f‹_ˇchóbûôy
(
£ssi⁄
 *
t
, 
buf„r
 *
πr
)

6858 
hâp_txn
 *
txn
 = &
t
->txn;

6859 *
p1
, *
p2
;

6861 *
cur_±r
, *
cur_íd
, *
cur_√xt
;

6862 
cur_idx
;

6864 i‡(!(
txn
->
Êags
 & 
TX_CACHEABLE
))

6870 
cur_idx
 = 0;

6871 
cur_√xt
 = 
txn
->
r•
.
sﬁ
 + 
	`hdr_idx_fú°_pos
(&txn->
hdr_idx
);

6873 (
cur_idx
 = 
txn
->
hdr_idx
.
v
[cur_idx].
√xt
)) {

6874 
hdr_idx_ñem
 *
cur_hdr
;

6875 
vÆ
;

6877 
cur_hdr
 = &
txn
->
hdr_idx
.
v
[
cur_idx
];

6878 
cur_±r
 = 
cur_√xt
;

6879 
cur_íd
 = 
cur_±r
 + 
cur_hdr
->
Àn
;

6880 
cur_√xt
 = 
cur_íd
 + 
cur_hdr
->
¸
 + 1;

6887 
vÆ
 = 
	`hâp_hódî_m©ch2
(
cur_±r
, 
cur_íd
, "Pragma", 6);

6888 i‡(
vÆ
) {

6889 i‡((
cur_íd
 - (
cur_±r
 + 
vÆ
) >= 8) &&

6890 
	`°∫ˇ£cmp
(
cur_±r
 + 
vÆ
, "no-cache", 8) == 0) {

6891 
txn
->
Êags
 &~
TX_CACHEABLE
 & ~
TX_CACHE_COOK
;

6896 
vÆ
 = 
	`hâp_hódî_m©ch2
(
cur_±r
, 
cur_íd
, "Cache-control", 13);

6897 i‡(!
vÆ
)

6902 
p1
 = 
cur_±r
 + 
vÆ
;

6904 i‡(
p1
 >
cur_íd
)

6908 
p2
 = 
p1
;

6910 
p2
 < 
cur_íd
 && *p2 !'=' && *p2 !',' && !
	`is•a˚
(()*p2))

6911 
p2
++;

6914 i‡(
p2
 < 
cur_íd
 && *p2 == '=') {

6916 i‡((
cur_íd
 - 
p1
 >= 21) &&

6917 
	`°∫ˇ£cmp
(
p1
, "no-cache=\"set-cookie", 20) == 0

6918 && (
p1
[20] == '"' ||Ö1[20] == ','))

6919 
txn
->
Êags
 &~
TX_CACHE_COOK
;

6924 i‡(((
p2
 - 
p1
 =7Ë&& 
	`°∫ˇ£cmp
(p1, "private", 7) == 0) ||

6925 ((
p2
 - 
p1
 =8Ë&& 
	`°∫ˇ£cmp
(p1, "no-store", 8) == 0) ||

6926 ((
p2
 - 
p1
 =9Ë&& 
	`°∫ˇ£cmp
(p1, "max-age=0", 9) == 0) ||

6927 ((
p2
 - 
p1
 =10Ë&& 
	`°∫ˇ£cmp
(p1, "s-maxage=0", 10) == 0)) {

6928 
txn
->
Êags
 &~
TX_CACHEABLE
 & ~
TX_CACHE_COOK
;

6932 i‡((
p2
 - 
p1
 =6Ë&& 
	`°∫ˇ£cmp
(p1, "public", 6) == 0) {

6933 
txn
->
Êags
 |
TX_CACHEABLE
 | 
TX_CACHE_COOK
;

6937 
	}
}

6944 
	$gë_§v_‰om_≠p£ssi⁄
(
£ssi⁄
 *
t
, c⁄° *
begö
, 
Àn
)

6946 *
íd_∑øms
, *
fú°_∑øm
, *
cur_∑øm
, *
√xt_∑øm
;

6947 
£∑øt‹
;

6948 
vÆue_Àn
;

6950 
mode
 = 
t
->
be
->
›ti⁄s2
 & 
PR_O2_AS_M_ANY
;

6952 i‡(
t
->
be
->
≠p£ssi⁄_«me
 =
NULL
 ||

6953 (
t
->
txn
.
mëh
 !
HTTP_METH_GET
 &&Å->txn.mëh !
HTTP_METH_POST
 &&Å->txn.mëh !
HTTP_METH_HEAD
)) {

6957 
fú°_∑øm
 = 
NULL
;

6958 
mode
) {

6959 
PR_O2_AS_M_PP
:

6960 
fú°_∑øm
 = 
	`memchr
(
begö
, ';', 
Àn
);

6962 
PR_O2_AS_M_QS
:

6963 
fú°_∑øm
 = 
	`memchr
(
begö
, '?', 
Àn
);

6967 i‡(
fú°_∑øm
 =
NULL
) {

6971 
mode
) {

6972 
PR_O2_AS_M_PP
:

6973 i‡((
íd_∑øms
 = 
	`memchr
(
fú°_∑øm
, '?', 
Àn
 - (
begö
 - fú°_∑øm))Ë=
NULL
) {

6974 
íd_∑øms
 = (*Ë
begö
 + 
Àn
;

6976 
£∑øt‹
 = ';';

6978 
PR_O2_AS_M_QS
:

6979 
íd_∑øms
 = (*Ë
begö
 + 
Àn
;

6980 
£∑øt‹
 = '&';

6987 
cur_∑øm
 = 
√xt_∑øm
 = 
íd_∑øms
;

6988 
cur_∑øm
 > 
fú°_∑øm
) {

6989 
cur_∑øm
--;

6990 i‡((
cur_∑øm
[0] =
£∑øt‹
Ë|| (cur_∑øm =
fú°_∑øm
)) {

6992 i‡((
cur_∑øm
 + 
t
->
be
->
≠p£ssi⁄_«me_Àn
 + 1 < 
√xt_∑øm
) &&

6993 ((
t
->
be
->
›ti⁄s2
 & 
PR_O2_AS_PFX
Ë|| 
cur_∑øm
[t->be->
≠p£ssi⁄_«me_Àn
 + 1] == '=') &&

6994 (
	`°∫ˇ£cmp
(
cur_∑øm
 + 1, 
t
->
be
->
≠p£ssi⁄_«me
,Å->be->
≠p£ssi⁄_«me_Àn
) == 0)) {

6996 
cur_∑øm
 +
t
->
be
->
≠p£ssi⁄_«me_Àn
 + (t->be->
›ti⁄s2
 & 
PR_O2_AS_PFX
 ? 1 : 2);

6997 
vÆue_Àn
 = 
	`MIN
(
t
->
be
->
≠p£ssi⁄_Àn
, 
√xt_∑øm
 - 
cur_∑øm
);

6998 i‡(
vÆue_Àn
 > 0) {

6999 
	`m™age_˛õ¡_side_≠p£ssi⁄
(
t
, 
cur_∑øm
, 
vÆue_Àn
);

7003 
√xt_∑øm
 = 
cur_∑øm
;

7006 #i‡
	`deföed
(
DEBUG_HASH
)

7007 
	`AÀπ
("get_srv_from_appsession\n");

7008 
	`≠p£ssi⁄_hash_dump
(&(
t
->
be
->
htbl_¥oxy
));

7010 
	}
}

7021 
	$°©s_check_uri
(
£ssi⁄
 *
t
, 
¥oxy
 *
backíd
)

7023 
hâp_txn
 *
txn
 = &
t
->txn;

7024 
uri_auth
 *uri_auth = 
backíd
->uri_auth;

7025 *
h
;

7027 i‡(!
uri_auth
)

7030 i‡(
txn
->
mëh
 !
HTTP_METH_GET
 &&Åxn->mëh !
HTTP_METH_HEAD
 &&Åxn->mëh !
HTTP_METH_POST
)

7033 
	`mem£t
(&
t
->
d©a_˘x
.
°©s
, 0, (t->data_ctx.stats));

7036 i‡(
uri_auth
->
uri_Àn
 > 
txn
->
ªq
.
¶
.
rq
.
u_l
)

7039 
h
 = 
txn
->
ªq
.
sﬁ
 +Åxn->ªq.
¶
.
rq
.
u
;

7042 i‡(
	`memcmp
(
h
, 
uri_auth
->
uri_¥efix
, uri_auth->
uri_Àn
) != 0)

7045 
h
 +
uri_auth
->
uri_Àn
;

7046 
h
 <
txn
->
ªq
.
sﬁ
 +Åxn->ªq.
¶
.
rq
.
u
 +Åxn->ªq.¶.rq.
u_l
 - 3) {

7047 i‡(
	`memcmp
(
h
, ";up", 3) == 0) {

7048 
t
->
d©a_˘x
.
°©s
.
Êags
 |
STAT_HIDE_DOWN
;

7051 
h
++;

7054 i‡(
uri_auth
->
ª‰esh
) {

7055 
h
 = 
txn
->
ªq
.
sﬁ
 +Åxn->ªq.
¶
.
rq
.
u
 + 
uri_auth
->
uri_Àn
;

7056 
h
 <
txn
->
ªq
.
sﬁ
 +Åxn->ªq.
¶
.
rq
.
u
 +Åxn->ªq.¶.rq.
u_l
 - 10) {

7057 i‡(
	`memcmp
(
h
, ";norefresh", 10) == 0) {

7058 
t
->
d©a_˘x
.
°©s
.
Êags
 |
STAT_NO_REFRESH
;

7061 
h
++;

7065 
h
 = 
txn
->
ªq
.
sﬁ
 +Åxn->ªq.
¶
.
rq
.
u
 + 
uri_auth
->
uri_Àn
;

7066 
h
 <
txn
->
ªq
.
sﬁ
 +Åxn->ªq.
¶
.
rq
.
u
 +Åxn->ªq.¶.rq.
u_l
 - 4) {

7067 i‡(
	`memcmp
(
h
, ";csv", 4) == 0) {

7068 
t
->
d©a_˘x
.
°©s
.
Êags
 |
STAT_FMT_CSV
;

7071 
h
++;

7074 
h
 = 
txn
->
ªq
.
sﬁ
 +Åxn->ªq.
¶
.
rq
.
u
 + 
uri_auth
->
uri_Àn
;

7075 
h
 <
txn
->
ªq
.
sﬁ
 +Åxn->ªq.
¶
.
rq
.
u
 +Åxn->ªq.¶.rq.
u_l
 - 8) {

7076 i‡(
	`memcmp
(
h
, ";st=", 4) == 0) {

7077 
h
 += 4;

7079 i‡(
	`memcmp
(
h
, 
STAT_STATUS_DONE
, 4) == 0)

7080 
t
->
d©a_˘x
.
°©s
.
°_code
 = 
STAT_STATUS_DONE
;

7081 i‡(
	`memcmp
(
h
, 
STAT_STATUS_NONE
, 4) == 0)

7082 
t
->
d©a_˘x
.
°©s
.
°_code
 = 
STAT_STATUS_NONE
;

7083 i‡(
	`memcmp
(
h
, 
STAT_STATUS_EXCD
, 4) == 0)

7084 
t
->
d©a_˘x
.
°©s
.
°_code
 = 
STAT_STATUS_EXCD
;

7085 i‡(
	`memcmp
(
h
, 
STAT_STATUS_DENY
, 4) == 0)

7086 
t
->
d©a_˘x
.
°©s
.
°_code
 = 
STAT_STATUS_DENY
;

7088 
t
->
d©a_˘x
.
°©s
.
°_code
 = 
STAT_STATUS_UNKN
;

7091 
h
++;

7094 
t
->
d©a_˘x
.
°©s
.
Êags
 |
STAT_SHOW_STAT
 | 
STAT_SHOW_INFO
;

7097 
	}
}

7104 
	$hâp_ˇ±uª_bad_mesßge
(
îr‹_¢≠shŸ
 *
es
, 
£ssi⁄
 *
s
,

7105 
buf„r
 *
buf
, 
hâp_msg
 *
msg
,

7106 
¥oxy
 *
Ÿhî_íd
)

7108 
es
->
Àn
 = 
buf
->
r
 - (buf->
d©a
 + 
msg
->
som
);

7109 
	`mem˝y
(
es
->
buf
, buf->
d©a
 + 
msg
->
som
, 
	`MIN
”s->
Àn
, (es->buf)));

7110 i‡(
msg
->
îr_pos
 >= 0)

7111 
es
->
pos
 = 
msg
->
îr_pos
 - msg->
som
;

7113 
es
->
pos
 = 
buf
->
Ã
 - (buf->
d©a
 + 
msg
->
som
);

7114 
es
->
whí
 = 
d©e
;

7115 
es
->
sid
 = 
s
->
uniq_id
;

7116 
es
->
§v
 = 
s
->srv;

7117 
es
->
€
 = 
Ÿhî_íd
;

7118 
es
->
§c
 = 
s
->
˛i_addr
;

7119 
	}
}

7130 
	$gë_ù_‰om_hdr2
(
hâp_msg
 *
msg
, c⁄° *
h«me
, 
hÀn
, 
hdr_idx
 *
idx
, 
occ
)

7132 
hdr_˘x
 
˘x
;

7133 
hdr_hi°
[
MAX_HDR_HISTORY
];

7134 
hi°_±r
;

7135 
found
 = 0;

7137 
˘x
.
idx
 = 0;

7138 i‡(
occ
 >= 0) {

7139 
	`hâp_föd_hódî2
(
h«me
, 
hÀn
, 
msg
->
sﬁ
, 
idx
, &
˘x
)) {

7140 
occ
--;

7141 i‡(
occ
 <= 0) {

7142 
found
 = 1;

7146 i‡(!
found
)

7148  
	`öëaddr_ho°_lim
(
˘x
.
löe
+˘x.
vÆ
, ctx.löe+˘x.vÆ+˘x.
vÀn
);

7152 i‡(-
occ
 > 
MAX_HDR_HISTORY
)

7155 
hi°_±r
 = 0;

7156 
hdr_hi°
[
hi°_±r
] = 0;

7157 
	`hâp_föd_hódî2
(
h«me
, 
hÀn
, 
msg
->
sﬁ
, 
idx
, &
˘x
)) {

7158 
hdr_hi°
[
hi°_±r
++] = 
	`öëaddr_ho°_lim
(
˘x
.
löe
+˘x.
vÆ
, ctx.löe+˘x.vÆ+˘x.
vÀn
);

7159 i‡(
hi°_±r
 >
MAX_HDR_HISTORY
)

7160 
hi°_±r
 = 0;

7161 
found
++;

7163 i‡(-
occ
 > 
found
)

7168 
hi°_±r
 +
occ
;

7169 i‡(
hi°_±r
 >
MAX_HDR_HISTORY
)

7170 
hi°_±r
 -
MAX_HDR_HISTORY
;

7171  
hdr_hi°
[
hi°_±r
];

7172 
	}
}

7177 
	$debug_hdr
(c⁄° *
dú
, 
£ssi⁄
 *
t
, c⁄° *
°¨t
, c⁄° *
íd
)

7179 
Àn
, 
max
;

7180 
Àn
 = 
	`•rötf
(
åash
, "%08x:%s.%s[%04x:%04x]: ", 
t
->
uniq_id
,Å->
be
->
id
,

7181 
dú
, ()
t
->
ªq
->
¥od
->
fd
, (È->ªq->
c⁄s
->fd);

7182 
max
 = 
íd
 - 
°¨t
;

7183 
	`UBOUND
(
max
, (
åash
Ë- 
Àn
 - 1);

7184 
Àn
 +
	`°æ˝y2
(
åash
 +Üí, 
°¨t
, 
max
 + 1);

7185 
åash
[
Àn
++] = '\n';

7186 
	`wrôe
(1, 
åash
, 
Àn
);

7187 
	}
}

7194 
	$hâp_öô_txn
(
£ssi⁄
 *
s
)

7196 
hâp_txn
 *
txn
 = &
s
->txn;

7197 
¥oxy
 *
„
 = 
s
->fe;

7199 
txn
->
Êags
 = 0;

7200 
txn
->
°©us
 = -1;

7202 
txn
->
cookõ_fú°_d©e
 = 0;

7203 
txn
->
cookõ_œ°_d©e
 = 0;

7205 
txn
->
ªq
.
sﬁ
 =Åxn->ªq.
eﬁ
 = 
NULL
;

7206 
txn
->
ªq
.
som
 =Åxn->ªq.
eoh
 = 0;

7207 
txn
->
r•
.
sﬁ
 =Åxn->r•.
eﬁ
 = 
NULL
;

7208 
txn
->
r•
.
som
 =Åxn->r•.
eoh
 = 0;

7209 
txn
->
ªq
.
hdr_c⁄ã¡_Àn
 = 0LL;

7210 
txn
->
r•
.
hdr_c⁄ã¡_Àn
 = 0LL;

7211 
txn
->
ªq
.
msg_°©e
 = 
HTTP_MSG_RQBEFORE
;

7212 
txn
->
r•
.
msg_°©e
 = 
HTTP_MSG_RPBEFORE
;

7214 
txn
->
auth
.
mëhod
 = 
HTTP_AUTH_UNKNOWN
;

7216 
txn
->
ªq
.
îr_pos
 =Åxn->
r•
.err_pos = -2;

7217 i‡(
„
->
›ti⁄s2
 & 
PR_O2_REQBUG_OK
)

7218 
txn
->
ªq
.
îr_pos
 = -1;

7220 i‡(
txn
->
ªq
.
ˇp
)

7221 
	`mem£t
(
txn
->
ªq
.
ˇp
, 0, 
„
->
nb_ªq_ˇp
 * (*));

7223 i‡(
txn
->
r•
.
ˇp
)

7224 
	`mem£t
(
txn
->
r•
.
ˇp
, 0, 
„
->
nb_r•_ˇp
 * (*));

7226 i‡(
txn
->
hdr_idx
.
v
)

7227 
	`hdr_idx_öô
(&
txn
->
hdr_idx
);

7228 
	}
}

7231 
	$hâp_íd_txn
(
£ssi⁄
 *
s
)

7233 
hâp_txn
 *
txn
 = &
s
->txn;

7236 
	`poﬁ_‰ì2
(
poﬁ2_ªquri
, 
txn
->
uri
);

7237 
	`poﬁ_‰ì2
(
poﬁ2_ˇ±uª
, 
txn
->
˛i_cookõ
);

7238 
	`poﬁ_‰ì2
(
poﬁ2_ˇ±uª
, 
txn
->
§v_cookõ
);

7239 
	`poﬁ_‰ì2
(
≠oﬁs
.
£ssid
, 
txn
->sessid);

7241 
txn
->
£ssid
 = 
NULL
;

7242 
txn
->
uri
 = 
NULL
;

7243 
txn
->
§v_cookõ
 = 
NULL
;

7244 
txn
->
˛i_cookõ
 = 
NULL
;

7246 i‡(
txn
->
ªq
.
ˇp
) {

7247 
ˇp_hdr
 *
h
;

7248 
h
 = 
s
->
„
->
ªq_ˇp
; h; h = h->
√xt
)

7249 
	`poﬁ_‰ì2
(
h
->
poﬁ
, 
txn
->
ªq
.
ˇp
[h->
ödex
]);

7250 
	`mem£t
(
txn
->
ªq
.
ˇp
, 0, 
s
->
„
->
nb_ªq_ˇp
 * (*));

7253 i‡(
txn
->
r•
.
ˇp
) {

7254 
ˇp_hdr
 *
h
;

7255 
h
 = 
s
->
„
->
r•_ˇp
; h; h = h->
√xt
)

7256 
	`poﬁ_‰ì2
(
h
->
poﬁ
, 
txn
->
r•
.
ˇp
[h->
ödex
]);

7257 
	`mem£t
(
txn
->
r•
.
ˇp
, 0, 
s
->
„
->
nb_r•_ˇp
 * (*));

7260 
	}
}

7263 
	$hâp_ª£t_txn
(
£ssi⁄
 *
s
)

7265 
	`hâp_íd_txn
(
s
);

7266 
	`hâp_öô_txn
(
s
);

7268 
s
->
be
 = s->
„
;

7269 
s
->
ªq
->
™Æy£rs
 = s->
li°íî
->analysers;

7270 
s
->
logs
.
logwaô
 = s->
„
->
to_log
;

7271 
s
->
§v
 = s->
¥ev_§v
 = s->
§v_c⁄n
 = 
NULL
;

7273 
s
->
°‹e_cou¡
 = 0;

7275 
s
->
≥nd_pos
 = 
NULL
;

7276 
s
->
c⁄n_ªåõs
 = s->
be
->conn_retries;

7278 
s
->
ªq
->
Êags
 |
BF_READ_DONTWAIT
;

7288 i‡(
	`u∆ikñy
(
s
->
ªp
->
l
 > s->ªp->
£nd_max
)) {

7289 
s
->
ªp
->
l
 = s->ªp->
£nd_max
;

7290 
s
->
ªp
->
r
 = s->ªp->
w
 + s->ªp->
l
;

7291 i‡(
s
->
ªp
->
r
 >s->ªp->
d©a
 + s->ªp->
size
)

7292 
s
->
ªp
->
r
 -s->ªp->
size
;

7295 
s
->
ªq
->
πo
 = s->
„
->
timeout
.
˛õ¡
;

7296 
s
->
ªq
->
wto
 = s->
be
->
timeout
.
£rvî
;

7297 
s
->
ªq
->
˘o
 = s->
be
->
timeout
.
c⁄√˘
;

7299 
s
->
ªp
->
πo
 = s->
be
->
timeout
.
£rvî
;

7300 
s
->
ªp
->
wto
 = s->
„
->
timeout
.
˛õ¡
;

7301 
s
->
ªp
->
˘o
 = 
TICK_ETERNITY
;

7303 
s
->
ªq
->
ªx
 = 
TICK_ETERNITY
;

7304 
s
->
ªq
->
wex
 = 
TICK_ETERNITY
;

7305 
s
->
ªq
->
™Æy£_exp
 = 
TICK_ETERNITY
;

7306 
s
->
ªp
->
ªx
 = 
TICK_ETERNITY
;

7307 
s
->
ªp
->
wex
 = 
TICK_ETERNITY
;

7308 
s
->
ªp
->
™Æy£_exp
 = 
TICK_ETERNITY
;

7309 
	}
}

7322 
	$a˛_∑r£_mëh
(c⁄° **
ãxt
, 
a˛_∑âîn
 *
∑âîn
, *
›aque
)

7324 
Àn
, 
mëh
;

7326 
Àn
 = 
	`°æí
(*
ãxt
);

7327 
mëh
 = 
	`föd_hâp_mëh
(*
ãxt
, 
Àn
);

7329 
∑âîn
->
vÆ
.
i
 = 
mëh
;

7330 i‡(
mëh
 =
HTTP_METH_OTHER
) {

7331 
∑âîn
->
±r
.
°r
 = 
	`°rdup
(*
ãxt
);

7332 i‡(!
∑âîn
->
±r
.
°r
)

7334 
∑âîn
->
Àn
 =Üen;

7337 
	}
}

7340 
	$a˛_„tch_mëh
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

7341 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

7343 
mëh
;

7344 
hâp_txn
 *
txn
 = 
l7
;

7346 i‡(!
txn
)

7349 i‡(
txn
->
ªq
.
msg_°©e
 < 
HTTP_MSG_BODY
)

7352 
mëh
 = 
txn
->meth;

7353 
ã°
->
i
 = 
mëh
;

7354 i‡(
mëh
 =
HTTP_METH_OTHER
) {

7355 i‡(
txn
->
r•
.
msg_°©e
 !
HTTP_MSG_RPBEFORE
)

7358 
ã°
->
Àn
 = 
txn
->
ªq
.
¶
.
rq
.
m_l
;

7359 
ã°
->
±r
 = 
txn
->
ªq
.
sﬁ
;

7361 
ã°
->
Êags
 = 
ACL_TEST_F_READ_ONLY
 | 
ACL_TEST_F_VOL_1ST
;

7363 
	}
}

7365 
	$a˛_m©ch_mëh
(
a˛_ã°
 *
ã°
, 
a˛_∑âîn
 *
∑âîn
)

7367 
iˇ£
;

7369 i‡(
ã°
->
i
 !
∑âîn
->
vÆ
.i)

7370  
ACL_PAT_FAIL
;

7372 i‡(
ã°
->
i
 !
HTTP_METH_OTHER
)

7373  
ACL_PAT_PASS
;

7376 i‡(
∑âîn
->
Àn
 !
ã°
->len)

7377  
ACL_PAT_FAIL
;

7379 
iˇ£
 = 
∑âîn
->
Êags
 & 
ACL_PAT_F_IGNORE_CASE
;

7380 i‡((
iˇ£
 && 
	`°∫ˇ£cmp
(
∑âîn
->
±r
.
°r
, 
ã°
->±r,Åe°->
Àn
) != 0) ||

7381 (!
iˇ£
 && 
	`°∫cmp
(
∑âîn
->
±r
.
°r
, 
ã°
->±r,Åe°->
Àn
) != 0))

7382  
ACL_PAT_FAIL
;

7383  
ACL_PAT_PASS
;

7384 
	}
}

7389 
	$a˛_∑r£_vî
(c⁄° **
ãxt
, 
a˛_∑âîn
 *
∑âîn
, *
›aque
)

7391 
∑âîn
->
±r
.
°r
 = 
	`°rdup
(*
ãxt
);

7392 i‡(!
∑âîn
->
±r
.
°r
)

7394 
∑âîn
->
Àn
 = 
	`°æí
(*
ãxt
);

7396 
	}
}

7399 
	$a˛_„tch_rqvî
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

7400 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

7402 
hâp_txn
 *
txn
 = 
l7
;

7403 *
±r
;

7404 
Àn
;

7406 i‡(!
txn
)

7409 i‡(
txn
->
ªq
.
msg_°©e
 < 
HTTP_MSG_BODY
)

7412 
Àn
 = 
txn
->
ªq
.
¶
.
rq
.
v_l
;

7413 
±r
 = 
txn
->
ªq
.
sﬁ
 +Åxn->ªq.
¶
.
rq
.
v
;

7415 (
Àn
-- > 0Ë&& (*
±r
++ != '/'));

7416 i‡(
Àn
 <= 0)

7419 
ã°
->
±r
 =Ötr;

7420 
ã°
->
Àn
 =Üen;

7422 
ã°
->
Êags
 = 
ACL_TEST_F_READ_ONLY
 | 
ACL_TEST_F_VOL_1ST
;

7424 
	}
}

7427 
	$a˛_„tch_°vî
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

7428 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

7430 
hâp_txn
 *
txn
 = 
l7
;

7431 *
±r
;

7432 
Àn
;

7434 i‡(!
txn
)

7437 i‡(
txn
->
r•
.
msg_°©e
 < 
HTTP_MSG_BODY
)

7440 
Àn
 = 
txn
->
r•
.
¶
.
°
.
v_l
;

7441 
±r
 = 
txn
->
r•
.
sﬁ
;

7443 (
Àn
-- > 0Ë&& (*
±r
++ != '/'));

7444 i‡(
Àn
 <= 0)

7447 
ã°
->
±r
 =Ötr;

7448 
ã°
->
Àn
 =Üen;

7450 
ã°
->
Êags
 = 
ACL_TEST_F_READ_ONLY
 | 
ACL_TEST_F_VOL_1ST
;

7452 
	}
}

7456 
	$a˛_„tch_°code
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

7457 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

7459 
hâp_txn
 *
txn
 = 
l7
;

7460 *
±r
;

7461 
Àn
;

7463 i‡(!
txn
)

7466 i‡(
txn
->
r•
.
msg_°©e
 < 
HTTP_MSG_BODY
)

7469 
Àn
 = 
txn
->
r•
.
¶
.
°
.
c_l
;

7470 
±r
 = 
txn
->
r•
.
sﬁ
 +Åxn->r•.
¶
.
°
.
c
;

7472 
ã°
->
i
 = 
	`__°æ2ui
(
±r
, 
Àn
);

7473 
ã°
->
Êags
 = 
ACL_TEST_F_VOL_1ST
;

7475 
	}
}

7479 
	$a˛_„tch_uæ
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

7480 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

7482 
hâp_txn
 *
txn
 = 
l7
;

7484 i‡(!
txn
)

7487 i‡(
txn
->
ªq
.
msg_°©e
 < 
HTTP_MSG_BODY
)

7490 i‡(
txn
->
r•
.
msg_°©e
 !
HTTP_MSG_RPBEFORE
)

7494 
ã°
->
Àn
 = 
txn
->
ªq
.
¶
.
rq
.
u_l
;

7495 
ã°
->
±r
 = 
txn
->
ªq
.
sﬁ
 +Åxn->ªq.
¶
.
rq
.
u
;

7498 
ã°
->
Êags
 = 
ACL_TEST_F_VOL_1ST
;

7500 
	}
}

7503 
	$a˛_„tch_uæ_ù
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

7504 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

7506 
hâp_txn
 *
txn
 = 
l7
;

7508 i‡(!
txn
)

7511 i‡(
txn
->
ªq
.
msg_°©e
 < 
HTTP_MSG_BODY
)

7514 i‡(
txn
->
r•
.
msg_°©e
 !
HTTP_MSG_RPBEFORE
)

7519 
	`uæ2ß
(
txn
->
ªq
.
sﬁ
 +Åxn->ªq.
¶
.
rq
.
u
,Åxn->ªq.¶.rq.
u_l
, &
l4
->
§v_addr
);

7520 
ã°
->
±r
 = (*)&((
sockaddr_ö
 *)&
l4
->
§v_addr
)->
sö_addr
;

7521 
ã°
->
i
 = 
AF_INET
;

7527 i‡(
px
->
›ti⁄s
 & 
PR_O_HTTP_PROXY
)

7528 
l4
->
Êags
 |
SN_ADDR_SET
;

7530 
ã°
->
Êags
 = 
ACL_TEST_F_READ_ONLY
;

7532 
	}
}

7535 
	$a˛_„tch_uæ_p‹t
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

7536 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

7538 
hâp_txn
 *
txn
 = 
l7
;

7540 i‡(!
txn
)

7543 i‡(
txn
->
ªq
.
msg_°©e
 < 
HTTP_MSG_BODY
)

7546 i‡(
txn
->
r•
.
msg_°©e
 !
HTTP_MSG_RPBEFORE
)

7551 
	`uæ2ß
(
txn
->
ªq
.
sﬁ
 +Åxn->ªq.
¶
.
rq
.
u
,Åxn->ªq.¶.rq.
u_l
, &
l4
->
§v_addr
);

7552 
ã°
->
i
 = 
	`¡ohs
(((
sockaddr_ö
 *)&
l4
->
§v_addr
)->
sö_p‹t
);

7554 i‡(
px
->
›ti⁄s
 & 
PR_O_HTTP_PROXY
)

7555 
l4
->
Êags
 |
SN_ADDR_SET
;

7557 
ã°
->
Êags
 = 
ACL_TEST_F_READ_ONLY
;

7559 
	}
}

7565 
	$a˛_„tch_hdr
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, *
sﬁ
,

7566 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

7568 
hâp_txn
 *
txn
 = 
l7
;

7569 
hdr_idx
 *
idx
 = &
txn
->hdr_idx;

7570 
hdr_˘x
 *
˘x
 = (hdr_˘x *)
ã°
->˘x.
a
;

7572 i‡(!
txn
)

7575 i‡(!(
ã°
->
Êags
 & 
ACL_TEST_F_FETCH_MORE
))

7577 
˘x
->
idx
 = 0;

7579 i‡(
	`hâp_föd_hódî2
(
ex¥
->
¨g
.
°r
,Éx¥->
¨g_Àn
, 
sﬁ
, 
idx
, 
˘x
)) {

7580 
ã°
->
Êags
 |
ACL_TEST_F_FETCH_MORE
;

7581 
ã°
->
Êags
 |
ACL_TEST_F_VOL_HDR
;

7582 
ã°
->
Àn
 = 
˘x
->
vÀn
;

7583 
ã°
->
±r
 = (*)
˘x
->
löe
 + ctx->
vÆ
;

7587 
ã°
->
Êags
 &~
ACL_TEST_F_FETCH_MORE
;

7588 
ã°
->
Êags
 |
ACL_TEST_F_VOL_HDR
;

7590 
	}
}

7593 
	$a˛_„tch_chdr
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

7594 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

7596 
hâp_txn
 *
txn
 = 
l7
;

7598 i‡(!
txn
)

7601 i‡(
txn
->
ªq
.
msg_°©e
 < 
HTTP_MSG_BODY
)

7604 i‡(
txn
->
r•
.
msg_°©e
 !
HTTP_MSG_RPBEFORE
)

7608  
	`a˛_„tch_hdr
(
px
, 
l4
, 
txn
,Åxn->
ªq
.
sﬁ
, 
ex¥
, 
ã°
);

7609 
	}
}

7612 
	$a˛_„tch_shdr
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

7613 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

7615 
hâp_txn
 *
txn
 = 
l7
;

7617 i‡(!
txn
)

7620 i‡(
txn
->
r•
.
msg_°©e
 < 
HTTP_MSG_BODY
)

7623  
	`a˛_„tch_hdr
(
px
, 
l4
, 
txn
,Åxn->
r•
.
sﬁ
, 
ex¥
, 
ã°
);

7624 
	}
}

7630 
	$a˛_„tch_hdr_˙t
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, *
sﬁ
,

7631 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

7633 
hâp_txn
 *
txn
 = 
l7
;

7634 
hdr_idx
 *
idx
 = &
txn
->hdr_idx;

7635 
hdr_˘x
 
˘x
;

7636 
˙t
;

7638 i‡(!
txn
)

7641 
˘x
.
idx
 = 0;

7642 
˙t
 = 0;

7643 
	`hâp_föd_hódî2
(
ex¥
->
¨g
.
°r
,Éx¥->
¨g_Àn
, 
sﬁ
, 
idx
, &
˘x
))

7644 
˙t
++;

7646 
ã°
->
i
 = 
˙t
;

7647 
ã°
->
Êags
 = 
ACL_TEST_F_VOL_HDR
;

7649 
	}
}

7652 
	$a˛_„tch_chdr_˙t
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

7653 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

7655 
hâp_txn
 *
txn
 = 
l7
;

7657 i‡(!
txn
)

7660 i‡(
txn
->
ªq
.
msg_°©e
 < 
HTTP_MSG_BODY
)

7663 i‡(
txn
->
r•
.
msg_°©e
 !
HTTP_MSG_RPBEFORE
)

7667  
	`a˛_„tch_hdr_˙t
(
px
, 
l4
, 
txn
,Åxn->
ªq
.
sﬁ
, 
ex¥
, 
ã°
);

7668 
	}
}

7671 
	$a˛_„tch_shdr_˙t
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

7672 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

7674 
hâp_txn
 *
txn
 = 
l7
;

7676 i‡(!
txn
)

7679 i‡(
txn
->
r•
.
msg_°©e
 < 
HTTP_MSG_BODY
)

7682  
	`a˛_„tch_hdr_˙t
(
px
, 
l4
, 
txn
,Åxn->
r•
.
sﬁ
, 
ex¥
, 
ã°
);

7683 
	}
}

7690 
	$a˛_„tch_hdr_vÆ
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, *
sﬁ
,

7691 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

7693 
hâp_txn
 *
txn
 = 
l7
;

7694 
hdr_idx
 *
idx
 = &
txn
->hdr_idx;

7695 
hdr_˘x
 *
˘x
 = (hdr_˘x *)
ã°
->˘x.
a
;

7697 i‡(!
txn
)

7700 i‡(!(
ã°
->
Êags
 & 
ACL_TEST_F_FETCH_MORE
))

7702 
˘x
->
idx
 = 0;

7704 i‡(
	`hâp_föd_hódî2
(
ex¥
->
¨g
.
°r
,Éx¥->
¨g_Àn
, 
sﬁ
, 
idx
, 
˘x
)) {

7705 
ã°
->
Êags
 |
ACL_TEST_F_FETCH_MORE
;

7706 
ã°
->
Êags
 |
ACL_TEST_F_VOL_HDR
;

7707 
ã°
->
i
 = 
	`°æ2ic
((*)
˘x
->
löe
 + ctx->
vÆ
, ctx->
vÀn
);

7711 
ã°
->
Êags
 &~
ACL_TEST_F_FETCH_MORE
;

7712 
ã°
->
Êags
 |
ACL_TEST_F_VOL_HDR
;

7714 
	}
}

7717 
	$a˛_„tch_chdr_vÆ
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

7718 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

7720 
hâp_txn
 *
txn
 = 
l7
;

7722 i‡(!
txn
)

7725 i‡(
txn
->
ªq
.
msg_°©e
 < 
HTTP_MSG_BODY
)

7728 i‡(
txn
->
r•
.
msg_°©e
 !
HTTP_MSG_RPBEFORE
)

7732  
	`a˛_„tch_hdr_vÆ
(
px
, 
l4
, 
txn
,Åxn->
ªq
.
sﬁ
, 
ex¥
, 
ã°
);

7733 
	}
}

7736 
	$a˛_„tch_shdr_vÆ
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

7737 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

7739 
hâp_txn
 *
txn
 = 
l7
;

7741 i‡(!
txn
)

7744 i‡(
txn
->
r•
.
msg_°©e
 < 
HTTP_MSG_BODY
)

7747  
	`a˛_„tch_hdr_vÆ
(
px
, 
l4
, 
txn
,Åxn->
r•
.
sﬁ
, 
ex¥
, 
ã°
);

7748 
	}
}

7754 
	$a˛_„tch_hdr_ù
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, *
sﬁ
,

7755 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

7757 
hâp_txn
 *
txn
 = 
l7
;

7758 
hdr_idx
 *
idx
 = &
txn
->hdr_idx;

7759 
hdr_˘x
 *
˘x
 = (hdr_˘x *)
ã°
->˘x.
a
;

7761 i‡(!
txn
)

7764 i‡(!(
ã°
->
Êags
 & 
ACL_TEST_F_FETCH_MORE
))

7766 
˘x
->
idx
 = 0;

7768 i‡(
	`hâp_föd_hódî2
(
ex¥
->
¨g
.
°r
,Éx¥->
¨g_Àn
, 
sﬁ
, 
idx
, 
˘x
)) {

7769 
ã°
->
Êags
 |
ACL_TEST_F_FETCH_MORE
;

7770 
ã°
->
Êags
 |
ACL_TEST_F_VOL_HDR
;

7772 
	`mem£t
(&
l4
->
§v_addr
.
sö_addr
, 0, (l4->srv_addr.sin_addr));

7773 
	`uæ2ù
((*)
˘x
->
löe
 + ctx->
vÆ
, &
l4
->
§v_addr
.
sö_addr
);

7774 
ã°
->
±r
 = (*)&
l4
->
§v_addr
.
sö_addr
;

7775 
ã°
->
i
 = 
AF_INET
;

7779 
ã°
->
Êags
 &~
ACL_TEST_F_FETCH_MORE
;

7780 
ã°
->
Êags
 |
ACL_TEST_F_VOL_HDR
;

7782 
	}
}

7785 
	$a˛_„tch_chdr_ù
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

7786 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

7788 
hâp_txn
 *
txn
 = 
l7
;

7790 i‡(!
txn
)

7793 i‡(
txn
->
ªq
.
msg_°©e
 < 
HTTP_MSG_BODY
)

7796 i‡(
txn
->
r•
.
msg_°©e
 !
HTTP_MSG_RPBEFORE
)

7800  
	`a˛_„tch_hdr_ù
(
px
, 
l4
, 
txn
,Åxn->
ªq
.
sﬁ
, 
ex¥
, 
ã°
);

7801 
	}
}

7804 
	$a˛_„tch_shdr_ù
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

7805 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

7807 
hâp_txn
 *
txn
 = 
l7
;

7809 i‡(!
txn
)

7812 i‡(
txn
->
r•
.
msg_°©e
 < 
HTTP_MSG_BODY
)

7815  
	`a˛_„tch_hdr_ù
(
px
, 
l4
, 
txn
,Åxn->
r•
.
sﬁ
, 
ex¥
, 
ã°
);

7816 
	}
}

7822 
	$a˛_„tch_∑th
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

7823 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

7825 
hâp_txn
 *
txn
 = 
l7
;

7826 *
±r
, *
íd
;

7828 i‡(!
txn
)

7831 i‡(
txn
->
ªq
.
msg_°©e
 < 
HTTP_MSG_BODY
)

7834 i‡(
txn
->
r•
.
msg_°©e
 !
HTTP_MSG_RPBEFORE
)

7838 
íd
 = 
txn
->
ªq
.
sﬁ
 +Åxn->ªq.
¶
.
rq
.
u
 +Åxn->ªq.¶.rq.
u_l
;

7839 
±r
 = 
	`hâp_gë_∑th
(
txn
);

7840 i‡(!
±r
)

7844 
ã°
->
±r
 =Ötr;

7846 
±r
 < 
íd
 && *ptr != '?')

7847 
±r
++;

7849 
ã°
->
Àn
 = 
±r
 -Åest->ptr;

7852 
ã°
->
Êags
 = 
ACL_TEST_F_VOL_1ST
;

7854 
	}
}

7857 
	$a˛_„tch_¥Ÿo_hâp
(
¥oxy
 *
px
, 
£ssi⁄
 *
s
, *
l7
, 
dú
,

7858 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

7860 
buf„r
 *
ªq
 = 
s
->req;

7861 
hâp_txn
 *
txn
 = &
s
->txn;

7862 
hâp_msg
 *
msg
 = &
txn
->
ªq
;

7868 i‡(!
s
 || !
ªq
)

7871 i‡(
	`u∆ikñy
(
msg
->
msg_°©e
 >
HTTP_MSG_BODY
)) {

7873 
ã°
->
Êags
 |
ACL_TEST_F_SET_RES_PASS
;

7878 i‡(
	`likñy
(
ªq
->
Ã
 <Ñeq->
r
))

7879 
	`hâp_msg_™Æyzî
(
ªq
, 
msg
, &
txn
->
hdr_idx
);

7881 i‡(
	`u∆ikñy
(
msg
->
msg_°©e
 < 
HTTP_MSG_BODY
)) {

7882 i‡((
msg
->
msg_°©e
 =
HTTP_MSG_ERROR
Ë|| (
ªq
->
Êags
 & 
BF_FULL
)) {

7883 
ã°
->
Êags
 |
ACL_TEST_F_SET_RES_FAIL
;

7887 
ã°
->
Êags
 |
ACL_TEST_F_MAY_CHANGE
;

7894 
txn
->
mëh
 = 
	`föd_hâp_mëh
(
msg
->
sﬁ
, msg->
¶
.
rq
.
m_l
);

7895 i‡(
txn
->
mëh
 =
HTTP_METH_GET
 ||Åxn->mëh =
HTTP_METH_HEAD
)

7896 
s
->
Êags
 |
SN_REDIRECTABLE
;

7898 i‡(
	`u∆ikñy
(
msg
->
¶
.
rq
.
v_l
 =0Ë&& !
	`hâp_upgøde_v09_to_v10
(
ªq
, msg, 
txn
)) {

7899 
ã°
->
Êags
 |
ACL_TEST_F_SET_RES_FAIL
;

7903 
ã°
->
Êags
 |
ACL_TEST_F_SET_RES_PASS
;

7905 
	}
}

7909 
	$a˛_„tch_hâp_fú°_ªq
(
¥oxy
 *
px
, 
£ssi⁄
 *
s
, *
l7
, 
dú
,

7910 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

7912 i‡(!
s
)

7915 i‡(
s
->
txn
.
Êags
 & 
TX_NOT_FIRST
)

7916 
ã°
->
Êags
 |
ACL_TEST_F_SET_RES_FAIL
;

7918 
ã°
->
Êags
 |
ACL_TEST_F_SET_RES_PASS
;

7921 
	}
}

7924 
	$a˛_„tch_hâp_auth
(
¥oxy
 *
px
, 
£ssi⁄
 *
s
, *
l7
, 
dú
,

7925 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

7928 i‡(!
s
)

7931 i‡(!
	`gë_hâp_auth
(
s
))

7934 
ã°
->
˘x
.
a
[0] = 
ex¥
->
¨g
.
ul
;

7935 
ã°
->
˘x
.
a
[1] = 
s
->
txn
.
auth
.
u£r
;

7936 
ã°
->
˘x
.
a
[2] = 
s
->
txn
.
auth
.
∑ss
;

7938 
ã°
->
Êags
 |
ACL_TEST_F_READ_ONLY
 | 
ACL_TEST_F_NULL_MATCH
;

7941 
	}
}

7948 
a˛_kw_li°
 
	ga˛_kws
 = {{ },{

7949 { "ªq_¥Ÿo_hâp", 
a˛_∑r£_nŸhög
, 
a˛_„tch_¥Ÿo_hâp
, 
a˛_m©ch_nŸhög
, 
ACL_USE_L7REQ_PERMANENT
 },

7951 { "mëhod", 
a˛_∑r£_mëh
, 
a˛_„tch_mëh
, 
a˛_m©ch_mëh
, 
ACL_USE_L7REQ_PERMANENT
 },

7952 { "ªq_vî", 
a˛_∑r£_vî
, 
a˛_„tch_rqvî
, 
a˛_m©ch_°r
, 
ACL_USE_L7REQ_VOLATILE
|
ACL_MAY_LOOKUP
 },

7953 { "ª•_vî", 
a˛_∑r£_vî
, 
a˛_„tch_°vî
, 
a˛_m©ch_°r
, 
ACL_USE_L7RTR_VOLATILE
|
ACL_MAY_LOOKUP
 },

7954 { "°©us", 
a˛_∑r£_öt
, 
a˛_„tch_°code
, 
a˛_m©ch_öt
, 
ACL_USE_L7RTR_PERMANENT
 },

7956 { "uæ", 
a˛_∑r£_°r
, 
a˛_„tch_uæ
, 
a˛_m©ch_°r
, 
ACL_USE_L7REQ_VOLATILE
|
ACL_MAY_LOOKUP
 },

7957 { "uæ_beg", 
a˛_∑r£_°r
, 
a˛_„tch_uæ
, 
a˛_m©ch_beg
, 
ACL_USE_L7REQ_VOLATILE
 },

7958 { "uæ_íd", 
a˛_∑r£_°r
, 
a˛_„tch_uæ
, 
a˛_m©ch_íd
, 
ACL_USE_L7REQ_VOLATILE
 },

7959 { "uæ_sub", 
a˛_∑r£_°r
, 
a˛_„tch_uæ
, 
a˛_m©ch_sub
, 
ACL_USE_L7REQ_VOLATILE
 },

7960 { "uæ_dú", 
a˛_∑r£_°r
, 
a˛_„tch_uæ
, 
a˛_m©ch_dú
, 
ACL_USE_L7REQ_VOLATILE
 },

7961 { "uæ_dom", 
a˛_∑r£_°r
, 
a˛_„tch_uæ
, 
a˛_m©ch_dom
, 
ACL_USE_L7REQ_VOLATILE
 },

7962 { "uæ_ªg", 
a˛_∑r£_ªg
, 
a˛_„tch_uæ
, 
a˛_m©ch_ªg
, 
ACL_USE_L7REQ_VOLATILE
 },

7963 { "uæ_ù", 
a˛_∑r£_ù
, 
a˛_„tch_uæ_ù
, 
a˛_m©ch_ù
, 
ACL_USE_L7REQ_VOLATILE
|
ACL_MAY_LOOKUP
 },

7964 { "uæ_p‹t", 
a˛_∑r£_öt
, 
a˛_„tch_uæ_p‹t
, 
a˛_m©ch_öt
, 
ACL_USE_L7REQ_VOLATILE
 },

7967 { "hdr", 
a˛_∑r£_°r
, 
a˛_„tch_chdr
, 
a˛_m©ch_°r
, 
ACL_USE_L7REQ_VOLATILE
|
ACL_MAY_LOOKUP
 },

7968 { "hdr_ªg", 
a˛_∑r£_ªg
, 
a˛_„tch_chdr
, 
a˛_m©ch_ªg
, 
ACL_USE_L7REQ_VOLATILE
 },

7969 { "hdr_beg", 
a˛_∑r£_°r
, 
a˛_„tch_chdr
, 
a˛_m©ch_beg
, 
ACL_USE_L7REQ_VOLATILE
 },

7970 { "hdr_íd", 
a˛_∑r£_°r
, 
a˛_„tch_chdr
, 
a˛_m©ch_íd
, 
ACL_USE_L7REQ_VOLATILE
 },

7971 { "hdr_sub", 
a˛_∑r£_°r
, 
a˛_„tch_chdr
, 
a˛_m©ch_sub
, 
ACL_USE_L7REQ_VOLATILE
 },

7972 { "hdr_dú", 
a˛_∑r£_°r
, 
a˛_„tch_chdr
, 
a˛_m©ch_dú
, 
ACL_USE_L7REQ_VOLATILE
 },

7973 { "hdr_dom", 
a˛_∑r£_°r
, 
a˛_„tch_chdr
, 
a˛_m©ch_dom
, 
ACL_USE_L7REQ_VOLATILE
 },

7974 { "hdr_˙t", 
a˛_∑r£_öt
, 
a˛_„tch_chdr_˙t
,
a˛_m©ch_öt
, 
ACL_USE_L7REQ_VOLATILE
 },

7975 { "hdr_vÆ", 
a˛_∑r£_öt
, 
a˛_„tch_chdr_vÆ
,
a˛_m©ch_öt
, 
ACL_USE_L7REQ_VOLATILE
 },

7976 { "hdr_ù", 
a˛_∑r£_ù
, 
a˛_„tch_chdr_ù
, 
a˛_m©ch_ù
, 
ACL_USE_L7REQ_VOLATILE
|
ACL_MAY_LOOKUP
 },

7978 { "shdr", 
a˛_∑r£_°r
, 
a˛_„tch_shdr
, 
a˛_m©ch_°r
, 
ACL_USE_L7RTR_VOLATILE
|
ACL_MAY_LOOKUP
 },

7979 { "shdr_ªg", 
a˛_∑r£_ªg
, 
a˛_„tch_shdr
, 
a˛_m©ch_ªg
, 
ACL_USE_L7RTR_VOLATILE
 },

7980 { "shdr_beg", 
a˛_∑r£_°r
, 
a˛_„tch_shdr
, 
a˛_m©ch_beg
, 
ACL_USE_L7RTR_VOLATILE
 },

7981 { "shdr_íd", 
a˛_∑r£_°r
, 
a˛_„tch_shdr
, 
a˛_m©ch_íd
, 
ACL_USE_L7RTR_VOLATILE
 },

7982 { "shdr_sub", 
a˛_∑r£_°r
, 
a˛_„tch_shdr
, 
a˛_m©ch_sub
, 
ACL_USE_L7RTR_VOLATILE
 },

7983 { "shdr_dú", 
a˛_∑r£_°r
, 
a˛_„tch_shdr
, 
a˛_m©ch_dú
, 
ACL_USE_L7RTR_VOLATILE
 },

7984 { "shdr_dom", 
a˛_∑r£_°r
, 
a˛_„tch_shdr
, 
a˛_m©ch_dom
, 
ACL_USE_L7RTR_VOLATILE
 },

7985 { "shdr_˙t", 
a˛_∑r£_öt
, 
a˛_„tch_shdr_˙t
,
a˛_m©ch_öt
, 
ACL_USE_L7RTR_VOLATILE
 },

7986 { "shdr_vÆ", 
a˛_∑r£_öt
, 
a˛_„tch_shdr_vÆ
,
a˛_m©ch_öt
, 
ACL_USE_L7RTR_VOLATILE
 },

7987 { "shdr_ù", 
a˛_∑r£_ù
, 
a˛_„tch_shdr_ù
, 
a˛_m©ch_ù
, 
ACL_USE_L7RTR_VOLATILE
|
ACL_MAY_LOOKUP
 },

7989 { "∑th", 
a˛_∑r£_°r
, 
a˛_„tch_∑th
, 
a˛_m©ch_°r
, 
ACL_USE_L7REQ_VOLATILE
|
ACL_MAY_LOOKUP
 },

7990 { "∑th_ªg", 
a˛_∑r£_ªg
, 
a˛_„tch_∑th
, 
a˛_m©ch_ªg
, 
ACL_USE_L7REQ_VOLATILE
 },

7991 { "∑th_beg", 
a˛_∑r£_°r
, 
a˛_„tch_∑th
, 
a˛_m©ch_beg
, 
ACL_USE_L7REQ_VOLATILE
 },

7992 { "∑th_íd", 
a˛_∑r£_°r
, 
a˛_„tch_∑th
, 
a˛_m©ch_íd
, 
ACL_USE_L7REQ_VOLATILE
 },

7993 { "∑th_sub", 
a˛_∑r£_°r
, 
a˛_„tch_∑th
, 
a˛_m©ch_sub
, 
ACL_USE_L7REQ_VOLATILE
 },

7994 { "∑th_dú", 
a˛_∑r£_°r
, 
a˛_„tch_∑th
, 
a˛_m©ch_dú
, 
ACL_USE_L7REQ_VOLATILE
 },

7995 { "∑th_dom", 
a˛_∑r£_°r
, 
a˛_„tch_∑th
, 
a˛_m©ch_dom
, 
ACL_USE_L7REQ_VOLATILE
 },

7998 { "löe", 
a˛_∑r£_°r
, 
a˛_„tch_löe
, 
a˛_m©ch_°r
 },

7999 { "löe_ªg", 
a˛_∑r£_ªg
, 
a˛_„tch_löe
, 
a˛_m©ch_ªg
 },

8000 { "löe_beg", 
a˛_∑r£_°r
, 
a˛_„tch_löe
, 
a˛_m©ch_beg
 },

8001 { "löe_íd", 
a˛_∑r£_°r
, 
a˛_„tch_löe
, 
a˛_m©ch_íd
 },

8002 { "löe_sub", 
a˛_∑r£_°r
, 
a˛_„tch_löe
, 
a˛_m©ch_sub
 },

8003 { "löe_dú", 
a˛_∑r£_°r
, 
a˛_„tch_löe
, 
a˛_m©ch_dú
 },

8004 { "löe_dom", 
a˛_∑r£_°r
, 
a˛_„tch_löe
, 
a˛_m©ch_dom
 },

8006 { "cook", 
a˛_∑r£_°r
, 
a˛_„tch_cook
, 
a˛_m©ch_°r
 },

8007 { "cook_ªg", 
a˛_∑r£_ªg
, 
a˛_„tch_cook
, 
a˛_m©ch_ªg
 },

8008 { "cook_beg", 
a˛_∑r£_°r
, 
a˛_„tch_cook
, 
a˛_m©ch_beg
 },

8009 { "cook_íd", 
a˛_∑r£_°r
, 
a˛_„tch_cook
, 
a˛_m©ch_íd
 },

8010 { "cook_sub", 
a˛_∑r£_°r
, 
a˛_„tch_cook
, 
a˛_m©ch_sub
 },

8011 { "cook_dú", 
a˛_∑r£_°r
, 
a˛_„tch_cook
, 
a˛_m©ch_dú
 },

8012 { "cook_dom", 
a˛_∑r£_°r
, 
a˛_„tch_cook
, 
a˛_m©ch_dom
 },

8013 { "cook_p°", 
a˛_∑r£_n⁄e
, 
a˛_„tch_cook
, 
a˛_m©ch_p°
 },

8016 { "hâp_auth", 
a˛_∑r£_nŸhög
, 
a˛_„tch_hâp_auth
, 
a˛_m©ch_auth
, 
ACL_USE_L7REQ_PERMANENT
 },

8017 { "hâp_auth_group", 
a˛_∑r£_°rˇt
, 
a˛_„tch_hâp_auth
, 
a˛_m©ch_auth
, 
ACL_USE_L7REQ_PERMANENT
 },

8018 { "hâp_fú°_ªq", 
a˛_∑r£_nŸhög
, 
a˛_„tch_hâp_fú°_ªq
, 
a˛_m©ch_nŸhög
, 
ACL_USE_L7REQ_PERMANENT
 },

8019 { 
NULL
, NULL, NULL, NULL },

8032 
	$∑âîn_„tch_hdr_ù
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

8033 c⁄° *
¨g
, 
¨g_Àn
, 
∑âîn_d©a
 *
d©a
)

8035 
hâp_txn
 *
txn
 = 
l7
;

8037 
d©a
->
ù
.
s_addr
 = 
	`ht⁄l
(
	`gë_ù_‰om_hdr2
(&
txn
->
ªq
, 
¨g
, 
¨g_Àn
, &txn->
hdr_idx
, -1));

8038  
d©a
->
ù
.
s_addr
 != 0;

8039 
	}
}

8045 
∑âîn_„tch_kw_li°
 
	g∑âîn_„tch_keyw‹ds
 = {{ },{

8046 { "hdr", 
∑âîn_„tch_hdr_ù
, 
PATTERN_TYPE_IP
, 
PATTERN_FETCH_REQ
 },

8047 { 
NULL
, NULL, 0, 0 },

8051 
__©åibuã__
((
c⁄°ru˘‹
))

8052 
	$__hâp_¥Ÿocﬁ_öô
()

8054 
	`a˛_ªgi°î_keyw‹ds
(&
a˛_kws
);

8055 
	`∑âîn_ªgi°î_„tches
(&
∑âîn_„tch_keyw‹ds
);

8056 
	}
}

	@src/proto_tcp.c

13 
	~<˘y≥.h
>

14 
	~<î∫o.h
>

15 
	~<f˙é.h
>

16 
	~<°dio.h
>

17 
	~<°dlib.h
>

18 
	~<°rög.h
>

19 
	~<time.h
>

21 
	~<sys/∑øm.h
>

22 
	~<sys/sockë.h
>

23 
	~<sys/°©.h
>

24 
	~<sys/ty≥s.h
>

25 
	~<sys/un.h
>

27 
	~<√töë/t˝.h
>

29 
	~<comm⁄/cfg∑r£.h
>

30 
	~<comm⁄/com∑t.h
>

31 
	~<comm⁄/c⁄fig.h
>

32 
	~<comm⁄/debug.h
>

33 
	~<comm⁄/îr‹s.h
>

34 
	~<comm⁄/mem‹y.h
>

35 
	~<comm⁄/möi-˛i°.h
>

36 
	~<comm⁄/°™d¨d.h
>

37 
	~<comm⁄/time.h
>

38 
	~<comm⁄/vîsi⁄.h
>

40 
	~<ty≥s/globÆ.h
>

41 
	~<ty≥s/£rvî.h
>

43 
	~<¥Ÿo/a˛.h
>

44 
	~<¥Ÿo/backíd.h
>

45 
	~<¥Ÿo/buf„rs.h
>

46 
	~<¥Ÿo/checks.h
>

47 
	~<¥Ÿo/fd.h
>

48 
	~<¥Ÿo/log.h
>

49 
	~<¥Ÿo/p‹t_ønge.h
>

50 
	~<¥Ÿo/¥Ÿocﬁs.h
>

51 
	~<¥Ÿo/¥Ÿo_t˝.h
>

52 
	~<¥Ÿo/¥oxy.h
>

53 
	~<¥Ÿo/queue.h
>

54 
	~<¥Ÿo/£ssi⁄.h
>

55 
	~<¥Ÿo/°ªam_sock.h
>

56 
	~<¥Ÿo/èsk.h
>

58 #ifde‡
CONFIG_HAP_CTTPROXY


59 
	~<imp‹t/ù_çroxy.h
>

62 
t˝_böd_li°íîs
(
¥Ÿocﬁ
 *
¥Ÿo
);

65 
¥Ÿocﬁ
 
	g¥Ÿo_t˝v4
 = {

66 .
«me
 = "tcpv4",

67 .
	gsock_domaö
 = 
AF_INET
,

68 .
	gsock_ty≥
 = 
SOCK_STREAM
,

69 .
	gsock_¥Ÿ
 = 
IPPROTO_TCP
,

70 .
	gsock_Ámûy
 = 
AF_INET
,

71 .
	gsock_addæí
 = (
sockaddr_ö
),

72 .
	gl3_addæí
 = 32/8,

73 .
	gªad
 = &
°ªam_sock_ªad
,

74 .
	gwrôe
 = &
°ªam_sock_wrôe
,

75 .
	gböd_Æl
 = 
t˝_böd_li°íîs
,

76 .
	gunböd_Æl
 = 
unböd_Æl_li°íîs
,

77 .
	gíabÀ_Æl
 = 
íabÀ_Æl_li°íîs
,

78 .
	gli°íîs
 = 
LIST_HEAD_INIT
(
¥Ÿo_t˝v4
.
li°íîs
),

79 .
	gnb_li°íîs
 = 0,

83 
¥Ÿocﬁ
 
	g¥Ÿo_t˝v6
 = {

84 .
«me
 = "tcpv6",

85 .
	gsock_domaö
 = 
AF_INET6
,

86 .
	gsock_ty≥
 = 
SOCK_STREAM
,

87 .
	gsock_¥Ÿ
 = 
IPPROTO_TCP
,

88 .
	gsock_Ámûy
 = 
AF_INET6
,

89 .
	gsock_addæí
 = (
sockaddr_ö6
),

90 .
	gl3_addæí
 = 128/8,

91 .
	gªad
 = &
°ªam_sock_ªad
,

92 .
	gwrôe
 = &
°ªam_sock_wrôe
,

93 .
	gböd_Æl
 = 
t˝_böd_li°íîs
,

94 .
	gunböd_Æl
 = 
unböd_Æl_li°íîs
,

95 .
	gíabÀ_Æl
 = 
íabÀ_Æl_li°íîs
,

96 .
	gli°íîs
 = 
LIST_HEAD_INIT
(
¥Ÿo_t˝v6
.
li°íîs
),

97 .
	gnb_li°íîs
 = 0,

115 
	$t˝v4_böd_sockë
(
fd
, 
Êags
, 
sockaddr_ö
 *
loˇl
, sockaddr_ö *
ªmŸe
)

117 
sockaddr_ö
 
böd_addr
;

118 
f‹eign_ok
 = 0;

119 
ªt
;

121 #ifde‡
CONFIG_HAP_LINUX_TPROXY


122 
ù_å™•_w‹kög
 = 1;

123 i‡(
Êags
 && 
ù_å™•_w‹kög
) {

124 i‡(
	`£tsock›t
(
fd
, 
SOL_IP
, 
IP_TRANSPARENT
, (*Ë&
⁄e
, (one)) == 0

125 || 
	`£tsock›t
(
fd
, 
SOL_IP
, 
IP_FREEBIND
, (*Ë&
⁄e
, (one)) == 0)

126 
f‹eign_ok
 = 1;

128 
ù_å™•_w‹kög
 = 0;

131 i‡(
Êags
) {

132 
	`mem£t
(&
böd_addr
, 0, (bind_addr));

133 i‡(
Êags
 & 1)

134 
böd_addr
.
sö_addr
 = 
ªmŸe
->sin_addr;

135 i‡(
Êags
 & 2)

136 
böd_addr
.
sö_p‹t
 = 
ªmŸe
->sin_port;

139 
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_REUSEADDR
, (*Ë&
⁄e
, (one));

140 i‡(
f‹eign_ok
) {

141 
ªt
 = 
	`böd
(
fd
, (
sockaddr
 *)&
böd_addr
, (bind_addr));

142 i‡(
ªt
 < 0)

146 
ªt
 = 
	`böd
(
fd
, (
sockaddr
 *)
loˇl
, (*local));

147 i‡(
ªt
 < 0)

151 i‡(!
Êags
)

154 #ifde‡
CONFIG_HAP_CTTPROXY


155 i‡(!
f‹eign_ok
) {

156 
ö_çroxy
 
ôp1
, 
ôp2
;

157 
	`mem£t
(&
ôp1
, 0, (itp1));

159 
ôp1
.
›
 = 
TPROXY_ASSIGN
;

160 
ôp1
.
v
.
addr
.
Áddr
 = 
böd_addr
.
sö_addr
;

161 
ôp1
.
v
.
addr
.
Â‹t
 = 
böd_addr
.
sö_p‹t
;

164 
ôp2
.
›
 = 
TPROXY_FLAGS
;

165 
ôp2
.
v
.
Êags
 = 
ITP_CONNECT
 | 
ITP_ONCE
;

167 i‡(
	`£tsock›t
(
fd
, 
SOL_IP
, 
IP_TPROXY
, &
ôp1
, (itp1)) != -1 &&

168 
	`£tsock›t
(
fd
, 
SOL_IP
, 
IP_TPROXY
, &
ôp2
, (itp2)) != -1) {

169 
f‹eign_ok
 = 1;

173 i‡(!
f‹eign_ok
)

178 
	}
}

197 
	$t˝v4_c⁄√˘_£rvî
(
°ªam_öãrÁ˚
 *
si
,

198 
¥oxy
 *
be
, 
£rvî
 *
§v
,

199 
sockaddr
 *
§v_addr
, sockadd∏*
‰om_addr
)

201 
fd
;

203 i‡((
fd
 = 
si
->fd = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 
IPPROTO_TCP
)) == -1) {

204 
	`qÂrötf
(
°dîr
, "Cannot getá server socket.\n");

206 i‡(
î∫o
 =
ENFILE
)

207 
	`£nd_log
(
be
, 
LOG_EMERG
,

209 
be
->
id
, 
maxfd
);

210 i‡(
î∫o
 =
EMFILE
)

211 
	`£nd_log
(
be
, 
LOG_EMERG
,

213 
be
->
id
, 
maxfd
);

214 i‡(
î∫o
 =
ENOBUFS
 ||Éºnÿ=
ENOMEM
)

215 
	`£nd_log
(
be
, 
LOG_EMERG
,

217 
be
->
id
, 
maxfd
);

219  
SN_ERR_RESOURCE
;

222 i‡(
fd
 >
globÆ
.
maxsock
) {

226 
	`AÀπ
("socket():ÇotÉnough free sockets. Raise -nárgument. Giving up.\n");

227 
	`˛o£
(
fd
);

228  
SN_ERR_PRXCOND
;

231 i‡((
	`f˙é
(
fd
, 
F_SETFL
, 
O_NONBLOCK
)==-1) ||

232 (
	`£tsock›t
(
fd
, 
IPPROTO_TCP
, 
TCP_NODELAY
, (*Ë&
⁄e
, (one)) == -1)) {

233 
	`qÂrötf
(
°dîr
,"Cannot set client socketÅoÇon blocking mode.\n");

234 
	`˛o£
(
fd
);

235  
SN_ERR_INTERNAL
;

238 i‡(
be
->
›ti⁄s
 & 
PR_O_TCP_SRV_KA
)

239 
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_KEEPALIVE
, (*Ë&
⁄e
, (one));

241 i‡(
be
->
›ti⁄s
 & 
PR_O_TCP_NOLING
)

242 
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_LINGER
, (
lögî
 *Ë&
nﬁögî
, (linger));

248 i‡(
§v
 !
NULL
 && srv->
°©e
 & 
SRV_BIND_SRC
) {

249 
ªt
, 
Êags
 = 0;

251 
§v
->
°©e
 & 
SRV_TPROXY_MASK
) {

252 
SRV_TPROXY_ADDR
:

253 
SRV_TPROXY_CLI
:

254 
Êags
 = 3;

256 
SRV_TPROXY_CIP
:

257 
SRV_TPROXY_DYN
:

258 
Êags
 = 1;

262 #ifde‡
SO_BINDTODEVICE


264 i‡(
§v
->
iÁ˚_«me
)

265 
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_BINDTODEVICE
, 
§v
->
iÁ˚_«me
, srv->
iÁ˚_Àn
 + 1);

268 i‡(
§v
->
•‹t_ønge
) {

269 
©ãm±s
 = 10;

270 
sockaddr_ö
 
§c
;

272 
ªt
 = 1;

273 
§c
 = 
§v
->
sour˚_addr
;

279 
	`p‹t_ønge_ªÀa£_p‹t
(
fdöfo
[
fd
].
p‹t_ønge
, fdöfo[fd].
loˇl_p‹t
);

280 
fdöfo
[
fd
].
p‹t_ønge
 = 
NULL
;

282 i‡(!
©ãm±s
)

284 
©ãm±s
--;

286 
fdöfo
[
fd
].
loˇl_p‹t
 = 
	`p‹t_ønge_Æloc_p‹t
(
§v
->
•‹t_ønge
);

287 i‡(!
fdöfo
[
fd
].
loˇl_p‹t
)

290 
fdöfo
[
fd
].
p‹t_ønge
 = 
§v
->
•‹t_ønge
;

291 
§c
.
sö_p‹t
 = 
	`ht⁄s
(
fdöfo
[
fd
].
loˇl_p‹t
);

293 
ªt
 = 
	`t˝v4_böd_sockë
(
fd
, 
Êags
, &
§c
, (
sockaddr_ö
 *)
‰om_addr
);

294 } 
ªt
 != 0);

297 
ªt
 = 
	`t˝v4_böd_sockë
(
fd
, 
Êags
, &
§v
->
sour˚_addr
, (
sockaddr_ö
 *)
‰om_addr
);

300 i‡(
ªt
) {

301 
	`p‹t_ønge_ªÀa£_p‹t
(
fdöfo
[
fd
].
p‹t_ønge
, fdöfo[fd].
loˇl_p‹t
);

302 
fdöfo
[
fd
].
p‹t_ønge
 = 
NULL
;

303 
	`˛o£
(
fd
);

305 i‡(
ªt
 == 1) {

306 
	`AÀπ
("Cannot bindÅo sourceáddress before connect() for server %s/%s. Aborting.\n",

307 
be
->
id
, 
§v
->id);

308 
	`£nd_log
(
be
, 
LOG_EMERG
,

310 
be
->
id
, 
§v
->id);

312 
	`AÀπ
("Cannot bindÅoÅproxy sourceáddress before connect() for server %s/%s. Aborting.\n",

313 
be
->
id
, 
§v
->id);

314 
	`£nd_log
(
be
, 
LOG_EMERG
,

316 
be
->
id
, 
§v
->id);

318  
SN_ERR_RESOURCE
;

321 i‡(
be
->
›ti⁄s
 & 
PR_O_BIND_SRC
) {

322 
ªt
, 
Êags
 = 0;

324 
be
->
›ti⁄s
 & 
PR_O_TPXY_MASK
) {

325 
PR_O_TPXY_ADDR
:

326 
PR_O_TPXY_CLI
:

327 
Êags
 = 3;

329 
PR_O_TPXY_CIP
:

330 
PR_O_TPXY_DYN
:

331 
Êags
 = 1;

335 #ifde‡
SO_BINDTODEVICE


337 i‡(
be
->
iÁ˚_«me
)

338 
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_BINDTODEVICE
, 
be
->
iÁ˚_«me
, be->
iÁ˚_Àn
 + 1);

340 
ªt
 = 
	`t˝v4_böd_sockë
(
fd
, 
Êags
, &
be
->
sour˚_addr
, (
sockaddr_ö
 *)
‰om_addr
);

341 i‡(
ªt
) {

342 
	`˛o£
(
fd
);

343 i‡(
ªt
 == 1) {

344 
	`AÀπ
("Cannot bindÅo sourceáddress before connect() forÖroxy %s. Aborting.\n",

345 
be
->
id
);

346 
	`£nd_log
(
be
, 
LOG_EMERG
,

348 
be
->
id
);

350 
	`AÀπ
("Cannot bindÅoÅproxy sourceáddress before connect() forÖroxy %s. Aborting.\n",

351 
be
->
id
);

352 
	`£nd_log
(
be
, 
LOG_EMERG
,

354 
be
->
id
);

356  
SN_ERR_RESOURCE
;

360 #i‡
	`deföed
(
TCP_QUICKACK
)

365 i‡((
be
->
›ti⁄s2
 & 
PR_O2_SMARTCON
Ë&& 
si
->
ob
->
£nd_max
)

366 
	`£tsock›t
(
fd
, 
IPPROTO_TCP
, 
TCP_QUICKACK
, (*Ë&
zîo
, (zero));

369 i‡(
globÆ
.
tu√
.
£rvî_¢dbuf
)

370 
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_SNDBUF
, &
globÆ
.
tu√
.
£rvî_¢dbuf
, (global.tune.server_sndbuf));

372 i‡(
globÆ
.
tu√
.
£rvî_rcvbuf
)

373 
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_RCVBUF
, &
globÆ
.
tu√
.
£rvî_rcvbuf
, (global.tune.server_rcvbuf));

375 i‡((
	`c⁄√˘
(
fd
, (
sockaddr
 *)
§v_addr
, (
sockaddr_ö
)) == -1) &&

376 (
î∫o
 !
EINPROGRESS
Ë&& (î∫ÿ!
EALREADY
Ë&& (î∫ÿ!
EISCONN
)) {

378 i‡(
î∫o
 =
EAGAIN
 ||Éºnÿ=
EADDRINUSE
) {

379 *
msg
;

380 i‡(
î∫o
 =
EAGAIN
)

381 
msg
 = "no freeÖorts";

383 
msg
 = "localáddressálready in use";

385 
	`qÂrötf
(
°dîr
,"C™nŸ c⁄√˘: %s.\n",
msg
);

386 
	`p‹t_ønge_ªÀa£_p‹t
(
fdöfo
[
fd
].
p‹t_ønge
, fdöfo[fd].
loˇl_p‹t
);

387 
fdöfo
[
fd
].
p‹t_ønge
 = 
NULL
;

388 
	`˛o£
(
fd
);

389 
	`£nd_log
(
be
, 
LOG_EMERG
,

391 
be
->
id
, 
§v
->id, 
msg
);

392  
SN_ERR_RESOURCE
;

393 } i‡(
î∫o
 =
ETIMEDOUT
) {

395 
	`p‹t_ønge_ªÀa£_p‹t
(
fdöfo
[
fd
].
p‹t_ønge
, fdöfo[fd].
loˇl_p‹t
);

396 
fdöfo
[
fd
].
p‹t_ønge
 = 
NULL
;

397 
	`˛o£
(
fd
);

398  
SN_ERR_SRVTO
;

402 
	`p‹t_ønge_ªÀa£_p‹t
(
fdöfo
[
fd
].
p‹t_ønge
, fdöfo[fd].
loˇl_p‹t
);

403 
fdöfo
[
fd
].
p‹t_ønge
 = 
NULL
;

404 
	`˛o£
(
fd
);

405  
SN_ERR_SRVCL
;

409 
fdèb
[
fd
].
ow√r
 = 
si
;

410 
fdèb
[
fd
].
°©e
 = 
FD_STCONN
;

411 
fdèb
[
fd
].
Êags
 = 
FD_FL_TCP
 | 
FD_FL_TCP_NODELAY
;

412 
fdèb
[
fd
].
cb
[
DIR_RD
].
f
 = &
°ªam_sock_ªad
;

413 
fdèb
[
fd
].
cb
[
DIR_RD
].
b
 = 
si
->
ib
;

414 
fdèb
[
fd
].
cb
[
DIR_WR
].
f
 = &
°ªam_sock_wrôe
;

415 
fdèb
[
fd
].
cb
[
DIR_WR
].
b
 = 
si
->
ob
;

417 
fdöfo
[
fd
].
≥îaddr
 = (
sockaddr
 *)
§v_addr
;

418 
fdöfo
[
fd
].
≥îÀn
 = (
sockaddr_ö
);

420 
	`fd_ö£π
(
fd
);

421 
	`EV_FD_SET
(
fd
, 
DIR_WR
);

423 
si
->
°©e
 = 
SI_ST_CON
;

424 
si
->
Êags
 |
SI_FL_CAP_SPLTCP
;

425 
si
->
exp
 = 
	`tick_add_if£t
(
now_ms
, 
be
->
timeout
.
c⁄√˘
);

427  
SN_ERR_NONE
;

428 
	}
}

443 
	$t˝_böd_li°íî
(
li°íî
 *li°íî, *
îrmsg
, 
îæí
)

445 
__œbñ__
 
t˝_ªtu∫
, 
t˝_˛o£_ªtu∫
;

446 
fd
, 
îr
;

447 c⁄° *
msg
 = 
NULL
;

450 i‡(
îrmsg
 && 
îæí
)

451 *
îrmsg
 = 0;

453 i‡(
li°íî
->
°©e
 !
LI_ASSIGNED
)

454  
ERR_NONE
;

456 
îr
 = 
ERR_NONE
;

458 i‡((
fd
 = 
	`sockë
(
li°íî
->
addr
.
ss_Ámûy
, 
SOCK_STREAM
, 
IPPROTO_TCP
)) == -1) {

459 
îr
 |
ERR_RETRYABLE
 | 
ERR_ALERT
;

460 
msg
 = "cannot createÜistening socket";

461 
t˝_ªtu∫
;

464 i‡(
fd
 >
globÆ
.
maxsock
) {

465 
îr
 |
ERR_FATAL
 | 
ERR_ABORT
 | 
ERR_ALERT
;

466 
msg
 = "notÉnough free sockets (raise '-n'Öarameter)";

467 
t˝_˛o£_ªtu∫
;

470 i‡(
	`f˙é
(
fd
, 
F_SETFL
, 
O_NONBLOCK
) == -1) {

471 
îr
 |
ERR_FATAL
 | 
ERR_ALERT
;

472 
msg
 = "cannot make socketÇon-blocking";

473 
t˝_˛o£_ªtu∫
;

476 i‡(
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_REUSEADDR
, (*Ë&
⁄e
, (one)) == -1) {

478 
msg
 = "cannot do so_reuseaddr";

479 
îr
 |
ERR_ALERT
;

482 i‡(
li°íî
->
›ti⁄s
 & 
LI_O_NOLINGER
)

483 
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_LINGER
, (
lögî
 *Ë&
nﬁögî
, (linger));

485 #ifde‡
SO_REUSEPORT


489 
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_REUSEPORT
, (*Ë&
⁄e
, (one));

491 #ifde‡
CONFIG_HAP_LINUX_TPROXY


492 i‡((
li°íî
->
›ti⁄s
 & 
LI_O_FOREIGN
)

493 && (
	`£tsock›t
(
fd
, 
SOL_IP
, 
IP_TRANSPARENT
, (*Ë&
⁄e
, (one)) == -1)

494 && (
	`£tsock›t
(
fd
, 
SOL_IP
, 
IP_FREEBIND
, (*Ë&
⁄e
, (one)) == -1)) {

495 
msg
 = "cannot makeÜistening socketÅransparent";

496 
îr
 |
ERR_ALERT
;

499 #ifde‡
SO_BINDTODEVICE


501 i‡(
li°íî
->
öãrÁ˚
) {

502 i‡(
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_BINDTODEVICE
,

503 
li°íî
->
öãrÁ˚
, 
	`°æí
(listener->interface) + 1) == -1) {

504 
msg
 = "cannot bindÜistenerÅo device";

505 
îr
 |
ERR_WARN
;

509 #i‡
	`deföed
(
TCP_MAXSEG
)

510 i‡(
li°íî
->
max£g
) {

511 i‡(
	`£tsock›t
(
fd
, 
IPPROTO_TCP
, 
TCP_MAXSEG
,

512 &
li°íî
->
max£g
, (listener->maxseg)) == -1) {

513 
msg
 = "cannot set MSS";

514 
îr
 |
ERR_WARN
;

518 #i‡
	`deföed
(
TCP_DEFER_ACCEPT
)

519 i‡(
li°íî
->
›ti⁄s
 & 
LI_O_DEF_ACCEPT
) {

521 
ac˚±_dñay
 = 1;

522 i‡(
	`£tsock›t
(
fd
, 
IPPROTO_TCP
, 
TCP_DEFER_ACCEPT
, &
ac˚±_dñay
, (accept_delay)) == -1) {

523 
msg
 = "cannotÉnable DEFER_ACCEPT";

524 
îr
 |
ERR_WARN
;

528 i‡(
	`böd
(
fd
, (
sockaddr
 *)&
li°íî
->
addr
,Üi°íî->
¥Ÿo
->
sock_addæí
) == -1) {

529 
îr
 |
ERR_RETRYABLE
 | 
ERR_ALERT
;

530 
msg
 = "cannot bind socket";

531 
t˝_˛o£_ªtu∫
;

534 i‡(
	`li°í
(
fd
, 
li°íî
->
backlog
 ?Üi°íî->backlog :Üi°íî->
maxc⁄n
) == -1) {

535 
îr
 |
ERR_RETRYABLE
 | 
ERR_ALERT
;

536 
msg
 = "cannotÜistenÅo socket";

537 
t˝_˛o£_ªtu∫
;

540 #i‡
	`deföed
(
TCP_QUICKACK
)

541 i‡(
li°íî
->
›ti⁄s
 & 
LI_O_NOQUICKACK
)

542 
	`£tsock›t
(
fd
, 
IPPROTO_TCP
, 
TCP_QUICKACK
, (*Ë&
zîo
, (zero));

546 
li°íî
->
fd
 = fd;

547 
li°íî
->
°©e
 = 
LI_LISTEN
;

550 
	`fd_ö£π
(
fd
);

551 
fdèb
[
fd
].
cb
[
DIR_RD
].
f
 = 
li°íî
->
ac˚±
;

552 
fdèb
[
fd
].
cb
[
DIR_WR
].
f
 = 
NULL
;

553 
fdèb
[
fd
].
cb
[
DIR_RD
].
b
 = fdèb[fd].cb[
DIR_WR
].b = 
NULL
;

554 
fdèb
[
fd
].
ow√r
 = 
li°íî
;

555 
fdèb
[
fd
].
°©e
 = 
FD_STLISTEN
;

556 
fdèb
[
fd
].
Êags
 = 
FD_FL_TCP
;

557 i‡(
li°íî
->
›ti⁄s
 & 
LI_O_NOLINGER
)

558 
fdèb
[
fd
].
Êags
 |
FD_FL_TCP_NOLING
;

560 
fdöfo
[
fd
].
≥îaddr
 = 
NULL
;

561 
fdöfo
[
fd
].
≥îÀn
 = 0;

562 
t˝_ªtu∫
:

563 i‡(
msg
 && 
îæí
)

564 
	`°æ˝y2
(
îrmsg
, 
msg
, 
îæí
);

565  
îr
;

567 
t˝_˛o£_ªtu∫
:

568 
	`˛o£
(
fd
);

569 
t˝_ªtu∫
;

570 
	}
}

578 
	$t˝_böd_li°íîs
(
¥Ÿocﬁ
 *
¥Ÿo
)

580 
li°íî
 *listener;

581 
îr
 = 
ERR_NONE
;

583 
	`li°_f‹_óch_íåy
(
li°íî
, &
¥Ÿo
->
li°íîs
, 
¥Ÿo_li°
) {

584 
îr
 |
	`t˝_böd_li°íî
(
li°íî
, 
NULL
, 0);

585 i‡((
îr
 & 
ERR_CODE
Ë=
ERR_ABORT
)

589  
îr
;

590 
	}
}

596 
	$t˝v4_add_li°íî
(
li°íî
 *listener)

598 i‡(
li°íî
->
°©e
 !
LI_INIT
)

600 
li°íî
->
°©e
 = 
LI_ASSIGNED
;

601 
li°íî
->
¥Ÿo
 = &
¥Ÿo_t˝v4
;

602 
	`LIST_ADDQ
(&
¥Ÿo_t˝v4
.
li°íîs
, &
li°íî
->
¥Ÿo_li°
);

603 
¥Ÿo_t˝v4
.
nb_li°íîs
++;

604 
	}
}

610 
	$t˝v6_add_li°íî
(
li°íî
 *listener)

612 i‡(
li°íî
->
°©e
 !
LI_INIT
)

614 
li°íî
->
°©e
 = 
LI_ASSIGNED
;

615 
li°íî
->
¥Ÿo
 = &
¥Ÿo_t˝v6
;

616 
	`LIST_ADDQ
(&
¥Ÿo_t˝v6
.
li°íîs
, &
li°íî
->
¥Ÿo_li°
);

617 
¥Ÿo_t˝v6
.
nb_li°íîs
++;

618 
	}
}

641 
	$t˝_ö•e˘_ªque°
(
£ssi⁄
 *
s
, 
buf„r
 *
ªq
, 
™_bô
)

643 
t˝_ruÀ
 *
ruÀ
;

644 
∑πül
;

646 
	`DPRINTF
(
°dîr
,"[%u] %s: session=%p b=%p,Éxp(r,w)=%u,%u bf=%08x bl=%dánalysers=%02x\n",

647 
now_ms
, 
__FUNCTION__
,

648 
s
,

649 
ªq
,

650 
ªq
->
ªx
,Ñeq->
wex
,

651 
ªq
->
Êags
,

652 
ªq
->
l
,

653 
ªq
->
™Æy£rs
);

665 i‡(
ªq
->
Êags
 & (
BF_SHUTR
|
BF_FULL
Ë|| !
s
->
„
->
t˝_ªq
.
ö•e˘_dñay
 || 
	`tick_is_expúed
‘eq->
™Æy£_exp
, 
now_ms
))

666 
∑πül
 = 0;

668 
∑πül
 = 
ACL_PARTIAL
;

670 
	`li°_f‹_óch_íåy
(
ruÀ
, &
s
->
„
->
t˝_ªq
.
ö•e˘_ruÀs
, 
li°
) {

671 
ªt
 = 
ACL_PAT_PASS
;

673 i‡(
ruÀ
->
c⁄d
) {

674 
ªt
 = 
	`a˛_exec_c⁄d
(
ruÀ
->
c⁄d
, 
s
->
„
, s, &s->
txn
, 
ACL_DIR_REQ
 | 
∑πül
);

675 i‡(
ªt
 =
ACL_PAT_MISS
) {

676 
	`buf„r_d⁄t_c⁄√˘
(
ªq
);

678 i‡(!
	`tick_is£t
(
ªq
->
™Æy£_exp
Ë&& 
s
->
„
->
t˝_ªq
.
ö•e˘_dñay
)

679 
ªq
->
™Æy£_exp
 = 
	`tick_add_if£t
(
now_ms
, 
s
->
„
->
t˝_ªq
.
ö•e˘_dñay
);

683 
ªt
 = 
	`a˛_∑ss
(ret);

684 i‡(
ruÀ
->
c⁄d
->
pﬁ
 =
ACL_COND_UNLESS
)

685 
ªt
 = !ret;

688 i‡(
ªt
) {

690 i‡(
ruÀ
->
a˘i⁄
 =
TCP_ACT_REJECT
) {

691 
	`buf„r_ab‹t
(
ªq
);

692 
	`buf„r_ab‹t
(
s
->
ªp
);

693 
ªq
->
™Æy£rs
 = 0;

695 
s
->
„
->
cou¡îs
.
díõd_ªq
++;

696 i‡(
s
->
li°íî
->
cou¡îs
)

697 
s
->
li°íî
->
cou¡îs
->
díõd_ªq
++;

699 i‡(!(
s
->
Êags
 & 
SN_ERR_MASK
))

700 
s
->
Êags
 |
SN_ERR_PRXCOND
;

701 i‡(!(
s
->
Êags
 & 
SN_FINST_MASK
))

702 
s
->
Êags
 |
SN_FINST_R
;

713 
ªq
->
™Æy£rs
 &~
™_bô
;

714 
ªq
->
™Æy£_exp
 = 
TICK_ETERNITY
;

716 
	}
}

724 
	$t˝_≥rsi°_rdp_cookõ
(
£ssi⁄
 *
s
, 
buf„r
 *
ªq
, 
™_bô
)

726 
¥oxy
 *
px
 = 
s
->
be
;

727 
ªt
;

728 
a˛_ex¥
 
ex¥
;

729 
a˛_ã°
 
ã°
;

730 
£rvî
 *
§v
 = 
px
->srv;

731 
sockaddr_ö
 
addr
;

732 *
p
;

734 
	`DPRINTF
(
°dîr
,"[%u] %s: session=%p b=%p,Éxp(r,w)=%u,%u bf=%08x bl=%dánalysers=%02x\n",

735 
now_ms
, 
__FUNCTION__
,

736 
s
,

737 
ªq
,

738 
ªq
->
ªx
,Ñeq->
wex
,

739 
ªq
->
Êags
,

740 
ªq
->
l
,

741 
ªq
->
™Æy£rs
);

743 i‡(
s
->
Êags
 & 
SN_ASSIGNED
)

744 
no_cookõ
;

746 
	`mem£t
(&
ex¥
, 0, (expr));

747 
	`mem£t
(&
ã°
, 0, (test));

749 
ex¥
.
¨g
.
°r
 = 
s
->
be
->
rdp_cookõ_«me
;

750 
ex¥
.
¨g_Àn
 = 
s
->
be
->
rdp_cookõ_Àn
;

752 
ªt
 = 
	`a˛_„tch_rdp_cookõ
(
px
, 
s
, 
NULL
, 
ACL_DIR_REQ
, &
ex¥
, &
ã°
);

753 i‡(
ªt
 =0 || (
ã°
.
Êags
 & 
ACL_TEST_F_MAY_CHANGE
Ë||Åe°.
Àn
 == 0)

754 
no_cookõ
;

756 
	`mem£t
(&
addr
, 0, (addr));

757 
addr
.
sö_Ámûy
 = 
AF_INET
;

760 
addr
.
sö_addr
.
s_addr
 = 
	`°πoul
(
ã°
.
±r
, &
p
, 10);

761 i‡(*
p
 != '.')

762 
no_cookõ
;

763 
p
++;

764 
addr
.
sö_p‹t
 = ()
	`°πoul
(
p
, &p, 10);

765 i‡(*
p
 != '.')

766 
no_cookõ
;

768 
§v
) {

769 i‡(
	`memcmp
(&
addr
, &(
§v
->addr), (addr)) == 0) {

770 i‡((
§v
->
°©e
 & 
SRV_RUNNING
Ë|| (
px
->
›ti⁄s
 & 
PR_O_PERSIST
)) {

772 
s
->
Êags
 |
SN_DIRECT
 | 
SN_ASSIGNED
;

773 
s
->
§v
 = srv;

777 
§v
 = srv->
√xt
;

780 
no_cookõ
:

781 
ªq
->
™Æy£rs
 &~
™_bô
;

782 
ªq
->
™Æy£_exp
 = 
TICK_ETERNITY
;

784 
	}
}

790 
	$t˝_∑r£_t˝_ªq
(**
¨gs
, 
£˘i⁄_ty≥
, 
¥oxy
 *
cuΩx
,

791 
¥oxy
 *
deÂx
, *
îr
, 
îæí
)

793 c⁄° *
±r
 = 
NULL
;

794 
vÆ
;

795 
ªéí
;

797 i‡(!*
¨gs
[1]) {

798 
	`¢¥ötf
(
îr
, 
îæí
, "missingárgument for '%s' in %s '%s'",

799 
¨gs
[0], 
	`¥oxy_ty≥_°r
(
cuΩx
), cuΩx->
id
);

803 i‡(!
	`°rcmp
(
¨gs
[1], "inspect-delay")) {

804 i‡(
cuΩx
 =
deÂx
) {

805 
	`¢¥ötf
(
îr
, 
îæí
, "%s %s isÇotállowed in 'defaults' sections",

806 
¨gs
[0],árgs[1]);

810 i‡(!(
cuΩx
->
ˇp
 & 
PR_CAP_FE
)) {

811 
	`¢¥ötf
(
îr
, 
îæí
, "%s %s will be ignored because %s '%s' hasÇo %s capability",

812 
¨gs
[0],árgs[1], 
	`¥oxy_ty≥_°r
(
cuΩx
), cuΩx->
id
,

817 i‡(!*
¨gs
[2] || (
±r
 = 
	`∑r£_time_îr
◊rgs[2], &
vÆ
, 
TIME_UNIT_MS
))) {

818 
ªéí
 = 
	`¢¥ötf
(
îr
, 
îæí
,

820 
¨gs
[0],árgs[1], 
	`¥oxy_ty≥_°r
(
cuΩx
), cuΩx->
id
);

821 i‡(
±r
 && 
ªéí
 < 
îæí
)

822 
ªéí
 +
	`¢¥ötf
(
îr
+ªéí, 
îæí
 -Ñetlen,

823 " (u√x≥˘ed ch¨a˘î '%c')", *
±r
);

827 i‡(
cuΩx
->
t˝_ªq
.
ö•e˘_dñay
) {

828 
	`¢¥ötf
(
îr
, 
îæí
, "ignoring %s %s (wasálready defined) in %s '%s'",

829 
¨gs
[0],árgs[1], 
	`¥oxy_ty≥_°r
(
cuΩx
), cuΩx->
id
);

832 
cuΩx
->
t˝_ªq
.
ö•e˘_dñay
 = 
vÆ
;

836 i‡(!
	`°rcmp
(
¨gs
[1], "content")) {

837 
a˘i⁄
;

838 
w¨n
 = 0;

839 
pﬁ
 = 
ACL_COND_NONE
;

840 
a˛_c⁄d
 *
c⁄d
;

841 
t˝_ruÀ
 *
ruÀ
;

843 i‡(
cuΩx
 =
deÂx
) {

844 
	`¢¥ötf
(
îr
, 
îæí
, "%s %s isÇotállowed in 'defaults' sections",

845 
¨gs
[0],árgs[1]);

849 i‡(!
	`°rcmp
(
¨gs
[2], "accept"))

850 
a˘i⁄
 = 
TCP_ACT_ACCEPT
;

851 i‡(!
	`°rcmp
(
¨gs
[2], "reject"))

852 
a˘i⁄
 = 
TCP_ACT_REJECT
;

854 
ªéí
 = 
	`¢¥ötf
(
îr
, 
îæí
,

856 
¨gs
[0],árgs[1], 
	`¥oxy_ty≥_°r
(
cuΩx
), cuΩx->
id
,árgs[2]);

860 
pﬁ
 = 
ACL_COND_NONE
;

861 
c⁄d
 = 
NULL
;

863 i‡(
	`°rcmp
(
¨gs
[3], "if") == 0 || strcmp(args[3], "unless") == 0) {

864 i‡((
c⁄d
 = 
	`buûd_a˛_c⁄d
(
NULL
, 0, 
cuΩx
, (c⁄° **)
¨gs
+3)) == NULL) {

865 
ªéí
 = 
	`¢¥ötf
(
îr
, 
îæí
,

867 
	`¥oxy_ty≥_°r
(
cuΩx
), cuΩx->
id
, 
¨gs
[3]);

871 i‡(*
¨gs
[3]) {

872 
ªéí
 = 
	`¢¥ötf
(
îr
, 
îæí
,

874 
¨gs
[0],árgs[1],árgs[2], 
	`¥oxy_ty≥_°r
(
cuΩx
), cuΩx->
id
,árgs[3]);

878 i‡(
c⁄d
 && (c⁄d->
ªquúes
 & 
ACL_USE_RTR_ANY
)) {

879 
a˛
 *acl;

880 c⁄° *
«me
;

882 
a˛
 = 
	`c⁄d_föd_ªquúe
(
c⁄d
, 
ACL_USE_RTR_ANY
);

883 
«me
 = 
a˛
 ?ácl->name : "(unknown)";

885 
ªéí
 = 
	`¢¥ötf
(
îr
, 
îæí
,

887 
«me
);

888 
w¨n
++;

890 
ruÀ
 = (
t˝_ruÀ
 *)
	`ˇŒoc
(1, (*rule));

891 
ruÀ
->
c⁄d
 = cond;

892 
ruÀ
->
a˘i⁄
 =áction;

893 
	`LIST_INIT
(&
ruÀ
->
li°
);

894 
	`LIST_ADDQ
(&
cuΩx
->
t˝_ªq
.
ö•e˘_ruÀs
, &
ruÀ
->
li°
);

895  
w¨n
;

898 
	`¢¥ötf
(
îr
, 
îæí
, "unknownárgument '%s'áfter '%s' in %s '%s'",

899 
¨gs
[1],árgs[0], 
	`¥oxy_ty≥_°r
(
¥oxy
), 
cuΩx
->
id
);

901 
	}
}

905 
	$a˛_„tch_ªq_Àn
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

906 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

908 i‡(!
l4
 || !l4->
ªq
)

911 
ã°
->
i
 = 
l4
->
ªq
->
l
;

912 
ã°
->
Êags
 = 
ACL_TEST_F_VOLATILE
 | 
ACL_TEST_F_MAY_CHANGE
;

914 
	}
}

925 
	$a˛_„tch_ªq_s¶_vî
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

926 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

928 
vîsi⁄
, 
bÀ·
, 
msg_Àn
;

929 c⁄° *
d©a
;

931 i‡(!
l4
 || !l4->
ªq
)

934 
msg_Àn
 = 0;

935 
bÀ·
 = 
l4
->
ªq
->
l
;

936 i‡(!
bÀ·
)

937 
too_sh‹t
;

939 
d©a
 = (c⁄° *)
l4
->
ªq
->
w
;

940 i‡((*
d©a
 >= 0x14 && *data <= 0x17) || (*data == 0xFF)) {

942 i‡(
bÀ·
 < 5)

943 
too_sh‹t
;

945 
vîsi⁄
 = (
d©a
[1] << 16) + data[2];

946 
msg_Àn
 = (
d©a
[3] << 8) + data[4];

949 i‡(
vîsi⁄
 < 0x00030000)

950 
nŸ_s¶
;

953 i‡(
msg_Àn
 < 1 || msg_len > ((1<<14) + 2048))

954 
nŸ_s¶
;

956 
bÀ·
 -5; 
d©a
 += 5;

959 
æí
, 
∂í
, 
cûí
, 
sûí
, 
chÀn
;

961 i‡(*
d©a
 & 0x80) {

962 i‡(
bÀ·
 < 3)

963 
too_sh‹t
;

965 
æí
 = ((
d©a
[0] & 0x7F) << 8) | data[1];

966 
∂í
 = 0;

967 
bÀ·
 -2; 
d©a
 += 2;

969 i‡(
bÀ·
 < 4)

970 
too_sh‹t
;

972 
æí
 = ((
d©a
[0] & 0x3F) << 8) | data[1];

973 
∂í
 = 
d©a
[2];

974 
bÀ·
 -3; 
d©a
 += 2;

977 i‡(*
d©a
 != 0x01)

978 
nŸ_s¶
;

979 
bÀ·
--; 
d©a
++;

981 i‡(
bÀ·
 < 8)

982 
too_sh‹t
;

983 
vîsi⁄
 = (
d©a
[0] << 16) + data[1];

984 
cûí
 = (
d©a
[2] << 8) + data[3];

985 
sûí
 = (
d©a
[4] << 8) + data[5];

986 
chÀn
 = (
d©a
[6] << 8) + data[7];

988 
bÀ·
 -8; 
d©a
 += 8;

989 i‡(
cûí
 % 3 != 0)

990 
nŸ_s¶
;

991 i‡(
sûí
 && silen != 16)

992 
nŸ_s¶
;

993 i‡(
chÀn
 < 16 || chlen > 32)

994 
nŸ_s¶
;

995 i‡(
æí
 !9 + 
cûí
 + 
sûí
 + 
chÀn
)

996 
nŸ_s¶
;

999 
msg_Àn
 = 
cûí
 + 
sûí
 + 
chÀn
 + 
∂í
;

1007 i‡(
msg_Àn
 > 
	`buf„r_max_Àn
(
l4
->
ªq
Ë+Ü4->ªq->
d©a
 -Ü4->ªq->
w
)

1008 
msg_Àn
 = 
	`buf„r_max_Àn
(
l4
->
ªq
Ë+Ü4->ªq->
d©a
 -Ü4->ªq->
w
;

1010 i‡(
bÀ·
 < 
msg_Àn
)

1011 
too_sh‹t
;

1016 
ã°
->
i
 = 
vîsi⁄
;

1017 
ã°
->
Êags
 = 
ACL_TEST_F_VOLATILE
;

1020 
too_sh‹t
:

1021 
ã°
->
Êags
 = 
ACL_TEST_F_MAY_CHANGE
;

1022 
nŸ_s¶
:

1024 
	}
}

1027 
	$a˛_„tch_rdp_cookõ
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

1028 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

1030 
bÀ·
;

1031 c⁄° *
d©a
;

1033 i‡(!
l4
 || !l4->
ªq
)

1036 
ã°
->
Êags
 = 0;

1038 
bÀ·
 = 
l4
->
ªq
->
l
;

1039 i‡(
bÀ·
 <= 11)

1040 
too_sh‹t
;

1042 
d©a
 = (c⁄° *)
l4
->
ªq
->
w
 + 11;

1043 
bÀ·
 -= 11;

1045 i‡(
bÀ·
 <= 7)

1046 
too_sh‹t
;

1048 i‡(
	`°∫ˇ£cmp
((c⁄° *)
d©a
, "Cookie:", 7) != 0)

1049 
nŸ_cookõ
;

1051 
d©a
 += 7;

1052 
bÀ·
 -= 7;

1054 
bÀ·
 > 0 && *
d©a
 == ' ') {

1055 
d©a
++;

1056 
bÀ·
--;

1059 i‡(
ex¥
->
¨g_Àn
) {

1061 i‡(
bÀ·
 <
ex¥
->
¨g_Àn
)

1062 
too_sh‹t
;

1064 i‡((
d©a
[
ex¥
->
¨g_Àn
] != '=') ||

1065 
	`°∫ˇ£cmp
(
ex¥
->
¨g
.
°r
, (c⁄° *)
d©a
,Éx¥->
¨g_Àn
) != 0)

1066 
nŸ_cookõ
;

1068 
d©a
 +
ex¥
->
¨g_Àn
 + 1;

1069 
bÀ·
 -
ex¥
->
¨g_Àn
 + 1;

1071 
bÀ·
 > 0 && *
d©a
 != '=') {

1072 i‡(*
d©a
 == '\r' || *data == '\n')

1073 
nŸ_cookõ
;

1074 
d©a
++;

1075 
bÀ·
--;

1078 i‡(
bÀ·
 < 1)

1079 
too_sh‹t
;

1081 i‡(*
d©a
 != '=')

1082 
nŸ_cookõ
;

1084 
d©a
++;

1085 
bÀ·
--;

1089 
ã°
->
±r
 = (*)
d©a
;

1090 
ã°
->
Àn
 = 0;

1092 
bÀ·
 > 0 && *
d©a
 != '\r') {

1093 
d©a
++;

1094 
bÀ·
--;

1097 i‡(
bÀ·
 < 2)

1098 
too_sh‹t
;

1100 i‡(
d©a
[0] != '\r' || data[1] != '\n')

1101 
nŸ_cookõ
;

1103 
ã°
->
Àn
 = (*)
d©a
 -Åe°->
±r
;

1104 
ã°
->
Êags
 = 
ACL_TEST_F_VOLATILE
;

1107 
too_sh‹t
:

1108 
ã°
->
Êags
 = 
ACL_TEST_F_MAY_CHANGE
;

1109 
nŸ_cookõ
:

1111 
	}
}

1114 
	$a˛_„tch_rdp_cookõ_˙t
(
¥oxy
 *
px
, 
£ssi⁄
 *
l4
, *
l7
, 
dú
,

1115 
a˛_ex¥
 *
ex¥
, 
a˛_ã°
 *
ã°
)

1117 
ªt
;

1119 
ªt
 = 
	`a˛_„tch_rdp_cookõ
(
px
, 
l4
, 
l7
, 
dú
, 
ex¥
, 
ã°
);

1121 
ã°
->
±r
 = 
NULL
;

1122 
ã°
->
Àn
 = 0;

1124 i‡(
ã°
->
Êags
 & 
ACL_TEST_F_MAY_CHANGE
)

1127 
ã°
->
Êags
 = 
ACL_TEST_F_VOLATILE
;

1128 
ã°
->
i
 = 
ªt
;

1131 
	}
}

1133 
cfg_kw_li°
 
	gcfg_kws
 = {{ },{

1134 { 
CFG_LISTEN
, "t˝-ªque°", 
t˝_∑r£_t˝_ªq
 },

1135 { 0, 
NULL
, NULL },

1138 
a˛_kw_li°
 
	ga˛_kws
 = {{ },{

1139 { "ªq_Àn", 
a˛_∑r£_öt
, 
a˛_„tch_ªq_Àn
, 
a˛_m©ch_öt
, 
ACL_USE_L4REQ_VOLATILE
 },

1140 { "ªq_s¶_vî", 
a˛_∑r£_dŸãd_vî
, 
a˛_„tch_ªq_s¶_vî
, 
a˛_m©ch_öt
, 
ACL_USE_L4REQ_VOLATILE
 },

1141 { "ªq_rdp_cookõ", 
a˛_∑r£_°r
, 
a˛_„tch_rdp_cookõ
, 
a˛_m©ch_°r
, 
ACL_USE_L4REQ_VOLATILE
|
ACL_MAY_LOOKUP
 },

1142 { "ªq_rdp_cookõ_˙t", 
a˛_∑r£_öt
, 
a˛_„tch_rdp_cookõ_˙t
, 
a˛_m©ch_öt
, 
ACL_USE_L4REQ_VOLATILE
 },

1143 { 
NULL
, NULL, NULL, NULL },

1146 
__©åibuã__
((
c⁄°ru˘‹
))

1147 
	$__t˝_¥Ÿocﬁ_öô
()

1149 
	`¥Ÿocﬁ_ªgi°î
(&
¥Ÿo_t˝v4
);

1150 
	`¥Ÿocﬁ_ªgi°î
(&
¥Ÿo_t˝v6
);

1151 
	`cfg_ªgi°î_keyw‹ds
(&
cfg_kws
);

1152 
	`a˛_ªgi°î_keyw‹ds
(&
a˛_kws
);

1153 
	}
}

	@src/proto_uxst.c

13 
	~<˘y≥.h
>

14 
	~<î∫o.h
>

15 
	~<f˙é.h
>

16 
	~<°dio.h
>

17 
	~<°dlib.h
>

18 
	~<°rög.h
>

19 
	~<sy¶og.h
>

20 
	~<time.h
>

22 
	~<sys/∑øm.h
>

23 
	~<sys/sockë.h
>

24 
	~<sys/°©.h
>

25 
	~<sys/ty≥s.h
>

26 
	~<sys/un.h
>

28 
	~<comm⁄/com∑t.h
>

29 
	~<comm⁄/c⁄fig.h
>

30 
	~<comm⁄/debug.h
>

31 
	~<comm⁄/îr‹s.h
>

32 
	~<comm⁄/mem‹y.h
>

33 
	~<comm⁄/möi-˛i°.h
>

34 
	~<comm⁄/°™d¨d.h
>

35 
	~<comm⁄/ticks.h
>

36 
	~<comm⁄/time.h
>

37 
	~<comm⁄/vîsi⁄.h
>

39 
	~<ty≥s/globÆ.h
>

41 
	~<¥Ÿo/a˛.h
>

42 
	~<¥Ÿo/backíd.h
>

43 
	~<¥Ÿo/buf„rs.h
>

44 
	~<¥Ÿo/dump°©s.h
>

45 
	~<¥Ÿo/fd.h
>

46 
	~<¥Ÿo/log.h
>

47 
	~<¥Ÿo/¥Ÿocﬁs.h
>

48 
	~<¥Ÿo/¥Ÿo_ux°.h
>

49 
	~<¥Ÿo/queue.h
>

50 
	~<¥Ÿo/£ssi⁄.h
>

51 
	~<¥Ÿo/°ªam_öãrÁ˚.h
>

52 
	~<¥Ÿo/°ªam_sock.h
>

53 
	~<¥Ÿo/èsk.h
>

55 #i‚de‡
MAXPATHLEN


56 
	#MAXPATHLEN
 128

	)

59 
ux°_böd_li°íîs
(
¥Ÿocﬁ
 *
¥Ÿo
);

60 
ux°_unböd_li°íîs
(
¥Ÿocﬁ
 *
¥Ÿo
);

63 
¥Ÿocﬁ
 
	g¥Ÿo_unix
 = {

64 .
«me
 = "unix_stream",

65 .
	gsock_domaö
 = 
PF_UNIX
,

66 .
	gsock_ty≥
 = 
SOCK_STREAM
,

67 .
	gsock_¥Ÿ
 = 0,

68 .
	gsock_Ámûy
 = 
AF_UNIX
,

69 .
	gsock_addæí
 = (
sockaddr_un
),

70 .
	gl3_addæí
 = (((
sockaddr_un
*)0)->
sun_∑th
),

71 .
	gªad
 = &
°ªam_sock_ªad
,

72 .
	gwrôe
 = &
°ªam_sock_wrôe
,

73 .
	gböd_Æl
 = 
ux°_böd_li°íîs
,

74 .
	gunböd_Æl
 = 
ux°_unböd_li°íîs
,

75 .
	gíabÀ_Æl
 = 
íabÀ_Æl_li°íîs
,

76 .
	gdißbÀ_Æl
 = 
dißbÀ_Æl_li°íîs
,

77 .
	gli°íîs
 = 
LIST_HEAD_INIT
(
¥Ÿo_unix
.
li°íîs
),

78 .
	gnb_li°íîs
 = 0,

93 
	$¸óã_ux°_sockë
(c⁄° *
∑th
, 
uid_t
 
uid
, 
gid_t
 
gid
, 
mode_t
 
mode
)

95 
ãm≤ame
[
MAXPATHLEN
];

96 
back«me
[
MAXPATHLEN
];

97 
sockaddr_un
 
addr
;

99 
ªt
, 
sock
;

102 i‡(!
∑th
[0]) {

103 
	`AÀπ
("InvalidÉmptyÇame forá UNIX socket. Aborting.\n");

104 
îr_ªtu∫
;

107 
ªt
 = 
	`¢¥ötf
(
ãm≤ame
, 
MAXPATHLEN
, "%s.%d.tmp", 
∑th
, 
pid
);

108 i‡(
ªt
 < 0 ||Ñë >
MAXPATHLEN
) {

109 
	`AÀπ
("«mêtoÿl⁄g f‹ UNIX sockë (%s). Ab‹tög.\n", 
∑th
);

110 
îr_ªtu∫
;

113 
ªt
 = 
	`¢¥ötf
(
back«me
, 
MAXPATHLEN
, "%s.%d.bak", 
∑th
, 
pid
);

114 i‡(
ªt
 < 0 ||Ñë >
MAXPATHLEN
) {

115 
	`AÀπ
("«mêtoÿl⁄g f‹ UNIX sockë (%s). Ab‹tög.\n", 
∑th
);

116 
îr_ªtu∫
;

120 i‡(
	`u∆ök
(
ãm≤ame
Ë< 0 && 
î∫o
 !
ENOENT
) {

121 
	`AÀπ
("îr‹ whíÅryögÅÿu∆ökÖªviou†UNIX sockë (%s). Ab‹tög.\n", 
∑th
);

122 
îr_ªtu∫
;

125 i‡(
	`u∆ök
(
back«me
Ë< 0 && 
î∫o
 !
ENOENT
) {

126 
	`AÀπ
("îr‹ whíÅryögÅÿu∆ökÖªviou†UNIX sockë (%s). Ab‹tög.\n", 
∑th
);

127 
îr_ªtu∫
;

131 i‡(
	`lök
(
∑th
, 
back«me
Ë< 0 && 
î∫o
 !
ENOENT
) {

132 
	`AÀπ
("îr‹ whíÅryögÅÿ¥e£rvê¥eviou†UNIX sockë (%s). Ab‹tög.\n", 
∑th
);

133 
îr_ªtu∫
;

137 
addr
.
sun_Ámûy
 = 
AF_UNIX
;

138 
	`°∫˝y
(
addr
.
sun_∑th
, 
ãm≤ame
, (addr.sun_path));

139 
addr
.
sun_∑th
[(addr.sun_path) - 1] = 0;

141 
sock
 = 
	`sockë
(
PF_UNIX
, 
SOCK_STREAM
, 0);

142 i‡(
sock
 < 0) {

143 
	`AÀπ
("ˇ¬Ÿ cª©êsockë f‹ UNIXÜi°íî (%s). Ab‹tög.\n", 
∑th
);

144 
îr_u∆ök_back
;

147 i‡(
sock
 >
globÆ
.
maxsock
) {

148 
	`AÀπ
("sockë():ÇŸÉnough fªêsockë†f‹ UNIXÜi°íî (%s). Rai£ -¿¨gumít. Ab‹tög.\n", 
∑th
);

149 
îr_u∆ök_ãmp
;

152 i‡(
	`f˙é
(
sock
, 
F_SETFL
, 
O_NONBLOCK
) == -1) {

153 
	`AÀπ
("cannot make UNIX socketÇon-blocking. Aborting.\n");

154 
îr_u∆ök_ãmp
;

157 i‡(
	`böd
(
sock
, (
sockaddr
 *)&
addr
, (addr)) < 0) {

159 
	`AÀπ
("ˇ¬Ÿ böd sockë f‹ UNIXÜi°íî (%s). Ab‹tög.\n", 
∑th
);

160 
îr_u∆ök_ãmp
;

163 i‡(((
uid
 !-1 || 
gid
 !-1Ë&& (
	`chown
(
ãm≤ame
, uid, gid) == -1)) ||

164 (
mode
 !0 && 
	`chmod
(
ãm≤ame
, mode) == -1)) {

165 
	`AÀπ
("ˇ¬Ÿ ch™gêUNIX sockë ow√rshù (%s). Ab‹tög.\n", 
∑th
);

166 
îr_u∆ök_ãmp
;

169 i‡(
	`li°í
(
sock
, 0) < 0) {

170 
	`AÀπ
("ˇ¬ŸÜi°íÅÿsockë f‹ UNIXÜi°íî (%s). Ab‹tög.\n", 
∑th
);

171 
îr_u∆ök_ãmp
;

179 i‡(
	`ª«me
(
ãm≤ame
, 
∑th
) < 0) {

180 
	`AÀπ
("ˇ¬Ÿ swôch föÆándÅemp‹¨y sockë†f‹ UNIXÜi°íî (%s). Ab‹tög.\n", 
∑th
);

181 
îr_ª«me
;

185 
	`u∆ök
(
back«me
);

187  
sock
;

189 
îr_ª«me
:

190 
ªt
 = 
	`ª«me
(
back«me
, 
∑th
);

191 i‡(
ªt
 < 0 && 
î∫o
 =
ENOENT
)

192 
	`u∆ök
(
∑th
);

193 
îr_u∆ök_ãmp
:

194 
	`u∆ök
(
ãm≤ame
);

195 
	`˛o£
(
sock
);

196 
îr_u∆ök_back
:

197 
	`u∆ök
(
back«me
);

198 
îr_ªtu∫
:

200 
	}
}

205 
	$de°roy_ux°_sockë
(c⁄° *
∑th
)

207 
sockaddr_un
 
addr
;

208 
sock
, 
ªt
;

218 
sock
 = 
	`sockë
(
PF_UNIX
, 
SOCK_DGRAM
, 0);

219 i‡(
sock
 < 0)

222 
addr
.
sun_Ámûy
 = 
AF_UNIX
;

223 
	`°∫˝y
(
addr
.
sun_∑th
, 
∑th
, (addr.sun_path));

224 
addr
.
sun_∑th
[(addr.sun_path) - 1] = 0;

225 
ªt
 = 
	`c⁄√˘
(
sock
, (
sockaddr
 *)&
addr
, (addr));

226 i‡(
ªt
 < 0 && 
î∫o
 =
ECONNREFUSED
) {

230 
	`u∆ök
(
∑th
);

232 
	`˛o£
(
sock
);

233 
	}
}

245 
	$ux°_böd_li°íî
(
li°íî
 *listener)

247 
fd
;

249 i‡(
li°íî
->
°©e
 !
LI_ASSIGNED
)

250  
ERR_NONE
;

252 
fd
 = 
	`¸óã_ux°_sockë
(((
sockaddr_un
 *)&
li°íî
->
addr
)->
sun_∑th
,

253 
li°íî
->
≥rm
.
ux
.
uid
,

254 
li°íî
->
≥rm
.
ux
.
gid
,

255 
li°íî
->
≥rm
.
ux
.
mode
);

256 i‡(
fd
 == -1)

257  
ERR_FATAL
;

260 
li°íî
->
fd
 = fd;

261 
li°íî
->
°©e
 = 
LI_LISTEN
;

264 
	`fd_ö£π
(
fd
);

265 
fdèb
[
fd
].
cb
[
DIR_RD
].
f
 = 
li°íî
->
ac˚±
;

266 
fdèb
[
fd
].
cb
[
DIR_WR
].
f
 = 
NULL
;

267 
fdèb
[
fd
].
cb
[
DIR_RD
].
b
 = fdèb[fd].cb[
DIR_WR
].b = 
NULL
;

268 
fdèb
[
fd
].
ow√r
 = 
li°íî
;

269 
fdèb
[
fd
].
°©e
 = 
FD_STLISTEN
;

270 
fdöfo
[
fd
].
≥îaddr
 = 
NULL
;

271 
fdöfo
[
fd
].
≥îÀn
 = 0;

272  
ERR_NONE
;

273 
	}
}

278 
	$ux°_unböd_li°íî
(
li°íî
 *listener)

280 i‡(
li°íî
->
°©e
 =
LI_READY
)

281 
	`EV_FD_CLR
(
li°íî
->
fd
, 
DIR_RD
);

283 i‡(
li°íî
->
°©e
 >
LI_LISTEN
) {

284 
	`fd_dñëe
(
li°íî
->
fd
);

285 
li°íî
->
°©e
 = 
LI_ASSIGNED
;

286 
	`de°roy_ux°_sockë
(((
sockaddr_un
 *)&
li°íî
->
addr
)->
sun_∑th
);

288  
ERR_NONE
;

289 
	}
}

295 
	$ux°_add_li°íî
(
li°íî
 *listener)

297 i‡(
li°íî
->
°©e
 !
LI_INIT
)

299 
li°íî
->
°©e
 = 
LI_ASSIGNED
;

300 
li°íî
->
¥Ÿo
 = &
¥Ÿo_unix
;

301 
	`LIST_ADDQ
(&
¥Ÿo_unix
.
li°íîs
, &
li°íî
->
¥Ÿo_li°
);

302 
¥Ÿo_unix
.
nb_li°íîs
++;

303 
	}
}

318 
	$ux°_böd_li°íîs
(
¥Ÿocﬁ
 *
¥Ÿo
)

320 
li°íî
 *listener;

321 
îr
 = 
ERR_NONE
;

323 
	`li°_f‹_óch_íåy
(
li°íî
, &
¥Ÿo
->
li°íîs
, 
¥Ÿo_li°
) {

324 
îr
 |
	`ux°_böd_li°íî
(
li°íî
);

325 i‡(
îr
 !
ERR_NONE
)

328  
îr
;

329 
	}
}

336 
	$ux°_unböd_li°íîs
(
¥Ÿocﬁ
 *
¥Ÿo
)

338 
li°íî
 *listener;

340 
	`li°_f‹_óch_íåy
(
li°íî
, &
¥Ÿo
->
li°íîs
, 
¥Ÿo_li°
)

341 
	`ux°_unböd_li°íî
(
li°íî
);

342  
ERR_NONE
;

343 
	}
}

358 
	$ux°_evít_ac˚±
(
fd
) {

359 
li°íî
 *
l
 = 
fdèb
[
fd
].
ow√r
;

360 
£ssi⁄
 *
s
;

361 
èsk
 *
t
;

362 
cfd
;

363 
max_ac˚±
;

365 i‡(
globÆ
.
nb¥oc
 > 1)

366 
max_ac˚±
 = 8;

368 
max_ac˚±
 = -1;

370 
max_ac˚±
--) {

371 
sockaddr_°‹age
 
addr
;

372 
sockÀn_t
 
œddr
 = (
addr
);

374 i‡((
cfd
 = 
	`ac˚±
(
fd
, (
sockaddr
 *)&
addr
, &
œddr
)) == -1) {

375 
î∫o
) {

376 
EAGAIN
:

377 
EINTR
:

378 
ECONNABORTED
:

380 
ENFILE
:

383 
EMFILE
:

386 
ENOBUFS
:

387 
ENOMEM
:

395 i‡(
l
->
nbc⁄n
 >l->
maxc⁄n
 || 
a˘c⁄n
 >
globÆ
.maxconn) {

402 
out_˛o£
;

405 i‡((
s
 = 
	`poﬁ_Æloc2
(
poﬁ2_£ssi⁄
)Ë=
NULL
) {

406 
	`AÀπ
("out of memory in uxst_event_accept().\n");

407 
out_˛o£
;

410 
	`LIST_ADDQ
(&
£ssi⁄s
, &
s
->
li°
);

411 
	`LIST_INIT
(&
s
->
back_ªfs
);

413 
s
->
Êags
 = 0;

414 
s
->
ãrm_åa˚
 = 0;

416 i‡((
t
 = 
	`èsk_√w
()Ë=
NULL
) {

417 
	`AÀπ
("out of memory in uxst_event_accept().\n");

418 
out_‰ì_£ssi⁄
;

421 
s
->
˛i_addr
 = 
addr
;

424 i‡(
cfd
 >
globÆ
.
maxsock
) {

425 
	`AÀπ
("accept():ÇotÉnough free sockets. Raise -nárgument. Giving up.\n");

426 
out_‰ì_èsk
;

429 i‡(
	`f˙é
(
cfd
, 
F_SETFL
, 
O_NONBLOCK
) == -1) {

430 
	`AÀπ
("accept(): cannot setÅhe socket inÇon blocking mode. Giving up.\n");

431 
out_‰ì_èsk
;

434 
t
->
¥o˚ss
 = 
l
->
h™dÀr
;

435 
t
->
c⁄ãxt
 = 
s
;

436 
t
->
ni˚
 = 
l
->nice;

438 
s
->
èsk
 = 
t
;

439 
s
->
li°íî
 = 
l
;

440 
s
->
„
 = s->
be
 = 
l
->
¥iv©e
;

442 
s
->
ªq
 = s->
ªp
 = 
NULL
;

444 
s
->
si
[0].
°©e
 = s->si[0].
¥ev_°©e
 = 
SI_ST_EST
;

445 
s
->
si
[0].
îr_ty≥
 = 
SI_ET_NONE
;

446 
s
->
si
[0].
îr_loc
 = 
NULL
;

447 
s
->
si
[0].
ow√r
 = 
t
;

448 
s
->
si
[0].
upd©e
 = 
°ªam_sock_d©a_föish
;

449 
s
->
si
[0].
shuå
 = 
°ªam_sock_shuå
;

450 
s
->
si
[0].
shutw
 = 
°ªam_sock_shutw
;

451 
s
->
si
[0].
chk_rcv
 = 
°ªam_sock_chk_rcv
;

452 
s
->
si
[0].
chk_¢d
 = 
°ªam_sock_chk_¢d
;

453 
s
->
si
[0].
c⁄√˘
 = 
NULL
;

454 
s
->
si
[0].
ioh™dÀr
 = 
NULL
;

455 
s
->
si
[0].
fd
 = 
cfd
;

456 
s
->
si
[0].
Êags
 = 
SI_FL_NONE
;

457 i‡(
s
->
„
->
›ti⁄s2
 & 
PR_O2_INDEPSTR
)

458 
s
->
si
[0].
Êags
 |
SI_FL_INDEP_STR
;

459 
s
->
si
[0].
exp
 = 
TICK_ETERNITY
;

461 
s
->
si
[1].
°©e
 = s->si[1].
¥ev_°©e
 = 
SI_ST_INI
;

462 
s
->
si
[1].
îr_ty≥
 = 
SI_ET_NONE
;

463 
s
->
si
[1].
îr_loc
 = 
NULL
;

464 
s
->
si
[1].
ow√r
 = 
t
;

465 
s
->
si
[1].
exp
 = 
TICK_ETERNITY
;

466 
s
->
si
[1].
fd
 = -1;

467 
s
->
si
[1].
Êags
 = 
SI_FL_NONE
;

468 i‡(
s
->
be
->
›ti⁄s2
 & 
PR_O2_INDEPSTR
)

469 
s
->
si
[1].
Êags
 |
SI_FL_INDEP_STR
;

471 
	`°ªam_öt_ªgi°î_h™dÀr
(&
s
->
si
[1], 
°©s_io_h™dÀr
);

472 
s
->
si
[1].
¥iv©e
 = s;

473 
s
->
si
[1].
°1
 = 0;

474 
s
->
si
[1].
°0
 = 
STAT_CLI_INIT
;

476 
s
->
§v
 = s->
¥ev_§v
 = s->
§v_c⁄n
 = 
NULL
;

477 
s
->
≥nd_pos
 = 
NULL
;

479 
s
->
°‹e_cou¡
 = 0;

481 
	`mem£t
(&
s
->
logs
, 0, (s->logs));

482 
	`mem£t
(&
s
->
txn
, 0, (s->txn));

484 
s
->
logs
.
ac˚±_d©e
 = 
d©e
;

485 
s
->
logs
.
tv_ac˚±
 = 
now
;

487 
s
->
d©a_°©e
 = 
DATA_ST_INIT
;

488 
s
->
d©a_sour˚
 = 
DATA_SRC_NONE
;

489 
s
->
uniq_id
 = 
tŸÆc⁄n
;

491 i‡((
s
->
ªq
 = 
	`poﬁ_Æloc2
(
poﬁ2_buf„r
)Ë=
NULL
)

492 
out_‰ì_èsk
;

494 
s
->
ªq
->
size
 = 
globÆ
.
tu√
.
bufsize
;

495 
	`buf„r_öô
(
s
->
ªq
);

496 
s
->
ªq
->
¥od
 = &s->
si
[0];

497 
s
->
ªq
->
c⁄s
 = &s->
si
[1];

498 
s
->
si
[0].
ib
 = s->si[1].
ob
 = s->
ªq
;

499 
s
->
ªq
->
Êags
 |
BF_READ_ATTACHED
;

500 
s
->
ªq
->
Êags
 |
BF_READ_DONTWAIT
;

502 
s
->
ªq
->
™Æy£rs
 = 
l
->analysers;

504 
s
->
ªq
->
wto
 = 
TICK_ETERNITY
;

505 
s
->
ªq
->
˘o
 = 
TICK_ETERNITY
;

506 
s
->
ªq
->
πo
 = 
TICK_ETERNITY
;

508 i‡((
s
->
ªp
 = 
	`poﬁ_Æloc2
(
poﬁ2_buf„r
)Ë=
NULL
)

509 
out_‰ì_ªq
;

511 
s
->
ªp
->
size
 = 
globÆ
.
tu√
.
bufsize
;

512 
	`buf„r_öô
(
s
->
ªp
);

514 
s
->
ªp
->
¥od
 = &s->
si
[1];

515 
s
->
ªp
->
c⁄s
 = &s->
si
[0];

516 
s
->
si
[0].
ob
 = s->si[1].
ib
 = s->
ªp
;

517 
s
->
ªp
->
™Æy£rs
 = 0;

519 
s
->
ªp
->
πo
 = 
TICK_ETERNITY
;

520 
s
->
ªp
->
˘o
 = 
TICK_ETERNITY
;

521 
s
->
ªp
->
wto
 = 
TICK_ETERNITY
;

523 
s
->
ªq
->
ªx
 = 
TICK_ETERNITY
;

524 
s
->
ªq
->
wex
 = 
TICK_ETERNITY
;

525 
s
->
ªq
->
™Æy£_exp
 = 
TICK_ETERNITY
;

526 
s
->
ªp
->
ªx
 = 
TICK_ETERNITY
;

527 
s
->
ªp
->
wex
 = 
TICK_ETERNITY
;

528 
s
->
ªp
->
™Æy£_exp
 = 
TICK_ETERNITY
;

530 
t
->
expúe
 = 
TICK_ETERNITY
;

532 i‡(
l
->
timeout
) {

533 
s
->
ªq
->
πo
 = *
l
->
timeout
;

534 
s
->
ªp
->
wto
 = *
l
->
timeout
;

537 
	`fd_ö£π
(
cfd
);

538 
fdèb
[
cfd
].
ow√r
 = &
s
->
si
[0];

539 
fdèb
[
cfd
].
°©e
 = 
FD_STREADY
;

540 
fdèb
[
cfd
].
cb
[
DIR_RD
].
f
 = 
l
->
¥Ÿo
->
ªad
;

541 
fdèb
[
cfd
].
cb
[
DIR_RD
].
b
 = 
s
->
ªq
;

542 
fdèb
[
cfd
].
cb
[
DIR_WR
].
f
 = 
l
->
¥Ÿo
->
wrôe
;

543 
fdèb
[
cfd
].
cb
[
DIR_WR
].
b
 = 
s
->
ªp
;

544 
fdöfo
[
cfd
].
≥îaddr
 = (
sockaddr
 *)&
s
->
˛i_addr
;

545 
fdöfo
[
cfd
].
≥îÀn
 = (
s
->
˛i_addr
);

547 
	`EV_FD_SET
(
cfd
, 
DIR_RD
);

549 
	`èsk_wakeup
(
t
, 
TASK_WOKEN_INIT
);

551 
l
->
nbc⁄n
++;

552 i‡(
l
->
nbc⁄n
 >l->
maxc⁄n
) {

553 
	`EV_FD_CLR
(
l
->
fd
, 
DIR_RD
);

554 
l
->
°©e
 = 
LI_FULL
;

556 
a˘c⁄n
++;

557 
tŸÆc⁄n
++;

561 
out_‰ì_ªq
:

562 
	`poﬁ_‰ì2
(
poﬁ2_buf„r
, 
s
->
ªq
);

563 
out_‰ì_èsk
:

564 
	`èsk_‰ì
(
t
);

565 
out_‰ì_£ssi⁄
:

566 
	`LIST_DEL
(&
s
->
li°
);

567 
	`poﬁ_‰ì2
(
poﬁ2_£ssi⁄
, 
s
);

568 
out_˛o£
:

569 
	`˛o£
(
cfd
);

571 
	}
}

573 
__©åibuã__
((
c⁄°ru˘‹
))

574 
	$__ux°_¥Ÿocﬁ_öô
()

576 
	`¥Ÿocﬁ_ªgi°î
(&
¥Ÿo_unix
);

577 
	}
}

	@src/protocols.c

13 
	~<°dio.h
>

14 
	~<°rög.h
>

16 
	~<comm⁄/c⁄fig.h
>

17 
	~<comm⁄/îr‹s.h
>

18 
	~<comm⁄/möi-˛i°.h
>

19 
	~<comm⁄/°™d¨d.h
>

21 
	~<¥Ÿo/fd.h
>

24 
li°
 
	g¥Ÿocﬁs
 = 
LIST_HEAD_INIT
(
¥Ÿocﬁs
);

30 
	$íabÀ_li°íî
(
li°íî
 *listener)

32 i‡(
li°íî
->
°©e
 =
LI_LISTEN
) {

33 i‡(
li°íî
->
nbc⁄n
 <Üi°íî->
maxc⁄n
) {

34 
	`EV_FD_SET
(
li°íî
->
fd
, 
DIR_RD
);

35 
li°íî
->
°©e
 = 
LI_READY
;

37 
li°íî
->
°©e
 = 
LI_FULL
;

40 
	}
}

46 
	$dißbÀ_li°íî
(
li°íî
 *listener)

48 i‡(
li°íî
->
°©e
 < 
LI_READY
)

50 i‡(
li°íî
->
°©e
 =
LI_READY
)

51 
	`EV_FD_CLR
(
li°íî
->
fd
, 
DIR_RD
);

52 
li°íî
->
°©e
 = 
LI_LISTEN
;

53 
	}
}

61 
	$íabÀ_Æl_li°íîs
(
¥Ÿocﬁ
 *
¥Ÿo
)

63 
li°íî
 *listener;

65 
	`li°_f‹_óch_íåy
(
li°íî
, &
¥Ÿo
->
li°íîs
, 
¥Ÿo_li°
)

66 
	`íabÀ_li°íî
(
li°íî
);

67  
ERR_NONE
;

68 
	}
}

75 
	$dißbÀ_Æl_li°íîs
(
¥Ÿocﬁ
 *
¥Ÿo
)

77 
li°íî
 *listener;

79 
	`li°_f‹_óch_íåy
(
li°íî
, &
¥Ÿo
->
li°íîs
, 
¥Ÿo_li°
)

80 
	`dißbÀ_li°íî
(
li°íî
);

81  
ERR_NONE
;

82 
	}
}

89 
	$unböd_li°íî
(
li°íî
 *listener)

91 i‡(
li°íî
->
°©e
 =
LI_READY
)

92 
	`EV_FD_CLR
(
li°íî
->
fd
, 
DIR_RD
);

94 i‡(
li°íî
->
°©e
 >
LI_LISTEN
) {

95 
	`fd_dñëe
(
li°íî
->
fd
);

96 
li°íî
->
°©e
 = 
LI_ASSIGNED
;

98  
ERR_NONE
;

99 
	}
}

105 
	$unböd_Æl_li°íîs
(
¥Ÿocﬁ
 *
¥Ÿo
)

107 
li°íî
 *listener;

109 
	`li°_f‹_óch_íåy
(
li°íî
, &
¥Ÿo
->
li°íîs
, 
¥Ÿo_li°
)

110 
	`unböd_li°íî
(
li°íî
);

111  
ERR_NONE
;

112 
	}
}

119 
	$dñëe_li°íî
(
li°íî
 *listener)

121 i‡(
li°íî
->
°©e
 !
LI_ASSIGNED
)

123 
li°íî
->
°©e
 = 
LI_INIT
;

124 
	`LIST_DEL
(&
li°íî
->
¥Ÿo_li°
);

125 
li°íî
->
¥Ÿo
->
nb_li°íîs
--;

126 
	}
}

129 
	$¥Ÿocﬁ_ªgi°î
(
¥Ÿocﬁ
 *
¥Ÿo
)

131 
	`LIST_ADDQ
(&
¥Ÿocﬁs
, &
¥Ÿo
->
li°
);

132 
	}
}

137 
	$¥Ÿocﬁ_uƒegi°î
(
¥Ÿocﬁ
 *
¥Ÿo
)

139 
	`LIST_DEL
(&
¥Ÿo
->
li°
);

140 
	`LIST_INIT
(&
¥Ÿo
->
li°
);

141 
	}
}

146 
	$¥Ÿocﬁ_böd_Æl
()

148 
¥Ÿocﬁ
 *
¥Ÿo
;

149 
îr
;

151 
îr
 = 0;

152 
	`li°_f‹_óch_íåy
(
¥Ÿo
, &
¥Ÿocﬁs
, 
li°
) {

153 i‡(
¥Ÿo
->
böd_Æl
)

154 
îr
 |
¥Ÿo
->
	`böd_Æl
(proto);

156  
îr
;

157 
	}
}

164 
	$¥Ÿocﬁ_unböd_Æl
()

166 
¥Ÿocﬁ
 *
¥Ÿo
;

167 
îr
;

169 
îr
 = 0;

170 
	`li°_f‹_óch_íåy
(
¥Ÿo
, &
¥Ÿocﬁs
, 
li°
) {

171 i‡(
¥Ÿo
->
unböd_Æl
)

172 
îr
 |
¥Ÿo
->
	`unböd_Æl
(proto);

174  
îr
;

175 
	}
}

181 
	$¥Ÿocﬁ_íabÀ_Æl
()

183 
¥Ÿocﬁ
 *
¥Ÿo
;

184 
îr
;

186 
îr
 = 0;

187 
	`li°_f‹_óch_íåy
(
¥Ÿo
, &
¥Ÿocﬁs
, 
li°
) {

188 i‡(
¥Ÿo
->
íabÀ_Æl
)

189 
îr
 |
¥Ÿo
->
	`íabÀ_Æl
(proto);

191  
îr
;

192 
	}
}

198 
	$¥Ÿocﬁ_dißbÀ_Æl
()

200 
¥Ÿocﬁ
 *
¥Ÿo
;

201 
îr
;

203 
îr
 = 0;

204 
	`li°_f‹_óch_íåy
(
¥Ÿo
, &
¥Ÿocﬁs
, 
li°
) {

205 i‡(
¥Ÿo
->
dißbÀ_Æl
)

206 
îr
 |
¥Ÿo
->
	`dißbÀ_Æl
(proto);

208  
îr
;

209 
	}
}

	@src/proxy.c

13 
	~<f˙é.h
>

14 
	~<uni°d.h
>

15 
	~<°rög.h
>

16 
	~<sys/ty≥s.h
>

17 
	~<sys/sockë.h
>

18 
	~<sys/°©.h
>

20 
	~<comm⁄/deÁu…s.h
>

21 
	~<comm⁄/cfg∑r£.h
>

22 
	~<comm⁄/com∑t.h
>

23 
	~<comm⁄/c⁄fig.h
>

24 
	~<comm⁄/îr‹s.h
>

25 
	~<comm⁄/mem‹y.h
>

26 
	~<comm⁄/time.h
>

28 
	~<ty≥s/globÆ.h
>

30 
	~<¥Ÿo/˛õ¡.h
>

31 
	~<¥Ÿo/backíd.h
>

32 
	~<¥Ÿo/fd.h
>

33 
	~<¥Ÿo/hdr_idx.h
>

34 
	~<¥Ÿo/log.h
>

35 
	~<¥Ÿo/¥Ÿocﬁs.h
>

36 
	~<¥Ÿo/¥Ÿo_t˝.h
>

37 
	~<¥Ÿo/¥Ÿo_hâp.h
>

38 
	~<¥Ÿo/¥oxy.h
>

41 
	gli°íîs
;

42 
¥oxy
 *
	g¥oxy
 = 
NULL
;

43 
eb_roŸ
 
	gu£d_¥oxy_id
 = 
EB_ROOT
;

51 c⁄° *
	$¥oxy_ˇp_°r
(
ˇp
)

53 i‡((
ˇp
 & 
PR_CAP_LISTEN
) != PR_CAP_LISTEN) {

54 i‡(
ˇp
 & 
PR_CAP_FE
)

56 i‡(
ˇp
 & 
PR_CAP_BE
)

58 i‡(
ˇp
 & 
PR_CAP_RS
)

62 
	}
}

68 c⁄° *
	$¥oxy_mode_°r
(
mode
) {

70 i‡(
mode
 =
PR_MODE_TCP
)

72 i‡(
mode
 =
PR_MODE_HTTP
)

74 i‡(
mode
 =
PR_MODE_HEALTH
)

78 
	}
}

87 
	$gë_backíd_£rvî
(c⁄° *
bk_«me
, c⁄° *
sv_«me
,

88 
¥oxy
 **
bk
, 
£rvî
 **
sv
)

90 
¥oxy
 *
p
;

91 
£rvî
 *
s
;

92 
pid
, 
sid
;

94 *
sv
 = 
NULL
;

96 
pid
 = 0;

97 i‡(*
bk_«me
 == '#')

98 
pid
 = 
	`©oi
(
bk_«me
 + 1);

99 
sid
 = 0;

100 i‡(*
sv_«me
 == '#')

101 
sid
 = 
	`©oi
(
sv_«me
 + 1);

103 
p
 = 
¥oxy
;Ö;Ö =Ö->
√xt
)

104 i‡((
p
->
ˇp
 & 
PR_CAP_BE
) &&

105 ((
pid
 && 
p
->
uuid
 ==Öid) ||

106 (!
pid
 && 
	`°rcmp
(
p
->
id
, 
bk_«me
) == 0)))

108 i‡(
bk
)

109 *
bk
 = 
p
;

110 i‡(!
p
)

113 
s
 = 
p
->
§v
; s; s = s->
√xt
)

114 i‡((
sid
 && 
s
->
puid
 == sid) ||

115 (!
sid
 && 
	`°rcmp
(
s
->
id
, 
sv_«me
) == 0))

117 *
sv
 = 
s
;

118 i‡(!
s
)

121 
	}
}

132 
	$¥oxy_∑r£_timeout
(**
¨gs
, 
£˘i⁄
, 
¥oxy
 *proxy,

133 
¥oxy
 *
deÂx
, *
îr
, 
îæí
)

135 
timeout
;

136 
ªtvÆ
, 
ˇp
;

137 c⁄° *
ªs
, *
«me
;

138 *
tv
 = 
NULL
;

139 *
td
 = 
NULL
;

141 
ªtvÆ
 = 0;

144 i‡(
	`°rcmp
(
¨gs
[0], "timeout") == 0)

145 
¨gs
++;

147 
«me
 = 
¨gs
[0];

148 i‡(!
	`°rcmp
(
¨gs
[0], "client") || !strcmp(args[0], "clitimeout")) {

149 
«me
 = "client";

150 
tv
 = &
¥oxy
->
timeout
.
˛õ¡
;

151 
td
 = &
deÂx
->
timeout
.
˛õ¡
;

152 
ˇp
 = 
PR_CAP_FE
;

153 } i‡(!
	`°rcmp
(
¨gs
[0], "tarpit")) {

154 
tv
 = &
¥oxy
->
timeout
.
èΩô
;

155 
td
 = &
deÂx
->
timeout
.
èΩô
;

156 
ˇp
 = 
PR_CAP_FE
 | 
PR_CAP_BE
;

157 } i‡(!
	`°rcmp
(
¨gs
[0], "http-keep-alive")) {

158 
tv
 = &
¥oxy
->
timeout
.
hâpka
;

159 
td
 = &
deÂx
->
timeout
.
hâpka
;

160 
ˇp
 = 
PR_CAP_FE
 | 
PR_CAP_BE
;

161 } i‡(!
	`°rcmp
(
¨gs
[0], "http-request")) {

162 
tv
 = &
¥oxy
->
timeout
.
hâ¥eq
;

163 
td
 = &
deÂx
->
timeout
.
hâ¥eq
;

164 
ˇp
 = 
PR_CAP_FE
 | 
PR_CAP_BE
;

165 } i‡(!
	`°rcmp
(
¨gs
[0], "server") || !strcmp(args[0], "srvtimeout")) {

166 
«me
 = "server";

167 
tv
 = &
¥oxy
->
timeout
.
£rvî
;

168 
td
 = &
deÂx
->
timeout
.
£rvî
;

169 
ˇp
 = 
PR_CAP_BE
;

170 } i‡(!
	`°rcmp
(
¨gs
[0], "connect") || !strcmp(args[0], "contimeout")) {

171 
«me
 = "connect";

172 
tv
 = &
¥oxy
->
timeout
.
c⁄√˘
;

173 
td
 = &
deÂx
->
timeout
.
c⁄√˘
;

174 
ˇp
 = 
PR_CAP_BE
;

175 } i‡(!
	`°rcmp
(
¨gs
[0], "check")) {

176 
tv
 = &
¥oxy
->
timeout
.
check
;

177 
td
 = &
deÂx
->
timeout
.
check
;

178 
ˇp
 = 
PR_CAP_BE
;

179 } i‡(!
	`°rcmp
(
¨gs
[0], "queue")) {

180 
tv
 = &
¥oxy
->
timeout
.
queue
;

181 
td
 = &
deÂx
->
timeout
.
queue
;

182 
ˇp
 = 
PR_CAP_BE
;

184 
	`¢¥ötf
(
îr
, 
îæí
,

187 
¨gs
[0]);

191 i‡(*
¨gs
[1] == 0) {

192 
	`¢¥ötf
(
îr
, 
îæí
, "%†timeouàex≥˘†™ i¡egî vÆuê(ö mûli£c⁄ds)", 
«me
);

196 
ªs
 = 
	`∑r£_time_îr
(
¨gs
[1], &
timeout
, 
TIME_UNIT_MS
);

197 i‡(
ªs
) {

198 
	`¢¥ötf
(
îr
, 
îæí
, "u√x≥˘ed ch¨a˘î '%c' i¿%†timeout", *
ªs
, 
«me
);

202 i‡(!(
¥oxy
->
ˇp
 & cap)) {

203 
	`¢¥ötf
(
îr
, 
îæí
, "%sÅimeout will be ignored because %s '%s' hasÇo %s capability",

204 
«me
, 
	`¥oxy_ty≥_°r
(
¥oxy
),Öroxy->
id
,

205 (
ˇp
 & 
PR_CAP_BE
) ? "backend" : "frontend");

206 
ªtvÆ
 = 1;

208 i‡(
deÂx
 && *
tv
 !*
td
) {

209 
	`¢¥ötf
(
îr
, 
îæí
, "ovîwrôög %†timeouàwhich wa†Æªady s≥cifõd", 
«me
);

210 
ªtvÆ
 = 1;

213 *
tv
 = 
	`MS_TO_TICKS
(
timeout
);

214  
ªtvÆ
;

215 
	}
}

225 
	$¥oxy_∑r£_øã_limô
(**
¨gs
, 
£˘i⁄
, 
¥oxy
 *proxy,

226 
¥oxy
 *
deÂx
, *
îr
, 
îæí
)

228 
ªtvÆ
, 
ˇp
;

229 *
ªs
, *
«me
;

230 *
tv
 = 
NULL
;

231 *
td
 = 
NULL
;

232 
vÆ
;

234 
ªtvÆ
 = 0;

237 i‡(
	`°rcmp
(
¨gs
[0], "rate-limit") == 0)

238 
¨gs
++;

240 
«me
 = 
¨gs
[0];

241 i‡(!
	`°rcmp
(
¨gs
[0], "sessions")) {

242 
«me
 = "sessions";

243 
tv
 = &
¥oxy
->
„_•s_lim
;

244 
td
 = &
deÂx
->
„_•s_lim
;

245 
ˇp
 = 
PR_CAP_FE
;

247 
	`¢¥ötf
(
îr
, 
îæí
,

249 "øã-limô", 
¨gs
[0]);

253 i‡(*
¨gs
[1] == 0) {

254 
	`¢¥ötf
(
îr
, 
îæí
, "%†%†ex≥˘†ex≥˘†™ i¡egî vÆuê(ö sessi⁄s/£c⁄d)", "øã-limô", 
«me
);

258 
vÆ
 = 
	`°πoul
(
¨gs
[1], &
ªs
, 0);

259 i‡(*
ªs
) {

260 
	`¢¥ötf
(
îr
, 
îæí
, "%†%s: u√x≥˘ed ch¨a˘î '%c' i¿öãgî vÆuê'%s'", "øã-limô", 
«me
, *
ªs
, 
¨gs
[1]);

264 i‡(!(
¥oxy
->
ˇp
 & cap)) {

265 
	`¢¥ötf
(
îr
, 
îæí
, "%s %s will be ignored because %s '%s' hasÇo %s capability",

266 "øã-limô", 
«me
, 
	`¥oxy_ty≥_°r
(
¥oxy
),Öroxy->
id
,

267 (
ˇp
 & 
PR_CAP_BE
) ? "backend" : "frontend");

268 
ªtvÆ
 = 1;

270 i‡(
deÂx
 && *
tv
 !*
td
) {

271 
	`¢¥ötf
(
îr
, 
îæí
, "ovîwrôög %†%†which wa†Æªady s≥cifõd", "øã-limô", 
«me
);

272 
ªtvÆ
 = 1;

275 *
tv
 = 
vÆ
;

276  
ªtvÆ
;

277 
	}
}

285 
¥oxy
 *
	$föd¥oxy_mode
(c⁄° *
«me
, 
mode
, 
ˇp
) {

287 
¥oxy
 *
cuΩroxy
, *
èrgë
 = 
NULL
;

289 
cuΩroxy
 = 
¥oxy
; cuΩroxy; cuΩroxy = cuΩroxy->
√xt
) {

290 i‡((
cuΩroxy
->
ˇp
 & c≠)!=ˇ∞|| 
	`°rcmp
(cuΩroxy->
id
, 
«me
))

293 i‡(
cuΩroxy
->
mode
 != mode &&

294 !(
cuΩroxy
->
mode
 =
PR_MODE_HTTP
 && modê=
PR_MODE_TCP
)) {

295 
	`AÀπ
("UnableÅo useÖroxy '%s' with wrong mode,Ñequired: %s, has: %s.\n",

296 
«me
, 
	`¥oxy_mode_°r
(
mode
),Öroxy_mode_°r(
cuΩroxy
->mode));

297 
	`AÀπ
("You may w™àtÿu£ 'modê%s'.\n", 
	`¥oxy_mode_°r
(
mode
));

298  
NULL
;

301 i‡(!
èrgë
) {

302 
èrgë
 = 
cuΩroxy
;

306 
	`AÀπ
("RefusingÅo use duplicatedÖroxy '%s' with overlapping capabilities: %s/%s!\n",

307 
«me
, 
	`¥oxy_ty≥_°r
(
cuΩroxy
),Öroxy_ty≥_°r(
èrgë
));

309  
NULL
;

312  
èrgë
;

313 
	}
}

315 
¥oxy
 *
	$föd¥oxy
(c⁄° *
«me
, 
ˇp
) {

317 
¥oxy
 *
cuΩroxy
, *
èrgë
 = 
NULL
;

319 
cuΩroxy
 = 
¥oxy
; cuΩroxy; cuΩroxy = cuΩroxy->
√xt
) {

320 i‡((
cuΩroxy
->
ˇp
 & c≠)!=ˇ∞|| 
	`°rcmp
(cuΩroxy->
id
, 
«me
))

323 i‡(!
èrgë
) {

324 
èrgë
 = 
cuΩroxy
;

328  
NULL
;

331  
èrgë
;

332 
	}
}

340 
£rvî
 *
	$föd£rvî
(c⁄° 
¥oxy
 *
px
, c⁄° *
«me
) {

342 
£rvî
 *
cur§v
, *
èrgë
 = 
NULL
;

344 i‡(!
px
)

345  
NULL
;

347 
cur§v
 = 
px
->
§v
; cur§v; cur§v = cur§v->
√xt
) {

348 i‡(
	`°rcmp
(
cur§v
->
id
, 
«me
))

351 i‡(!
èrgë
) {

352 
èrgë
 = 
cur§v
;

356 
	`AÀπ
("RefusingÅo use duplicated server '%s' fould inÖroxy: %s!\n",

357 
«me
, 
px
->
id
);

359  
NULL
;

362  
èrgë
;

363 
	}
}

371 
	$¥oxy_cfg_ísuª_no_hâp
(
¥oxy
 *
cuΩroxy
)

373 i‡(
cuΩroxy
->
cookõ_«me
 !
NULL
) {

374 
	`W¨nög
("config : cookie will be ignored for %s '%s' (needs 'mode http').\n",

375 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
);

377 i‡(
cuΩroxy
->
r•_exp
 !
NULL
) {

378 
	`W¨nög
("config : serverÑegularÉxpressions will be ignored for %s '%s' (needs 'mode http').\n",

379 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
);

381 i‡(
cuΩroxy
->
ªq_exp
 !
NULL
) {

382 
	`W¨nög
("config : clientÑegularÉxpressions will be ignored for %s '%s' (needs 'mode http').\n",

383 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
);

385 i‡(
cuΩroxy
->
m⁄ô‹_uri
 !
NULL
) {

386 
	`W¨nög
("config : monitor-uri will be ignored for %s '%s' (needs 'mode http').\n",

387 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
);

389 i‡(
cuΩroxy
->
lb¥m
.
Ægo
 & 
BE_LB_NEED_HTTP
) {

390 
cuΩroxy
->
lb¥m
.
Ægo
 &~
BE_LB_ALGO
;

391 
cuΩroxy
->
lb¥m
.
Ægo
 |
BE_LB_ALGO_RR
;

392 
	`W¨nög
("config : Layer 7 hashÇotÖossible for %s '%s' (needs 'mode http'). Falling backÅoÑoundÑobin.\n",

393 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
);

395 i‡(
cuΩroxy
->
to_log
 & (
LW_REQ
 | 
LW_RESP
)) {

396 
cuΩroxy
->
to_log
 &~(
LW_REQ
 | 
LW_RESP
);

397 
	`W¨nög
("config : 'option httplog'Çot usable with %s '%s' (needs 'mode http'). Falling backÅo 'optionÅcplog'.\n",

398 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
);

401 
	}
}

413 
	$°¨t_¥oxõs
(
vîbo£
)

415 
¥oxy
 *
cuΩroxy
;

416 
li°íî
 *listener;

417 
Àº
, 
îr
 = 
ERR_NONE
;

418 
pxîr
;

419 
msg
[100];

421 
cuΩroxy
 = 
¥oxy
; cuΩroxy !
NULL
; cuΩroxy = cuΩroxy->
√xt
) {

422 i‡(
cuΩroxy
->
°©e
 !
PR_STNEW
)

425 
pxîr
 = 0;

426 
li°íî
 = 
cuΩroxy
->
li°í
;Üi°íî !
NULL
;Üi°íî =Üi°íî->
√xt
) {

427 i‡(
li°íî
->
°©e
 !
LI_ASSIGNED
)

430 
Àº
 = 
	`t˝_böd_li°íî
(
li°íî
, 
msg
, (msg));

433 i‡(
vîbo£
 || (
Àº
 & (
ERR_FATAL
 | 
ERR_ABORT
))) {

434 i‡(
Àº
 & 
ERR_ALERT
)

435 
	`AÀπ
("Starting %s %s: %s\n",

436 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
, 
msg
);

437 i‡(
Àº
 & 
ERR_WARN
)

438 
	`W¨nög
("Starting %s %s: %s\n",

439 
	`¥oxy_ty≥_°r
(
cuΩroxy
), cuΩroxy->
id
, 
msg
);

442 
îr
 |
Àº
;

443 i‡(
Àº
 & (
ERR_ABORT
 | 
ERR_FATAL
)) {

444 
pxîr
 |= 1;

447 i‡(
Àº
 & 
ERR_CODE
) {

448 
pxîr
 |= 1;

453 i‡(!
pxîr
) {

454 
cuΩroxy
->
°©e
 = 
PR_STIDLE
;

455 
	`£nd_log
(
cuΩroxy
, 
LOG_NOTICE
, "Proxy %†°¨ãd.\n", cuΩroxy->
id
);

458 i‡(
îr
 & 
ERR_ABORT
)

462  
îr
;

463 
	}
}

472 
	$maöèö_¥oxõs
(*
√xt
)

474 
¥oxy
 *
p
;

475 
li°íî
 *
l
;

476 
waô
;

478 
p
 = 
¥oxy
;

481 i‡(
a˘c⁄n
 < 
globÆ
.
maxc⁄n
) {

482 ; 
p
;Ö =Ö->
√xt
) {

484 i‡(
p
->
„c⁄n
 >p->
maxc⁄n
)

485 
do_block
;

487 i‡(
p
->
„_•s_lim
 &&

488 (
waô
 = 
	`√xt_evít_dñay
(&
p
->
„_£ss_≥r_£c
,Ö->
„_•s_lim
, 1))) {

495 *
√xt
 = 
	`tick_fú°
(*√xt, 
	`tick_add
(
now_ms
, 
waô
));

496 
do_block
;

500 i‡(
p
->
°©e
 =
PR_STIDLE
) {

501 
l
 = 
p
->
li°í
;Ü !
NULL
;Ü =Ü->
√xt
)

502 
	`íabÀ_li°íî
(
l
);

503 
p
->
°©e
 = 
PR_STRUN
;

507 
do_block
:

508 i‡(
p
->
°©e
 =
PR_STRUN
) {

509 
l
 = 
p
->
li°í
;Ü !
NULL
;Ü =Ü->
√xt
)

510 
	`dißbÀ_li°íî
(
l
);

511 
p
->
°©e
 = 
PR_STIDLE
;

516 
p
) {

517 i‡(
p
->
°©e
 =
PR_STRUN
) {

518 
l
 = 
p
->
li°í
;Ü !
NULL
;Ü =Ü->
√xt
)

519 
	`dißbÀ_li°íî
(
l
);

520 
p
->
°©e
 = 
PR_STIDLE
;

522 
p
 =Ö->
√xt
;

526 i‡(
°›pög
) {

527 
p
 = 
¥oxy
;

528 
p
) {

529 i‡(
p
->
°©e
 !
PR_STSTOPPED
) {

530 
t
;

531 
t
 = 
	`tick_ªmaö
(
now_ms
, 
p
->
°›_time
);

532 i‡(
t
 == 0) {

533 
	`W¨nög
("Proxy %s stopped (FE: %lld conns, BE: %lld conns).\n",

534 
p
->
id
,Ö->
cou¡îs
.
cum_„c⁄n
,Ö->cou¡îs.
cum_bec⁄n
);

535 
	`£nd_log
(
p
, 
LOG_WARNING
, "Proxy %s stopped (FE: %lld conns, BE: %lld conns).\n",

536 
p
->
id
,Ö->
cou¡îs
.
cum_„c⁄n
,Ö->cou¡îs.
cum_bec⁄n
);

537 
	`°›_¥oxy
(
p
);

539 
	`poﬁ_gc2
();

542 *
√xt
 = 
	`tick_fú°
(*√xt, 
p
->
°›_time
);

545 
p
 =Ö->
√xt
;

549 
	}
}

557 
	$so·_°›
()

559 
¥oxy
 *
p
;

561 
°›pög
 = 1;

562 
p
 = 
¥oxy
;

563 
	`tv_upd©e_d©e
(0,1);

564 
p
) {

565 i‡(
p
->
°©e
 !
PR_STSTOPPED
) {

566 
	`W¨nög
("St›pög %†%†ö %d ms.\n", 
	`¥oxy_ˇp_°r
(
p
->
ˇp
),Ö->
id
,Ö->
gø˚
);

567 
	`£nd_log
(
p
, 
LOG_WARNING
, "St›pög %†%†ö %d ms.\n", 
	`¥oxy_ˇp_°r
’->
ˇp
),Ö->
id
,Ö->
gø˚
);

568 
p
->
°›_time
 = 
	`tick_add
(
now_ms
,Ö->
gø˚
);

570 
p
 =Ö->
√xt
;

572 
	}
}

583 
	$∑u£_¥oxy
(
¥oxy
 *
p
)

585 
li°íî
 *
l
;

586 
l
 = 
p
->
li°í
;Ü !
NULL
;Ü =Ü->
√xt
) {

587 i‡(
	`shutdown
(
l
->
fd
, 
SHUT_WR
) == 0 &&

588 
	`li°í
(
l
->
fd
, 
p
->
backlog
 ?Ö->backlog :Ö->
maxc⁄n
) == 0 &&

589 
	`shutdown
(
l
->
fd
, 
SHUT_RD
) == 0) {

590 
	`EV_FD_CLR
(
l
->
fd
, 
DIR_RD
);

591 i‡(
p
->
°©e
 !
PR_STERROR
)

592 
p
->
°©e
 = 
PR_STPAUSED
;

595 
p
->
°©e
 = 
PR_STERROR
;

597 
	}
}

607 
	$°›_¥oxy
(
¥oxy
 *
p
)

609 
li°íî
 *
l
;

611 
l
 = 
p
->
li°í
;Ü !
NULL
;Ü =Ü->
√xt
) {

612 
	`unböd_li°íî
(
l
);

613 i‡(
l
->
°©e
 >
LI_ASSIGNED
) {

614 
	`dñëe_li°íî
(
l
);

615 
li°íîs
--;

618 
p
->
°©e
 = 
PR_STSTOPPED
;

619 
	}
}

627 
	$∑u£_¥oxõs
()

629 
îr
;

630 
¥oxy
 *
p
;

632 
îr
 = 0;

633 
p
 = 
¥oxy
;

634 
	`tv_upd©e_d©e
(0,1);

635 
p
) {

636 i‡(
p
->
ˇp
 & 
PR_CAP_FE
 &&

637 
p
->
°©e
 !
PR_STERROR
 &&

638 
p
->
°©e
 !
PR_STSTOPPED
 &&

639 
p
->
°©e
 !
PR_STPAUSED
) {

640 
	`W¨nög
("Pausög %†%s.\n", 
	`¥oxy_ˇp_°r
(
p
->
ˇp
),Ö->
id
);

641 
	`£nd_log
(
p
, 
LOG_WARNING
, "Pausög %†%s.\n", 
	`¥oxy_ˇp_°r
’->
ˇp
),Ö->
id
);

642 
	`∑u£_¥oxy
(
p
);

643 i‡(
p
->
°©e
 !
PR_STPAUSED
) {

644 
îr
 |= 1;

645 
	`W¨nög
("%†%†ÁûedÅÿíã∏∑u£ mode.\n", 
	`¥oxy_ˇp_°r
(
p
->
ˇp
),Ö->
id
);

646 
	`£nd_log
(
p
, 
LOG_WARNING
, "%†%†ÁûedÅÿíã∏∑u£ mode.\n", 
	`¥oxy_ˇp_°r
’->
ˇp
),Ö->
id
);

649 
p
 =Ö->
√xt
;

651 i‡(
îr
) {

652 
	`W¨nög
("SomeÖroxiesÑefusedÅoÖause,Öerforming soft stopÇow.\n");

653 
	`£nd_log
(
p
, 
LOG_WARNING
, "SomeÖroxiesÑefusedÅoÖause,Öerforming soft stopÇow.\n");

654 
	`so·_°›
();

656 
	}
}

664 
	$li°í_¥oxõs
()

666 
¥oxy
 *
p
;

667 
li°íî
 *
l
;

669 
p
 = 
¥oxy
;

670 
	`tv_upd©e_d©e
(0,1);

671 
p
) {

672 i‡(
p
->
°©e
 =
PR_STPAUSED
) {

673 
	`W¨nög
("E«blög %†%s.\n", 
	`¥oxy_ˇp_°r
(
p
->
ˇp
),Ö->
id
);

674 
	`£nd_log
(
p
, 
LOG_WARNING
, "E«blög %†%s.\n", 
	`¥oxy_ˇp_°r
’->
ˇp
),Ö->
id
);

676 
l
 = 
p
->
li°í
;Ü !
NULL
;Ü =Ü->
√xt
) {

677 i‡(
	`li°í
(
l
->
fd
, 
p
->
backlog
 ?Ö->backlog :Ö->
maxc⁄n
) == 0) {

678 i‡(
a˘c⁄n
 < 
globÆ
.
maxc⁄n
 && 
p
->
„c⁄n
 <Ö->maxconn) {

679 
	`EV_FD_SET
(
l
->
fd
, 
DIR_RD
);

680 
p
->
°©e
 = 
PR_STRUN
;

683 
p
->
°©e
 = 
PR_STIDLE
;

685 
p‹t
;

687 i‡(
l
->
addr
.
ss_Ámûy
 =
AF_INET6
)

688 
p‹t
 = 
	`¡ohs
(((
sockaddr_ö6
 *)(&
l
->
addr
))->
sö6_p‹t
);

690 
p‹t
 = 
	`¡ohs
(((
sockaddr_ö
 *)(&
l
->
addr
))->
sö_p‹t
);

692 
	`W¨nög
("Port %d busy whileÅryingÅoÉnable %s %s.\n",

693 
p‹t
, 
	`¥oxy_ˇp_°r
(
p
->
ˇp
),Ö->
id
);

694 
	`£nd_log
(
p
, 
LOG_WARNING
, "Port %d busy whileÅryingÅoÉnable %s %s.\n",

695 
p‹t
, 
	`¥oxy_ˇp_°r
(
p
->
ˇp
),Ö->
id
);

697 
	`∑u£_¥oxy
(
p
);

702 
p
 =Ö->
√xt
;

704 
	}
}

712 
	$£ssi⁄_£t_backíd
(
£ssi⁄
 *
s
, 
¥oxy
 *
be
)

714 i‡(
s
->
Êags
 & 
SN_BE_ASSIGNED
)

716 
s
->
be
 = be;

717 
be
->
bec⁄n
++;

718 i‡(
be
->
bec⁄n
 > be->
cou¡îs
.
bec⁄n_max
)

719 
be
->
cou¡îs
.
bec⁄n_max
 = be->
bec⁄n
;

720 
	`¥oxy_öc_be_˘r
(
be
);

723 
s
->
ªp
->
πo
 = s->
ªq
->
wto
 = 
be
->
timeout
.
£rvî
;

724 
s
->
ªq
->
˘o
 = 
be
->
timeout
.
c⁄√˘
;

725 
s
->
c⁄n_ªåõs
 = 
be
->conn_retries;

726 
s
->
si
[1].
Êags
 &~
SI_FL_INDEP_STR
;

727 i‡(
be
->
›ti⁄s2
 & 
PR_O2_INDEPSTR
)

728 
s
->
si
[1].
Êags
 |
SI_FL_INDEP_STR
;

730 i‡(
be
->
›ti⁄s2
 & 
PR_O2_RSPBUG_OK
)

731 
s
->
txn
.
r•
.
îr_pos
 = -1;

732 
s
->
Êags
 |
SN_BE_ASSIGNED
;

737 i‡(
	`u∆ikñy
(!
s
->
txn
.
hdr_idx
.
v
 && (
be
->
a˛_ªquúes
 & 
ACL_USE_L7_ANY
))) {

738 i‡((
s
->
txn
.
hdr_idx
.
v
 = 
	`poﬁ_Æloc2
(s->
„
->
hdr_idx_poﬁ
)Ë=
NULL
)

742 
	`hâp_öô_txn
(
s
);

744 
s
->
txn
.
hdr_idx
.
size
 = 
MAX_HTTP_HDR
;

745 
	`hdr_idx_öô
(&
s
->
txn
.
hdr_idx
);

753 
s
->
ªq
->
™Æy£rs
 |
be
->
be_ªq_™a
 & ~(s->
li°íî
->analysers);

756 
	}
}

758 
cfg_kw_li°
 
	gcfg_kws
 = {{ },{

759 { 
CFG_LISTEN
, "timeout", 
¥oxy_∑r£_timeout
 },

760 { 
CFG_LISTEN
, "˛ôimeout", 
¥oxy_∑r£_timeout
 },

761 { 
CFG_LISTEN
, "c⁄timeout", 
¥oxy_∑r£_timeout
 },

762 { 
CFG_LISTEN
, "§vtimeout", 
¥oxy_∑r£_timeout
 },

763 { 
CFG_LISTEN
, "øã-limô", 
¥oxy_∑r£_øã_limô
 },

764 { 0, 
NULL
, NULL },

767 
__©åibuã__
((
c⁄°ru˘‹
))

768 
	$__¥oxy_moduÀ_öô
()

770 
	`cfg_ªgi°î_keyw‹ds
(&
cfg_kws
);

771 
	}
}

	@src/queue.c

13 
	~<comm⁄/c⁄fig.h
>

14 
	~<comm⁄/mem‹y.h
>

15 
	~<comm⁄/time.h
>

17 
	~<¥Ÿo/queue.h
>

18 
	~<¥Ÿo/£rvî.h
>

19 
	~<¥Ÿo/èsk.h
>

22 
poﬁ_hód
 *
	gpoﬁ2_≥ndc⁄n
;

25 
	$öô_≥ndc⁄n
()

27 
poﬁ2_≥ndc⁄n
 = 
	`¸óã_poﬁ
("≥ndc⁄n", (
≥ndc⁄n
), 
MEM_F_SHARED
);

28  
poﬁ2_≥ndc⁄n
 !
NULL
;

29 
	}
}

38 
	$§v_dy«mic_maxc⁄n
(c⁄° 
£rvî
 *
s
)

40 
max
;

42 i‡(
s
->
¥oxy
->
bec⁄n
 >s->¥oxy->
fuŒc⁄n
)

44 
max
 = 
s
->
maxc⁄n
;

45 i‡(
s
->
möc⁄n
 =s->
maxc⁄n
)

47 
max
 = 
s
->
maxc⁄n
;

48 
max
 = 
	`MAX
(
s
->
möc⁄n
,

49 
s
->
¥oxy
->
bec⁄n
 * s->
maxc⁄n
 / s->¥oxy->
fuŒc⁄n
);

51 i‡((
s
->
°©e
 & 
SRV_WARMINGUP
) &&

52 
now
.
tv_£c
 < 
s
->
œ°_ch™ge
 + s->
¶ow°¨t
 &&

53 
now
.
tv_£c
 >
s
->
œ°_ch™ge
) {

54 
øtio
;

55 
øtio
 = 100 * (
now
.
tv_£c
 - 
s
->
œ°_ch™ge
Ë/ s->
¶ow°¨t
;

56 
max
 = 
	`MAX
(1, max * 
øtio
 / 100);

58  
max
;

59 
	}
}

66 
	$¥o˚ss_§v_queue
(
£rvî
 *
s
)

68 
¥oxy
 *
p
 = 
s
->proxy;

69 
maxc⁄n
;

75 
maxc⁄n
 = 
	`§v_dy«mic_maxc⁄n
(
s
);

76 
s
->
£rved
 < 
maxc⁄n
) {

77 
£ssi⁄
 *
£ss
 = 
	`≥ndc⁄n_gë_√xt_£ss
(
s
, 
p
);

78 i‡(
£ss
 =
NULL
)

80 
	`èsk_wakeup
(
£ss
->
èsk
, 
TASK_WOKEN_RES
);

82 
	}
}

97 
£ssi⁄
 *
	$≥ndc⁄n_gë_√xt_£ss
(
£rvî
 *
§v
, 
¥oxy
 *
px
)

99 
≥ndc⁄n
 *
ps
, *
µ
;

100 
£ssi⁄
 *
£ss
;

101 
£rvî
 *
r§v
;

103 
r§v
 = 
§v
->
åacked
;

104 i‡(!
r§v
)

105 
r§v
 = 
§v
;

107 
ps
 = 
	`≥ndc⁄n_‰om_§v
(
§v
);

108 
µ
 = 
	`≥ndc⁄n_‰om_px
(
px
);

110 i‡(!
µ
 || !(
r§v
->
°©e
 & 
SRV_RUNNING
Ë|| (r§v->°©ê& (
SRV_GOINGDOWN
|
SRV_MAINTAIN
))) {

111 i‡(!
ps
)

112  
NULL
;

115 i‡(!
ps
 || 
	`tv_i¶t
(&
µ
->
£ss
->
logs
.
tv_ªque°
, &ps->sess->logs.tv_request)) {

116 
ps
 = 
µ
;

117 
ps
->
£ss
->
§v
 = srv;

120 
£ss
 = 
ps
->sess;

121 
	`≥ndc⁄n_‰ì
(
ps
);

124 
£ss
->
Êags
 |
SN_ASSIGNED
;

125 
£ss
->
§v
 = srv;

126 
£ss
->
§v_c⁄n
 = 
§v
;

127 
§v
->
£rved
++;

128 i‡(
px
->
lb¥m
.
£rvî_èke_c⁄n
)

129 
px
->
lb¥m
.
	`£rvî_èke_c⁄n
(
§v
);

131  
£ss
;

132 
	}
}

140 
≥ndc⁄n
 *
	$≥ndc⁄n_add
(
£ssi⁄
 *
£ss
)

142 
≥ndc⁄n
 *
p
;

144 
p
 = 
	`poﬁ_Æloc2
(
poﬁ2_≥ndc⁄n
);

145 i‡(!
p
)

146  
NULL
;

148 
£ss
->
≥nd_pos
 = 
p
;

149 
p
->
£ss
 = sess;

150 
p
->
§v
 = 
£ss
->srv;

152 i‡(
£ss
->
Êags
 & 
SN_ASSIGNED
 && sess->
§v
) {

153 
	`LIST_ADDQ
(&
£ss
->
§v
->
≥ndc⁄ns
, &
p
->
li°
);

154 
£ss
->
§v
->
nb≥nd
++;

155 
£ss
->
logs
.
§v_queue_size
 +£ss->
§v
->
nb≥nd
;

156 i‡(
£ss
->
§v
->
nb≥nd
 > sess->§v->
cou¡îs
.
nb≥nd_max
)

157 
£ss
->
§v
->
cou¡îs
.
nb≥nd_max
 = sess->§v->
nb≥nd
;

159 
	`LIST_ADDQ
(&
£ss
->
be
->
≥ndc⁄ns
, &
p
->
li°
);

160 
£ss
->
be
->
nb≥nd
++;

161 
£ss
->
logs
.
¥x_queue_size
 +£ss->
be
->
nb≥nd
;

162 i‡(
£ss
->
be
->
nb≥nd
 > sess->be->
cou¡îs
.
nb≥nd_max
)

163 
£ss
->
be
->
cou¡îs
.
nb≥nd_max
 = sess->be->
nb≥nd
;

165 
£ss
->
be
->
tŸ≥nd
++;

166  
p
;

167 
	}
}

174 
	$≥ndc⁄n_‰ì
(
≥ndc⁄n
 *
p
)

176 
	`LIST_DEL
(&
p
->
li°
);

177 
p
->
£ss
->
≥nd_pos
 = 
NULL
;

178 i‡(
p
->
§v
)

179 
p
->
§v
->
nb≥nd
--;

181 
p
->
£ss
->
be
->
nb≥nd
--;

182 
p
->
£ss
->
be
->
tŸ≥nd
--;

183 
	`poﬁ_‰ì2
(
poﬁ2_≥ndc⁄n
, 
p
);

184 
	}
}

	@src/rbtree.c

28 
	~<°dlib.h
>

29 
	~<comm⁄/rbåì.h
>

31 
	$__rb_rŸ©e_À·
(
rb_node
 *
node
, 
rb_roŸ
 *
roŸ
)

33 
rb_node
 *
right
 = 
node
->
rb_right
;

35 i‡((
node
->
rb_right
 = 
right
->
rb_À·
))

36 
right
->
rb_À·
->
rb_∑ª¡
 = 
node
;

37 
right
->
rb_À·
 = 
node
;

39 i‡((
right
->
rb_∑ª¡
 = 
node
->rb_parent))

41 i‡(
node
 =node->
rb_∑ª¡
->
rb_À·
)

42 
node
->
rb_∑ª¡
->
rb_À·
 = 
right
;

44 
node
->
rb_∑ª¡
->
rb_right
 = 
right
;

47 
roŸ
->
rb_node
 = 
right
;

48 
node
->
rb_∑ª¡
 = 
right
;

49 
	}
}

51 
	$__rb_rŸ©e_right
(
rb_node
 *
node
, 
rb_roŸ
 *
roŸ
)

53 
rb_node
 *
À·
 = 
node
->
rb_À·
;

55 i‡((
node
->
rb_À·
 = 
À·
->
rb_right
))

56 
À·
->
rb_right
->
rb_∑ª¡
 = 
node
;

57 
À·
->
rb_right
 = 
node
;

59 i‡((
À·
->
rb_∑ª¡
 = 
node
->rb_parent))

61 i‡(
node
 =node->
rb_∑ª¡
->
rb_right
)

62 
node
->
rb_∑ª¡
->
rb_right
 = 
À·
;

64 
node
->
rb_∑ª¡
->
rb_À·
 = 
À·
;

67 
roŸ
->
rb_node
 = 
À·
;

68 
node
->
rb_∑ª¡
 = 
À·
;

69 
	}
}

71 
	$rb_ö£π_cﬁ‹
(
rb_node
 *
node
, 
rb_roŸ
 *
roŸ
)

73 
rb_node
 *
∑ª¡
, *
g∑ª¡
;

75 (
∑ª¡
 = 
node
->
rb_∑ª¡
Ë&&Ö¨ít->
rb_cﬁ‹
 =
RB_RED
)

77 
g∑ª¡
 = 
∑ª¡
->
rb_∑ª¡
;

79 i‡(
∑ª¡
 =
g∑ª¡
->
rb_À·
)

82 
rb_node
 *
un˛e
 = 
g∑ª¡
->
rb_right
;

83 i‡(
un˛e
 && un˛e->
rb_cﬁ‹
 =
RB_RED
)

85 
un˛e
->
rb_cﬁ‹
 = 
RB_BLACK
;

86 
∑ª¡
->
rb_cﬁ‹
 = 
RB_BLACK
;

87 
g∑ª¡
->
rb_cﬁ‹
 = 
RB_RED
;

88 
node
 = 
g∑ª¡
;

93 i‡(
∑ª¡
->
rb_right
 =
node
)

95 
rb_node
 *
tmp
;

96 
	`__rb_rŸ©e_À·
(
∑ª¡
, 
roŸ
);

97 
tmp
 = 
∑ª¡
;

98 
∑ª¡
 = 
node
;

99 
node
 = 
tmp
;

102 
∑ª¡
->
rb_cﬁ‹
 = 
RB_BLACK
;

103 
g∑ª¡
->
rb_cﬁ‹
 = 
RB_RED
;

104 
	`__rb_rŸ©e_right
(
g∑ª¡
, 
roŸ
);

107 
rb_node
 *
un˛e
 = 
g∑ª¡
->
rb_À·
;

108 i‡(
un˛e
 && un˛e->
rb_cﬁ‹
 =
RB_RED
)

110 
un˛e
->
rb_cﬁ‹
 = 
RB_BLACK
;

111 
∑ª¡
->
rb_cﬁ‹
 = 
RB_BLACK
;

112 
g∑ª¡
->
rb_cﬁ‹
 = 
RB_RED
;

113 
node
 = 
g∑ª¡
;

118 i‡(
∑ª¡
->
rb_À·
 =
node
)

120 
rb_node
 *
tmp
;

121 
	`__rb_rŸ©e_right
(
∑ª¡
, 
roŸ
);

122 
tmp
 = 
∑ª¡
;

123 
∑ª¡
 = 
node
;

124 
node
 = 
tmp
;

127 
∑ª¡
->
rb_cﬁ‹
 = 
RB_BLACK
;

128 
g∑ª¡
->
rb_cﬁ‹
 = 
RB_RED
;

129 
	`__rb_rŸ©e_À·
(
g∑ª¡
, 
roŸ
);

133 
roŸ
->
rb_node
->
rb_cﬁ‹
 = 
RB_BLACK
;

134 
	}
}

137 
	$__rb_îa£_cﬁ‹
(
rb_node
 *
node
, rb_nodê*
∑ª¡
,

138 
rb_roŸ
 *
roŸ
)

140 
rb_node
 *
Ÿhî
;

142 (!
node
 ||Çode->
rb_cﬁ‹
 =
RB_BLACK
Ë&&Çodê!
roŸ
->
rb_node
)

144 i‡(
∑ª¡
->
rb_À·
 =
node
)

146 
Ÿhî
 = 
∑ª¡
->
rb_right
;

147 i‡(
Ÿhî
->
rb_cﬁ‹
 =
RB_RED
)

149 
Ÿhî
->
rb_cﬁ‹
 = 
RB_BLACK
;

150 
∑ª¡
->
rb_cﬁ‹
 = 
RB_RED
;

151 
	`__rb_rŸ©e_À·
(
∑ª¡
, 
roŸ
);

152 
Ÿhî
 = 
∑ª¡
->
rb_right
;

154 i‡((!
Ÿhî
->
rb_À·
 ||

155 
Ÿhî
->
rb_À·
->
rb_cﬁ‹
 =
RB_BLACK
)

156 && (!
Ÿhî
->
rb_right
 ||

157 
Ÿhî
->
rb_right
->
rb_cﬁ‹
 =
RB_BLACK
))

159 
Ÿhî
->
rb_cﬁ‹
 = 
RB_RED
;

160 
node
 = 
∑ª¡
;

161 
∑ª¡
 = 
node
->
rb_∑ª¡
;

165 i‡(!
Ÿhî
->
rb_right
 ||

166 
Ÿhî
->
rb_right
->
rb_cﬁ‹
 =
RB_BLACK
)

168 
rb_node
 *
o_À·
;

169 i‡((
o_À·
 = 
Ÿhî
->
rb_À·
))

170 
o_À·
->
rb_cﬁ‹
 = 
RB_BLACK
;

171 
Ÿhî
->
rb_cﬁ‹
 = 
RB_RED
;

172 
	`__rb_rŸ©e_right
(
Ÿhî
, 
roŸ
);

173 
Ÿhî
 = 
∑ª¡
->
rb_right
;

175 
Ÿhî
->
rb_cﬁ‹
 = 
∑ª¡
->rb_color;

176 
∑ª¡
->
rb_cﬁ‹
 = 
RB_BLACK
;

177 i‡(
Ÿhî
->
rb_right
)

178 
Ÿhî
->
rb_right
->
rb_cﬁ‹
 = 
RB_BLACK
;

179 
	`__rb_rŸ©e_À·
(
∑ª¡
, 
roŸ
);

180 
node
 = 
roŸ
->
rb_node
;

186 
Ÿhî
 = 
∑ª¡
->
rb_À·
;

187 i‡(
Ÿhî
->
rb_cﬁ‹
 =
RB_RED
)

189 
Ÿhî
->
rb_cﬁ‹
 = 
RB_BLACK
;

190 
∑ª¡
->
rb_cﬁ‹
 = 
RB_RED
;

191 
	`__rb_rŸ©e_right
(
∑ª¡
, 
roŸ
);

192 
Ÿhî
 = 
∑ª¡
->
rb_À·
;

194 i‡((!
Ÿhî
->
rb_À·
 ||

195 
Ÿhî
->
rb_À·
->
rb_cﬁ‹
 =
RB_BLACK
)

196 && (!
Ÿhî
->
rb_right
 ||

197 
Ÿhî
->
rb_right
->
rb_cﬁ‹
 =
RB_BLACK
))

199 
Ÿhî
->
rb_cﬁ‹
 = 
RB_RED
;

200 
node
 = 
∑ª¡
;

201 
∑ª¡
 = 
node
->
rb_∑ª¡
;

205 i‡(!
Ÿhî
->
rb_À·
 ||

206 
Ÿhî
->
rb_À·
->
rb_cﬁ‹
 =
RB_BLACK
)

208 
rb_node
 *
o_right
;

209 i‡((
o_right
 = 
Ÿhî
->
rb_right
))

210 
o_right
->
rb_cﬁ‹
 = 
RB_BLACK
;

211 
Ÿhî
->
rb_cﬁ‹
 = 
RB_RED
;

212 
	`__rb_rŸ©e_À·
(
Ÿhî
, 
roŸ
);

213 
Ÿhî
 = 
∑ª¡
->
rb_À·
;

215 
Ÿhî
->
rb_cﬁ‹
 = 
∑ª¡
->rb_color;

216 
∑ª¡
->
rb_cﬁ‹
 = 
RB_BLACK
;

217 i‡(
Ÿhî
->
rb_À·
)

218 
Ÿhî
->
rb_À·
->
rb_cﬁ‹
 = 
RB_BLACK
;

219 
	`__rb_rŸ©e_right
(
∑ª¡
, 
roŸ
);

220 
node
 = 
roŸ
->
rb_node
;

225 i‡(
node
)

226 
node
->
rb_cﬁ‹
 = 
RB_BLACK
;

227 
	}
}

229 
	$rb_îa£
(
rb_node
 *
node
, 
rb_roŸ
 *
roŸ
)

231 
rb_node
 *
chûd
, *
∑ª¡
;

232 
cﬁ‹
;

234 i‡(!
node
->
rb_À·
)

235 
chûd
 = 
node
->
rb_right
;

236 i‡(!
node
->
rb_right
)

237 
chûd
 = 
node
->
rb_À·
;

240 
rb_node
 *
ﬁd
 = 
node
, *
À·
;

242 
node
 =Çode->
rb_right
;

243 (
À·
 = 
node
->
rb_À·
Ë!
NULL
)

244 
node
 = 
À·
;

245 
chûd
 = 
node
->
rb_right
;

246 
∑ª¡
 = 
node
->
rb_∑ª¡
;

247 
cﬁ‹
 = 
node
->
rb_cﬁ‹
;

249 i‡(
chûd
)

250 
chûd
->
rb_∑ª¡
 = 
∑ª¡
;

251 i‡(
∑ª¡
)

253 i‡(
∑ª¡
->
rb_À·
 =
node
)

254 
∑ª¡
->
rb_À·
 = 
chûd
;

256 
∑ª¡
->
rb_right
 = 
chûd
;

259 
roŸ
->
rb_node
 = 
chûd
;

261 i‡(
node
->
rb_∑ª¡
 =
ﬁd
)

262 
∑ª¡
 = 
node
;

263 
node
->
rb_∑ª¡
 = 
ﬁd
->rb_parent;

264 
node
->
rb_cﬁ‹
 = 
ﬁd
->rb_color;

265 
node
->
rb_right
 = 
ﬁd
->rb_right;

266 
node
->
rb_À·
 = 
ﬁd
->rb_left;

268 i‡(
ﬁd
->
rb_∑ª¡
)

270 i‡(
ﬁd
->
rb_∑ª¡
->
rb_À·
 == old)

271 
ﬁd
->
rb_∑ª¡
->
rb_À·
 = 
node
;

273 
ﬁd
->
rb_∑ª¡
->
rb_right
 = 
node
;

275 
roŸ
->
rb_node
 = 
node
;

277 
ﬁd
->
rb_À·
->
rb_∑ª¡
 = 
node
;

278 i‡(
ﬁd
->
rb_right
)

279 
ﬁd
->
rb_right
->
rb_∑ª¡
 = 
node
;

280 
cﬁ‹
;

283 
∑ª¡
 = 
node
->
rb_∑ª¡
;

284 
cﬁ‹
 = 
node
->
rb_cﬁ‹
;

286 i‡(
chûd
)

287 
chûd
->
rb_∑ª¡
 = 
∑ª¡
;

288 i‡(
∑ª¡
)

290 i‡(
∑ª¡
->
rb_À·
 =
node
)

291 
∑ª¡
->
rb_À·
 = 
chûd
;

293 
∑ª¡
->
rb_right
 = 
chûd
;

296 
roŸ
->
rb_node
 = 
chûd
;

298 
cﬁ‹
:

299 i‡(
cﬁ‹
 =
RB_BLACK
)

300 
	`__rb_îa£_cﬁ‹
(
chûd
, 
∑ª¡
, 
roŸ
);

301 
	}
}

307 
rb_node
 *
	$rb_fú°
(
rb_roŸ
 *
roŸ
)

309 
rb_node
 *
n
;

311 
n
 = 
roŸ
->
rb_node
;

312 i‡(!
n
)

313  
NULL
;

314 
n
->
rb_À·
)

315 
n
 =Ç->
rb_À·
;

316  
n
;

317 
	}
}

320 
rb_node
 *
	$rb_œ°
(
rb_roŸ
 *
roŸ
)

322 
rb_node
 *
n
;

324 
n
 = 
roŸ
->
rb_node
;

325 i‡(!
n
)

326  
NULL
;

327 
n
->
rb_right
)

328 
n
 =Ç->
rb_right
;

329  
n
;

330 
	}
}

333 
rb_node
 *
	$rb_√xt
(
rb_node
 *
node
)

337 i‡(
node
->
rb_right
) {

338 
node
 =Çode->
rb_right
;

339 
node
->
rb_À·
)

340 
node
Úode->
rb_À·
;

341  
node
;

350 
node
->
rb_∑ª¡
 &&Çodê=node->rb_∑ª¡->
rb_right
)

351 
node
 =Çode->
rb_∑ª¡
;

353  
node
->
rb_∑ª¡
;

354 
	}
}

357 
rb_node
 *
	$rb_¥ev
(
rb_node
 *
node
)

361 i‡(
node
->
rb_À·
) {

362 
node
 =Çode->
rb_À·
;

363 
node
->
rb_right
)

364 
node
Úode->
rb_right
;

365  
node
;

370 
node
->
rb_∑ª¡
 &&Çodê=node->rb_∑ª¡->
rb_À·
)

371 
node
 =Çode->
rb_∑ª¡
;

373  
node
->
rb_∑ª¡
;

374 
	}
}

377 
	$rb_ª∂a˚_node
(
rb_node
 *
vi˘im
, rb_nodê*
√w
,

378 
rb_roŸ
 *
roŸ
)

380 
rb_node
 *
∑ª¡
 = 
vi˘im
->
rb_∑ª¡
;

383 i‡(
∑ª¡
) {

384 i‡(
vi˘im
 =
∑ª¡
->
rb_À·
)

385 
∑ª¡
->
rb_À·
 = 
√w
;

387 
∑ª¡
->
rb_right
 = 
√w
;

389 
roŸ
->
rb_node
 = 
√w
;

391 i‡(
vi˘im
->
rb_À·
)

392 
vi˘im
->
rb_À·
->
rb_∑ª¡
 = 
√w
;

393 i‡(
vi˘im
->
rb_right
)

394 
vi˘im
->
rb_right
->
rb_∑ª¡
 = 
√w
;

397 *
√w
 = *
vi˘im
;

398 
	}
}

	@src/regex.c

13 
	~<˘y≥.h
>

14 
	~<°dlib.h
>

15 
	~<°rög.h
>

17 
	~<comm⁄/c⁄fig.h
>

18 
	~<comm⁄/ªgex.h
>

19 
	~<comm⁄/°™d¨d.h
>

20 
	~<¥Ÿo/log.h
>

23 
ªgm©ch_t
 
	gpm©ch
[
MAX_MATCH
];

26 
	$exp_ª∂a˚
(*
d°
, *
§c
, c⁄° *
°r
, c⁄° 
ªgm©ch_t
 *
m©ches
)

28 *
ﬁd_d°
 = 
d°
;

30 *
°r
) {

31 i‡(*
°r
 == '\\') {

32 
°r
++;

33 i‡(
	`isdigô
(()*
°r
)) {

34 
Àn
, 
num
;

36 
num
 = *
°r
 - '0';

37 
°r
++;

39 i‡(
m©ches
[
num
].
rm_eo
 > -1 && m©ches[num].
rm_so
 > -1) {

40 
Àn
 = 
m©ches
[
num
].
rm_eo
 - m©ches[num].
rm_so
;

41 
	`mem˝y
(
d°
, 
§c
 + 
m©ches
[
num
].
rm_so
, 
Àn
);

42 
d°
 +
Àn
;

45 } i‡(*
°r
 == 'x') {

46 
hex1
, 
hex2
;

47 
°r
++;

49 
hex1
 = 
	`touµî
(*
°r
++) - '0';

50 
hex2
 = 
	`touµî
(*
°r
++) - '0';

52 i‡(
hex1
 > 9) hex1 -= 'A' - '9' - 1;

53 i‡(
hex2
 > 9) hex2 -= 'A' - '9' - 1;

54 *
d°
++ = (
hex1
<<4Ë+ 
hex2
;

56 *
d°
++ = *
°r
++;

59 *
d°
++ = *
°r
++;

62 *
d°
 = '\0';

63  
d°
 - 
ﬁd_d°
;

64 
	}
}

67 c⁄° *
	$check_ª∂a˚_°rög
(c⁄° *
°r
)

69 c⁄° *
îr
 = 
NULL
;

70 *
°r
) {

71 i‡(*
°r
 == '\\') {

72 
îr
 = 
°r
;

73 
°r
++;

74 i‡(!*
°r
)

75  
îr
;

76 i‡(
	`isdigô
(()*
°r
))

77 
îr
 = 
NULL
;

78 i‡(*
°r
 == 'x') {

79 
°r
++;

80 i‡(!
	`ishex
(*
°r
))

81  
îr
;

82 
°r
++;

83 i‡(!
	`ishex
(*
°r
))

84  
îr
;

85 
îr
 = 
NULL
;

88 
	`W¨nög
("'\\%c' : dïªˇãd u£ o‡®back¶ash bef‹êsomëhögÇŸ '\\','x' o∏®digô.\n", *
°r
);

89 
îr
 = 
NULL
;

92 
°r
++;

94  
îr
;

95 
	}
}

99 c⁄° *
	$chaö_ªgex
(
hdr_exp
 **
hód
, c⁄° 
ªgex_t
 *
¥eg
,

100 
a˘i⁄
, c⁄° *
ª∂a˚
, *
c⁄d
)

102 
hdr_exp
 *
exp
;

104 i‡(
ª∂a˚
 !
NULL
) {

105 c⁄° *
îr
;

106 
îr
 = 
	`check_ª∂a˚_°rög
(
ª∂a˚
);

107 i‡(
îr
)

108  
îr
;

111 *
hód
 !
NULL
)

112 
hód
 = &(*hód)->
√xt
;

114 
exp
 = 
	`ˇŒoc
(1, (
hdr_exp
));

116 
exp
->
¥eg
 =Öreg;

117 
exp
->
ª∂a˚
 =Ñeplace;

118 
exp
->
a˘i⁄
 =áction;

119 
exp
->
c⁄d
 = cond;

120 *
hód
 = 
exp
;

122  
NULL
;

123 
	}
}

	@src/server.c

14 
	~<comm⁄/c⁄fig.h
>

15 
	~<comm⁄/time.h
>

17 
	~<¥Ÿo/£rvî.h
>

19 
	$§v_dow¡ime
(
£rvî
 *
s
) {

21 i‡((
s
->
°©e
 & 
SRV_RUNNING
Ë&& s->
œ°_ch™ge
 < 
now
.
tv_£c
)

22  
s
->
down_time
;

24  
now
.
tv_£c
 - 
s
->
œ°_ch™ge
 + s->
down_time
;

25 
	}
}

27 
	$§v_gëöãr
(
£rvî
 *
s
) {

29 i‡((
s
->
°©e
 & 
SRV_CHECKED
Ë&& (s->
hó…h
 =s->
ri£
 + s->
ÁŒ
 - 1))

30  
s
->
öãr
;

32 i‡(!(
s
->
°©e
 & 
SRV_RUNNING
Ë&& s->
hó…h
==0)

33  (
s
->
downöãr
)?(s->downöãr):(s->
öãr
);

35  (
s
->
Á°öãr
)?(s->Á°öãr):(s->
öãr
);

36 
	}
}

	@src/session.c

13 
	~<°dlib.h
>

15 
	~<comm⁄/c⁄fig.h
>

16 
	~<comm⁄/debug.h
>

17 
	~<comm⁄/mem‹y.h
>

19 
	~<ty≥s/ˇ±uª.h
>

20 
	~<ty≥s/globÆ.h
>

22 
	~<¥Ÿo/a˛.h
>

23 
	~<¥Ÿo/backíd.h
>

24 
	~<¥Ÿo/buf„rs.h
>

25 
	~<¥Ÿo/checks.h
>

26 
	~<¥Ÿo/dump°©s.h
>

27 
	~<¥Ÿo/hdr_idx.h
>

28 
	~<¥Ÿo/log.h
>

29 
	~<¥Ÿo/£ssi⁄.h
>

30 
	~<¥Ÿo/∑âîn.h
>

31 
	~<¥Ÿo/pùe.h
>

32 
	~<¥Ÿo/¥Ÿo_hâp.h
>

33 
	~<¥Ÿo/¥Ÿo_t˝.h
>

34 
	~<¥Ÿo/¥oxy.h
>

35 
	~<¥Ÿo/queue.h
>

36 
	~<¥Ÿo/£rvî.h
>

37 
	~<¥Ÿo/°ick_èbÀ.h
>

38 
	~<¥Ÿo/°ªam_öãrÁ˚.h
>

39 
	~<¥Ÿo/°ªam_sock.h
>

40 
	~<¥Ÿo/èsk.h
>

42 
poﬁ_hód
 *
	gpoﬁ2_£ssi⁄
;

43 
li°
 
	g£ssi⁄s
;

48 
	$£ssi⁄_‰ì
(
£ssi⁄
 *
s
)

50 
hâp_txn
 *
txn
 = &
s
->txn;

51 
¥oxy
 *
„
 = 
s
->fe;

52 
bªf
 *bªf, *
back
;

53 
i
;

55 i‡(
s
->
≥nd_pos
)

56 
	`≥ndc⁄n_‰ì
(
s
->
≥nd_pos
);

58 i‡(
s
->
§v
) {

59 i‡(
s
->
Êags
 & 
SN_CURR_SESS
) {

60 
s
->
Êags
 &~
SN_CURR_SESS
;

61 
s
->
§v
->
cur_£ss
--;

63 i‡(
	`may_dequeue_èsks
(
s
->
§v
, s->
be
))

64 
	`¥o˚ss_§v_queue
(
s
->
§v
);

67 i‡(
	`u∆ikñy
(
s
->
§v_c⁄n
)) {

72 
	`£ss_ch™ge_£rvî
(
s
, 
NULL
);

75 i‡(
s
->
ªq
->
pùe
)

76 
	`put_pùe
(
s
->
ªq
->
pùe
);

78 i‡(
s
->
ªp
->
pùe
)

79 
	`put_pùe
(
s
->
ªp
->
pùe
);

81 
	`poﬁ_‰ì2
(
poﬁ2_buf„r
, 
s
->
ªq
);

82 
	`poﬁ_‰ì2
(
poﬁ2_buf„r
, 
s
->
ªp
);

84 
	`hâp_íd_txn
(
s
);

86 
i
 = 0; i < 
s
->
°‹e_cou¡
; i++) {

87 i‡(!
s
->
°‹e
[
i
].
ts
)

89 
	`°k£ss_‰ì
(
s
->
°‹e
[
i
].
èbÀ
, s->°‹e[i].
ts
);

90 
s
->
°‹e
[
i
].
ts
 = 
NULL
;

93 i‡(
„
) {

94 
	`poﬁ_‰ì2
(
„
->
hdr_idx_poﬁ
, 
txn
->
hdr_idx
.
v
);

95 
	`poﬁ_‰ì2
(
„
->
r•_ˇp_poﬁ
, 
txn
->
r•
.
ˇp
);

96 
	`poﬁ_‰ì2
(
„
->
ªq_ˇp_poﬁ
, 
txn
->
ªq
.
ˇp
);

99 
	`li°_f‹_óch_íåy_ß„
(
bªf
, 
back
, &
s
->
back_ªfs
, 
u£rs
) {

103 
	`LIST_DEL
(&
bªf
->
u£rs
);

104 
	`LIST_INIT
(&
bªf
->
u£rs
);

105 i‡(
s
->
li°
.
n
 !&
£ssi⁄s
)

106 
	`LIST_ADDQ
(&
	`LIST_ELEM
(
s
->
li°
.
n
, 
£ssi⁄
 *,Üi°)->
back_ªfs
, &
bªf
->
u£rs
);

107 
bªf
->
ªf
 = 
s
->
li°
.
n
;

109 
	`LIST_DEL
(&
s
->
li°
);

110 
	`poﬁ_‰ì2
(
poﬁ2_£ssi⁄
, 
s
);

113 i‡(
„
 && 
	`u∆ikñy
(„->
°©e
 =
PR_STSTOPPED
)) {

114 
	`poﬁ_Êush2
(
poﬁ2_buf„r
);

115 
	`poﬁ_Êush2
(
„
->
hdr_idx_poﬁ
);

116 
	`poﬁ_Êush2
(
poﬁ2_ªquri
);

117 
	`poﬁ_Êush2
(
poﬁ2_ˇ±uª
);

118 
	`poﬁ_Êush2
(
poﬁ2_£ssi⁄
);

119 
	`poﬁ_Êush2
(
„
->
ªq_ˇp_poﬁ
);

120 
	`poﬁ_Êush2
(
„
->
r•_ˇp_poﬁ
);

122 
	}
}

126 
	$öô_£ssi⁄
()

128 
	`LIST_INIT
(&
£ssi⁄s
);

129 
poﬁ2_£ssi⁄
 = 
	`¸óã_poﬁ
("£ssi⁄", (
£ssi⁄
), 
MEM_F_SHARED
);

130  
poﬁ2_£ssi⁄
 !
NULL
;

131 
	}
}

133 
	$£ssi⁄_¥o˚ss_cou¡îs
(
£ssi⁄
 *
s
)

135 
byãs
;

137 i‡(
s
->
ªq
) {

138 
byãs
 = 
s
->
ªq
->
tŸÆ
 - s->
logs
.
byãs_ö
;

139 
s
->
logs
.
byãs_ö
 = s->
ªq
->
tŸÆ
;

140 i‡(
byãs
) {

141 
s
->
„
->
cou¡îs
.
byãs_ö
 +
byãs
;

143 i‡(
s
->
be
 !s->
„
)

144 
s
->
be
->
cou¡îs
.
byãs_ö
 +
byãs
;

146 i‡(
s
->
§v
)

147 
s
->
§v
->
cou¡îs
.
byãs_ö
 +
byãs
;

149 i‡(
s
->
li°íî
->
cou¡îs
)

150 
s
->
li°íî
->
cou¡îs
->
byãs_ö
 +
byãs
;

154 i‡(
s
->
ªp
) {

155 
byãs
 = 
s
->
ªp
->
tŸÆ
 - s->
logs
.
byãs_out
;

156 
s
->
logs
.
byãs_out
 = s->
ªp
->
tŸÆ
;

157 i‡(
byãs
) {

158 
s
->
„
->
cou¡îs
.
byãs_out
 +
byãs
;

160 i‡(
s
->
be
 !s->
„
)

161 
s
->
be
->
cou¡îs
.
byãs_out
 +
byãs
;

163 i‡(
s
->
§v
)

164 
s
->
§v
->
cou¡îs
.
byãs_out
 +
byãs
;

166 i‡(
s
->
li°íî
->
cou¡îs
)

167 
s
->
li°íî
->
cou¡îs
->
byãs_out
 +
byãs
;

170 
	}
}

179 
	$£ss_upd©e_°_c⁄_t˝
(
£ssi⁄
 *
s
, 
°ªam_öãrÁ˚
 *
si
)

181 
buf„r
 *
ªq
 = 
si
->
ob
;

182 
buf„r
 *
ªp
 = 
si
->
ib
;

188 i‡(
	`u∆ikñy
(
si
->
Êags
 & (
SI_FL_EXP
|
SI_FL_ERR
))) {

189 
si
->
exp
 = 
TICK_ETERNITY
;

190 
si
->
°©e
 = 
SI_ST_CER
;

191 
si
->
Êags
 &~
SI_FL_CAP_SPLICE
;

192 
	`fd_dñëe
(
si
->
fd
);

194 i‡(
si
->
îr_ty≥
)

197 
si
->
îr_loc
 = 
s
->
§v
;

198 i‡(
si
->
Êags
 & 
SI_FL_ERR
)

199 
si
->
îr_ty≥
 = 
SI_ET_CONN_ERR
;

201 
si
->
îr_ty≥
 = 
SI_ET_CONN_TO
;

206 i‡(
	`u∆ikñy
((
ªp
->
Êags
 & 
BF_SHUTW
) ||

207 ((
ªq
->
Êags
 & 
BF_SHUTW_NOW
) &&

208 (((
ªq
->
Êags
 & (
BF_OUT_EMPTY
|
BF_WRITE_ACTIVITY
)) == BF_OUT_EMPTY) ||

209 
s
->
be
->
›ti⁄s
 & 
PR_O_ABRT_CLOSE
)))) {

211 
si
->
	`shutw
(si);

212 
si
->
îr_ty≥
 |
SI_ET_CONN_ABRT
;

213 
si
->
îr_loc
 = 
s
->
§v
;

214 
si
->
Êags
 &~
SI_FL_CAP_SPLICE
;

215 i‡(
s
->
§v_îr‹
)

216 
s
->
	`§v_îr‹
(s, 
si
);

221 i‡(!(
ªq
->
Êags
 & 
BF_WRITE_ACTIVITY
))

227 
s
->
logs
.
t_c⁄√˘
 = 
	`tv_ms_ñ≠£d
(&s->logs.
tv_ac˚±
, &
now
);

228 
si
->
exp
 = 
TICK_ETERNITY
;

229 
si
->
°©e
 = 
SI_ST_EST
;

230 
si
->
îr_ty≥
 = 
SI_ET_NONE
;

231 
si
->
îr_loc
 = 
NULL
;

233 
	}
}

244 
	$£ss_upd©e_°_˚r
(
£ssi⁄
 *
s
, 
°ªam_öãrÁ˚
 *
si
)

247 i‡(
s
->
§v
) {

248 
	`hó…h_adju°
(
s
->
§v
, 
HANA_STATUS_L4_ERR
);

250 i‡(
s
->
Êags
 & 
SN_CURR_SESS
) {

251 
s
->
Êags
 &~
SN_CURR_SESS
;

252 
s
->
§v
->
cur_£ss
--;

257 
s
->
c⁄n_ªåõs
--;

258 i‡(
s
->
c⁄n_ªåõs
 < 0) {

259 i‡(!
si
->
îr_ty≥
) {

260 
si
->
îr_ty≥
 = 
SI_ET_CONN_ERR
;

261 
si
->
îr_loc
 = 
s
->
§v
;

264 i‡(
s
->
§v
)

265 
s
->
§v
->
cou¡îs
.
Áûed_c⁄ns
++;

266 
s
->
be
->
cou¡îs
.
Áûed_c⁄ns
++;

267 i‡(
	`may_dequeue_èsks
(
s
->
§v
, s->
be
))

268 
	`¥o˚ss_§v_queue
(
s
->
§v
);

271 
si
->
	`shutw
(si);

272 
si
->
ob
->
Êags
 |
BF_WRITE_ERROR
;

273 
si
->
ib
->
Êags
 |
BF_READ_ERROR
;

275 
si
->
°©e
 = 
SI_ST_CLO
;

276 i‡(
s
->
§v_îr‹
)

277 
s
->
	`§v_îr‹
(s, 
si
);

287 i‡(
s
->
§v
 && s->
c⁄n_ªåõs
 == 0 &&

288 
s
->
be
->
›ti⁄s
 & 
PR_O_REDISP
 && !(s->
Êags
 & 
SN_FORCE_PRST
)) {

289 i‡(
	`may_dequeue_èsks
(
s
->
§v
, s->
be
))

290 
	`¥o˚ss_§v_queue
(
s
->
§v
);

292 
s
->
Êags
 &~(
SN_DIRECT
 | 
SN_ASSIGNED
 | 
SN_ADDR_SET
);

293 
s
->
¥ev_§v
 = s->
§v
;

294 
si
->
°©e
 = 
SI_ST_REQ
;

296 i‡(
s
->
§v
)

297 
s
->
§v
->
cou¡îs
.
ªåõs
++;

298 
s
->
be
->
cou¡îs
.
ªåõs
++;

299 
si
->
°©e
 = 
SI_ST_ASS
;

302 i‡(
si
->
Êags
 & 
SI_FL_ERR
) {

309 i‡(!
si
->
îr_ty≥
)

310 
si
->
îr_ty≥
 = 
SI_ET_CONN_ERR
;

312 
si
->
°©e
 = 
SI_ST_TAR
;

313 
si
->
exp
 = 
	`tick_add
(
now_ms
, 
	`MS_TO_TICKS
(1000));

317 
	}
}

324 
	$£ss_e°ablish
(
£ssi⁄
 *
s
, 
°ªam_öãrÁ˚
 *
si
)

326 
buf„r
 *
ªq
 = 
si
->
ob
;

327 
buf„r
 *
ªp
 = 
si
->
ib
;

329 i‡(
s
->
§v
)

330 
	`hó…h_adju°
(
s
->
§v
, 
HANA_STATUS_L4_OK
);

332 i‡(
s
->
be
->
mode
 =
PR_MODE_TCP
) {

335 i‡(
s
->
„
->
to_log
 && !(s->
logs
.
logwaô
 & 
LW_BYTES
)) {

336 
s
->
logs
.
t_˛o£
 = s->logs.
t_c⁄√˘
;

337 
s
->
	`do_log
(s);

341 
s
->
txn
.
r•
.
msg_°©e
 = 
HTTP_MSG_RPBEFORE
;

348 
ªp
->
™Æy£rs
 |
s
->
„
->
„_r•_™a
 | s->
be
->
be_r•_™a
;

349 
ªp
->
Êags
 |
BF_READ_ATTACHED
;

350 
ªq
->
wex
 = 
TICK_ETERNITY
;

351 
	}
}

358 
	$£ss_upd©e_°ªam_öt
(
£ssi⁄
 *
s
, 
°ªam_öãrÁ˚
 *
si
)

360 
	`DPRINTF
(
°dîr
,"[%u] %s: sess=%pÑq=%p,Ñp=%p,Éxp(r,w)=%u,%uÑqf=%08xÑpf=%08xÑql=%dÑpl=%d cs=%d ss=%d\n",

361 
now_ms
, 
__FUNCTION__
,

362 
s
,

363 
s
->
ªq
, s->
ªp
,

364 
s
->
ªq
->
ªx
, s->
ªp
->
wex
,

365 
s
->
ªq
->
Êags
, s->
ªp
->flags,

366 
s
->
ªq
->
l
, s->
ªp
->l, s->ªp->
c⁄s
->
°©e
, s->req->cons->state);

368 i‡(
si
->
°©e
 =
SI_ST_ASS
) {

370 
c⁄n_îr
;

372 
c⁄n_îr
 = 
	`c⁄√˘_£rvî
(
s
);

373 i‡(
c⁄n_îr
 =
SN_ERR_NONE
) {

375 i‡(
s
->
§v
)

376 
	`§v_öc_£ss_˘r
(
s
->
§v
);

383 i‡(
c⁄n_îr
 =
SN_ERR_INTERNAL
) {

384 i‡(!
si
->
îr_ty≥
) {

385 
si
->
îr_ty≥
 = 
SI_ET_CONN_OTHER
;

386 
si
->
îr_loc
 = 
s
->
§v
;

389 i‡(
s
->
§v
)

390 
	`§v_öc_£ss_˘r
(
s
->
§v
);

391 i‡(
s
->
§v
)

392 
s
->
§v
->
cou¡îs
.
Áûed_c⁄ns
++;

393 
s
->
be
->
cou¡îs
.
Áûed_c⁄ns
++;

396 i‡(
	`may_dequeue_èsks
(
s
->
§v
, s->
be
))

397 
	`¥o˚ss_§v_queue
(
s
->
§v
);

400 
si
->
	`shuå
(si);

401 
si
->
	`shutw
(si);

402 
si
->
ob
->
Êags
 |
BF_WRITE_ERROR
;

404 
s
->
logs
.
t_queue
 = 
	`tv_ms_ñ≠£d
(&s->logs.
tv_ac˚±
, &
now
);

407 
si
->
°©e
 = 
SI_ST_CLO
;

408 i‡(
s
->
§v_îr‹
)

409 
s
->
	`§v_îr‹
(s, 
si
);

417 
si
->
°©e
 = 
SI_ST_CER
;

418 
si
->
Êags
 &~
SI_FL_ERR
;

419 
	`£ss_upd©e_°_˚r
(
s
, 
si
);

423 i‡(
si
->
°©e
 =
SI_ST_QUE
) {

425 i‡(!
s
->
≥nd_pos
) {

431 
si
->
exp
 = 
TICK_ETERNITY
;

432 i‡(
	`u∆ikñy
(!(
s
->
Êags
 & 
SN_ASSIGNED
)))

433 
si
->
°©e
 = 
SI_ST_REQ
;

435 
s
->
logs
.
t_queue
 = 
	`tv_ms_ñ≠£d
(&s->logs.
tv_ac˚±
, &
now
);

436 
si
->
°©e
 = 
SI_ST_ASS
;

442 i‡(
si
->
Êags
 & 
SI_FL_EXP
) {

444 
si
->
exp
 = 
TICK_ETERNITY
;

445 
s
->
logs
.
t_queue
 = 
	`tv_ms_ñ≠£d
(&s->logs.
tv_ac˚±
, &
now
);

446 i‡(
s
->
§v
)

447 
s
->
§v
->
cou¡îs
.
Áûed_c⁄ns
++;

448 
s
->
be
->
cou¡îs
.
Áûed_c⁄ns
++;

449 
si
->
	`shuå
(si);

450 
si
->
	`shutw
(si);

451 
si
->
ob
->
Êags
 |
BF_WRITE_TIMEOUT
;

452 i‡(!
si
->
îr_ty≥
)

453 
si
->
îr_ty≥
 = 
SI_ET_QUEUE_TO
;

454 
si
->
°©e
 = 
SI_ST_CLO
;

455 i‡(
s
->
§v_îr‹
)

456 
s
->
	`§v_îr‹
(s, 
si
);

461 i‡((
si
->
ob
->
Êags
 & (
BF_READ_ERROR
)) ||

462 ((
si
->
ob
->
Êags
 & 
BF_SHUTW_NOW
) &&

463 (
si
->
ob
->
Êags
 & 
BF_OUT_EMPTY
 || 
s
->
be
->
›ti⁄s
 & 
PR_O_ABRT_CLOSE
))) {

465 
si
->
exp
 = 
TICK_ETERNITY
;

466 
s
->
logs
.
t_queue
 = 
	`tv_ms_ñ≠£d
(&s->logs.
tv_ac˚±
, &
now
);

467 
si
->
	`shuå
(si);

468 
si
->
	`shutw
(si);

469 
si
->
îr_ty≥
 |
SI_ET_QUEUE_ABRT
;

470 
si
->
°©e
 = 
SI_ST_CLO
;

471 i‡(
s
->
§v_îr‹
)

472 
s
->
	`§v_îr‹
(s, 
si
);

479 i‡(
si
->
°©e
 =
SI_ST_TAR
) {

481 i‡((
si
->
ob
->
Êags
 & (
BF_READ_ERROR
)) ||

482 ((
si
->
ob
->
Êags
 & 
BF_SHUTW_NOW
) &&

483 (
si
->
ob
->
Êags
 & 
BF_OUT_EMPTY
 || 
s
->
be
->
›ti⁄s
 & 
PR_O_ABRT_CLOSE
))) {

485 
si
->
exp
 = 
TICK_ETERNITY
;

486 
si
->
	`shuå
(si);

487 
si
->
	`shutw
(si);

488 
si
->
îr_ty≥
 |
SI_ET_CONN_ABRT
;

489 
si
->
°©e
 = 
SI_ST_CLO
;

490 i‡(
s
->
§v_îr‹
)

491 
s
->
	`§v_îr‹
(s, 
si
);

495 i‡(!(
si
->
Êags
 & 
SI_FL_EXP
))

498 
si
->
exp
 = 
TICK_ETERNITY
;

504 i‡(
s
->
Êags
 & 
SN_ASSIGNED
)

505 
si
->
°©e
 = 
SI_ST_ASS
;

507 
si
->
°©e
 = 
SI_ST_REQ
;

510 
	}
}

517 
	$£ss_¥ï¨e_c⁄n_ªq
(
£ssi⁄
 *
s
, 
°ªam_öãrÁ˚
 *
si
) {

518 
	`DPRINTF
(
°dîr
,"[%u] %s: sess=%pÑq=%p,Ñp=%p,Éxp(r,w)=%u,%uÑqf=%08xÑpf=%08xÑql=%dÑpl=%d cs=%d ss=%d\n",

519 
now_ms
, 
__FUNCTION__
,

520 
s
,

521 
s
->
ªq
, s->
ªp
,

522 
s
->
ªq
->
ªx
, s->
ªp
->
wex
,

523 
s
->
ªq
->
Êags
, s->
ªp
->flags,

524 
s
->
ªq
->
l
, s->
ªp
->l, s->ªp->
c⁄s
->
°©e
, s->req->cons->state);

526 i‡(
si
->
°©e
 !
SI_ST_REQ
)

530 i‡(
	`§v_ªdi•©ch_c⁄√˘
(
s
) != 0) {

534 i‡(
si
->
°©e
 =
SI_ST_QUE
)

538 
si
->
	`shuå
(si);

539 
si
->
	`shutw
(si);

540 
si
->
ob
->
Êags
 |
BF_WRITE_ERROR
;

541 i‡(!
si
->
îr_ty≥
)

542 
si
->
îr_ty≥
 = 
SI_ET_CONN_OTHER
;

543 
si
->
°©e
 = 
SI_ST_CLO
;

544 i‡(
s
->
§v_îr‹
)

545 
s
->
	`§v_îr‹
(s, 
si
);

550 
s
->
logs
.
t_queue
 = 
	`tv_ms_ñ≠£d
(&s->logs.
tv_ac˚±
, &
now
);

551 
si
->
°©e
 = 
SI_ST_ASS
;

552 
	}
}

560 
	$¥o˚ss_swôchög_ruÀs
(
£ssi⁄
 *
s
, 
buf„r
 *
ªq
, 
™_bô
)

562 
≥rsi°_ruÀ
 *
¥°_ruÀ
;

564 
	`W¨nög
("övokê¥o˚ss_swôchög_ruÀs–†%p,Ñeq = %p,án_bô = %d)\n", 
s
, 
ªq
, 
™_bô
);

566 
ªq
->
™Æy£rs
 &~
™_bô
;

567 
ªq
->
™Æy£_exp
 = 
TICK_ETERNITY
;

569 
	`DPRINTF
(
°dîr
,"[%u] %s: session=%p b=%p,Éxp(r,w)=%u,%u bf=%08x bl=%dánalysers=%02x\n",

570 
now_ms
, 
__FUNCTION__
,

571 
s
,

572 
ªq
,

573 
ªq
->
ªx
,Ñeq->
wex
,

574 
ªq
->
Êags
,

575 
ªq
->
l
,

576 
ªq
->
™Æy£rs
);

579 i‡(!(
s
->
Êags
 & 
SN_BE_ASSIGNED
)) {

580 
swôchög_ruÀ
 *
ruÀ
;

582 
	`li°_f‹_óch_íåy
(
ruÀ
, &
s
->
„
->
swôchög_ruÀs
, 
li°
) {

583 
ªt
;

585 
ªt
 = 
	`a˛_exec_c⁄d
(
ruÀ
->
c⁄d
, 
s
->
„
, s, &s->
txn
, 
ACL_DIR_REQ
);

586 
ªt
 = 
	`a˛_∑ss
(ret);

587 i‡(
ruÀ
->
c⁄d
->
pﬁ
 =
ACL_COND_UNLESS
)

588 
ªt
 = !ret;

590 i‡(
ªt
) {

591 i‡(!
	`£ssi⁄_£t_backíd
(
s
, 
ruÀ
->
be
.
backíd
))

592 
sw_Áûed
;

602 i‡(!(
s
->
Êags
 & 
SN_BE_ASSIGNED
))

603 i‡(!
	`£ssi⁄_£t_backíd
(
s
, s->
„
->
defbe
.
be
 ? s->fe->defbe.be : s->be))

604 
sw_Áûed
;

608 i‡(
s
->
„
 =s->
be
)

609 
s
->
ªq
->
™Æy£rs
 &~
AN_REQ_HTTP_PROCESS_BE
;

614 
	`li°_f‹_óch_íåy
(
¥°_ruÀ
, &
s
->
be
->
≥rsi°_ruÀs
, 
li°
) {

615 
ªt
 = 1;

617 i‡(
¥°_ruÀ
->
c⁄d
) {

618 
ªt
 = 
	`a˛_exec_c⁄d
(
¥°_ruÀ
->
c⁄d
, 
s
->
be
, s, &s->
txn
, 
ACL_DIR_REQ
);

619 
ªt
 = 
	`a˛_∑ss
(ret);

620 i‡(
¥°_ruÀ
->
c⁄d
->
pﬁ
 =
ACL_COND_UNLESS
)

621 
ªt
 = !ret;

624 i‡(
ªt
) {

626 i‡(
¥°_ruÀ
->
ty≥
 =
PERSIST_TYPE_FORCE
) {

627 
s
->
Êags
 |
SN_FORCE_PRST
;

629 
s
->
Êags
 |
SN_IGNORE_PRST
;

637 
sw_Áûed
:

639 
	`buf„r_ab‹t
(
s
->
ªq
);

640 
	`buf„r_ab‹t
(
s
->
ªp
);

642 i‡(!(
s
->
Êags
 & 
SN_ERR_MASK
))

643 
s
->
Êags
 |
SN_ERR_RESOURCE
;

644 i‡(!(
s
->
Êags
 & 
SN_FINST_MASK
))

645 
s
->
Êags
 |
SN_FINST_R
;

647 
s
->
txn
.
°©us
 = 500;

648 
s
->
ªq
->
™Æy£rs
 = 0;

649 
s
->
ªq
->
™Æy£_exp
 = 
TICK_ETERNITY
;

651 
	}
}

657 
	$¥o˚ss_°ickög_ruÀs
(
£ssi⁄
 *
s
, 
buf„r
 *
ªq
, 
™_bô
)

659 
¥oxy
 *
px
 = 
s
->
be
;

660 
°ickög_ruÀ
 *
ruÀ
;

662 
	`DPRINTF
(
°dîr
,"[%u] %s: session=%p b=%p,Éxp(r,w)=%u,%u bf=%08x bl=%dánalysers=%02x\n",

663 
now_ms
, 
__FUNCTION__
,

664 
s
,

665 
ªq
,

666 
ªq
->
ªx
,Ñeq->
wex
,

667 
ªq
->
Êags
,

668 
ªq
->
l
,

669 
ªq
->
™Æy£rs
);

671 
	`li°_f‹_óch_íåy
(
ruÀ
, &
px
->
°ickög_ruÀs
, 
li°
) {

672 
ªt
 = 1 ;

673 
i
;

675 
i
 = 0; i < 
s
->
°‹e_cou¡
; i++) {

676 i‡(
ruÀ
->
èbÀ
.
t
 =
s
->
°‹e
[
i
].table)

680 i‡(
i
 !
s
->
°‹e_cou¡
)

683 i‡(
ruÀ
->
c⁄d
) {

684 
ªt
 = 
	`a˛_exec_c⁄d
(
ruÀ
->
c⁄d
, 
px
, 
s
, &s->
txn
, 
ACL_DIR_REQ
);

685 
ªt
 = 
	`a˛_∑ss
(ret);

686 i‡(
ruÀ
->
c⁄d
->
pﬁ
 =
ACL_COND_UNLESS
)

687 
ªt
 = !ret;

690 i‡(
ªt
) {

691 
°kèbÀ_key
 *
key
;

693 
key
 = 
	`∑âîn_¥o˚ss_key
(
px
, 
s
, &s->
txn
, 
PATTERN_FETCH_REQ
, 
ruÀ
->
ex¥
,ÑuÀ->
èbÀ
.
t
->
ty≥
);

694 i‡(!
key
)

697 i‡(
ruÀ
->
Êags
 & 
STK_IS_MATCH
) {

698 
°k£ss
 *
ts
;

700 i‡((
ts
 = 
	`°kèbÀ_lookup
(
ruÀ
->
èbÀ
.
t
, 
key
)Ë!
NULL
) {

701 i‡(!(
s
->
Êags
 & 
SN_ASSIGNED
)) {

702 
eb32_node
 *
node
;

705 
node
 = 
	`eb32_lookup
(&
px
->
c⁄f
.
u£d_£rvî_id
, 
ts
->
sid
);

706 i‡(
node
) {

707 
£rvî
 *
§v
;

709 
§v
 = 
	`c⁄èöî_of
(
node
, 
£rvî
, 
c⁄f
.
id
);

710 i‡((
§v
->
°©e
 & 
SRV_RUNNING
) ||

711 (
px
->
›ti⁄s
 & 
PR_O_PERSIST
) ||

712 (
s
->
Êags
 & 
SN_FORCE_PRST
)) {

713 
s
->
Êags
 |
SN_DIRECT
 | 
SN_ASSIGNED
;

714 
s
->
§v
 = srv;

718 
ts
->
expúe
 = 
	`tick_add
(
now_ms
, 
	`MS_TO_TICKS
(
ruÀ
->
èbÀ
.
t
->expire));

721 i‡(
ruÀ
->
Êags
 & 
STK_IS_STORE
) {

722 i‡(
s
->
°‹e_cou¡
 < ((s->
°‹e
) / (s->store[0]))) {

723 
°k£ss
 *
ts
;

725 
ts
 = 
	`°k£ss_√w
(
ruÀ
->
èbÀ
.
t
, 
key
);

726 i‡(
ts
) {

727 
s
->
°‹e
[s->
°‹e_cou¡
].
èbÀ
 = 
ruÀ
->èbÀ.
t
;

728 
s
->
°‹e
[s->
°‹e_cou¡
++].
ts
 =Ås;

735 
ªq
->
™Æy£rs
 &~
™_bô
;

736 
ªq
->
™Æy£_exp
 = 
TICK_ETERNITY
;

738 
	}
}

744 
	$¥o˚ss_°‹e_ruÀs
(
£ssi⁄
 *
s
, 
buf„r
 *
ªp
, 
™_bô
)

746 
¥oxy
 *
px
 = 
s
->
be
;

747 
°ickög_ruÀ
 *
ruÀ
;

748 
i
;

750 
	`DPRINTF
(
°dîr
,"[%u] %s: session=%p b=%p,Éxp(r,w)=%u,%u bf=%08x bl=%dánalysers=%02x\n",

751 
now_ms
, 
__FUNCTION__
,

752 
s
,

753 
ªp
,

754 
ªp
->
ªx
,Ñï->
wex
,

755 
ªp
->
Êags
,

756 
ªp
->
l
,

757 
ªp
->
™Æy£rs
);

759 
	`li°_f‹_óch_íåy
(
ruÀ
, &
px
->
°‹î•_ruÀs
, 
li°
) {

760 
ªt
 = 1 ;

761 
°‹îeqidx
 = -1;

763 
i
 = 0; i < 
s
->
°‹e_cou¡
; i++) {

764 i‡(
ruÀ
->
èbÀ
.
t
 =
s
->
°‹e
[
i
].table) {

765 i‡(!(
s
->
°‹e
[
i
].
Êags
))

766 
°‹îeqidx
 = 
i
;

771 i‡((
i
 !
s
->
°‹e_cou¡
Ë&& (
°‹îeqidx
 == -1))

774 i‡(
ruÀ
->
c⁄d
) {

775 
ªt
 = 
	`a˛_exec_c⁄d
(
ruÀ
->
c⁄d
, 
px
, 
s
, &s->
txn
, 
ACL_DIR_RTR
);

776 
ªt
 = 
	`a˛_∑ss
(ret);

777 i‡(
ruÀ
->
c⁄d
->
pﬁ
 =
ACL_COND_UNLESS
)

778 
ªt
 = !ret;

781 i‡(
ªt
) {

782 
°kèbÀ_key
 *
key
;

784 
key
 = 
	`∑âîn_¥o˚ss_key
(
px
, 
s
, &s->
txn
, 
PATTERN_FETCH_RTR
, 
ruÀ
->
ex¥
,ÑuÀ->
èbÀ
.
t
->
ty≥
);

785 i‡(!
key
)

788 i‡(
°‹îeqidx
 != -1) {

789 
	`°k£ss_key
(
s
->
°‹e
[
°‹îeqidx
].
èbÀ
, s->°‹e[°‹îeqidx].
ts
, 
key
);

790 
s
->
°‹e
[
°‹îeqidx
].
Êags
 = 1;

792 i‡(
s
->
°‹e_cou¡
 < ((s->
°‹e
) / (s->store[0]))) {

793 
°k£ss
 *
ts
;

795 
ts
 = 
	`°k£ss_√w
(
ruÀ
->
èbÀ
.
t
, 
key
);

796 i‡(
ts
) {

797 
s
->
°‹e
[s->
°‹e_cou¡
].
èbÀ
 = 
ruÀ
->èbÀ.
t
;

798 
s
->
°‹e
[s->
°‹e_cou¡
].
Êags
 = 1;

799 
s
->
°‹e
[s->
°‹e_cou¡
++].
ts
 =Ås;

806 
i
 = 0; i < 
s
->
°‹e_cou¡
; i++) {

807 i‡(
	`°kèbÀ_°‹e
(
s
->
°‹e
[
i
].
èbÀ
, s->°‹e[i].
ts
, s->
§v
->
puid
) > 0)

808 
	`°k£ss_‰ì
(
s
->
°‹e
[
i
].
èbÀ
, s->°‹e[i].
ts
);

810 
s
->
°‹e
[
i
].
ts
 = 
NULL
;

812 
s
->
°‹e_cou¡
 = 0;

814 
ªp
->
™Æy£rs
 &~
™_bô
;

815 
ªp
->
™Æy£_exp
 = 
TICK_ETERNITY
;

817 
	}
}

822 
	#UPDATE_ANALYSERS
(
ªÆ
, 
li°
, 
back
, 
Êag
) { \

823 
li°
 = ((÷i°Ë& ~(
Êag
)Ë| ~(
back
)Ë& (
ªÆ
); \

824 
back
 = 
ªÆ
; \

825 i‡(!(
li°
)) \

827 i‡(((
li°
Ë^ (÷i°Ë& (÷i°Ë- 1))Ë< (
Êag
)) \

829 }

	)

839 
èsk
 *
	$¥o˚ss_£ssi⁄
(
èsk
 *
t
)

841 
£ssi⁄
 *
s
 = 
t
->
c⁄ãxt
;

842 
rqf_œ°
, 
Ωf_œ°
;

843 
ªq_™a_back
;

845 
	`W¨nög
("övokê¥o˚ss_£ssi⁄–à%∞)\n", 
t
);

850 
	`mem£t
(&
s
->
txn
.
auth
, 0, (s->txn.auth));

853 
s
->
ªq
->
Êags
 &~
BF_READ_NOEXP
;

856 
rqf_œ°
 = 
s
->
ªq
->
Êags
;

857 
Ωf_œ°
 = 
s
->
ªp
->
Êags
;

860 i‡(
s
->
ªq
->
¥od
->
ow√r
 =
t
)

861 
s
->
ªq
->
¥od
->
Êags
 |
SI_FL_DONT_WAKE
;

862 i‡(
s
->
ªq
->
c⁄s
->
ow√r
 =
t
)

863 
s
->
ªq
->
c⁄s
->
Êags
 |
SI_FL_DONT_WAKE
;

868 i‡(
	`u∆ikñy
(
t
->
°©e
 & 
TASK_WOKEN_TIMER
)) {

869 
	`°ªam_öt_check_timeouts
(&
s
->
si
[0]);

870 
	`°ªam_öt_check_timeouts
(&
s
->
si
[1]);

878 
	`buf„r_check_timeouts
(
s
->
ªq
);

880 i‡(
	`u∆ikñy
((
s
->
ªq
->
Êags
 & (
BF_SHUTW
|
BF_WRITE_TIMEOUT
)) == BF_WRITE_TIMEOUT)) {

881 
s
->
ªq
->
c⁄s
->
Êags
 |
SI_FL_NOLINGER
;

882 
s
->
ªq
->
c⁄s
->
	`shutw
(s->req->cons);

885 i‡(
	`u∆ikñy
((
s
->
ªq
->
Êags
 & (
BF_SHUTR
|
BF_READ_TIMEOUT
)) == BF_READ_TIMEOUT))

886 
s
->
ªq
->
¥od
->
	`shuå
(s->req->prod);

888 
	`buf„r_check_timeouts
(
s
->
ªp
);

890 i‡(
	`u∆ikñy
((
s
->
ªp
->
Êags
 & (
BF_SHUTW
|
BF_WRITE_TIMEOUT
)) == BF_WRITE_TIMEOUT)) {

891 
s
->
ªp
->
c⁄s
->
Êags
 |
SI_FL_NOLINGER
;

892 
s
->
ªp
->
c⁄s
->
	`shutw
(s->rep->cons);

895 i‡(
	`u∆ikñy
((
s
->
ªp
->
Êags
 & (
BF_SHUTR
|
BF_READ_TIMEOUT
)) == BF_READ_TIMEOUT))

896 
s
->
ªp
->
¥od
->
	`shuå
(s->rep->prod);

906 i‡(
	`u∆ikñy
(
s
->
si
[0].
Êags
 & 
SI_FL_ERR
)) {

907 i‡(
s
->
si
[0].
°©e
 =
SI_ST_EST
 || s->si[0].°©ê=
SI_ST_DIS
) {

908 
s
->
si
[0].
	`shuå
(&s->si[0]);

909 
s
->
si
[0].
	`shutw
(&s->si[0]);

910 
	`°ªam_öt_ªp‹t_îr‹
(&
s
->
si
[0]);

911 i‡(!(
s
->
ªq
->
™Æy£rs
Ë&& !(s->
ªp
->analysers)) {

912 
s
->
be
->
cou¡îs
.
˛i_ab‹ts
++;

913 i‡(
s
->
§v
)

914 
s
->
§v
->
cou¡îs
.
˛i_ab‹ts
++;

915 i‡(!(
s
->
Êags
 & 
SN_ERR_MASK
))

916 
s
->
Êags
 |
SN_ERR_CLICL
;

917 i‡(!(
s
->
Êags
 & 
SN_FINST_MASK
))

918 
s
->
Êags
 |
SN_FINST_D
;

923 i‡(
	`u∆ikñy
(
s
->
si
[1].
Êags
 & 
SI_FL_ERR
)) {

924 i‡(
s
->
si
[1].
°©e
 =
SI_ST_EST
 || s->si[1].°©ê=
SI_ST_DIS
) {

925 
s
->
si
[1].
	`shuå
(&s->si[1]);

926 
s
->
si
[1].
	`shutw
(&s->si[1]);

927 
	`°ªam_öt_ªp‹t_îr‹
(&
s
->
si
[1]);

928 
s
->
be
->
cou¡îs
.
Áûed_ª•
++;

929 i‡(
s
->
§v
)

930 
s
->
§v
->
cou¡îs
.
Áûed_ª•
++;

931 i‡(!(
s
->
ªq
->
™Æy£rs
Ë&& !(s->
ªp
->analysers)) {

932 
s
->
be
->
cou¡îs
.
§v_ab‹ts
++;

933 i‡(
s
->
§v
)

934 
s
->
§v
->
cou¡îs
.
§v_ab‹ts
++;

935 i‡(!(
s
->
Êags
 & 
SN_ERR_MASK
))

936 
s
->
Êags
 |
SN_ERR_SRVCL
;

937 i‡(!(
s
->
Êags
 & 
SN_FINST_MASK
))

938 
s
->
Êags
 |
SN_FINST_D
;

944 i‡(
s
->
si
[1].
°©e
 =
SI_ST_CON
) {

948 i‡(
	`u∆ikñy
(!
	`£ss_upd©e_°_c⁄_t˝
(
s
, &s->
si
[1])))

949 
	`£ss_upd©e_°_˚r
(
s
, &s->
si
[1]);

950 i‡(
s
->
si
[1].
°©e
 =
SI_ST_EST
)

951 
	`£ss_e°ablish
(
s
, &s->
si
[1]);

959 
ªsync_°ªam_öãrÁ˚
:

962 
	`DPRINTF
(
°dîr
,

964 
now_ms
, 
__FUNCTION__
, 
__LINE__
,

965 
t
,

966 
s
, s->
Êags
,

967 
s
->
ªq
, s->
ªp
,

968 
s
->
ªq
->
ªx
, s->
ªp
->
wex
,

969 
s
->
ªq
->
Êags
, s->
ªp
->flags,

970 
s
->
ªq
->
l
, s->
ªp
->l, s->ªp->
c⁄s
->
°©e
, s->req->cons->state,

971 
s
->
ªp
->
c⁄s
->
îr_ty≥
, s->
ªq
->cons->err_type,

972 
s
->
c⁄n_ªåõs
);

975 i‡(
	`u∆ikñy
(
s
->
ªq
->
¥od
->
°©e
 =
SI_ST_DIS
))

976 
s
->
ªq
->
¥od
->
°©e
 = 
SI_ST_CLO
;

981 i‡(
	`u∆ikñy
(
s
->
ªq
->
c⁄s
->
°©e
 =
SI_ST_DIS
)) {

982 
s
->
ªq
->
c⁄s
->
°©e
 = 
SI_ST_CLO
;

983 i‡(
s
->
§v
) {

984 i‡(
s
->
Êags
 & 
SN_CURR_SESS
) {

985 
s
->
Êags
 &~
SN_CURR_SESS
;

986 
s
->
§v
->
cur_£ss
--;

988 
	`£ss_ch™ge_£rvî
(
s
, 
NULL
);

989 i‡(
	`may_dequeue_èsks
(
s
->
§v
, s->
be
))

990 
	`¥o˚ss_§v_queue
(
s
->
§v
);

999 
ªsync_ªque°
:

1001 i‡((
s
->
ªq
->
Êags
 & 
BF_MASK_ANALYSER
) ||

1002 (
s
->
ªq
->
Êags
 ^ 
rqf_œ°
Ë& 
BF_MASK_STATIC
) {

1003 
Êags
 = 
s
->
ªq
->flags;

1005 i‡(
s
->
ªq
->
¥od
->
°©e
 >
SI_ST_EST
) {

1006 
max_lo›s
 = 
globÆ
.
tu√
.
maxpﬁÀvíts
;

1007 
™a_li°
;

1008 
™a_back
;

1016 
	`buf„r_auto_ªad
(
s
->
ªq
);

1017 
	`buf„r_auto_c⁄√˘
(
s
->
ªq
);

1018 
	`buf„r_auto_˛o£
(
s
->
ªq
);

1054 
™a_li°
 = 
™a_back
 = 
s
->
ªq
->
™Æy£rs
;

1055 
™a_li°
 && 
max_lo›s
--) {

1058 i‡(
™a_li°
 & 
AN_REQ_INSPECT
) {

1059 i‡(!
	`t˝_ö•e˘_ªque°
(
s
, s->
ªq
, 
AN_REQ_INSPECT
))

1061 
	`UPDATE_ANALYSERS
(
s
->
ªq
->
™Æy£rs
, 
™a_li°
, 
™a_back
, 
AN_REQ_INSPECT
);

1064 i‡(
™a_li°
 & 
AN_REQ_WAIT_HTTP
) {

1065 i‡(!
	`hâp_waô_f‹_ªque°
(
s
, s->
ªq
, 
AN_REQ_WAIT_HTTP
))

1067 
	`UPDATE_ANALYSERS
(
s
->
ªq
->
™Æy£rs
, 
™a_li°
, 
™a_back
, 
AN_REQ_WAIT_HTTP
);

1070 i‡(
™a_li°
 & 
AN_REQ_HTTP_PROCESS_FE
) {

1071 i‡(!
	`hâp_¥o˚ss_ªq_comm⁄
(
s
, s->
ªq
, 
AN_REQ_HTTP_PROCESS_FE
, s->
„
))

1073 
	`UPDATE_ANALYSERS
(
s
->
ªq
->
™Æy£rs
, 
™a_li°
, 
™a_back
, 
AN_REQ_HTTP_PROCESS_FE
);

1076 i‡(
™a_li°
 & 
AN_REQ_SWITCHING_RULES
) {

1077 i‡(!
	`¥o˚ss_swôchög_ruÀs
(
s
, s->
ªq
, 
AN_REQ_SWITCHING_RULES
))

1079 
	`UPDATE_ANALYSERS
(
s
->
ªq
->
™Æy£rs
, 
™a_li°
, 
™a_back
, 
AN_REQ_SWITCHING_RULES
);

1082 i‡(
™a_li°
 & 
AN_REQ_HTTP_PROCESS_BE
) {

1083 i‡(!
	`hâp_¥o˚ss_ªq_comm⁄
(
s
, s->
ªq
, 
AN_REQ_HTTP_PROCESS_BE
, s->
be
))

1085 
	`UPDATE_ANALYSERS
(
s
->
ªq
->
™Æy£rs
, 
™a_li°
, 
™a_back
, 
AN_REQ_HTTP_PROCESS_BE
);

1088 i‡(
™a_li°
 & 
AN_REQ_HTTP_TARPIT
) {

1089 i‡(!
	`hâp_¥o˚ss_èΩô
(
s
, s->
ªq
, 
AN_REQ_HTTP_TARPIT
))

1091 
	`UPDATE_ANALYSERS
(
s
->
ªq
->
™Æy£rs
, 
™a_li°
, 
™a_back
, 
AN_REQ_HTTP_TARPIT
);

1094 i‡(
™a_li°
 & 
AN_REQ_HTTP_INNER
) {

1095 i‡(!
	`hâp_¥o˚ss_ªque°
(
s
, s->
ªq
, 
AN_REQ_HTTP_INNER
))

1097 
	`UPDATE_ANALYSERS
(
s
->
ªq
->
™Æy£rs
, 
™a_li°
, 
™a_back
, 
AN_REQ_HTTP_INNER
);

1100 i‡(
™a_li°
 & 
AN_REQ_HTTP_BODY
) {

1101 i‡(!
	`hâp_¥o˚ss_ªque°_body
(
s
, s->
ªq
, 
AN_REQ_HTTP_BODY
))

1103 
	`UPDATE_ANALYSERS
(
s
->
ªq
->
™Æy£rs
, 
™a_li°
, 
™a_back
, 
AN_REQ_HTTP_BODY
);

1106 i‡(
™a_li°
 & 
AN_REQ_PRST_RDP_COOKIE
) {

1107 i‡(!
	`t˝_≥rsi°_rdp_cookõ
(
s
, s->
ªq
, 
AN_REQ_PRST_RDP_COOKIE
))

1109 
	`UPDATE_ANALYSERS
(
s
->
ªq
->
™Æy£rs
, 
™a_li°
, 
™a_back
, 
AN_REQ_PRST_RDP_COOKIE
);

1112 i‡(
™a_li°
 & 
AN_REQ_STICKING_RULES
) {

1113 i‡(!
	`¥o˚ss_°ickög_ruÀs
(
s
, s->
ªq
, 
AN_REQ_STICKING_RULES
))

1115 
	`UPDATE_ANALYSERS
(
s
->
ªq
->
™Æy£rs
, 
™a_li°
, 
™a_back
, 
AN_REQ_STICKING_RULES
);

1118 i‡(
™a_li°
 & 
AN_REQ_HTTP_XFER_BODY
) {

1119 i‡(!
	`hâp_ªque°_f‹w¨d_body
(
s
, s->
ªq
, 
AN_REQ_HTTP_XFER_BODY
))

1121 
	`UPDATE_ANALYSERS
(
s
->
ªq
->
™Æy£rs
, 
™a_li°
, 
™a_back
, 
AN_REQ_HTTP_XFER_BODY
);

1127 i‡((
s
->
ªq
->
Êags
 ^ fœgsË& 
BF_MASK_STATIC
) {

1128 
rqf_œ°
 = 
s
->
ªq
->
Êags
;

1129 
ªsync_ªque°
;

1137 
ªq_™a_back
 = 
s
->
ªq
->
™Æy£rs
;

1139 
ªsync_ª•⁄£
:

1142 i‡(
	`u∆ikñy
(
s
->
ªp
->
Êags
 & 
BF_HIJACK
)) {

1146 
Êags
 = 
s
->
ªp
->flags;

1148 i‡((
s
->
ªp
->
Êags
 & (
BF_WRITE_PARTIAL
|
BF_WRITE_ERROR
|
BF_SHUTW
)) &&

1149 !(
s
->
ªp
->
Êags
 & 
BF_FULL
)) {

1150 
s
->
ªp
->
	`hijackî
(s, s->rep);

1153 i‡((
s
->
ªp
->
Êags
 ^ fœgsË& 
BF_MASK_STATIC
) {

1154 
Ωf_œ°
 = 
s
->
ªp
->
Êags
;

1155 
ªsync_ª•⁄£
;

1158 i‡((
s
->
ªp
->
Êags
 & 
BF_MASK_ANALYSER
) ||

1159 (
s
->
ªp
->
Êags
 ^ 
Ωf_œ°
Ë& 
BF_MASK_STATIC
) {

1160 
Êags
 = 
s
->
ªp
->flags;

1162 i‡(
s
->
ªp
->
¥od
->
°©e
 >
SI_ST_EST
) {

1163 
max_lo›s
 = 
globÆ
.
tu√
.
maxpﬁÀvíts
;

1164 
™a_li°
;

1165 
™a_back
;

1173 
	`buf„r_auto_ªad
(
s
->
ªp
);

1174 
	`buf„r_auto_˛o£
(
s
->
ªp
);

1187 
™a_li°
 = 
™a_back
 = 
s
->
ªp
->
™Æy£rs
;

1188 
™a_li°
 && 
max_lo›s
--) {

1191 i‡(
™a_li°
 & 
AN_RES_WAIT_HTTP
) {

1192 i‡(!
	`hâp_waô_f‹_ª•⁄£
(
s
, s->
ªp
, 
AN_RES_WAIT_HTTP
))

1194 
	`UPDATE_ANALYSERS
(
s
->
ªp
->
™Æy£rs
, 
™a_li°
, 
™a_back
, 
AN_RES_WAIT_HTTP
);

1197 i‡(
™a_li°
 & 
AN_RES_STORE_RULES
) {

1198 i‡(!
	`¥o˚ss_°‹e_ruÀs
(
s
, s->
ªp
, 
AN_RES_STORE_RULES
))

1200 
	`UPDATE_ANALYSERS
(
s
->
ªp
->
™Æy£rs
, 
™a_li°
, 
™a_back
, 
AN_RES_STORE_RULES
);

1203 i‡(
™a_li°
 & 
AN_RES_HTTP_PROCESS_BE
) {

1204 i‡(!
	`hâp_¥o˚ss_ªs_comm⁄
(
s
, s->
ªp
, 
AN_RES_HTTP_PROCESS_BE
, s->
be
))

1206 
	`UPDATE_ANALYSERS
(
s
->
ªp
->
™Æy£rs
, 
™a_li°
, 
™a_back
, 
AN_RES_HTTP_PROCESS_BE
);

1209 i‡(
™a_li°
 & 
AN_RES_HTTP_XFER_BODY
) {

1210 i‡(!
	`hâp_ª•⁄£_f‹w¨d_body
(
s
, s->
ªp
, 
AN_RES_HTTP_XFER_BODY
))

1212 
	`UPDATE_ANALYSERS
(
s
->
ªp
->
™Æy£rs
, 
™a_li°
, 
™a_back
, 
AN_RES_HTTP_XFER_BODY
);

1218 i‡((
s
->
ªp
->
Êags
 ^ fœgsË& 
BF_MASK_STATIC
) {

1219 
Ωf_œ°
 = 
s
->
ªp
->
Êags
;

1220 
ªsync_ª•⁄£
;

1225 i‡(
s
->
ªq
->
™Æy£rs
 & ~
ªq_™a_back
)

1226 
ªsync_ªque°
;

1238 i‡(!(
s
->
Êags
 & 
SN_ERR_MASK
)) {

1239 i‡(
s
->
ªq
->
Êags
 & (
BF_READ_ERROR
|
BF_READ_TIMEOUT
|
BF_WRITE_ERROR
|
BF_WRITE_TIMEOUT
)) {

1241 
s
->
ªq
->
™Æy£rs
 = 0;

1242 i‡(
s
->
ªq
->
Êags
 & 
BF_READ_ERROR
) {

1243 
s
->
be
->
cou¡îs
.
˛i_ab‹ts
++;

1244 i‡(
s
->
§v
)

1245 
s
->
§v
->
cou¡îs
.
˛i_ab‹ts
++;

1246 
s
->
Êags
 |
SN_ERR_CLICL
;

1248 i‡(
s
->
ªq
->
Êags
 & 
BF_READ_TIMEOUT
) {

1249 
s
->
be
->
cou¡îs
.
˛i_ab‹ts
++;

1250 i‡(
s
->
§v
)

1251 
s
->
§v
->
cou¡îs
.
˛i_ab‹ts
++;

1252 
s
->
Êags
 |
SN_ERR_CLITO
;

1254 i‡(
s
->
ªq
->
Êags
 & 
BF_WRITE_ERROR
) {

1255 
s
->
be
->
cou¡îs
.
§v_ab‹ts
++;

1256 i‡(
s
->
§v
)

1257 
s
->
§v
->
cou¡îs
.
§v_ab‹ts
++;

1258 
s
->
Êags
 |
SN_ERR_SRVCL
;

1261 
s
->
be
->
cou¡îs
.
§v_ab‹ts
++;

1262 i‡(
s
->
§v
)

1263 
s
->
§v
->
cou¡îs
.
§v_ab‹ts
++;

1264 
s
->
Êags
 |
SN_ERR_SRVTO
;

1266 
	`£ss_£t_ãrm_Êags
(
s
);

1268 i‡(
s
->
ªp
->
Êags
 & (
BF_READ_ERROR
|
BF_READ_TIMEOUT
|
BF_WRITE_ERROR
|
BF_WRITE_TIMEOUT
)) {

1270 
s
->
ªp
->
™Æy£rs
 = 0;

1271 i‡(
s
->
ªp
->
Êags
 & 
BF_READ_ERROR
) {

1272 
s
->
be
->
cou¡îs
.
§v_ab‹ts
++;

1273 i‡(
s
->
§v
)

1274 
s
->
§v
->
cou¡îs
.
§v_ab‹ts
++;

1275 
s
->
Êags
 |
SN_ERR_SRVCL
;

1277 i‡(
s
->
ªp
->
Êags
 & 
BF_READ_TIMEOUT
) {

1278 
s
->
be
->
cou¡îs
.
§v_ab‹ts
++;

1279 i‡(
s
->
§v
)

1280 
s
->
§v
->
cou¡îs
.
§v_ab‹ts
++;

1281 
s
->
Êags
 |
SN_ERR_SRVTO
;

1283 i‡(
s
->
ªp
->
Êags
 & 
BF_WRITE_ERROR
) {

1284 
s
->
be
->
cou¡îs
.
˛i_ab‹ts
++;

1285 i‡(
s
->
§v
)

1286 
s
->
§v
->
cou¡îs
.
˛i_ab‹ts
++;

1287 
s
->
Êags
 |
SN_ERR_CLICL
;

1290 
s
->
be
->
cou¡îs
.
˛i_ab‹ts
++;

1291 i‡(
s
->
§v
)

1292 
s
->
§v
->
cou¡îs
.
˛i_ab‹ts
++;

1293 
s
->
Êags
 |
SN_ERR_CLITO
;

1295 
	`£ss_£t_ãrm_Êags
(
s
);

1308 i‡(!
s
->
ªq
->
™Æy£rs
 &&

1309 !(
s
->
ªq
->
Êags
 & (
BF_HIJACK
|
BF_SHUTW
|
BF_SHUTW_NOW
)) &&

1310 (
s
->
ªq
->
¥od
->
°©e
 >
SI_ST_EST
) &&

1311 (
s
->
ªq
->
to_f‹w¨d
 !
BUF_INFINITE_FORWARD
)) {

1316 
	`buf„r_auto_ªad
(
s
->
ªq
);

1317 
	`buf„r_auto_c⁄√˘
(
s
->
ªq
);

1318 
	`buf„r_auto_˛o£
(
s
->
ªq
);

1319 
	`buf„r_Êush
(
s
->
ªq
);

1325 i‡(!(
s
->
ªq
->
Êags
 & (
BF_SHUTR
|
BF_SHUTW
|
BF_SHUTW_NOW
)))

1326 
	`buf„r_f‹w¨d
(
s
->
ªq
, 
BUF_INFINITE_FORWARD
);

1330 i‡(!(
s
->
ªq
->
Êags
 & (
BF_KERN_SPLICING
|
BF_SHUTR
)) &&

1331 
s
->
ªq
->
to_f‹w¨d
 &&

1332 (
globÆ
.
tu√
.
›ti⁄s
 & 
GTUNE_USE_SPLICE
) &&

1333 (
s
->
si
[0].
Êags
 & s->si[1].Êag†& 
SI_FL_CAP_SPLICE
) &&

1334 (
pùes_u£d
 < 
globÆ
.
maxpùes
) &&

1335 (((
s
->
„
->
›ti⁄s2
|s->
be
->›ti⁄s2Ë& 
PR_O2_SPLIC_REQ
) ||

1336 (((
s
->
„
->
›ti⁄s2
|s->
be
->›ti⁄s2Ë& 
PR_O2_SPLIC_AUT
) &&

1337 (
s
->
ªq
->
Êags
 & 
BF_STREAMER_FAST
)))) {

1338 
s
->
ªq
->
Êags
 |
BF_KERN_SPLICING
;

1342 
rqf_œ°
 = 
s
->
ªq
->
Êags
;

1352 i‡(
	`u∆ikñy
((
s
->
ªq
->
Êags
 & (
BF_SHUTW
|
BF_SHUTW_NOW
|
BF_HIJACK
|
BF_AUTO_CLOSE
|
BF_SHUTR
)) ==

1353 (
BF_AUTO_CLOSE
|
BF_SHUTR
)))

1354 
	`buf„r_shutw_now
(
s
->
ªq
);

1357 i‡(
	`u∆ikñy
((
s
->
ªq
->
Êags
 & (
BF_SHUTW
|
BF_SHUTW_NOW
|
BF_OUT_EMPTY
)) == (BF_SHUTW_NOW|BF_OUT_EMPTY)))

1358 
s
->
ªq
->
c⁄s
->
	`shutw
(s->req->cons);

1361 i‡(
	`u∆ikñy
((
s
->
ªq
->
Êags
 & (
BF_SHUTW
|
BF_SHUTR
|
BF_SHUTR_NOW
)) == BF_SHUTW &&

1362 !
s
->
ªq
->
™Æy£rs
))

1363 
	`buf„r_shuå_now
(
s
->
ªq
);

1366 i‡(
	`u∆ikñy
((
s
->
ªq
->
Êags
 & (
BF_SHUTR
|
BF_SHUTR_NOW
)) == BF_SHUTR_NOW))

1367 
s
->
ªq
->
¥od
->
	`shuå
(s->req->prod);

1374 i‡(
s
->
ªq
->
c⁄s
->
°©e
 =
SI_ST_INI
) {

1375 i‡(!(
s
->
ªq
->
Êags
 & 
BF_SHUTW
)) {

1376 i‡((
s
->
ªq
->
Êags
 & (
BF_AUTO_CONNECT
|
BF_OUT_EMPTY
)) != BF_OUT_EMPTY) {

1380 i‡(
s
->
ªq
->
c⁄s
->
c⁄√˘
)

1381 
s
->
ªq
->
c⁄s
->
°©e
 = 
SI_ST_REQ
;

1383 
s
->
ªq
->
c⁄s
->
°©e
 = 
SI_ST_EST
;

1387 
s
->
ªq
->
c⁄s
->
°©e
 = 
SI_ST_CLO
;

1388 
	`buf„r_shutw_now
(
s
->
ªq
);

1389 
	`buf„r_shuå_now
(
s
->
ªp
);

1397 i‡(
s
->
si
[1].
°©e
 >
SI_ST_REQ
 && s->si[1].°©ê< 
SI_ST_CON
) {

1402 i‡(
s
->
si
[1].
°©e
 !
SI_ST_REQ
)

1403 
	`£ss_upd©e_°ªam_öt
(
s
, &s->
si
[1]);

1404 i‡(
s
->
si
[1].
°©e
 =
SI_ST_REQ
)

1405 
	`£ss_¥ï¨e_c⁄n_ªq
(
s
, &s->
si
[1]);

1407 i‡(
s
->
si
[1].
°©e
 =
SI_ST_ASS
 && s->
§v
 &&

1408 
s
->
§v
->
rdr_Àn
 && (s->
Êags
 & 
SN_REDIRECTABLE
))

1409 
	`≥rf‹m_hâp_ªdúe˘
(
s
, &s->
si
[1]);

1410 } 
s
->
si
[1].
°©e
 =
SI_ST_ASS
);

1414 i‡(
s
->
ªq
->
¥od
->
°©e
 =
SI_ST_DIS
 || s->ªq->
c⁄s
->state == SI_ST_DIS)

1415 
ªsync_°ªam_öãrÁ˚
;

1418 i‡((
s
->
ªq
->
Êags
 ^ 
rqf_œ°
Ë& 
BF_MASK_STATIC
)

1419 
ªsync_ªque°
;

1426 i‡(!
s
->
ªp
->
™Æy£rs
 &&

1427 !(
s
->
ªp
->
Êags
 & (
BF_HIJACK
|
BF_SHUTW
|
BF_SHUTW_NOW
)) &&

1428 (
s
->
ªp
->
¥od
->
°©e
 >
SI_ST_EST
) &&

1429 (
s
->
ªp
->
to_f‹w¨d
 !
BUF_INFINITE_FORWARD
)) {

1434 
	`buf„r_auto_ªad
(
s
->
ªp
);

1435 
	`buf„r_auto_˛o£
(
s
->
ªp
);

1436 
	`buf„r_Êush
(
s
->
ªp
);

1437 i‡(!(
s
->
ªp
->
Êags
 & (
BF_SHUTR
|
BF_SHUTW
|
BF_SHUTW_NOW
)))

1438 
	`buf„r_f‹w¨d
(
s
->
ªp
, 
BUF_INFINITE_FORWARD
);

1442 i‡(!(
s
->
ªp
->
Êags
 & (
BF_KERN_SPLICING
|
BF_SHUTR
)) &&

1443 
s
->
ªp
->
to_f‹w¨d
 &&

1444 (
globÆ
.
tu√
.
›ti⁄s
 & 
GTUNE_USE_SPLICE
) &&

1445 (
s
->
si
[0].
Êags
 & s->si[1].Êag†& 
SI_FL_CAP_SPLICE
) &&

1446 (
pùes_u£d
 < 
globÆ
.
maxpùes
) &&

1447 (((
s
->
„
->
›ti⁄s2
|s->
be
->›ti⁄s2Ë& 
PR_O2_SPLIC_RTR
) ||

1448 (((
s
->
„
->
›ti⁄s2
|s->
be
->›ti⁄s2Ë& 
PR_O2_SPLIC_AUT
) &&

1449 (
s
->
ªp
->
Êags
 & 
BF_STREAMER_FAST
)))) {

1450 
s
->
ªp
->
Êags
 |
BF_KERN_SPLICING
;

1454 
Ωf_œ°
 = 
s
->
ªp
->
Êags
;

1465 i‡(
	`u∆ikñy
((
s
->
ªp
->
Êags
 & (
BF_SHUTW
|
BF_SHUTW_NOW
|
BF_HIJACK
|
BF_AUTO_CLOSE
|
BF_SHUTR
)) ==

1466 (
BF_AUTO_CLOSE
|
BF_SHUTR
)))

1467 
	`buf„r_shutw_now
(
s
->
ªp
);

1470 i‡(
	`u∆ikñy
((
s
->
ªp
->
Êags
 & (
BF_SHUTW
|
BF_OUT_EMPTY
|
BF_SHUTW_NOW
)) == (BF_OUT_EMPTY|BF_SHUTW_NOW)))

1471 
s
->
ªp
->
c⁄s
->
	`shutw
(s->rep->cons);

1474 i‡(
	`u∆ikñy
((
s
->
ªp
->
Êags
 & (
BF_SHUTW
|
BF_SHUTR
|
BF_SHUTR_NOW
)) == BF_SHUTW) &&

1475 !
s
->
ªp
->
™Æy£rs
)

1476 
	`buf„r_shuå_now
(
s
->
ªp
);

1479 i‡(
	`u∆ikñy
((
s
->
ªp
->
Êags
 & (
BF_SHUTR
|
BF_SHUTR_NOW
)) == BF_SHUTR_NOW))

1480 
s
->
ªp
->
¥od
->
	`shuå
(s->rep->prod);

1482 i‡(
s
->
ªq
->
¥od
->
°©e
 =
SI_ST_DIS
 || s->ªq->
c⁄s
->state == SI_ST_DIS)

1483 
ªsync_°ªam_öãrÁ˚
;

1485 i‡(
s
->
ªq
->
Êags
 !
rqf_œ°
)

1486 
ªsync_ªque°
;

1488 i‡((
s
->
ªp
->
Êags
 ^ 
Ωf_œ°
Ë& 
BF_MASK_STATIC
)

1489 
ªsync_ª•⁄£
;

1492 
s
->
ªq
->
¥od
->
Êags
 &~
SI_FL_DONT_WAKE
;

1493 
s
->
ªq
->
c⁄s
->
Êags
 &~
SI_FL_DONT_WAKE
;

1500 i‡(
	`u∆ikñy
((
globÆ
.
mode
 & 
MODE_DEBUG
) &&

1501 (!(
globÆ
.
mode
 & 
MODE_QUIET
) ||

1502 (
globÆ
.
mode
 & 
MODE_VERBOSE
)))) {

1503 
Àn
;

1505 i‡(
s
->
si
[1].
°©e
 =
SI_ST_CLO
 &&

1506 
s
->
si
[1].
¥ev_°©e
 =
SI_ST_EST
) {

1507 
Àn
 = 
	`•rötf
(
åash
, "%08x:%s.srvcls[%04x:%04x]\n",

1508 
s
->
uniq_id
, s->
be
->
id
,

1509 ()
s
->
si
[0].
fd
,

1510 ()
s
->
si
[1].
fd
);

1511 
	`wrôe
(1, 
åash
, 
Àn
);

1514 i‡(
s
->
si
[0].
°©e
 =
SI_ST_CLO
 &&

1515 
s
->
si
[0].
¥ev_°©e
 =
SI_ST_EST
) {

1516 
Àn
 = 
	`•rötf
(
åash
, "%08x:%s.clicls[%04x:%04x]\n",

1517 
s
->
uniq_id
, s->
be
->
id
,

1518 ()
s
->
si
[0].
fd
,

1519 ()
s
->
si
[1].
fd
);

1520 
	`wrôe
(1, 
åash
, 
Àn
);

1524 i‡(
	`likñy
((
s
->
ªp
->
c⁄s
->
°©e
 !
SI_ST_CLO
) ||

1525 (
s
->
ªq
->
c⁄s
->
°©e
 > 
SI_ST_INI
 && s->ªq->c⁄s->°©ê< 
SI_ST_CLO
))) {

1527 i‡((
s
->
„
->
›ti⁄s
 & 
PR_O_CONTSTATS
Ë&& (s->
Êags
 & 
SN_BE_ASSIGNED
))

1528 
	`£ssi⁄_¥o˚ss_cou¡îs
(
s
);

1530 i‡(
s
->
ªp
->
c⁄s
->
°©e
 =
SI_ST_EST
 && !s->ªp->c⁄s->
ioh™dÀr
)

1531 
s
->
ªp
->
c⁄s
->
	`upd©e
(s->rep->cons);

1533 i‡(
s
->
ªq
->
c⁄s
->
°©e
 =
SI_ST_EST
 && !s->ªq->c⁄s->
ioh™dÀr
)

1534 
s
->
ªq
->
c⁄s
->
	`upd©e
(s->req->cons);

1536 
s
->
ªq
->
Êags
 &~(
BF_READ_NULL
|
BF_READ_PARTIAL
|
BF_WRITE_NULL
|
BF_WRITE_PARTIAL
);

1537 
s
->
ªp
->
Êags
 &~(
BF_READ_NULL
|
BF_READ_PARTIAL
|
BF_WRITE_NULL
|
BF_WRITE_PARTIAL
);

1538 
s
->
si
[0].
¥ev_°©e
 = s->si[0].
°©e
;

1539 
s
->
si
[1].
¥ev_°©e
 = s->si[1].
°©e
;

1540 
s
->
si
[0].
Êags
 &~(
SI_FL_ERR
|
SI_FL_EXP
);

1541 
s
->
si
[1].
Êags
 &~(
SI_FL_ERR
|
SI_FL_EXP
);

1551 i‡((
s
->
ªp
->
Êags
 & (
BF_AUTO_CLOSE
|
BF_SHUTR
)) == 0 &&

1552 (
	`tick_is£t
(
s
->
ªq
->
wex
Ë||Åick_is£t(s->
ªp
->
ªx
))) {

1553 
s
->
ªq
->
Êags
 |
BF_READ_NOEXP
;

1554 
s
->
ªq
->
ªx
 = 
TICK_ETERNITY
;

1560 i‡(
s
->
ªq
->
c⁄s
->
ioh™dÀr
) {

1561 
s
->
ªq
->
c⁄s
->
	`ioh™dÀr
(s->req->cons);

1562 i‡(
	`èsk_ö_rq
(
t
)) {

1567 
t
->
expúe
 = 
TICK_ETERNITY
;

1568  
t
;

1572 
t
->
expúe
 = 
	`tick_fú°
—ick_fú°(
s
->
ªq
->
ªx
, s->ªq->
wex
),

1573 
	`tick_fú°
(
s
->
ªp
->
ªx
, s->ªp->
wex
));

1574 i‡(
s
->
ªq
->
™Æy£rs
)

1575 
t
->
expúe
 = 
	`tick_fú°
—->expúe, 
s
->
ªq
->
™Æy£_exp
);

1577 i‡(
s
->
si
[0].
exp
)

1578 
t
->
expúe
 = 
	`tick_fú°
—->expúe, 
s
->
si
[0].
exp
);

1580 i‡(
s
->
si
[1].
exp
)

1581 
t
->
expúe
 = 
	`tick_fú°
—->expúe, 
s
->
si
[1].
exp
);

1583 #ifde‡
DEBUG_FULL


1584 
	`Ârötf
(
°dîr
,

1587 
now_ms
, 
t
->
expúe
, 
s
->
ªq
->
ªx
, s->ªq->
wex
, s->ªq->
™Æy£_exp
,

1588 
s
->
ªp
->
ªx
, s->ªp->
wex
, s->
si
[0].
exp
, s->si[1].exp, s->si[0].
°©e
, s->si[1].state);

1591 #ifde‡
DEBUG_DEV


1593 i‡(!
	`tick_is£t
(
t
->
expúe
))

1594 
	`ABORT_NOW
();

1596  
t
;

1599 
s
->
„
->
„c⁄n
--;

1600 i‡(
s
->
Êags
 & 
SN_BE_ASSIGNED
)

1601 
s
->
be
->
bec⁄n
--;

1602 
a˘c⁄n
--;

1603 
s
->
li°íî
->
nbc⁄n
--;

1604 i‡(
s
->
li°íî
->
°©e
 =
LI_FULL
 &&

1605 
s
->
li°íî
->
nbc⁄n
 < s->li°íî->
maxc⁄n
) {

1607 
	`EV_FD_SET
(
s
->
li°íî
->
fd
, 
DIR_RD
);

1608 
s
->
li°íî
->
°©e
 = 
LI_READY
;

1611 i‡(
	`u∆ikñy
((
globÆ
.
mode
 & 
MODE_DEBUG
) &&

1612 (!(
globÆ
.
mode
 & 
MODE_QUIET
Ë|| (globÆ.modê& 
MODE_VERBOSE
)))) {

1613 
Àn
;

1614 
Àn
 = 
	`•rötf
(
åash
, "%08x:%s.closed[%04x:%04x]\n",

1615 
s
->
uniq_id
, s->
be
->
id
,

1616 ()
s
->
ªq
->
¥od
->
fd
, ()s->ªq->
c⁄s
->fd);

1617 
	`wrôe
(1, 
åash
, 
Àn
);

1620 
s
->
logs
.
t_˛o£
 = 
	`tv_ms_ñ≠£d
(&s->logs.
tv_ac˚±
, &
now
);

1621 
	`£ssi⁄_¥o˚ss_cou¡îs
(
s
);

1623 i‡(
s
->
txn
.
°©us
) {

1624 
n
;

1626 
n
 = 
s
->
txn
.
°©us
 / 100;

1627 i‡(
n
 < 1 ||Ç > 5)

1628 
n
 = 0;

1630 i‡(
s
->
„
->
mode
 =
PR_MODE_HTTP
)

1631 
s
->
„
->
cou¡îs
.„.
hâp
.
r•
[
n
]++;

1633 i‡((
s
->
Êags
 & 
SN_BE_ASSIGNED
) &&

1634 (
s
->
be
->
mode
 =
PR_MODE_HTTP
))

1635 
s
->
be
->
cou¡îs
.be.
hâp
.
r•
[
n
]++;

1639 i‡(
s
->
logs
.
logwaô
 &&

1640 !(
s
->
Êags
 & 
SN_MONITOR
) &&

1641 (!(
s
->
„
->
›ti⁄s
 & 
PR_O_NULLNOLOG
Ë|| s->
ªq
->
tŸÆ
)) {

1642 
s
->
	`do_log
(s);

1646 
	`£ssi⁄_‰ì
(
s
);

1647 
	`èsk_dñëe
(
t
);

1648 
	`èsk_‰ì
(
t
);

1649  
NULL
;

1650 
	}
}

1659 
	$£ss_ch™ge_£rvî
(
£ssi⁄
 *
£ss
, 
£rvî
 *
√w§v
)

1661 i‡(
£ss
->
§v_c⁄n
 =
√w§v
)

1664 i‡(
£ss
->
§v_c⁄n
) {

1665 
£ss
->
§v_c⁄n
->
£rved
--;

1666 i‡(
£ss
->
§v_c⁄n
->
¥oxy
->
lb¥m
.
£rvî_dr›_c⁄n
)

1667 
£ss
->
§v_c⁄n
->
¥oxy
->
lb¥m
.
	`£rvî_dr›_c⁄n
(sess->srv_conn);

1668 
£ss
->
§v_c⁄n
 = 
NULL
;

1671 i‡(
√w§v
) {

1672 
√w§v
->
£rved
++;

1673 i‡(
√w§v
->
¥oxy
->
lb¥m
.
£rvî_èke_c⁄n
)

1674 
√w§v
->
¥oxy
->
lb¥m
.
	`£rvî_èke_c⁄n
(newsrv);

1675 
£ss
->
§v_c⁄n
 = 
√w§v
;

1677 
	}
}

1683 
	$£ss_£t_ãrm_Êags
(
£ssi⁄
 *
s
)

1685 i‡(!(
s
->
Êags
 & 
SN_FINST_MASK
)) {

1686 i‡(
s
->
si
[1].
°©e
 < 
SI_ST_REQ
) {

1688 
s
->
„
->
cou¡îs
.
Áûed_ªq
++;

1689 i‡(
s
->
li°íî
->
cou¡îs
)

1690 
s
->
li°íî
->
cou¡îs
->
Áûed_ªq
++;

1692 
s
->
Êags
 |
SN_FINST_R
;

1694 i‡(
s
->
si
[1].
°©e
 =
SI_ST_QUE
)

1695 
s
->
Êags
 |
SN_FINST_Q
;

1696 i‡(
s
->
si
[1].
°©e
 < 
SI_ST_EST
)

1697 
s
->
Êags
 |
SN_FINST_C
;

1698 i‡(
s
->
si
[1].
°©e
 =
SI_ST_EST
 || s->si[1].
¥ev_°©e
 == SI_ST_EST)

1699 
s
->
Êags
 |
SN_FINST_D
;

1701 
s
->
Êags
 |
SN_FINST_L
;

1703 
	}
}

1710 
	$deÁu…_§v_îr‹
(
£ssi⁄
 *
s
, 
°ªam_öãrÁ˚
 *
si
)

1712 
îr_ty≥
 = 
si
->err_type;

1713 
îr
 = 0, 
fö
 = 0;

1715 i‡(
îr_ty≥
 & 
SI_ET_QUEUE_ABRT
) {

1716 
îr
 = 
SN_ERR_CLICL
;

1717 
fö
 = 
SN_FINST_Q
;

1719 i‡(
îr_ty≥
 & 
SI_ET_CONN_ABRT
) {

1720 
îr
 = 
SN_ERR_CLICL
;

1721 
fö
 = 
SN_FINST_C
;

1723 i‡(
îr_ty≥
 & 
SI_ET_QUEUE_TO
) {

1724 
îr
 = 
SN_ERR_SRVTO
;

1725 
fö
 = 
SN_FINST_Q
;

1727 i‡(
îr_ty≥
 & 
SI_ET_QUEUE_ERR
) {

1728 
îr
 = 
SN_ERR_SRVCL
;

1729 
fö
 = 
SN_FINST_Q
;

1731 i‡(
îr_ty≥
 & 
SI_ET_CONN_TO
) {

1732 
îr
 = 
SN_ERR_SRVTO
;

1733 
fö
 = 
SN_FINST_C
;

1735 i‡(
îr_ty≥
 & 
SI_ET_CONN_ERR
) {

1736 
îr
 = 
SN_ERR_SRVCL
;

1737 
fö
 = 
SN_FINST_C
;

1740 
îr
 = 
SN_ERR_INTERNAL
;

1741 
fö
 = 
SN_FINST_C
;

1744 i‡(!(
s
->
Êags
 & 
SN_ERR_MASK
))

1745 
s
->
Êags
 |
îr
;

1746 i‡(!(
s
->
Êags
 & 
SN_FINST_MASK
))

1747 
s
->
Êags
 |
fö
;

1748 
	}
}

	@src/sessionhash.c

16 
	~<comm⁄/£ssi⁄hash.h
>

17 
	~<°rög.h
>

18 #ifde‡
DEBUG_HASH


19 
	~<°dio.h
>

26 
	$≠p£ssi⁄_hash_f
(*
±r
)

28 
h
 = 5381;

30 *
±r
) {

31 
h
 = (h << 5Ë+ h + *
±r
;

32 
±r
++;

34  ((
h
 >> 16Ë^ hË& 
TABLEMASK
;

35 
	}
}

37 
≠p£ssi⁄_hash_öô
(
≠p£ssi⁄_hash
 *
hash
,

38 (*
de°roy
)(
≠p£ss
*))

40 
i
;

42 
hash
->
de°roy
 = destroy;

43 
hash
->
èbÀ
 = 
	`mÆloc
(
TABLESIZE
 * (
li°
));

44 i‡(
hash
->
èbÀ
 =
NULL
)

46 
i
 = 0; i < 
TABLESIZE
; i++)

47 
	`LIST_INIT
(&
hash
->
èbÀ
[
i
]);

49 
	}
}

51 
	$≠p£ssi⁄_hash_ö£π
(
≠p£ssi⁄_hash
 *
hash
, 
≠p£ss
 *
£ssi⁄
)

53 
idx
;

55 
idx
 = 
	`≠p£ssi⁄_hash_f
(
£ssi⁄
->
£ssid
);

56 
	`LIST_ADDQ
(&
hash
->
èbÀ
[
idx
], &
£ssi⁄
->
hash_li°
);

57 
	}
}

59 
≠p£ss
 *
	$≠p£ssi⁄_hash_lookup
(
≠p£ssi⁄_hash
 *
hash
, *
£ssid
)

61 
idx
;

62 
≠p£ss
 *
ôem
;

64 
idx
 = 
	`≠p£ssi⁄_hash_f
(
£ssid
);

66 
	`li°_f‹_óch_íåy
(
ôem
, &
hash
->
èbÀ
[
idx
], 
hash_li°
) {

67 i‡(
	`°rcmp
(
ôem
->
£ssid
, sessid) == 0)

68  
ôem
;

70  
NULL
;

71 
	}
}

73 
	$≠p£ssi⁄_hash_ªmove
(
≠p£ssi⁄_hash
 *
hash
, 
≠p£ss
 *
£ssi⁄
)

75 
idx
;

76 
≠p£ss
 *
ôem
;

78 
idx
 = 
	`≠p£ssi⁄_hash_f
(
£ssi⁄
->
£ssid
);

81 
	`li°_f‹_óch_íåy
(
ôem
, &
hash
->
èbÀ
[
idx
], 
hash_li°
) {

82 i‡(
	`°rcmp
(
ôem
->
£ssid
, 
£ssi⁄
->sessid) == 0) {

83 
	`LIST_DEL
(&
ôem
->
hash_li°
);

84 
hash
->
	`de°roy
(
ôem
);

88 
	}
}

90 
	$≠p£ssi⁄_hash_de°roy
(
≠p£ssi⁄_hash
 *
hash
)

92 
i
;

93 
≠p£ss
 *
ôem
;

95 i‡(!
hash
->
èbÀ
)

98 
i
 = 0; i < 
TABLESIZE
; i++) {

99 !
	`LIST_ISEMPTY
(&
hash
->
èbÀ
[
i
])) {

100 
ôem
 = 
	`LIST_ELEM
(
hash
->
èbÀ
[
i
].
n
, 
≠p£ss
 *,

101 
hash_li°
);

102 
hash
->
	`de°roy
(
ôem
);

103 
	`LIST_DEL
(&
ôem
->
hash_li°
);

106 
	`‰ì
(
hash
->
èbÀ
);

107 
hash
->
èbÀ
 = 
NULL
;

108 
hash
->
de°roy
 = 
NULL
;

109 
	}
}

111 #i‡
deföed
(
DEBUG_HASH
)

112 
	$≠p£ssi⁄_hash_dump
(
≠p£ssi⁄_hash
 *
hash
)

114 
idx
;

115 
≠p£ss
 *
ôem
;

117 
	`¥ötf
("Dumpög hashèbÀ 0x%p\n", 
hash
);

118 
idx
 = 0; idx < 
TABLESIZE
; idx++) {

120 
	`li°_f‹_óch_íåy
(
ôem
, &
hash
->
èbÀ
[
idx
], 
hash_li°
) {

121 
	`¥ötf
("\âabÀ[%d]:\t%s\t-> %†ªque°_cou¡ %lu\n", 
idx
, 
ôem
->
£ssid
,

122 
ôem
->
£rvîid
, iãm->
ªque°_cou¡
);

125 
	`¥ötf
(".\n");

126 
	}
}

	@src/signal.c

13 
	~<sig«l.h
>

14 
	~<°rög.h
>

16 
	~<¥Ÿo/sig«l.h
>

17 
	~<¥Ÿo/log.h
>

26 
	gsig«l_queue_Àn
;

27 
	gsig«l_queue
[
MAX_SIGNAL
];

28 
sig«l_des¸ùt‹
 
	gsig«l_°©e
[
MAX_SIGNAL
];

29 
sig£t_t
 
	gblocked_sig
;

31 
	$sig«l_öô
()

33 
sig«l_queue_Àn
 = 0;

34 
	`mem£t
(
sig«l_queue
, 0, (signal_queue));

35 
	`mem£t
(
sig«l_°©e
, 0, (signal_state));

36 
	`sigfûl£t
(&
blocked_sig
);

37 
	}
}

39 
	$sig«l_h™dÀr
(
sig
)

41 i‡(
sig
 < 0 || sig > 
MAX_SIGNAL
 || !
sig«l_°©e
[sig].
h™dÀr
) {

43 
	`qÂrötf
(
°dîr
, "Re˚ived unh™dÀd sig«»%d. Sig«»ha†bì¿dißbÀd.\n", 
sig
);

44 
	`sig«l
(
sig
, 
SIG_IGN
);

48 i‡(!
sig«l_°©e
[
sig
].
cou¡
) {

50 i‡(
sig«l_queue_Àn
 < 
MAX_SIGNAL
)

51 
sig«l_queue
[
sig«l_queue_Àn
++] = 
sig
;

53 
	`qÂrötf
(
°dîr
, "Sig«»%d : sig«»queuêi†u√x≥˘edly fuŒ.\n", 
sig
);

55 
sig«l_°©e
[
sig
].
cou¡
++;

56 
	`sig«l
(
sig
, 
sig«l_h™dÀr
);

57 
	}
}

65 
sig«l_ªgi°î
(
sig
, (*
h™dÀr
)())

67 i‡(
sig
 < 0 || sig > 
MAX_SIGNAL
) {

68 
	`qÂrötf
(
°dîr
, "FaûedÅÿªgi°î sig«»%d : ouào‡øngê[0..%d].\n", 
sig
, 
MAX_SIGNAL
);

72 
sig«l_°©e
[
sig
].
cou¡
 = 0;

73 i‡(
h™dÀr
 =
NULL
)

74 
h™dÀr
 = 
SIG_IGN
;

76 i‡(
h™dÀr
 !
SIG_IGN
 && h™dÀ∏!
SIG_DFL
) {

77 
sig«l_°©e
[
sig
].
h™dÀr
 = handler;

78 
	`sig«l
(
sig
, 
sig«l_h™dÀr
);

81 
sig«l_°©e
[
sig
].
h™dÀr
 = 
NULL
;

82 
	`sig«l
(
sig
, 
h™dÀr
);

84 
	}
}

92 
	$__sig«l_¥o˚ss_queue
()

94 
sig
, 
cur_pos
 = 0;

95 
sig«l_des¸ùt‹
 *
desc
;

96 
sig£t_t
 
ﬁd_sig
;

99 
	`sig¥ocmask
(
SIG_SETMASK
, &
blocked_sig
, &
ﬁd_sig
);

101 
cur_pos
 = 0; cur_po†< 
sig«l_queue_Àn
; cur_pos++) {

102 
sig
 = 
sig«l_queue
[
cur_pos
];

103 
desc
 = &
sig«l_°©e
[
sig
];

104 i‡(
desc
->
cou¡
) {

105 i‡(
desc
->
h™dÀr
)

106 
desc
->
	`h™dÀr
(
sig
);

107 
desc
->
cou¡
 = 0;

110 
sig«l_queue_Àn
 = 0;

113 
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁd_sig
, 
NULL
);

114 
	}
}

	@src/standard.c

13 
	~<˘y≥.h
>

14 
	~<√tdb.h
>

15 
	~<°dlib.h
>

16 
	~<°rög.h
>

17 
	~<sys/sockë.h
>

18 
	~<sys/un.h
>

19 
	~<√töë/ö.h
>

20 
	~<¨∑/öë.h
>

22 
	~<comm⁄/c⁄fig.h
>

23 
	~<comm⁄/°™d¨d.h
>

24 
	~<eb32åì.h
>

25 
	~<¥Ÿo/log.h
>

35 
	gôﬂ_°r
[10][171];

44 
	$°æ˝y2
(*
d°
, c⁄° *
§c
, 
size
)

46 *
‹ig
 = 
d°
;

47 i‡(
size
) {

48 --
size
 && (*
d°
 = *
§c
)) {

49 
§c
++; 
d°
++;

51 *
d°
 = 0;

53  
d°
 - 
‹ig
;

54 
	}
}

60 *
	$u…ﬂ_r
(
n
, *
buf„r
, 
size
)

62 *
pos
;

64 
pos
 = 
buf„r
 + 
size
 - 1;

65 *
pos
-- = '\0';

68 *
pos
-- = '0' + 
n
 % 10;

69 
n
 /= 10;

70 } 
n
 && 
pos
 >
buf„r
);

71  
pos
 + 1;

72 
	}
}

80 c⁄° *
	$uŒtoh_r
(
n
, *
buf„r
, 
size
)

82 *
°¨t
;

83 
digô
 = 0;

85 
°¨t
 = 
buf„r
 + 
size
;

86 *--
°¨t
 = '\0';

89 i‡(
digô
 =3 && 
°¨t
 >
buf„r
 + 7)

90 
	`mem˝y
(
°¨t
 -= 7, "</span>", 7);

92 i‡(
°¨t
 >
buf„r
 + 1) {

93 *--
°¨t
 = '0' + 
n
 % 10;

94 
n
 /= 10;

97 i‡(
digô
 =3 && 
°¨t
 >
buf„r
 + 18)

98 
	`mem˝y
(
°¨t
 -= 18, "<span class=\"rls\">", 18);

100 i‡(
digô
++ == 3)

101 
digô
 = 1;

102 } 
n
 && 
°¨t
 > 
buf„r
);

103  
°¨t
;

104 
	}
}

114 c⁄° *
	$limô_r
(
n
, *
buf„r
, 
size
, c⁄° *
Æt
)

116  (
n
Ë? 
	`u…ﬂ_r
“, 
buf„r
, 
size
Ë: (
Æt
 ?ált : "");

117 
	}
}

124 
sockaddr_un
 *
	$°r2sun
(c⁄° *
°r
)

126 
sockaddr_un
 
su
;

127 
°rsz
;

129 
	`mem£t
(&
su
, 0, (su));

130 
°rsz
 = 
	`°æí
(
°r
) + 1;

131 i‡(
°rsz
 > (
su
.
sun_∑th
)) {

132  
NULL
;

134 
su
.
sun_Ámûy
 = 
AF_UNIX
;

135 
	`mem˝y
(
su
.
sun_∑th
, 
°r
, 
°rsz
);

137  &
su
;

138 
	}
}

147 
	$ishex
(
s
)

149 
s
 -= '0';

150 i‡(()
s
 <= 9)

152 
s
 -= 'A' - '0';

153 i‡(()
s
 <= 5)

155 
s
 -= 'a' - 'A';

156 i‡(()
s
 <= 5)

159 
	}
}

165 
	$hex2i
(
c
)

167 i‡(()(
c
 -= '0') > 9) {

168 i‡(()(
c
 -= 'A' - '0') > 5 &&

169 ()(
c
 -= 'a' - 'A') > 5)

170 
c
 = -11;

171 
c
 += 10;

173  
c
;

174 
	}
}

181 c⁄° *
	$övÆid_ch¨
(c⁄° *
«me
)

183 i‡(!*
«me
)

184  
«me
;

186 *
«me
) {

187 i‡(!
	`iß um
(()()*
«me
) && *name != '.' && *name != ':' &&

188 *
«me
 != '_' && *name != '-')

189  
«me
;

190 
«me
++;

192  
NULL
;

193 
	}
}

200 c⁄° *
	$övÆid_domaöch¨
(c⁄° *
«me
) {

202 i‡(!*
«me
)

203  
«me
;

205 *
«me
) {

206 i‡(!
	`iß um
(()()*
«me
) && *name != '.' &&

207 *
«me
 != '_' && *name != '-')

208  
«me
;

210 
«me
++;

213  
NULL
;

214 
	}
}

222 
sockaddr_ö
 *
	$°r2ß
(*
°r
)

224 
sockaddr_ö
 
ß
;

225 
sockaddr_ö
 *
ªt
 = 
NULL
;

226 *
c
;

227 
p‹t
;

229 
	`mem£t
(&
ß
, 0, (sa));

230 
°r
 = 
	`°rdup
(str);

231 i‡(
°r
 =
NULL
)

232 
out
;

234 i‡((
c
 = 
	`°ºchr
(
°r
,':')Ë!
NULL
) {

235 *
c
++ = '\0';

236 
p‹t
 = 
	`©ﬁ
(
c
);

239 
p‹t
 = 0;

241 i‡(*
°r
 == '*' || *str == '\0') {

242 
ß
.
sö_addr
.
s_addr
 = 
INADDR_ANY
;

244 i‡(!
	`öë_±⁄
(
AF_INET
, 
°r
, &
ß
.
sö_addr
)) {

245 
ho°ít
 *
he
 = 
	`gëho°by«me
(
°r
);

246 i‡(!
he
)

247 
out
;

248 
ß
.
sö_addr
 = *(
ö_addr
 *Ë*(
he
->
h_addr_li°
);

250 
ß
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

251 
ß
.
sö_Ámûy
 = 
AF_INET
;

252 
ªt
 = &
ß
;

253 
out
:

254 
	`‰ì
(
°r
);

255  
ªt
;

256 
	}
}

268 
sockaddr_ö
 *
	$°r2ß_ønge
(*
°r
, *
low
, *
high
)

270 
sockaddr_ö
 
ß
;

271 
sockaddr_ö
 *
ªt
 = 
NULL
;

272 *
c
;

273 
p‹é
, 
p‹th
;

275 
	`mem£t
(&
ß
, 0, (sa));

276 
°r
 = 
	`°rdup
(str);

277 i‡(
°r
 =
NULL
)

278 
out
;

280 i‡((
c
 = 
	`°ºchr
(
°r
,':')Ë!
NULL
) {

281 *
£p
;

282 *
c
++ = '\0';

283 
£p
 = 
	`°rchr
(
c
, '-');

284 i‡(
£p
)

285 *
£p
++ = '\0';

287 
£p
 = 
c
;

288 
p‹é
 = 
	`©ﬁ
(
c
);

289 
p‹th
 = 
	`©ﬁ
(
£p
);

292 
p‹é
 = 0;

293 
p‹th
 = 0;

296 i‡(*
°r
 == '*' || *str == '\0') {

297 
ß
.
sö_addr
.
s_addr
 = 
INADDR_ANY
;

299 i‡(!
	`öë_±⁄
(
AF_INET
, 
°r
, &
ß
.
sö_addr
)) {

300 
ho°ít
 *
he
 = 
	`gëho°by«me
(
°r
);

301 i‡(!
he
)

302 
out
;

303 
ß
.
sö_addr
 = *(
ö_addr
 *Ë*(
he
->
h_addr_li°
);

305 
ß
.
sö_p‹t
 = 
	`ht⁄s
(
p‹é
);

306 
ß
.
sö_Ámûy
 = 
AF_INET
;

307 
ªt
 = &
ß
;

309 *
low
 = 
p‹é
;

310 *
high
 = 
p‹th
;

312 
out
:

313 
	`‰ì
(
°r
);

314  
ªt
;

315 
	}
}

321 
	$°r2mask
(c⁄° *
°r
, 
ö_addr
 *
mask
)

323 i‡(
	`°rchr
(
°r
, '.'Ë!
NULL
) {

324 i‡(!
	`öë_±⁄
(
AF_INET
, 
°r
, 
mask
))

328 *
îr
;

329 
Àn
 = 
	`°πﬁ
(
°r
, &
îr
, 10);

331 i‡(!*
°r
 || (
îr
 && *îrË|| ()
Àn
 > 32)

333 i‡(
Àn
)

334 
mask
->
s_addr
 = 
	`ht⁄l
(~0UL << (32 - 
Àn
));

336 
mask
->
s_addr
 = 0;

339 
	}
}

347 
	$°r2√t
(c⁄° *
°r
, 
ö_addr
 *
addr
, ö_add∏*
mask
)

349 
__œbñ__
 
out_‰ì
, 
out_îr
;

350 *
c
, *
s
;

351 
ªt_vÆ
;

353 
s
 = 
	`°rdup
(
°r
);

354 i‡(!
s
)

357 
	`mem£t
(
mask
, 0, (*mask));

358 
	`mem£t
(
addr
, 0, (*addr));

360 i‡((
c
 = 
	`°ºchr
(
s
, '/')Ë!
NULL
) {

361 *
c
++ = '\0';

363 i‡(!
	`°r2mask
(
c
, 
mask
))

364 
out_îr
;

367 
mask
->
s_addr
 = ~0U;

369 i‡(!
	`öë_±⁄
(
AF_INET
, 
s
, 
addr
)) {

370 
ho°ít
 *
he
;

372 i‡((
he
 = 
	`gëho°by«me
(
s
)Ë=
NULL
) {

373 
out_îr
;

376 *
addr
 = *(
ö_addr
 *Ë*(
he
->
h_addr_li°
);

379 
ªt_vÆ
 = 1;

380 
out_‰ì
:

381 
	`‰ì
(
s
);

382  
ªt_vÆ
;

383 
out_îr
:

384 
ªt_vÆ
 = 0;

385 
out_‰ì
;

386 
	}
}

392 
	$uæ2ù
(c⁄° *
addr
, 
ö_addr
 *
d°
)

394 
ßw_digô
, 
o˘ës
, 
ch
;

395 
u_ch¨
 
tmp
[4], *
ç
;

396 c⁄° *
˝
 = 
addr
;

398 
ßw_digô
 = 0;

399 
o˘ës
 = 0;

400 *(
ç
 = 
tmp
) = 0;

402 *
addr
) {

403 
digô
 = (
ch
 = *
addr
++) - '0';

404 i‡(
digô
 > 9 && 
ch
 != '.')

406 i‡(
digô
 <= 9) {

407 
u_öt
 
√w
 = *
ç
 * 10 + 
digô
;

408 i‡(
√w
 > 255)

410 *
ç
 = 
√w
;

411 i‡(!
ßw_digô
) {

412 i‡(++
o˘ës
 > 4)

414 
ßw_digô
 = 1;

416 } i‡(
ch
 ='.' && 
ßw_digô
) {

417 i‡(
o˘ës
 == 4)

419 *++
ç
 = 0;

420 
ßw_digô
 = 0;

425 i‡(
o˘ës
 < 4)

428 
	`mem˝y
(&
d°
->
s_addr
, 
tmp
, 4);

429  
addr
-
˝
-1;

430 
	}
}

435 
	$uæ2ß
(c⁄° *
uæ
, 
uÀn
, 
sockaddr_ö
 *
addr
)

437 c⁄° *
cuº
 = 
uæ
, *
˝
 = url;

438 
ªt
, 
uæ_code
 = 0;

439 
hâp_code
 = 0;

442 
addr
->
sö_Ámûy
 = 
AF_INET
;

443 
addr
->
sö_addr
.
s_addr
 = 0;

444 
addr
->
sö_p‹t
 = 0;

447 
cuº
 < 
uæ
+
uÀn
 && 
uæ_code
 != 0x3a2f2f) {

448 
uæ_code
 = ((url_code & 0xffff) << 8);

449 
uæ_code
 +()*
cuº
++;

458 i‡(
uæ_code
 == 0x3a2f2f) {

459 
˝
 < 
cuº
 - 3)

460 
hâp_code
 = (hâp_codê<< 8Ë+ *
˝
++;

461 
hâp_code
 |= 0x20202020;

464 i‡(
hâp_code
 == 0x68747470) {

470 
ªt
 = 
	`uæ2ù
(
cuº
, &
addr
->
sö_addr
);

471 i‡(!
ªt
)

473 
cuº
 +
ªt
;

474 
addr
->
sö_p‹t
 = (*
cuº
 =':'Ë? 
	`°r2uic
(++curr) : 80;

475 
addr
->
sö_p‹t
 = 
	`ht⁄s
(addr->sin_port);

481 
	}
}

493 c⁄° 
	ghexèb
[16] = "0123456789ABCDEF";

494 *
	$ícode_°rög
(*
°¨t
, *
°›
,

495 c⁄° 
esˇ≥
, c⁄° 
fd_£t
 *
m≠
,

496 c⁄° *
°rög
)

498 i‡(
°¨t
 < 
°›
) {

499 
°›
--;

500 
°¨t
 < 
°›
 && *
°rög
 != '\0') {

501 i‡(!
	`FD_ISSET
(()(*
°rög
), 
m≠
))

502 *
°¨t
++ = *
°rög
;

504 i‡(
°¨t
 + 3 >
°›
)

506 *
°¨t
++ = 
esˇ≥
;

507 *
°¨t
++ = 
hexèb
[(*
°rög
 >> 4) & 15];

508 *
°¨t
++ = 
hexèb
[*
°rög
 & 15];

510 
°rög
++;

512 *
°¨t
 = '\0';

514  
°¨t
;

515 
	}
}

518 
	$°r2ui
(c⁄° *
s
)

520  
	`__°r2ui
(
s
);

521 
	}
}

523 
	$°r2uic
(c⁄° *
s
)

525  
	`__°r2uic
(
s
);

526 
	}
}

528 
	$°æ2ui
(c⁄° *
s
, 
Àn
)

530  
	`__°æ2ui
(
s
, 
Àn
);

531 
	}
}

533 
	$°æ2uic
(c⁄° *
s
, 
Àn
)

535  
	`__°æ2uic
(
s
, 
Àn
);

536 
	}
}

542 
	$°æ2ic
(c⁄° *
s
, 
Àn
)

544 
i
 = 0;

545 
j
, 
k
;

547 i‡(
Àn
 > 0) {

548 i‡(*
s
 != '-') {

550 
Àn
-- > 0) {

551 
j
 = (*
s
++) - '0';

552 
k
 = 
i
 * 10;

553 i‡(
j
 > 9)

555 
i
 = 
k
 + 
j
;

559 
s
++;

560 --
Àn
 > 0) {

561 
j
 = (*
s
++) - '0';

562 
k
 = 
i
 * 10;

563 i‡(
j
 > 9)

565 
i
 = 
k
 - 
j
;

569  
i
;

570 
	}
}

581 
	$°æ2úc
(c⁄° *
s
, 
Àn
, *
ªt
)

583 
i
 = 0;

584 
j
;

586 i‡(!
Àn
)

589 i‡(*
s
 != '-') {

591 
Àn
-- > 0) {

592 
j
 = (*
s
++) - '0';

593 i‡(
j
 > 9)  1;

594 i‡(
i
 > 
INT_MAX
 / 10)  1;

595 
i
 = i * 10;

596 i‡(
i
 + 
j
 < i)  1;

597 
i
 = i + 
j
;

601 
s
++;

602 --
Àn
 > 0) {

603 
j
 = (*
s
++) - '0';

604 i‡(
j
 > 9)  1;

605 i‡(
i
 < 
INT_MIN
 / 10)  1;

606 
i
 = i * 10;

607 i‡(
i
 - 
j
 > i)  1;

608 
i
 = i - 
j
;

611 *
ªt
 = 
i
;

613 
	}
}

624 #i‚de‡
LLONG_MAX


625 
	#LLONG_MAX
 9223372036854775807LL

	)

626 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

629 
	$°æ2Œrc
(c⁄° *
s
, 
Àn
, *
ªt
)

631 
i
 = 0;

632 
j
;

634 i‡(!
Àn
)

637 i‡(*
s
 != '-') {

639 
Àn
-- > 0) {

640 
j
 = (*
s
++) - '0';

641 i‡(
j
 > 9)  1;

642 i‡(
i
 > 
LLONG_MAX
 / 10LL)  1;

643 
i
 = i * 10LL;

644 i‡(
i
 + 
j
 < i)  1;

645 
i
 = i + 
j
;

649 
s
++;

650 --
Àn
 > 0) {

651 
j
 = (*
s
++) - '0';

652 i‡(
j
 > 9)  1;

653 i‡(
i
 < 
LLONG_MIN
 / 10LL)  1;

654 
i
 = i * 10LL;

655 i‡(
i
 - 
j
 > i)  1;

656 
i
 = i - 
j
;

659 *
ªt
 = 
i
;

661 
	}
}

670 c⁄° *
	$∑r£_time_îr
(c⁄° *
ãxt
, *
ªt
, 
unô_Êags
)

672 
imu…
, 
idiv
;

673 
omu…
, 
odiv
;

674 
vÆue
;

676 
omu…
 = 
odiv
 = 1;

678 
unô_Êags
 & 
TIME_UNIT_MASK
) {

679 
TIME_UNIT_US
: 
omu…
 = 1000000; ;

680 
TIME_UNIT_MS
: 
omu…
 = 1000; ;

681 
TIME_UNIT_S
: ;

682 
TIME_UNIT_MIN
: 
odiv
 = 60; ;

683 
TIME_UNIT_HOUR
: 
odiv
 = 3600; ;

684 
TIME_UNIT_DAY
: 
odiv
 = 86400; ;

688 
vÆue
 = 0;

691 
j
;

693 
j
 = *
ãxt
 - '0';

694 i‡(
j
 > 9)

696 
ãxt
++;

697 
vÆue
 *= 10;

698 
vÆue
 +
j
;

701 
imu…
 = 
idiv
 = 1;

702 *
ãxt
) {

704 
imu…
 = 
omu…
 = 
idiv
 = 
odiv
 = 1;

709 i‡(
ãxt
[1] == 's') {

710 
idiv
 = 1000000;

711 
ãxt
++;

715 i‡(
ãxt
[1] == 's') {

716 
idiv
 = 1000;

717 
ãxt
++;

719 
imu…
 = 60;

722 
imu…
 = 3600;

725 
imu…
 = 86400;

728  
ãxt
;

732 i‡(
omu…
 % 
idiv
 == 0) { omult /= idiv; idiv = 1; }

733 i‡(
idiv
 % 
omu…
 == 0) { idiv /= omult; omult = 1; }

734 i‡(
imu…
 % 
odiv
 == 0) { imult /= odiv; odiv = 1; }

735 i‡(
odiv
 % 
imu…
 == 0) { odiv /= imult; imult = 1; }

737 
vÆue
 = (vÆuê* (
imu…
 * 
omu…
Ë+ (
idiv
 * 
odiv
 - 1)) / (idiv * odiv);

738 *
ªt
 = 
vÆue
;

739  
NULL
;

740 
	}
}

746 c⁄° *
	$∑r£_size_îr
(c⁄° *
ãxt
, *
ªt
) {

747 
vÆue
 = 0;

750 
j
;

752 
j
 = *
ãxt
 - '0';

753 i‡(
j
 > 9)

755 i‡(
vÆue
 > ~0U / 10)

756  
ãxt
;

757 
vÆue
 *= 10;

758 i‡(
vÆue
 > (vÆuê+ 
j
))

759  
ãxt
;

760 
vÆue
 +
j
;

761 
ãxt
++;

764 *
ãxt
) {

769 i‡(
vÆue
 > ~0U >> 10)

770  
ãxt
;

771 
vÆue
 = value << 10;

775 i‡(
vÆue
 > ~0U >> 20)

776  
ãxt
;

777 
vÆue
 = value << 20;

781 i‡(
vÆue
 > ~0U >> 30)

782  
ãxt
;

783 
vÆue
 = value << 30;

786  
ãxt
;

789 *
ªt
 = 
vÆue
;

790  
NULL
;

791 
	}
}

794 *
	$my_°∫dup
(c⁄° *
§c
, 
n
)

796 
Àn
 = 0;

797 *
ªt
;

799 
Àn
 < 
n
 && 
§c
[len])

800 
Àn
++;

802 
ªt
 = (*)
	`mÆloc
(
Àn
 + 1);

803 i‡(!
ªt
)

804  
ªt
;

805 
	`mem˝y
(
ªt
, 
§c
, 
Àn
);

806 
ªt
[
Àn
] = '\0';

807  
ªt
;

808 
	}
}

813 
	$gë_√xt_id
(
eb_roŸ
 *
roŸ
, 
key
)

815 
eb32_node
 *
u£d
;

818 
u£d
 = 
	`eb32_lookup_ge
(
roŸ
, 
key
);

819 i‡(!
u£d
 || u£d->
key
 > key)

820  
key
;

821 
key
++;

822 } 
key
);

823  
key
;

824 
	}
}

832 
	$w‹d_m©ch
(c⁄° *
ßm∂e
, 
¶í
, c⁄° *
w‹d
, 
wÀn
)

834 i‡(
¶í
 < 
wÀn
)

837 
wÀn
) {

838 
c
 = *
ßm∂e
 ^ *
w‹d
;

839 i‡(
c
 && c != ('A' ^ 'a'))

841 
ßm∂e
++;

842 
w‹d
++;

843 
¶í
--;

844 
wÀn
--;

847 
¶í
) {

848 i‡(*
ßm∂e
 != ' ' && *sample != '\t')

850 
ßm∂e
++;

851 
¶í
--;

854 
	}
}

861 
	$öëaddr_ho°
(c⁄° *
ãxt
)

863 c⁄° 
ascii_zîo
 = ('0' << 24) | ('0' << 16) | ('0' << 8) | '0';

864 
dig100
, 
dig10
, 
dig1
;

865 
s
;

866 c⁄° *
p
, *
d
;

868 
dig1
 = 
dig10
 = 
dig100
 = 
ascii_zîo
;

869 
s
 = 24;

871 
p
 = 
ãxt
;

873 i‡((()(*
p
 - '0')) <= 9) {

874 
p
++;

879 i‡(
p
 =
ãxt
)

880 
íd
;

882 
d
 = 
p
 - 1;

883 
dig1
 |()(*
d
 << 
s
);

884 i‡(
d
 =
ãxt
)

885 
íd
;

887 
d
--;

888 
dig10
 |()(*
d
 << 
s
);

889 i‡(
d
 =
ãxt
)

890 
íd
;

892 
d
--;

893 
dig100
 |()(*
d
 << 
s
);

894 
íd
:

895 i‡(!
s
 || *
p
 != '.')

898 
s
 -= 8;

899 
ãxt
 = ++
p
;

902 
dig100
 -
ascii_zîo
;

903 
dig10
 -
ascii_zîo
;

904 
dig1
 -
ascii_zîo
;

905  ((
dig100
 * 10Ë+ 
dig10
Ë* 10 + 
dig1
;

906 
	}
}

911 
	$öëaddr_ho°_lim
(c⁄° *
ãxt
, c⁄° *
°›
)

913 c⁄° 
ascii_zîo
 = ('0' << 24) | ('0' << 16) | ('0' << 8) | '0';

914 
dig100
, 
dig10
, 
dig1
;

915 
s
;

916 c⁄° *
p
, *
d
;

918 
dig1
 = 
dig10
 = 
dig100
 = 
ascii_zîo
;

919 
s
 = 24;

921 
p
 = 
ãxt
;

923 i‡((()(*
p
 - '0')Ë<9 &&Ö < 
°›
) {

924 
p
++;

929 i‡(
p
 =
ãxt
)

930 
íd
;

932 
d
 = 
p
 - 1;

933 
dig1
 |()(*
d
 << 
s
);

934 i‡(
d
 =
ãxt
)

935 
íd
;

937 
d
--;

938 
dig10
 |()(*
d
 << 
s
);

939 i‡(
d
 =
ãxt
)

940 
íd
;

942 
d
--;

943 
dig100
 |()(*
d
 << 
s
);

944 
íd
:

945 i‡(!
s
 || 
p
 =
°›
 || *p != '.')

948 
s
 -= 8;

949 
ãxt
 = ++
p
;

952 
dig100
 -
ascii_zîo
;

953 
dig10
 -
ascii_zîo
;

954 
dig1
 -
ascii_zîo
;

955  ((
dig100
 * 10Ë+ 
dig10
Ë* 10 + 
dig1
;

956 
	}
}

962 
	$öëaddr_ho°_lim_ªt
(c⁄° *
ãxt
, *
°›
, c⁄° **
ªt
)

964 c⁄° 
ascii_zîo
 = ('0' << 24) | ('0' << 16) | ('0' << 8) | '0';

965 
dig100
, 
dig10
, 
dig1
;

966 
s
;

967 c⁄° *
p
, *
d
;

969 
dig1
 = 
dig10
 = 
dig100
 = 
ascii_zîo
;

970 
s
 = 24;

972 
p
 = 
ãxt
;

974 i‡((()(*
p
 - '0')Ë<9 &&Ö < 
°›
) {

975 
p
++;

980 i‡(
p
 =
ãxt
)

981 
íd
;

983 
d
 = 
p
 - 1;

984 
dig1
 |()(*
d
 << 
s
);

985 i‡(
d
 =
ãxt
)

986 
íd
;

988 
d
--;

989 
dig10
 |()(*
d
 << 
s
);

990 i‡(
d
 =
ãxt
)

991 
íd
;

993 
d
--;

994 
dig100
 |()(*
d
 << 
s
);

995 
íd
:

996 i‡(!
s
 || 
p
 =
°›
 || *p != '.')

999 
s
 -= 8;

1000 
ãxt
 = ++
p
;

1003 *
ªt
 = 
p
;

1004 
dig100
 -
ascii_zîo
;

1005 
dig10
 -
ascii_zîo
;

1006 
dig1
 -
ascii_zîo
;

1007  ((
dig100
 * 10Ë+ 
dig10
Ë* 10 + 
dig1
;

1008 
	}
}

	@src/stick_table.c

13 
	~<°rög.h
>

15 
	~<comm⁄/c⁄fig.h
>

16 
	~<comm⁄/mem‹y.h
>

17 
	~<comm⁄/möi-˛i°.h
>

18 
	~<comm⁄/°™d¨d.h
>

19 
	~<comm⁄/time.h
>

21 
	~<ebmbåì.h
>

22 
	~<eb°åì.h
>

24 
	~<ty≥s/°ick_èbÀ.h
>

26 
	~<¥Ÿo/¥oxy.h
>

27 
	~<¥Ÿo/£ssi⁄.h
>

28 
	~<¥Ÿo/èsk.h
>

35 
	$°k£ss_‰ì
(
°kèbÀ
 *
t
, 
°k£ss
 *
ts
)

37 
t
->
cuºít
--;

38 
	`poﬁ_‰ì2
(
t
->
poﬁ
,
ts
);

39 
	}
}

44 
	$°k£ss_key
(
°kèbÀ
 *
t
, 
°k£ss
 *
ts
, 
°kèbÀ_key
 *
key
)

46 i‡(
t
->
ty≥
 !
STKTABLE_TYPE_STRING
)

47 
	`mem˝y
(
ts
->
keys
.
key
, key->key , 
t
->
key_size
);

49 
	`mem˝y
(
ts
->
keys
.
key
, key->key, 
	`MIN
(
t
->
key_size
 - 1, key->
key_Àn
));

50 
ts
->
keys
.
key
[
	`MIN
(
t
->
key_size
 - 1, key->
key_Àn
)] = 0;

52 
	}
}

58 
°k£ss
 *
	$°k£ss_öô
(
°kèbÀ
 *
t
, 
°k£ss
 * 
ts
, 
°kèbÀ_key
 *
key
)

60 
ts
->
keys
.
node
.
Àaf_p
 = 
NULL
;

61 
ts
->
exps
.
node
.
Àaf_p
 = 
NULL
;

62 
ts
->
sid
 = 0;

63 
	`°k£ss_key
(
t
, 
ts
, 
key
);

65  
ts
;

66 
	}
}

72 
	$°kèbÀ_åash_ﬁde°
(
°kèbÀ
 *
t
, 
to_b©ch
)

74 
°k£ss
 *
ts
;

75 
eb32_node
 *
eb
;

76 
b©ched
 = 0;

78 
eb
 = 
	`eb32_lookup_ge
(&
t
->
exps
, 
now_ms
 - 
TIMER_LOOK_BACK
);

80 
b©ched
 < 
to_b©ch
) {

82 i‡(
	`u∆ikñy
(!
eb
)) {

87 
eb
 = 
	`eb32_fú°
(&
t
->
exps
);

88 i‡(
	`likñy
(!
eb
))

93 
ts
 = 
	`eb32_íåy
(
eb
, 
°k£ss
, 
exps
);

94 
eb
 = 
	`eb32_√xt
(eb);

96 
	`eb32_dñëe
(&
ts
->
exps
);

98 i‡(
ts
->
expúe
 !ts->
exps
.
key
) {

100 i‡(!
	`tick_is£t
(
ts
->
expúe
))

103 
ts
->
exps
.
key
 =Ås->
expúe
;

105 
	`eb32_ö£π
(&
t
->
exps
, &
ts
->exps);

107 i‡(!
eb
 ||Éb->
key
 > 
ts
->
exps
.key)

108 
eb
 = &
ts
->
exps
;

114 
	`ebmb_dñëe
(&
ts
->
keys
);

115 
	`°k£ss_‰ì
(
t
, 
ts
);

116 
b©ched
++;

119  
b©ched
;

120 
	}
}

129 
°k£ss
 *
	$°k£ss_√w
(
°kèbÀ
 *
t
, 
°kèbÀ_key
 *
key
)

131 
°k£ss
 *
ts
;

133 i‡(
	`u∆ikñy
(
t
->
cuºít
 =t->
size
)) {

134 i‡–
t
->
n›urge
 )

135  
NULL
;

137 i‡(!
	`°kèbÀ_åash_ﬁde°
(
t
,Å->
size
 >> 8))

138  
NULL
;

141 
ts
 = 
	`poﬁ_Æloc2
(
t
->
poﬁ
);

142 i‡(
ts
) {

143 
t
->
cuºít
++;

144 
	`°k£ss_öô
(
t
, 
ts
, 
key
);

147  
ts
;

148 
	}
}

154 
°k£ss
 *
	$°kèbÀ_lookup
(
°kèbÀ
 *
t
, 
°kèbÀ_key
 *
key
)

156 
ebmb_node
 *
eb
;

159 i‡(
t
->
ty≥
 =
STKTABLE_TYPE_STRING
)

160 
eb
 = 
	`eb°_lookup_Àn
(&
t
->
keys
, 
key
->key, key->
key_Àn
);

162 
eb
 = 
	`ebmb_lookup
(&
t
->
keys
, 
key
->key,Å->
key_size
);

164 i‡(
	`u∆ikñy
(!
eb
)) {

166  
NULL
;

170  
	`ebmb_íåy
(
eb
, 
°k£ss
, 
keys
);

171 
	}
}

177 
	$°kèbÀ_°‹e
(
°kèbÀ
 *
t
, 
°k£ss
 *
t£ss
, 
sid
)

179 
°k£ss
 *
ts
;

180 
ebmb_node
 *
eb
;

182 i‡(
t
->
ty≥
 =
STKTABLE_TYPE_STRING
)

183 
eb
 = 
	`eb°_lookup
(&(
t
->
keys
), (*)
t£ss
->keys.
key
);

185 
eb
 = 
	`ebmb_lookup
(&(
t
->
keys
), 
t£ss
->keys.
key
,Å->
key_size
);

187 i‡(
	`u∆ikñy
(!
eb
)) {

188 
t£ss
->
sid
 = sid;

189 
	`ebmb_ö£π
(&
t
->
keys
, &
t£ss
->keys,Å->
key_size
);

191 
t£ss
->
exps
.
key
 =Å£ss->
expúe
 = 
	`tick_add
(
now_ms
, 
	`MS_TO_TICKS
(
t
->expire));

192 
	`eb32_ö£π
(&
t
->
exps
, &
t£ss
->exps);

194 i‡(
t
->
expúe
) {

195 
t
->
exp_èsk
->
expúe
 =Å->
exp_√xt
 = 
	`tick_fú°
(
t£ss
->expire,Å->exp_next);

196 
	`èsk_queue
(
t
->
exp_èsk
);

202 
ts
 = 
	`ebmb_íåy
(
eb
, 
°k£ss
, 
keys
);

204 i‡–
ts
->
sid
 != sid )

205 
ts
->
sid
 = sid;

207 
	}
}

212 
	$°kèbÀ_åash_expúed
(
°kèbÀ
 *
t
)

214 
°k£ss
 *
ts
;

215 
eb32_node
 *
eb
;

217 
eb
 = 
	`eb32_lookup_ge
(&
t
->
exps
, 
now_ms
 - 
TIMER_LOOK_BACK
);

220 i‡(
	`u∆ikñy
(!
eb
)) {

225 
eb
 = 
	`eb32_fú°
(&
t
->
exps
);

226 i‡(
	`likñy
(!
eb
))

230 i‡(
	`likñy
(
	`tick_is_…
(
now_ms
, 
eb
->
key
))) {

232 
t
->
exp_√xt
 = 
eb
->
key
;

233  
t
->
exp_√xt
;

237 
ts
 = 
	`eb32_íåy
(
eb
, 
°k£ss
, 
exps
);

238 
eb
 = 
	`eb32_√xt
(eb);

240 
	`eb32_dñëe
(&
ts
->
exps
);

242 i‡(!
	`tick_is_expúed
(
ts
->
expúe
, 
now_ms
)) {

243 i‡(!
	`tick_is£t
(
ts
->
expúe
))

246 
ts
->
exps
.
key
 =Ås->
expúe
;

247 
	`eb32_ö£π
(&
t
->
exps
, &
ts
->exps);

249 i‡(!
eb
 ||Éb->
key
 > 
ts
->
exps
.key)

250 
eb
 = &
ts
->
exps
;

255 
	`ebmb_dñëe
(&
ts
->
keys
);

256 
	`°k£ss_‰ì
(
t
, 
ts
);

260 
t
->
exp_√xt
 = 
TICK_ETERNITY
;

261  
t
->
exp_√xt
;

262 
	}
}

267 
èsk
 *
	$¥o˚ss_èbÀ_expúe
(
èsk
 *Åask)

269 
°kèbÀ
 *
t
 = (°kèbÀ *)
èsk
->
c⁄ãxt
;

271 
èsk
->
expúe
 = 
	`°kèbÀ_åash_expúed
(
t
);

272  
èsk
;

273 
	}
}

276 
	$°kèbÀ_öô
(
°kèbÀ
 *
t
)

278 i‡(
t
->
size
) {

279 
	`mem£t
(&
t
->
keys
, 0, (t->keys));

280 
	`mem£t
(&
t
->
exps
, 0, (t->exps));

282 
t
->
poﬁ
 = 
	`¸óã_poﬁ
("°ickèbÀs", (
°k£ss
Ë+Å->
key_size
, 
MEM_F_SHARED
);

284 
t
->
exp_√xt
 = 
TICK_ETERNITY
;

285 i‡–
t
->
expúe
 ) {

286 
t
->
exp_èsk
 = 
	`èsk_√w
();

287 
t
->
exp_èsk
->
¥o˚ss
 = 
¥o˚ss_èbÀ_expúe
;

288 
t
->
exp_èsk
->
expúe
 = 
TICK_ETERNITY
;

289 
t
->
exp_èsk
->
c⁄ãxt
 = (*)t;

291  
t
->
poﬁ
 !
NULL
;

294 
	}
}

299 
°kèbÀ_ty≥
 
	g°kèbÀ_ty≥s
[
STKTABLE_TYPES
] = { { "ip", 0, 4 } ,

301 { "°rög", 
STKTABLE_TYPEFLAG_CUSTOMKEYSIZE
, 32 } };

309 
	$°kèbÀ_∑r£_ty≥
(**
¨gs
, *
myidx
, *
ty≥
, 
size_t
 *
key_size
)

311 *
ty≥
 = 0; *ty≥ < 
STKTABLE_TYPES
; (*type)++) {

312 i‡(
	`°rcmp
(
¨gs
[*
myidx
], 
°kèbÀ_ty≥s
[*
ty≥
].
kw
) != 0)

315 *
key_size
 = 
°kèbÀ_ty≥s
[*
ty≥
].
deÁu…_size
;

316 (*
myidx
)++;

318 i‡(
°kèbÀ_ty≥s
[*
ty≥
].
Êags
 & 
STKTABLE_TYPEFLAG_CUSTOMKEYSIZE
) {

319 i‡(
	`°rcmp
("Àn", 
¨gs
[*
myidx
]) == 0) {

320 (*
myidx
)++;

321 *
key_size
 = 
	`©ﬁ
(
¨gs
[*
myidx
]);

322 i‡–!*
key_size
 )

325 (*
key_size
)++;

326 (*
myidx
)++;

332 
	}
}

	@src/stream_interface.c

13 
	~<î∫o.h
>

14 
	~<f˙é.h
>

15 
	~<°dio.h
>

16 
	~<°dlib.h
>

18 
	~<sys/sockë.h
>

19 
	~<sys/°©.h
>

20 
	~<sys/ty≥s.h
>

22 
	~<comm⁄/com∑t.h
>

23 
	~<comm⁄/c⁄fig.h
>

24 
	~<comm⁄/debug.h
>

25 
	~<comm⁄/°™d¨d.h
>

26 
	~<comm⁄/ticks.h
>

27 
	~<comm⁄/time.h
>

29 
	~<¥Ÿo/buf„rs.h
>

30 
	~<¥Ÿo/˛õ¡.h
>

31 
	~<¥Ÿo/fd.h
>

32 
	~<¥Ÿo/°ªam_öãrÁ˚.h
>

33 
	~<¥Ÿo/°ªam_sock.h
>

34 
	~<¥Ÿo/èsk.h
>

43 
	$°ªam_öt_check_timeouts
(
°ªam_öãrÁ˚
 *
si
)

45 i‡(
	`tick_is_expúed
(
si
->
exp
, 
now_ms
)) {

46 
si
->
Êags
 |
SI_FL_EXP
;

50 
	}
}

53 
	$°ªam_öt_ªp‹t_îr‹
(
°ªam_öãrÁ˚
 *
si
)

55 i‡(!
si
->
îr_ty≥
)

56 
si
->
îr_ty≥
 = 
SI_ET_DATA_ERR
;

58 
si
->
ob
->
Êags
 |
BF_WRITE_ERROR
;

59 
si
->
ib
->
Êags
 |
BF_READ_ERROR
;

60 
	}
}

71 
	$°ªam_öt_ªä˛o£
(
°ªam_öãrÁ˚
 *
si
, c⁄° 
chunk
 *
msg
)

73 
	`buf„r_auto_ªad
(
si
->
ib
);

74 
	`buf„r_ab‹t
(
si
->
ib
);

75 
	`buf„r_auto_˛o£
(
si
->
ib
);

76 
	`buf„r_îa£
(
si
->
ib
);

77 i‡(
	`likñy
(
msg
 && msg->
Àn
))

78 
	`buf„r_wrôe
(
si
->
ob
, 
msg
->
°r
, msg->
Àn
);

80 
si
->
ob
->
wex
 = 
	`tick_add_if£t
(
now_ms
, si->ob->
wto
);

81 
	`buf„r_auto_ªad
(
si
->
ob
);

82 
	`buf„r_auto_˛o£
(
si
->
ob
);

83 
	`buf„r_shuå_now
(
si
->
ob
);

84 
	}
}

87 
	$°ªam_öt_upd©e
(
°ªam_öãrÁ˚
 *
si
)

89 
	`DPRINTF
(
°dîr
, "%s: si=%p, si->state=%d ib->flags=%08x ob->flags=%08x\n",

90 
__FUNCTION__
,

91 
si
, si->
°©e
, si->
ib
->
Êags
, si->
ob
->flags);

93 i‡(!(
si
->
Êags
 & 
SI_FL_DONT_WAKE
Ë&& si->
ow√r
)

94 
	`èsk_wakeup
(
si
->
ow√r
, 
TASK_WOKEN_IO
);

95 
	}
}

98 
	$°ªam_öt_upd©e_embedded
(
°ªam_öãrÁ˚
 *
si
)

100 
	`DPRINTF
(
°dîr
, "%s: si=%p, si->state=%d ib->flags=%08x ob->flags=%08x\n",

101 
__FUNCTION__
,

102 
si
, si->
°©e
, si->
ib
->
Êags
, si->
ob
->flags);

104 i‡(
si
->
°©e
 !
SI_ST_EST
)

107 i‡((
si
->
ob
->
Êags
 & (
BF_OUT_EMPTY
|
BF_SHUTW
|
BF_HIJACK
|
BF_SHUTW_NOW
)) == (BF_OUT_EMPTY|BF_SHUTW_NOW))

108 
si
->
	`shutw
(si);

110 i‡((
si
->
ob
->
Êags
 & (
BF_FULL
|
BF_SHUTW
|
BF_SHUTW_NOW
|
BF_HIJACK
)) == 0)

111 
si
->
Êags
 |
SI_FL_WAIT_DATA
;

116 i‡((
si
->
ib
->
Êags
 & (
BF_SHUTR
|
BF_OUT_EMPTY
|
BF_DONT_READ
)) == 0)

117 
si
->
Êags
 |
SI_FL_WAIT_ROOM
;

119 i‡(
si
->
ob
->
Êags
 & 
BF_WRITE_ACTIVITY
) {

120 i‡(
	`tick_is£t
(
si
->
ob
->
wex
))

121 
si
->
ob
->
wex
 = 
	`tick_add_if£t
(
now_ms
, si->ob->
wto
);

124 i‡(
si
->
ib
->
Êags
 & 
BF_READ_ACTIVITY
 ||

125 (
si
->
ob
->
Êags
 & 
BF_WRITE_ACTIVITY
 && !(si->Êag†& 
SI_FL_INDEP_STR
))) {

126 i‡(
	`tick_is£t
(
si
->
ib
->
ªx
))

127 
si
->
ib
->
ªx
 = 
	`tick_add_if£t
(
now_ms
, si->ib->
πo
);

130 i‡(
	`likñy
((
si
->
ob
->
Êags
 & (
BF_SHUTW
|
BF_WRITE_PARTIAL
|
BF_FULL
|
BF_DONT_READ
)) == BF_WRITE_PARTIAL &&

131 (
si
->
ob
->
¥od
->
Êags
 & 
SI_FL_WAIT_ROOM
)))

132 
si
->
ob
->
¥od
->
	`chk_rcv
(si->ob->prod);

134 i‡(((
si
->
ib
->
Êags
 & (
BF_READ_PARTIAL
|
BF_OUT_EMPTY
)) == BF_READ_PARTIAL) &&

135 (
si
->
ib
->
c⁄s
->
Êags
 & 
SI_FL_WAIT_DATA
))

136 
si
->
ib
->
c⁄s
->
	`chk_¢d
(si->ib->cons);

146 (
si
->
Êags
 & 
SI_FL_ERR
Ë|| si->
°©e
 !
SI_ST_EST
 || si->
ib
->
c⁄s
->state != SI_ST_EST ||

148 (
si
->
ib
->
Êags
 & (
BF_READ_NULL
|
BF_READ_ERROR
|
BF_READ_DONTWAIT
)) ||

149 ((
si
->
ib
->
Êags
 & 
BF_READ_ACTIVITY
Ë&& !si->ib->
to_f‹w¨d
) ||

150 (!(
si
->
ib
->
Êags
 & 
BF_FULL
Ë&& (si->ib->Êag†& 
BF_WRITE_ACTIVITY
Ë&& si->ib->
to_f‹w¨d
) ||

152 (
si
->
ob
->
Êags
 & (
BF_WRITE_ERROR
)) ||

153 ((
si
->
ob
->
Êags
 & 
BF_WRITE_ACTIVITY
Ë&& (si->ob->Êag†& 
BF_OUT_EMPTY
Ë&& !si->ob->
to_f‹w¨d
) ||

154 (
si
->
ob
->
Êags
 & 
BF_READ_ACTIVITY
)) {

155 i‡(!(
si
->
Êags
 & 
SI_FL_DONT_WAKE
Ë&& si->
ow√r
)

156 
	`èsk_wakeup
(
si
->
ow√r
, 
TASK_WOKEN_IO
);

158 
	}
}

161 
	$°ªam_öt_shuå
(
°ªam_öãrÁ˚
 *
si
)

163 
	`DPRINTF
(
°dîr
, "%s: si=%p, si->state=%d ib->flags=%08x ob->flags=%08x\n",

164 
__FUNCTION__
,

165 
si
, si->
°©e
, si->
ib
->
Êags
, si->
ob
->flags);

167 
si
->
ib
->
Êags
 &~
BF_SHUTR_NOW
;

168 i‡(
si
->
ib
->
Êags
 & 
BF_SHUTR
)

170 
si
->
ib
->
Êags
 |
BF_SHUTR
;

171 
si
->
ib
->
ªx
 = 
TICK_ETERNITY
;

172 
si
->
Êags
 &~
SI_FL_WAIT_ROOM
;

174 i‡(
si
->
°©e
 !
SI_ST_EST
 && si->°©ê!
SI_ST_CON
)

177 i‡(
si
->
ob
->
Êags
 & 
BF_SHUTW
) {

178 
si
->
°©e
 = 
SI_ST_DIS
;

179 
si
->
exp
 = 
TICK_ETERNITY
;

183 i‡(!(
si
->
Êags
 & 
SI_FL_DONT_WAKE
Ë&& si->
ow√r
)

184 
	`èsk_wakeup
(
si
->
ow√r
, 
TASK_WOKEN_IO
);

185 
	}
}

188 
	$°ªam_öt_shutw
(
°ªam_öãrÁ˚
 *
si
)

190 
	`DPRINTF
(
°dîr
, "%s: si=%p, si->state=%d ib->flags=%08x ob->flags=%08x\n",

191 
__FUNCTION__
,

192 
si
, si->
°©e
, si->
ib
->
Êags
, si->
ob
->flags);

194 
si
->
ob
->
Êags
 &~
BF_SHUTW_NOW
;

195 i‡(
si
->
ob
->
Êags
 & 
BF_SHUTW
)

197 
si
->
ob
->
Êags
 |
BF_SHUTW
;

198 
si
->
ob
->
wex
 = 
TICK_ETERNITY
;

199 
si
->
Êags
 &~
SI_FL_WAIT_DATA
;

201 
si
->
°©e
) {

202 
SI_ST_EST
:

203 i‡(!(
si
->
ib
->
Êags
 & (
BF_SHUTR
|
BF_DONT_READ
)))

207 
SI_ST_CON
:

208 
SI_ST_CER
:

209 
si
->
°©e
 = 
SI_ST_DIS
;

212 
si
->
Êags
 &~
SI_FL_WAIT_ROOM
;

213 
si
->
ib
->
Êags
 |
BF_SHUTR
;

214 
si
->
ib
->
ªx
 = 
TICK_ETERNITY
;

215 
si
->
exp
 = 
TICK_ETERNITY
;

219 i‡(!(
si
->
Êags
 & 
SI_FL_DONT_WAKE
Ë&& si->
ow√r
)

220 
	`èsk_wakeup
(
si
->
ow√r
, 
TASK_WOKEN_IO
);

221 
	}
}

224 
	$°ªam_öt_chk_rcv
(
°ªam_öãrÁ˚
 *
si
)

226 
buf„r
 *
ib
 = 
si
->ib;

228 
	`DPRINTF
(
°dîr
, "%s: si=%p, si->state=%d ib->flags=%08x ob->flags=%08x\n",

229 
__FUNCTION__
,

230 
si
, si->
°©e
, si->
ib
->
Êags
, si->
ob
->flags);

232 i‡(
	`u∆ikñy
(
si
->
°©e
 !
SI_ST_EST
 || (
ib
->
Êags
 & 
BF_SHUTR
)))

235 i‡(
ib
->
Êags
 & (
BF_FULL
|
BF_HIJACK
|
BF_DONT_READ
)) {

237 i‡((
ib
->
Êags
 & (
BF_FULL
|
BF_HIJACK
|
BF_DONT_READ
)) == BF_FULL)

238 
si
->
Êags
 |
SI_FL_WAIT_ROOM
;

242 
si
->
Êags
 &~
SI_FL_WAIT_ROOM
;

243 i‡(!(
si
->
Êags
 & 
SI_FL_DONT_WAKE
Ë&& si->
ow√r
)

244 
	`èsk_wakeup
(
si
->
ow√r
, 
TASK_WOKEN_IO
);

246 
	}
}

249 
	$°ªam_öt_chk_¢d
(
°ªam_öãrÁ˚
 *
si
)

251 
buf„r
 *
ob
 = 
si
->ob;

253 
	`DPRINTF
(
°dîr
, "%s: si=%p, si->state=%d ib->flags=%08x ob->flags=%08x\n",

254 
__FUNCTION__
,

255 
si
, si->
°©e
, si->
ib
->
Êags
, si->
ob
->flags);

257 i‡(
	`u∆ikñy
(
si
->
°©e
 !
SI_ST_EST
 || (si->
ob
->
Êags
 & 
BF_SHUTW
)))

260 i‡(!(
si
->
Êags
 & 
SI_FL_WAIT_DATA
) ||

261 (
ob
->
Êags
 & 
BF_OUT_EMPTY
))

267 
si
->
Êags
 &~
SI_FL_WAIT_DATA
;

268 i‡(!
	`tick_is£t
(
ob
->
wex
))

269 
ob
->
wex
 = 
	`tick_add_if£t
(
now_ms
, ob->
wto
);

271 i‡(!(
si
->
Êags
 & 
SI_FL_DONT_WAKE
Ë&& si->
ow√r
)

272 
	`èsk_wakeup
(
si
->
ow√r
, 
TASK_WOKEN_IO
);

273 
	}
}

281 
èsk
 *
°ªam_öt_ªgi°î_h™dÀr
(
°ªam_öãrÁ˚
 *
si
,

282 (*
f˘
)(
°ªam_öãrÁ˚
 *))

284 
	`DPRINTF
(
°dîr
, "ªgi°îög h™dÀ∏%∞f‹ sò%∞(wa†%p)\n", 
f˘
, 
si
, si->
ow√r
);

286 
si
->
upd©e
 = 
°ªam_öt_upd©e_embedded
;

287 
si
->
shuå
 = 
°ªam_öt_shuå
;

288 
si
->
shutw
 = 
°ªam_öt_shutw
;

289 
si
->
chk_rcv
 = 
°ªam_öt_chk_rcv
;

290 
si
->
chk_¢d
 = 
°ªam_öt_chk_¢d
;

291 
si
->
c⁄√˘
 = 
NULL
;

292 
si
->
ioh™dÀr
 = 
f˘
;

293 
si
->
Êags
 |
SI_FL_WAIT_DATA
;

294  
si
->
ow√r
;

295 
	}
}

302 
èsk
 *
°ªam_öt_ªgi°î_h™dÀr_èsk
(
°ªam_öãrÁ˚
 *
si
,

303 
èsk
 *(*
f˘
)(task *))

305 
èsk
 *
	gt
;

307 
DPRINTF
(
°dîr
, "ªgi°îög h™dÀ∏%∞f‹ sò%∞(wa†%p)\n", 
f˘
, 
si
, si->
ow√r
);

309 
	gsi
->
	gupd©e
 = 
°ªam_öt_upd©e
;

310 
	gsi
->
	gshuå
 = 
°ªam_öt_shuå
;

311 
	gsi
->
	gshutw
 = 
°ªam_öt_shutw
;

312 
	gsi
->
	gchk_rcv
 = 
°ªam_öt_chk_rcv
;

313 
	gsi
->
	gchk_¢d
 = 
°ªam_öt_chk_¢d
;

314 
	gsi
->
	gc⁄√˘
 = 
NULL
;

315 
	gsi
->
	gioh™dÀr
 = 
NULL
;

316 
	gsi
->
	gÊags
 |
SI_FL_WAIT_DATA
;

318 
	gt
 = 
èsk_√w
();

319 
	gsi
->
	gow√r
 = 
t
;

320 i‡(!
	gt
)

321  
	gt
;

322 
	gt
->
	g¥o˚ss
 = 
f˘
;

323 
	gt
->
	gc⁄ãxt
 = 
si
;

324 
èsk_wakeup
(
si
->
ow√r
, 
TASK_WOKEN_INIT
);

326  
	gt
;

333 
	$°ªam_öt_uƒegi°î_h™dÀr
(
°ªam_öãrÁ˚
 *
si
)

335 i‡(!
si
->
ioh™dÀr
 && si->
ow√r
) {

337 
	`èsk_dñëe
(
si
->
ow√r
);

338 
	`èsk_‰ì
(
si
->
ow√r
);

340 
si
->
ioh™dÀr
 = 
NULL
;

341 
si
->
ow√r
 = 
NULL
;

342 
	}
}

	@src/stream_sock.c

13 
	#_GNU_SOURCE


	)

14 
	~<î∫o.h
>

15 
	~<f˙é.h
>

16 
	~<°dio.h
>

17 
	~<°dlib.h
>

19 
	~<sys/sockë.h
>

20 
	~<sys/°©.h
>

21 
	~<sys/ty≥s.h
>

23 
	~<√töë/t˝.h
>

25 
	~<comm⁄/com∑t.h
>

26 
	~<comm⁄/c⁄fig.h
>

27 
	~<comm⁄/debug.h
>

28 
	~<comm⁄/°™d¨d.h
>

29 
	~<comm⁄/ticks.h
>

30 
	~<comm⁄/time.h
>

32 
	~<¥Ÿo/buf„rs.h
>

33 
	~<¥Ÿo/˛õ¡.h
>

34 
	~<¥Ÿo/fd.h
>

35 
	~<¥Ÿo/pùe.h
>

36 
	~<¥Ÿo/¥Ÿocﬁs.h
>

37 
	~<¥Ÿo/°ªam_sock.h
>

38 
	~<¥Ÿo/èsk.h
>

40 
	~<ty≥s/globÆ.h
>

47 #i‡
deföed
(
CONFIG_HAP_LINUX_SPLICE
)

48 
	~<uni°d.h
>

49 
	~<sys/sysˇŒ.h
>

51 #i‚de‡
SPLICE_F_MOVE


52 
	#SPLICE_F_MOVE
 0x1

	)

55 #i‚de‡
SPLICE_F_NONBLOCK


56 
	#SPLICE_F_NONBLOCK
 0x2

	)

59 #i‚de‡
SPLICE_F_MORE


60 
	#SPLICE_F_MORE
 0x4

	)

63 #i‚de‡
__NR_•li˚


64 #i‡
deföed
(
__powîpc__
Ë|| deföed(
__powîpc64__
)

65 
	#__NR_•li˚
 283

	)

66 #ñi‡
deföed
(
__•¨c__
Ë|| deföed(
__•¨c64__
)

67 
	#__NR_•li˚
 232

	)

68 #ñi‡
deföed
(
__x86_64__
)

69 
	#__NR_•li˚
 275

	)

70 #ñi‡
deföed
(
__Æpha__
)

71 
	#__NR_•li˚
 468

	)

72 #ñi‡
deföed
 (
__i386__
)

73 
	#__NR_•li˚
 313

	)

75 #w¨nög 
unsuµ‹ãd
 
¨chôe˘uª
, 
guessög
 
__NR_•li˚
=313 
like
 
x86
...

76 
	#__NR_•li˚
 313

	)

79 
	$_sysˇŒ6
(, 
•li˚
, , 
fdö
, 
loff_t
 *, 
off_ö
, , 
fdout
,Üoff_à*, 
off_out
, 
size_t
, 
Àn
, , 
Êags
)

86 
	#SPLICE_FULL_HINT
 16*1448

	)

90 
	#MAX_SPLICE_AT_ONCE
 (1<<30)

	)

110 
	$°ªam_sock_•li˚_ö
(
buf„r
 *
b
, 
°ªam_öãrÁ˚
 *
si
)

112 
fd
 = 
si
->fd;

113 
ªt
;

114 
max
;

115 
ªtvÆ
 = 1;

117 i‡(!
b
->
to_f‹w¨d
)

120 i‡(!(
b
->
Êags
 & 
BF_KERN_SPLICING
))

123 i‡(
b
->
l
) {

129 
si
->
Êags
 |
SI_FL_WAIT_ROOM
;

130 
	`EV_FD_CLR
(
fd
, 
DIR_RD
);

131 
b
->
ªx
 = 
TICK_ETERNITY
;

132 
b
->
c⁄s
->
	`chk_¢d
(b->cons);

136 i‡(
	`u∆ikñy
(
b
->
pùe
 =
NULL
)) {

137 i‡(
pùes_u£d
 >
globÆ
.
maxpùes
 || !(
b
->
pùe
 = 
	`gë_pùe
())) {

138 
b
->
Êags
 &~
BF_KERN_SPLICING
;

146 i‡(
b
->
to_f‹w¨d
 =
BUF_INFINITE_FORWARD
)

147 
max
 = 
MAX_SPLICE_AT_ONCE
;

149 
max
 = 
b
->
to_f‹w¨d
;

151 i‡(!
max
) {

157 
ªtvÆ
 = -1;

161 
ªt
 = 
	`•li˚
(
fd
, 
NULL
, 
b
->
pùe
->
¥od
, NULL, 
max
,

162 
SPLICE_F_MOVE
|
SPLICE_F_NONBLOCK
);

164 i‡(
ªt
 <= 0) {

165 i‡(
ªt
 == 0) {

169 
b
->
Êags
 |
BF_READ_NULL
;

170 
ªtvÆ
 = 1;

174 i‡(
î∫o
 =
EAGAIN
) {

184 i‡(
b
->
pùe
->
d©a
) {

185 
si
->
Êags
 |
SI_FL_WAIT_ROOM
;

186 
ªtvÆ
 = 1;

196 
ªtvÆ
 = -1;

200 i‡(
î∫o
 =
ENOSYS
 ||Éºnÿ=
EINVAL
) {

202 
b
->
Êags
 &~
BF_KERN_SPLICING
;

203 
si
->
Êags
 &~
SI_FL_CAP_SPLICE
;

204 
	`put_pùe
(
b
->
pùe
);

205 
b
->
pùe
 = 
NULL
;

210 
si
->
Êags
 |
SI_FL_ERR
;

211 
ªtvÆ
 = 1;

215 i‡(
b
->
to_f‹w¨d
 !
BUF_INFINITE_FORWARD
)

216 
b
->
to_f‹w¨d
 -
ªt
;

217 
b
->
tŸÆ
 +
ªt
;

218 
b
->
pùe
->
d©a
 +
ªt
;

219 
b
->
Êags
 |
BF_READ_PARTIAL
;

220 
b
->
Êags
 &~
BF_OUT_EMPTY
;

222 i‡(
b
->
pùe
->
d©a
 >
SPLICE_FULL_HINT
 ||

223 
ªt
 >
globÆ
.
tu√
.
ªcv_íough
) {

225 
ªtvÆ
 = 1;

230 i‡(
	`u∆ikñy
(!
b
->
pùe
->
d©a
)) {

231 
	`put_pùe
(
b
->
pùe
);

232 
b
->
pùe
 = 
NULL
;

235  
ªtvÆ
;

236 
	}
}

247 
	$°ªam_sock_ªad
(
fd
) {

248 
°ªam_öãrÁ˚
 *
si
 = 
fdèb
[
fd
].
ow√r
;

249 
buf„r
 *
b
 = 
si
->
ib
;

250 
ªt
, 
max
, 
ªtvÆ
, 
cur_ªad
;

251 
ªad_pﬁl
 = 
MAX_READ_POLL_LOOPS
;

253 #ifde‡
DEBUG_FULL


254 
	`Ârötf
(
°dîr
,"°ªam_sock_ªad : fd=%d,Év=0x%02x, ow√r=%p\n", 
fd
, 
fdèb
[fd].
ev
, fdèb[fd].
ow√r
);

257 
ªtvÆ
 = 1;

265 i‡(
fdèb
[
fd
].
°©e
 =
FD_STERROR
)

266 
out_îr‹
;

269 i‡((
fdèb
[
fd
].
ev
 & (
FD_POLL_IN
|
FD_POLL_HUP
)) == FD_POLL_HUP)

270 
out_shutdown_r
;

273 i‡(
b
->
Êags
 & 
BF_SHUTR
)

274 
out_wakeup
;

276 #i‡
	`deföed
(
CONFIG_HAP_LINUX_SPLICE
)

277 i‡(
b
->
to_f‹w¨d
 && b->
Êags
 & 
BF_KERN_SPLICING
) {

283 i‡(
fdèb
[
fd
].
ev
 & 
FD_POLL_HUP
)

284 
out_shutdown_r
;

286 
ªtvÆ
 = 
	`°ªam_sock_•li˚_ö
(
b
, 
si
);

288 i‡(
ªtvÆ
 >= 0) {

289 i‡(
si
->
Êags
 & 
SI_FL_ERR
)

290 
out_îr‹
;

291 i‡(
b
->
Êags
 & 
BF_READ_NULL
)

292 
out_shutdown_r
;

293 
out_wakeup
;

298 
cur_ªad
 = 0;

300 
max
 = 
	`buf„r_max_Àn
(
b
Ë- b->
l
;

302 i‡(
max
 <= 0) {

303 
b
->
Êags
 |
BF_FULL
;

304 
si
->
Êags
 |
SI_FL_WAIT_ROOM
;

311 i‡(
b
->
l
 == 0) {

313 
b
->
r
 = b->
w
 = b->
Ã
 = b->
d©a
;

315 i‡(
b
->
r
 > b->
w
) {

317 i‡(
max
 > 
b
->
d©a
 + b->
size
 - b->
r
)

318 
max
 = 
b
->
d©a
 + b->
size
 - b->
r
;

325 
ªt
 = 
	`ªcv
(
fd
, 
b
->
r
, 
max
, 0);

327 i‡(
ªt
 > 0) {

328 
b
->
r
 +
ªt
;

329 
b
->
l
 +
ªt
;

330 
cur_ªad
 +
ªt
;

333 i‡(
b
->
to_f‹w¨d
 && !(b->
Êags
 & (
BF_SHUTW
|
BF_SHUTW_NOW
))) {

334 
fwd
 = 
ªt
;

335 i‡(
b
->
to_f‹w¨d
 !
BUF_INFINITE_FORWARD
) {

336 i‡(
fwd
 > 
b
->
to_f‹w¨d
)

337 
fwd
 = 
b
->
to_f‹w¨d
;

338 
b
->
to_f‹w¨d
 -
fwd
;

340 
b
->
£nd_max
 +
fwd
;

341 
b
->
Êags
 &~
BF_OUT_EMPTY
;

344 i‡(
fdèb
[
fd
].
°©e
 =
FD_STCONN
)

345 
fdèb
[
fd
].
°©e
 = 
FD_STREADY
;

347 
b
->
Êags
 |
BF_READ_PARTIAL
;

349 i‡(
b
->
r
 =b->
d©a
 + b->
size
) {

350 
b
->
r
 = b->
d©a
;

353 
b
->
tŸÆ
 +
ªt
;

355 i‡(
b
->
l
 >
	`buf„r_max_Àn
(b)) {

359 i‡(!(
b
->
Êags
 & 
BF_STREAMER_FAST
Ë&& (
cur_ªad
 =b->
l
)) {

360 
b
->
x„r_smÆl
 = 0;

361 
b
->
x„r_œrge
++;

362 i‡(
b
->
x„r_œrge
 >= 3) {

366 
b
->
Êags
 |(
BF_STREAMER
 | 
BF_STREAMER_FAST
);

370 i‡((
b
->
Êags
 & (
BF_STREAMER
 | 
BF_STREAMER_FAST
)) &&

371 (
cur_ªad
 <
b
->
size
 / 2)) {

372 
b
->
x„r_œrge
 = 0;

373 
b
->
x„r_smÆl
++;

374 i‡(
b
->
x„r_smÆl
 >= 2) {

379 
b
->
Êags
 &~
BF_STREAMER_FAST
;

384 
b
->
x„r_smÆl
 = 0;

385 
b
->
x„r_œrge
 = 0;

388 
b
->
Êags
 |
BF_FULL
;

389 
si
->
Êags
 |
SI_FL_WAIT_ROOM
;

399 i‡(
ªt
 < 
max
) {

400 i‡((
b
->
Êags
 & (
BF_STREAMER
 | 
BF_STREAMER_FAST
)) &&

401 (
cur_ªad
 <
b
->
size
 / 2)) {

402 
b
->
x„r_œrge
 = 0;

403 
b
->
x„r_smÆl
++;

404 i‡(
b
->
x„r_smÆl
 >= 3) {

409 
b
->
Êags
 &~(
BF_STREAMER
 | 
BF_STREAMER_FAST
);

417 i‡(
fdèb
[
fd
].
ev
 & 
FD_POLL_HUP
)

418 
out_shutdown_r
;

424 i‡(
b
->
Êags
 & 
BF_STREAMER
)

436 i‡(
ªt
 < 
MIN_RET_FOR_READ_LOOP
 && 
b
->
Êags
 & 
BF_STREAMER
)

442 i‡(
ªt
 >
globÆ
.
tu√
.
ªcv_íough
)

446 i‡((
b
->
Êags
 & 
BF_READ_DONTWAIT
Ë|| --
ªad_pﬁl
 <= 0)

449 i‡(
ªt
 == 0) {

451 
out_shutdown_r
;

453 i‡(
î∫o
 =
EAGAIN
) {

460 i‡(
cur_ªad
 < 
MIN_RET_FOR_READ_LOOP
)

461 
ªtvÆ
 = 0;

465 
out_îr‹
;

469 
out_wakeup
:

471 i‡(!(
b
->
Êags
 & 
BF_OUT_EMPTY
Ë&& (b->
c⁄s
->Êag†& 
SI_FL_WAIT_DATA
)) {

472 
œ°_Àn
 = 
b
->
pùe
 ? b->pùe->
d©a
 : 0;

474 
b
->
c⁄s
->
	`chk_¢d
(b->cons);

477 i‡(!(
b
->
Êags
 & 
BF_FULL
) &&

478 (!
œ°_Àn
 || !
b
->
pùe
 || b->pùe->
d©a
 <Üast_len))

479 
si
->
Êags
 &~
SI_FL_WAIT_ROOM
;

482 i‡(
si
->
Êags
 & 
SI_FL_WAIT_ROOM
) {

483 
	`EV_FD_CLR
(
fd
, 
DIR_RD
);

484 
b
->
ªx
 = 
TICK_ETERNITY
;

486 i‡((
b
->
Êags
 & (
BF_SHUTR
|
BF_READ_PARTIAL
|
BF_FULL
|
BF_DONT_READ
|
BF_READ_NOEXP
)) == BF_READ_PARTIAL)

487 
b
->
ªx
 = 
	`tick_add_if£t
(
now_ms
, b->
πo
);

492 i‡((
b
->
Êags
 & (
BF_READ_NULL
|
BF_READ_ERROR
|
BF_SHUTR
|
BF_READ_DONTWAIT
)) ||

493 !
b
->
to_f‹w¨d
 ||

494 
si
->
°©e
 !
SI_ST_EST
 ||

495 
b
->
c⁄s
->
°©e
 !
SI_ST_EST
 ||

496 (
si
->
Êags
 & 
SI_FL_ERR
))

497 
	`èsk_wakeup
(
si
->
ow√r
, 
TASK_WOKEN_IO
);

499 
b
->
Êags
 &~
BF_READ_DONTWAIT
;

500 
fdèb
[
fd
].
ev
 &~
FD_POLL_IN
;

501  
ªtvÆ
;

503 
out_shutdown_r
:

505 
fdèb
[
fd
].
ev
 &~
FD_POLL_HUP
;

506 
b
->
Êags
 |
BF_READ_NULL
;

507 i‡(
b
->
Êags
 & 
BF_AUTO_CLOSE
)

508 
	`buf„r_shutw_now
(
b
);

509 
	`°ªam_sock_shuå
(
si
);

510 
out_wakeup
;

512 
out_îr‹
:

520 
fdèb
[
fd
].
°©e
 = 
FD_STERROR
;

521 
fdèb
[
fd
].
ev
 &~
FD_POLL_STICKY
;

522 
	`EV_FD_REM
(
fd
);

523 
si
->
Êags
 |
SI_FL_ERR
;

524 
ªtvÆ
 = 1;

525 
out_wakeup
;

526 
	}
}

535 
	$°ªam_sock_wrôe_lo›
(
°ªam_öãrÁ˚
 *
si
, 
buf„r
 *
b
)

537 
wrôe_pﬁl
 = 
MAX_WRITE_POLL_LOOPS
;

538 
ªtvÆ
 = 1;

539 
ªt
, 
max
;

541 #i‡
	`deföed
(
CONFIG_HAP_LINUX_SPLICE
)

542 
b
->
pùe
) {

543 
ªt
 = 
	`•li˚
(
b
->
pùe
->
c⁄s
, 
NULL
, 
si
->
fd
, NULL, b->pùe->
d©a
,

544 
SPLICE_F_MOVE
|
SPLICE_F_NONBLOCK
);

545 i‡(
ªt
 <= 0) {

546 i‡(
ªt
 =0 || 
î∫o
 =
EAGAIN
) {

547 
ªtvÆ
 = 0;

548  
ªtvÆ
;

551 
ªtvÆ
 = -1;

552  
ªtvÆ
;

555 
b
->
Êags
 |
BF_WRITE_PARTIAL
;

556 
b
->
pùe
->
d©a
 -
ªt
;

558 i‡(!
b
->
pùe
->
d©a
) {

559 
	`put_pùe
(
b
->
pùe
);

560 
b
->
pùe
 = 
NULL
;

564 i‡(--
wrôe_pﬁl
 <= 0)

565  
ªtvÆ
;

572 i‡(!
b
->
£nd_max
) {

573 
b
->
Êags
 |
BF_OUT_EMPTY
;

574  
ªtvÆ
;

581 i‡(
b
->
r
 > b->
w
)

582 
max
 = 
b
->
r
 - b->
w
;

584 
max
 = 
b
->
d©a
 + b->
size
 - b->
w
;

587 i‡(
max
 > 
b
->
£nd_max
)

588 
max
 = 
b
->
£nd_max
;

601 i‡(
MSG_NOSIGNAL
 && 
MSG_MORE
) {

602 
£nd_Êag
 = 
MSG_DONTWAIT
 | 
MSG_NOSIGNAL
;

604 i‡(((
b
->
to_f‹w¨d
 && b->to_f‹w¨d !
BUF_INFINITE_FORWARD
) ||

605 ((
b
->
Êags
 & (
BF_SHUTW
|
BF_SHUTW_NOW
|
BF_HIJACK
)Ë=BF_SHUTW_NOW && (
max
 =b->
£nd_max
)) ||

606 (
max
 !
b
->
l
 && max !b->
£nd_max
))

607 && (
fdèb
[
si
->
fd
].
Êags
 & 
FD_FL_TCP
)) {

608 
£nd_Êag
 |
MSG_MORE
;

610 i‡(
b
->
Êags
 & 
BF_EXPECT_MORE
) {

612 
b
->
Êags
 &~
BF_EXPECT_MORE
;

613 
£nd_Êag
 |
MSG_MORE
;

617 i‡(
b
->
Êags
 & 
BF_SEND_DONTWAIT
)

618 
£nd_Êag
 &~
MSG_MORE
;

620 
ªt
 = 
	`£nd
(
si
->
fd
, 
b
->
w
, 
max
, 
£nd_Êag
);

623 i‡(
ªt
 =
max
 && (
b
->
Êags
 & 
BF_SEND_DONTWAIT
))

624 
b
->
Êags
 &~
BF_SEND_DONTWAIT
;

626 
skîr
;

627 
sockÀn_t
 
lskîr
 = (
skîr
);

629 
ªt
 = 
	`gësock›t
(
si
->
fd
, 
SOL_SOCKET
, 
SO_ERROR
, &
skîr
, &
lskîr
);

630 i‡(
ªt
 =-1 || 
skîr
)

631 
ªt
 = -1;

633 
ªt
 = 
	`£nd
(
si
->
fd
, 
b
->
w
, 
max
, 
MSG_DONTWAIT
);

636 i‡(
ªt
 > 0) {

637 i‡(
fdèb
[
si
->
fd
].
°©e
 =
FD_STCONN
)

638 
fdèb
[
si
->
fd
].
°©e
 = 
FD_STREADY
;

640 
b
->
Êags
 |
BF_WRITE_PARTIAL
;

642 
b
->
w
 +
ªt
;

643 i‡(
b
->
w
 =b->
d©a
 + b->
size
)

644 
b
->
w
 = b->
d©a
;

646 
b
->
l
 -
ªt
;

647 i‡(
	`likñy
(
b
->
l
 < 
	`buf„r_max_Àn
(b)))

648 
b
->
Êags
 &~
BF_FULL
;

650 i‡(
	`likñy
(!
b
->
l
))

652 
b
->
r
 = b->
w
 = b->
Ã
 = b->
d©a
;

654 
b
->
£nd_max
 -
ªt
;

655 i‡(!
b
->
£nd_max
) {

656 i‡(
	`likñy
(!
b
->
pùe
))

657 
b
->
Êags
 |
BF_OUT_EMPTY
;

662 i‡(
ªt
 < 
max
)

665 i‡(--
wrôe_pﬁl
 <= 0)

668 i‡(
ªt
 =0 || 
î∫o
 =
EAGAIN
) {

670 
ªtvÆ
 = 0;

675 
ªtvÆ
 = -1;

680  
ªtvÆ
;

681 
	}
}

689 
	$°ªam_sock_wrôe
(
fd
)

691 
°ªam_öãrÁ˚
 *
si
 = 
fdèb
[
fd
].
ow√r
;

692 
buf„r
 *
b
 = 
si
->
ob
;

693 
ªtvÆ
 = 1;

695 #ifde‡
DEBUG_FULL


696 
	`Ârötf
(
°dîr
,"°ªam_sock_wrôê: fd=%d, ow√r=%p\n", 
fd
, 
fdèb
[fd].
ow√r
);

699 
ªtvÆ
 = 1;

700 i‡(
fdèb
[
fd
].
°©e
 =
FD_STERROR
)

701 
out_îr‹
;

704 i‡(
b
->
Êags
 & 
BF_SHUTW
)

705 
out_wakeup
;

707 i‡(
	`likñy
(!(
b
->
Êags
 & 
BF_OUT_EMPTY
))) {

709 
ªtvÆ
 = 
	`°ªam_sock_wrôe_lo›
(
si
, 
b
);

710 i‡(
ªtvÆ
 < 0)

711 
out_îr‹
;

715 i‡(
	`likñy
(
fdèb
[
fd
].
°©e
 =
FD_STCONN
)) {

725 i‡((
	`c⁄√˘
(
fd
, 
fdöfo
[fd].
≥îaddr
, fdöfo[fd].
≥îÀn
) == 0))

726 
î∫o
 = 0;

728 i‡(
î∫o
 =
EALREADY
 ||Éºnÿ=
EINPROGRESS
) {

729 
ªtvÆ
 = 0;

730 
out_may_wakeup
;

733 i‡(
î∫o
 &&Éºnÿ!
EISCONN
)

734 
out_îr‹
;

739 
b
->
Êags
 |
BF_WRITE_NULL
;

740 
fdèb
[
fd
].
°©e
 = 
FD_STREADY
;

751 i‡(
b
->
Êags
 & 
BF_OUT_EMPTY
) {

757 i‡(((
b
->
Êags
 & (
BF_SHUTW
|
BF_HIJACK
|
BF_SHUTW_NOW
)) == BF_SHUTW_NOW) &&

758 (
si
->
°©e
 =
SI_ST_EST
)) {

759 
	`°ªam_sock_shutw
(
si
);

760 
out_wakeup
;

763 i‡((
b
->
Êags
 & (
BF_SHUTW
|
BF_SHUTW_NOW
|
BF_FULL
|
BF_HIJACK
)) == 0)

764 
si
->
Êags
 |
SI_FL_WAIT_DATA
;

766 
	`EV_FD_CLR
(
fd
, 
DIR_WR
);

767 
b
->
wex
 = 
TICK_ETERNITY
;

770 
out_may_wakeup
:

771 i‡(
b
->
Êags
 & 
BF_WRITE_ACTIVITY
) {

773 i‡((
b
->
Êags
 & (
BF_OUT_EMPTY
|
BF_SHUTW
|
BF_WRITE_PARTIAL
)) == BF_WRITE_PARTIAL)

774 
b
->
wex
 = 
	`tick_add_if£t
(
now_ms
, b->
wto
);

776 
out_wakeup
:

777 i‡(
	`tick_is£t
(
si
->
ib
->
ªx
Ë&& !(si->
Êags
 & 
SI_FL_INDEP_STR
)) {

786 
si
->
ib
->
ªx
 = 
	`tick_add_if£t
(
now_ms
, si->ib->
πo
);

790 i‡(
	`likñy
((
b
->
Êags
 & (
BF_SHUTW
|
BF_WRITE_PARTIAL
|
BF_FULL
|
BF_DONT_READ
)) == BF_WRITE_PARTIAL &&

791 (
b
->
¥od
->
Êags
 & 
SI_FL_WAIT_ROOM
)))

792 
b
->
¥od
->
	`chk_rcv
(b->prod);

797 i‡(
	`likñy
((
b
->
Êags
 & (
BF_WRITE_NULL
|
BF_WRITE_ERROR
|
BF_SHUTW
)) ||

798 ((
b
->
Êags
 & 
BF_OUT_EMPTY
Ë&& !b->
to_f‹w¨d
) ||

799 
si
->
°©e
 !
SI_ST_EST
 ||

800 
b
->
¥od
->
°©e
 !
SI_ST_EST
))

801 
	`èsk_wakeup
(
si
->
ow√r
, 
TASK_WOKEN_IO
);

804 
fdèb
[
fd
].
ev
 &~
FD_POLL_OUT
;

805  
ªtvÆ
;

807 
out_îr‹
:

815 
fdèb
[
fd
].
°©e
 = 
FD_STERROR
;

816 
fdèb
[
fd
].
ev
 &~
FD_POLL_STICKY
;

817 
	`EV_FD_REM
(
fd
);

818 
si
->
Êags
 |
SI_FL_ERR
;

819 
	`èsk_wakeup
(
si
->
ow√r
, 
TASK_WOKEN_IO
);

821 
	}
}

830 
	$°ªam_sock_shutw
(
°ªam_öãrÁ˚
 *
si
)

832 
si
->
ob
->
Êags
 &~
BF_SHUTW_NOW
;

833 i‡(
si
->
ob
->
Êags
 & 
BF_SHUTW
)

835 
si
->
ob
->
Êags
 |
BF_SHUTW
;

836 
si
->
ob
->
wex
 = 
TICK_ETERNITY
;

837 
si
->
Êags
 &~
SI_FL_WAIT_DATA
;

839 
si
->
°©e
) {

840 
SI_ST_EST
:

847 i‡(
si
->
Êags
 & 
SI_FL_ERR
) {

849 
si
->
Êags
 &~
SI_FL_NOLINGER
;

850 } i‡(
si
->
Êags
 & 
SI_FL_NOLINGER
) {

851 
si
->
Êags
 &~
SI_FL_NOLINGER
;

852 
	`£tsock›t
(
si
->
fd
, 
SOL_SOCKET
, 
SO_LINGER
,

853 (
lögî
 *Ë&
nﬁögî
, (linger));

855 
	`EV_FD_CLR
(
si
->
fd
, 
DIR_WR
);

856 
	`shutdown
(
si
->
fd
, 
SHUT_WR
);

858 i‡(!(
si
->
ib
->
Êags
 & (
BF_SHUTR
|
BF_DONT_READ
)))

863 
SI_ST_CON
:

867 
	`fd_dñëe
(
si
->
fd
);

869 
SI_ST_CER
:

870 
si
->
°©e
 = 
SI_ST_DIS
;

872 
si
->
Êags
 &~
SI_FL_WAIT_ROOM
;

873 
si
->
ib
->
Êags
 |
BF_SHUTR
;

874 
si
->
ib
->
ªx
 = 
TICK_ETERNITY
;

875 
si
->
exp
 = 
TICK_ETERNITY
;

878 
	}
}

886 
	$°ªam_sock_shuå
(
°ªam_öãrÁ˚
 *
si
)

888 
si
->
ib
->
Êags
 &~
BF_SHUTR_NOW
;

889 i‡(
si
->
ib
->
Êags
 & 
BF_SHUTR
)

891 
si
->
ib
->
Êags
 |
BF_SHUTR
;

892 
si
->
ib
->
ªx
 = 
TICK_ETERNITY
;

893 
si
->
Êags
 &~
SI_FL_WAIT_ROOM
;

895 i‡(
si
->
°©e
 !
SI_ST_EST
 && si->°©ê!
SI_ST_CON
)

898 i‡(
si
->
ob
->
Êags
 & 
BF_SHUTW
) {

899 
	`fd_dñëe
(
si
->
fd
);

900 
si
->
°©e
 = 
SI_ST_DIS
;

901 
si
->
exp
 = 
TICK_ETERNITY
;

904 
	`EV_FD_CLR
(
si
->
fd
, 
DIR_RD
);

906 
	}
}

914 
	$°ªam_sock_d©a_föish
(
°ªam_öãrÁ˚
 *
si
)

916 
buf„r
 *
ib
 = 
si
->ib;

917 
buf„r
 *
ob
 = 
si
->ob;

918 
fd
 = 
si
->fd;

920 
	`DPRINTF
(
°dîr
,"[%u] %s: fd=%d owner=%p ib=%p, ob=%p,Éxp(r,w)=%u,%u ibf=%08x obf=%08x ibl=%d obl=%d si=%d\n",

921 
now_ms
, 
__FUNCTION__
,

922 
fd
, 
fdèb
[fd].
ow√r
,

923 
ib
, 
ob
,

924 
ib
->
ªx
, 
ob
->
wex
,

925 
ib
->
Êags
, 
ob
->flags,

926 
ib
->
l
, 
ob
->l, 
si
->
°©e
);

929 i‡(!(
ib
->
Êags
 & 
BF_SHUTR
)) {

931 i‡(
ib
->
Êags
 & (
BF_FULL
|
BF_HIJACK
|
BF_DONT_READ
)) {

933 i‡((
ib
->
Êags
 & (
BF_FULL
|
BF_HIJACK
|
BF_DONT_READ
)) == BF_FULL)

934 
si
->
Êags
 |
SI_FL_WAIT_ROOM
;

935 
	`EV_FD_COND_C
(
fd
, 
DIR_RD
);

936 
ib
->
ªx
 = 
TICK_ETERNITY
;

944 
si
->
Êags
 &~
SI_FL_WAIT_ROOM
;

945 
	`EV_FD_COND_S
(
fd
, 
DIR_RD
);

946 i‡(!(
ib
->
Êags
 & (
BF_READ_NOEXP
|
BF_DONT_READ
)Ë&& !
	`tick_is£t
(ib->
ªx
))

947 
ib
->
ªx
 = 
	`tick_add_if£t
(
now_ms
, ib->
πo
);

952 i‡(!(
ob
->
Êags
 & 
BF_SHUTW
)) {

954 i‡(
ob
->
Êags
 & 
BF_OUT_EMPTY
) {

956 i‡((
ob
->
Êags
 & (
BF_FULL
|
BF_HIJACK
|
BF_SHUTW_NOW
)) == 0)

957 
si
->
Êags
 |
SI_FL_WAIT_DATA
;

958 
	`EV_FD_COND_C
(
fd
, 
DIR_WR
);

959 
ob
->
wex
 = 
TICK_ETERNITY
;

967 
si
->
Êags
 &~
SI_FL_WAIT_DATA
;

968 
	`EV_FD_COND_S
(
fd
, 
DIR_WR
);

969 i‡(!
	`tick_is£t
(
ob
->
wex
)) {

970 
ob
->
wex
 = 
	`tick_add_if£t
(
now_ms
, ob->
wto
);

971 i‡(
	`tick_is£t
(
ib
->
ªx
Ë&& !(
si
->
Êags
 & 
SI_FL_INDEP_STR
)) {

978 
ib
->
ªx
 = 
	`tick_add_if£t
(
now_ms
, ib->
πo
);

983 
	}
}

990 
	$°ªam_sock_chk_rcv
(
°ªam_öãrÁ˚
 *
si
)

992 
buf„r
 *
ib
 = 
si
->ib;

994 
	`DPRINTF
(
°dîr
,"[%u] %s: fd=%d owner=%p ib=%p, ob=%p,Éxp(r,w)=%u,%u ibf=%08x obf=%08x ibl=%d obl=%d si=%d\n",

995 
now_ms
, 
__FUNCTION__
,

996 
si
->
fd
, 
fdèb
[si->fd].
ow√r
,

997 
ib
, 
si
->
ob
,

998 
ib
->
ªx
, 
si
->
ob
->
wex
,

999 
ib
->
Êags
, 
si
->
ob
->flags,

1000 
ib
->
l
, 
si
->
ob
->l, si->
°©e
);

1002 i‡(
	`u∆ikñy
(
si
->
°©e
 !
SI_ST_EST
 || (
ib
->
Êags
 & 
BF_SHUTR
)))

1005 i‡(
ib
->
Êags
 & (
BF_FULL
|
BF_HIJACK
|
BF_DONT_READ
)) {

1007 i‡((
ib
->
Êags
 & (
BF_FULL
|
BF_HIJACK
|
BF_DONT_READ
)) == BF_FULL)

1008 
si
->
Êags
 |
SI_FL_WAIT_ROOM
;

1009 
	`EV_FD_COND_C
(
si
->
fd
, 
DIR_RD
);

1013 
si
->
Êags
 &~
SI_FL_WAIT_ROOM
;

1014 
	`EV_FD_COND_S
(
si
->
fd
, 
DIR_RD
);

1016 
	}
}

1024 
	$°ªam_sock_chk_¢d
(
°ªam_öãrÁ˚
 *
si
)

1026 
buf„r
 *
ob
 = 
si
->ob;

1027 
ªtvÆ
;

1029 
	`DPRINTF
(
°dîr
,"[%u] %s: fd=%d owner=%p ib=%p, ob=%p,Éxp(r,w)=%u,%u ibf=%08x obf=%08x ibl=%d obl=%d si=%d\n",

1030 
now_ms
, 
__FUNCTION__
,

1031 
si
->
fd
, 
fdèb
[si->fd].
ow√r
,

1032 
si
->
ib
, 
ob
,

1033 
si
->
ib
->
ªx
, 
ob
->
wex
,

1034 
si
->
ib
->
Êags
, 
ob
->flags,

1035 
si
->
ib
->
l
, 
ob
->l, si->
°©e
);

1037 i‡(
	`u∆ikñy
(
si
->
°©e
 !
SI_ST_EST
 || (
ob
->
Êags
 & 
BF_SHUTW
)))

1040 i‡(!(
si
->
Êags
 & 
SI_FL_WAIT_DATA
) ||

1041 (
fdèb
[
si
->
fd
].
ev
 & 
FD_POLL_OUT
) ||

1042 (
ob
->
Êags
 & 
BF_OUT_EMPTY
))

1045 
ªtvÆ
 = 
	`°ªam_sock_wrôe_lo›
(
si
, 
ob
);

1051 i‡(
ªtvÆ
 < 0) {

1055 
fdèb
[
si
->
fd
].
°©e
 = 
FD_STERROR
;

1056 
fdèb
[
si
->
fd
].
ev
 &~
FD_POLL_STICKY
;

1057 
	`EV_FD_REM
(
si
->
fd
);

1058 
si
->
Êags
 |
SI_FL_ERR
;

1059 
out_wakeup
;

1066 i‡(
ob
->
Êags
 & 
BF_OUT_EMPTY
) {

1072 i‡(((
ob
->
Êags
 & (
BF_SHUTW
|
BF_HIJACK
|
BF_AUTO_CLOSE
|
BF_SHUTW_NOW
)) ==

1073 (
BF_AUTO_CLOSE
|
BF_SHUTW_NOW
)) &&

1074 (
si
->
°©e
 =
SI_ST_EST
)) {

1075 
	`°ªam_sock_shutw
(
si
);

1076 
out_wakeup
;

1079 i‡((
ob
->
Êags
 & (
BF_SHUTW
|
BF_SHUTW_NOW
|
BF_FULL
|
BF_HIJACK
)) == 0)

1080 
si
->
Êags
 |
SI_FL_WAIT_DATA
;

1081 
ob
->
wex
 = 
TICK_ETERNITY
;

1087 
	`EV_FD_COND_S
(
si
->
fd
, 
DIR_WR
);

1088 
si
->
Êags
 &~
SI_FL_WAIT_DATA
;

1089 i‡(!
	`tick_is£t
(
ob
->
wex
))

1090 
ob
->
wex
 = 
	`tick_add_if£t
(
now_ms
, ob->
wto
);

1093 i‡(
	`likñy
(
ob
->
Êags
 & 
BF_WRITE_ACTIVITY
)) {

1095 i‡((
ob
->
Êags
 & (
BF_OUT_EMPTY
|
BF_SHUTW
|
BF_WRITE_PARTIAL
)) == BF_WRITE_PARTIAL)

1096 
ob
->
wex
 = 
	`tick_add_if£t
(
now_ms
, ob->
wto
);

1098 i‡(
	`tick_is£t
(
si
->
ib
->
ªx
Ë&& !(si->
Êags
 & 
SI_FL_INDEP_STR
)) {

1107 
si
->
ib
->
ªx
 = 
	`tick_add_if£t
(
now_ms
, si->ib->
πo
);

1114 i‡(
	`likñy
((
ob
->
Êags
 & (
BF_WRITE_NULL
|
BF_WRITE_ERROR
|
BF_SHUTW
)) ||

1115 ((
ob
->
Êags
 & 
BF_OUT_EMPTY
Ë&& !ob->
to_f‹w¨d
) ||

1116 
si
->
°©e
 !
SI_ST_EST
)) {

1117 
out_wakeup
:

1118 i‡(!(
si
->
Êags
 & 
SI_FL_DONT_WAKE
Ë&& si->
ow√r
)

1119 
	`èsk_wakeup
(
si
->
ow√r
, 
TASK_WOKEN_IO
);

1121 
	}
}

	@src/task.c

13 
	~<°rög.h
>

15 
	~<comm⁄/c⁄fig.h
>

16 
	~<comm⁄/mem‹y.h
>

17 
	~<comm⁄/möi-˛i°.h
>

18 
	~<comm⁄/°™d¨d.h
>

19 
	~<comm⁄/time.h
>

20 
	~<eb32åì.h
>

22 
	~<¥Ÿo/¥oxy.h
>

23 
	~<¥Ÿo/£ssi⁄.h
>

24 
	~<¥Ÿo/èsk.h
>

26 
poﬁ_hód
 *
	gpoﬁ2_èsk
;

28 
	gnb_èsks
 = 0;

29 
	grun_queue
 = 0;

30 
	grun_queue_cur
 = 0;

31 
	gnb_èsks_cur
 = 0;

32 
	gni˚d_èsks
 = 0;

33 
eb32_node
 *
	gœ°_timî
 = 
NULL
;

35 
eb_roŸ
 
	gtimîs
;

36 
eb_roŸ
 
	grqueue
;

37 
	grqueue_ticks
;

47 
èsk
 *
	$__èsk_wakeup
(
èsk
 *
t
)

49 
run_queue
++;

50 
t
->
rq
.
key
 = ++
rqueue_ticks
;

52 i‡(
	`likñy
(
t
->
ni˚
)) {

53 
off£t
;

55 
ni˚d_èsks
++;

56 i‡(
	`likñy
(
t
->
ni˚
 > 0))

57 
off£t
 = ()((
run_queue
 * ()
t
->
ni˚
) / 32U);

59 
off£t
 = -()((
run_queue
 * ()-
t
->
ni˚
) / 32U);

60 
t
->
rq
.
key
 +
off£t
;

64 
t
->
°©e
 &~
TASK_WOKEN_ANY
;

66 
	`eb32_ö£π
(&
rqueue
, &
t
->
rq
);

67  
t
;

68 
	}
}

83 
	$__èsk_queue
(
èsk
 *task)

85 i‡(
	`likñy
(
	`èsk_ö_wq
(
èsk
)))

86 
	`__èsk_u∆ök_wq
(
èsk
);

89 
èsk
->
wq
.
key
 =Åask->
expúe
;

90 #ifde‡
DEBUG_CHECK_INVALID_EXPIRATION_DATES


91 i‡(
	`tick_is_…
(
èsk
->
wq
.
key
, 
now_ms
))

96 i‡(
	`likñy
(
œ°_timî
 &&

97 
œ°_timî
->
node
.
bô
 < 0 &&

98 
œ°_timî
->
key
 =
èsk
->
wq
.key &&

99 
œ°_timî
->
node
.
node_p
)) {

105 
	`eb_ö£π_dup
(&
œ°_timî
->
node
, &
èsk
->
wq
.node);

106 i‡(
èsk
->
wq
.
node
.
bô
 < 
œ°_timî
->node.bit)

107 
œ°_timî
 = &
èsk
->
wq
;

110 
	`eb32_ö£π
(&
timîs
, &
èsk
->
wq
);

113 i‡(
èsk
->
wq
.
node
.
node_p
 && (!
œ°_timî
 || (èsk->wq.node.
bô
 <Üast_timer->node.bit)))

114 
œ°_timî
 = &
èsk
->
wq
;

116 
	}
}

122 
	$wake_expúed_èsks
(*
√xt
)

124 
èsk
 *task;

125 
eb32_node
 *
eb
;

127 
eb
 = 
	`eb32_lookup_ge
(&
timîs
, 
now_ms
 - 
TIMER_LOOK_BACK
);

129 i‡(
	`u∆ikñy
(!
eb
)) {

134 
eb
 = 
	`eb32_fú°
(&
timîs
);

135 i‡(
	`likñy
(!
eb
))

139 i‡(
	`likñy
(
	`tick_is_…
(
now_ms
, 
eb
->
key
))) {

141 *
√xt
 = 
eb
->
key
;

146 
èsk
 = 
	`eb32_íåy
(
eb
, èsk, 
wq
);

147 
eb
 = 
	`eb32_√xt
(eb);

148 
	`__èsk_u∆ök_wq
(
èsk
);

163 i‡(!
	`tick_is_expúed
(
èsk
->
expúe
, 
now_ms
)) {

164 i‡(!
	`tick_is£t
(
èsk
->
expúe
))

166 
	`__èsk_queue
(
èsk
);

167 i‡(!
eb
 ||Éb->
key
 > 
èsk
->
wq
.key)

168 
eb
 = &
èsk
->
wq
;

171 
	`èsk_wakeup
(
èsk
, 
TASK_WOKEN_TIMER
);

175 *
√xt
 = 
TICK_ETERNITY
;

177 
	}
}

189 
	$¥o˚ss_ru¬abÀ_èsks
(*
√xt
)

191 
èsk
 *
t
;

192 
eb32_node
 *
eb
;

193 
max_¥o˚s£d
;

194 
expúe
;

196 
run_queue_cur
 = 
run_queue
;

197 
nb_èsks_cur
 = 
nb_èsks
;

198 
max_¥o˚s£d
 = 
run_queue
;

199 i‡(
max_¥o˚s£d
 > 200)

200 
max_¥o˚s£d
 = 200;

202 i‡(
	`likñy
(
ni˚d_èsks
))

203 
max_¥o˚s£d
 = (max_processed + 3) / 4;

205 
expúe
 = *
√xt
;

206 
eb
 = 
	`eb32_lookup_ge
(&
rqueue
, 
rqueue_ticks
 - 
TIMER_LOOK_BACK
);

207 
max_¥o˚s£d
--) {

213 i‡(
	`u∆ikñy
(!
eb
)) {

218 
eb
 = 
	`eb32_fú°
(&
rqueue
);

219 i‡(
	`likñy
(!
eb
))

224 
t
 = 
	`eb32_íåy
(
eb
, 
èsk
, 
rq
);

225 
eb
 = 
	`eb32_√xt
(eb);

226 
	`__èsk_u∆ök_rq
(
t
);

228 
t
->
°©e
 |
TASK_RUNNING
;

232 
t
->
ˇŒs
++;

233 i‡(
	`likñy
(
t
->
¥o˚ss
 =
¥o˚ss_£ssi⁄
))

234 
t
 = 
	`¥o˚ss_£ssi⁄
(t);

236 
t
 =Å->
	`¥o˚ss
(t);

238 i‡(
	`likñy
(
t
 !
NULL
)) {

239 
t
->
°©e
 &~
TASK_RUNNING
;

240 i‡(
t
->
expúe
) {

241 
	`èsk_queue
(
t
);

242 
expúe
 = 
	`tick_fú°_2nz
”xpúe, 
t
->expire);

248 i‡(
	`u∆ikñy
(
	`èsk_ö_rq
(
t
)Ë&& (!
eb
 || 
	`tick_is_…
—->
rq
.
key
,Éb->key))) {

249 
eb
 = 
	`eb32_lookup_ge
(&
rqueue
, 
rqueue_ticks
 - 
TIMER_LOOK_BACK
);

253 *
√xt
 = 
expúe
;

254 
	}
}

257 
	$öô_èsk
()

259 
	`mem£t
(&
timîs
, 0, (timers));

260 
	`mem£t
(&
rqueue
, 0, (rqueue));

261 
poﬁ2_èsk
 = 
	`¸óã_poﬁ
("èsk", (
èsk
), 
MEM_F_SHARED
);

262  
poﬁ2_èsk
 !
NULL
;

263 
	}
}

	@src/time.c

13 
	~<sys/time.h
>

15 
	~<comm⁄/c⁄fig.h
>

16 
	~<comm⁄/°™d¨d.h
>

17 
	~<comm⁄/time.h
>

19 
	gcuº_£c_ms
;

20 
	gcuº_£c_ms_sˇÀd
;

21 
	gnow_ms
;

22 
timevÆ
 
	gnow
;

23 
timevÆ
 
	gd©e
;

24 
timevÆ
 
	g°¨t_d©e
;

29 
REGPRM3
 
timevÆ
 *
	$_tv_ms_add
(
timevÆ
 *
tv
, c⁄° timevÆ *
‰om
, 
ms
)

31 
tv
->
tv_u£c
 = 
‰om
->tv_u£¯+ (
ms
 % 1000) * 1000;

32 
tv
->
tv_£c
 = 
‰om
->tv_£¯+ (
ms
 / 1000);

33 
tv
->
tv_u£c
 >= 1000000) {

34 
tv
->
tv_u£c
 -= 1000000;

35 
tv
->
tv_£c
++;

37  
tv
;

38 
	}
}

44 
REGPRM2
 
	$_tv_ms_cmp
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
)

46  
	`__tv_ms_cmp
(
tv1
, 
tv2
);

47 
	}
}

53 
REGPRM2
 
	$_tv_ms_cmp2
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
)

55  
	`__tv_ms_cmp2
(
tv1
, 
tv2
);

56 
	}
}

64 
REGPRM2
 
	$_tv_ms_À2
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
)

66  
	`__tv_ms_À2
(
tv1
, 
tv2
);

67 
	}
}

74 
REGPRM2
 
	$_tv_ms_ªmaö
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
)

76  
	`__tv_ms_ªmaö
(
tv1
, 
tv2
);

77 
	}
}

84 
REGPRM2
 
	$_tv_ms_ªmaö2
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
)

86 i‡(
	`tv_i£ã∫ôy
(
tv2
))

87  
TIME_ETERNITY
;

89  
	`__tv_ms_ªmaö
(
tv1
, 
tv2
);

90 
	}
}

96 
REGPRM2
 
	$_tv_ms_ñ≠£d
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
)

98  
	`__tv_ms_ñ≠£d
(
tv1
, 
tv2
);

99 
	}
}

104 
REGPRM3
 
timevÆ
 *
	$_tv_add
(
timevÆ
 *
tv
, c⁄° timevÆ *
‰om
, c⁄° timevÆ *
öc
)

106  
	`__tv_add
(
tv
, 
‰om
, 
öc
);

107 
	}
}

113 
REGPRM3
 
	$_tv_add_if£t
(
timevÆ
 *
tv
, c⁄° timevÆ *
‰om
, c⁄° timevÆ *
öc
)

115  
	`__tv_add_if£t
(
tv
, 
‰om
, 
öc
);

116 
	}
}

122 
REGPRM3
 
timevÆ
 *
	$_tv_ªmaö
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
, timevÆ *
tv
)

124  
	`__tv_ªmaö
(
tv1
, 
tv2
, 
tv
);

125 
	}
}

132 
REGPRM3
 
timevÆ
 *
	$_tv_ªmaö2
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
, timevÆ *
tv
)

134  
	`__tv_ªmaö2
(
tv1
, 
tv2
, 
tv
);

135 
	}
}

138 
REGPRM2
 
	$_tv_i¶e
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
)

140  
	`__tv_i¶e
(
tv1
, 
tv2
);

141 
	}
}

144 
REGPRM2
 
	$_tv_isgt
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
)

146  
	`__tv_isgt
(
tv1
, 
tv2
);

147 
	}
}

159 
REGPRM2
 
	$tv_upd©e_d©e
(
max_waô
, 
öãºu±ed
)

161 
timevÆ
 
tv_off£t
;

162 
timevÆ
 
adju°ed
, 
dódlöe
;

164 
	`gëtimeofday
(&
d©e
, 
NULL
);

165 i‡(
	`u∆ikñy
(
max_waô
 < 0)) {

166 
	`tv_zîo
(&
tv_off£t
);

167 
adju°ed
 = 
d©e
;

168 
to_ms
;

170 
	`__tv_add
(&
adju°ed
, &
d©e
, &
tv_off£t
);

171 i‡(
	`u∆ikñy
(
	`__tv_i¶t
(&
adju°ed
, &
now
))) {

172 
fixup
;

179 
	`_tv_ms_add
(&
dódlöe
, &
now
, 
max_waô
 + 
MAX_DELAY_MS
);

180 i‡(
	`likñy
(
	`__tv_i¶t
(&
adju°ed
, &
dódlöe
)))

181 
to_ms
;

182 
fixup
:

187 
	`_tv_ms_add
(&
adju°ed
, &
now
, 
öãºu±ed
 ? 0 : 
max_waô
);

189 
tv_off£t
.
tv_£c
 = 
adju°ed
.tv_£¯- 
d©e
.tv_sec;

190 
tv_off£t
.
tv_u£c
 = 
adju°ed
.tv_u£¯- 
d©e
.tv_usec;

191 i‡(
tv_off£t
.
tv_u£c
 < 0) {

192 
tv_off£t
.
tv_u£c
 += 1000000;

193 
tv_off£t
.
tv_£c
--;

195 
to_ms
:

196 
now
 = 
adju°ed
;

197 
cuº_£c_ms
 = 
now
.
tv_u£c
 / 1000;

198 
cuº_£c_ms_sˇÀd
 = 
cuº_£c_ms
 * 4294971;

199 
now_ms
 = 
now
.
tv_£c
 * 1000 + 
cuº_£c_ms
;

201 
	}
}

203 *
	$hum™_time
(
t
, 
hz_div
) {

204 
rv
[("24855d23h")+1];

205 *
p
 = 
rv
;

206 
˙t
=2;

208 i‡(
	`u∆ikñy
(
t
 < 0 || 
hz_div
 <= 0)) {

209 
	`•rötf
(
p
, "?");

210  
rv
;

213 i‡(
	`u∆ikñy
(
hz_div
 > 1))

214 
t
 /
hz_div
;

216 i‡(
t
 >
DAY
) {

217 
p
 +
	`•rötf
’, "%dd", 
t
 / 
DAY
);

218 
˙t
--;

221 i‡(
˙t
 && 
t
 % 
DAY
 / 
HOUR
) {

222 
p
 +
	`•rötf
’, "%dh", 
t
 % 
DAY
 / 
HOUR
);

223 
˙t
--;

226 i‡(
˙t
 && 
t
 % 
HOUR
 / 
MINUTE
) {

227 
p
 +
	`•rötf
’, "%dm", 
t
 % 
HOUR
 / 
MINUTE
);

228 
˙t
--;

231 i‡((
˙t
 && 
t
 % 
MINUTE
) || !t)

232 
p
 +
	`•rötf
’, "%ds", 
t
 % 
MINUTE
 / 
SEC
);

234  
rv
;

235 
	}
}

	@src/uri_auth.c

13 
	~<°dlib.h
>

14 
	~<°rög.h
>

16 
	~<comm⁄/ba£64.h
>

17 
	~<comm⁄/c⁄fig.h
>

18 
	~<comm⁄/uri_auth.h
>

20 
	~<¥Ÿo/log.h
>

26 
uri_auth
 *
	$°©s_check_öô_uri_auth
(
uri_auth
 **
roŸ
)

28 
uri_auth
 *
u
;

30 i‡(!
roŸ
 || !*root) {

31 i‡((
u
 = (
uri_auth
 *)
	`ˇŒoc
(1,  (*u))Ë=
NULL
)

32 
out_u
;

34 
	`LIST_INIT
(&
u
->
ªq_a˛
);

35 
	`LIST_INIT
(&
u
->
admö_ruÀs
);

37 
u
 = *
roŸ
;

39 i‡(!
u
->
uri_¥efix
) {

40 
u
->
uri_Àn
 = 
	`°æí
(
STATS_DEFAULT_URI
);

41 i‡((
u
->
uri_¥efix
 = 
	`°rdup
(
STATS_DEFAULT_URI
)Ë=
NULL
)

42 
out_uri
;

45 i‡(
roŸ
 && !*root)

46 *
roŸ
 = 
u
;

48  
u
;

50 
out_uri
:

51 i‡(!
roŸ
 || !*root)

52 
	`‰ì
(
u
);

53 
out_u
:

54  
NULL
;

55 
	}
}

61 
uri_auth
 *
	$°©s_£t_uri
(
uri_auth
 **
roŸ
, *
uri
)

63 
uri_auth
 *
u
;

64 *
uri_c›y
;

65 
uri_Àn
;

67 
uri_Àn
 = 
	`°æí
(
uri
);

68 i‡((
uri_c›y
 = 
	`°rdup
(
uri
)Ë=
NULL
)

69 
out_uri
;

71 i‡((
u
 = 
	`°©s_check_öô_uri_auth
(
roŸ
)Ë=
NULL
)

72 
out_u
;

74 
	`‰ì
(
u
->
uri_¥efix
);

75 
u
->
uri_¥efix
 = 
uri_c›y
;

76 
u
->
uri_Àn
 = uri_len;

77  
u
;

79 
out_u
:

80 
	`‰ì
(
uri_c›y
);

81 
out_uri
:

82  
NULL
;

83 
	}
}

89 
uri_auth
 *
	$°©s_£t_ªÆm
(
uri_auth
 **
roŸ
, *
ªÆm
)

91 
uri_auth
 *
u
;

92 *
ªÆm_c›y
;

94 i‡((
ªÆm_c›y
 = 
	`°rdup
(
ªÆm
)Ë=
NULL
)

95 
out_ªÆm
;

97 i‡((
u
 = 
	`°©s_check_öô_uri_auth
(
roŸ
)Ë=
NULL
)

98 
out_u
;

100 
	`‰ì
(
u
->
auth_ªÆm
);

101 
u
->
auth_ªÆm
 = 
ªÆm_c›y
;

102  
u
;

104 
out_u
:

105 
	`‰ì
(
ªÆm_c›y
);

106 
out_ªÆm
:

107  
NULL
;

108 
	}
}

115 
uri_auth
 *
	$°©s_£t_node
(
uri_auth
 **
roŸ
, *
«me
)

117 
uri_auth
 *
u
;

118 *
node_c›y
 = 
NULL
;

120 i‡(
«me
 && *name) {

121 
node_c›y
 = 
	`°rdup
(
«me
);

122 i‡(
node_c›y
 =
NULL
)

123 
out_ªÆm
;

126 i‡((
u
 = 
	`°©s_check_öô_uri_auth
(
roŸ
)Ë=
NULL
)

127 
out_u
;

129 i‡(!
	`°©s_£t_Êag
(
roŸ
, 
ST_SHNODE
))

130 
out_u
;

132 i‡(
node_c›y
) {

133 
	`‰ì
(
u
->
node
);

134 
u
->
node
 = 
node_c›y
;

137  
u
;

139 
out_u
:

140 
	`‰ì
(
node_c›y
);

141 
out_ªÆm
:

142  
NULL
;

143 
	}
}

150 
uri_auth
 *
	$°©s_£t_desc
(
uri_auth
 **
roŸ
, *
desc
)

152 
uri_auth
 *
u
;

153 *
desc_c›y
 = 
NULL
;

155 i‡(
desc
 && *desc) {

156 
desc_c›y
 = 
	`°rdup
(
desc
);

157 i‡(
desc_c›y
 =
NULL
)

158 
out_ªÆm
;

161 i‡((
u
 = 
	`°©s_check_öô_uri_auth
(
roŸ
)Ë=
NULL
)

162 
out_u
;

164 i‡(!
	`°©s_£t_Êag
(
roŸ
, 
ST_SHDESC
))

165 
out_u
;

167 i‡(
desc_c›y
) {

168 
	`‰ì
(
u
->
desc
);

169 
u
->
desc
 = 
desc_c›y
;

172  
u
;

174 
out_u
:

175 
	`‰ì
(
desc_c›y
);

176 
out_ªÆm
:

177  
NULL
;

178 
	}
}

184 
uri_auth
 *
	$°©s_£t_ª‰esh
(
uri_auth
 **
roŸ
, 
öãrvÆ
)

186 
uri_auth
 *
u
;

188 i‡((
u
 = 
	`°©s_check_öô_uri_auth
(
roŸ
)Ë!
NULL
)

189 
u
->
ª‰esh
 = 
öãrvÆ
;

190  
u
;

191 
	}
}

197 
uri_auth
 *
	$°©s_£t_Êag
(
uri_auth
 **
roŸ
, 
Êag
)

199 
uri_auth
 *
u
;

201 i‡((
u
 = 
	`°©s_check_öô_uri_auth
(
roŸ
)Ë!
NULL
)

202 
u
->
Êags
 |
Êag
;

203  
u
;

204 
	}
}

211 
uri_auth
 *
	$°©s_add_auth
(
uri_auth
 **
roŸ
, *
u£r
)

213 
uri_auth
 *
u
;

214 
auth_u£rs
 *
√wu£r
;

215 *
∑ss
;

217 
∑ss
 = 
	`°rchr
(
u£r
, ':');

218 i‡(
∑ss
)

219 *
∑ss
++ = '\0';

221 
∑ss
 = "";

223 i‡((
u
 = 
	`°©s_check_öô_uri_auth
(
roŸ
)Ë=
NULL
)

224  
NULL
;

226 i‡(!
u
->
u£æi°
)

227 
u
->
u£æi°
 = (u£æi° *)
	`ˇŒoc
(1, (userlist));

229 i‡(!
u
->
u£æi°
)

230  
NULL
;

232 i‡(!
u
->
u£æi°
->
«me
)

233 
u
->
u£æi°
->
«me
 = 
	`°rdup
(".internal-stats-userlist");

235 i‡(!
u
->
u£æi°
->
«me
)

236  
NULL
;

238 
√wu£r
 = 
u
->
u£æi°
->
u£rs
;Çewu£r;Çewu£∏√wu£r->
√xt
)

239 i‡(!
	`°rcmp
(
√wu£r
->
u£r
, user)) {

240 
	`W¨nög
("uriáuth: ignoring duplicated user '%s'.\n",

241 
u£r
);

242  
u
;

245 
√wu£r
 = (
auth_u£rs
 *)
	`ˇŒoc
(1, (auth_users));

246 i‡(!
√wu£r
)

247  
NULL
;

249 
√wu£r
->
u£r
 = 
	`°rdup
(user);

250 
√wu£r
->
∑ss
 = 
	`°rdup
(pass);

251 
√wu£r
->
Êags
 |
AU_O_INSECURE
;

253 i‡(!
√wu£r
->
u£r
 || !newuser->user)

254  
NULL
;

256 
√wu£r
->
√xt
 = 
u
->
u£æi°
->
u£rs
;

257 
u
->
u£æi°
->
u£rs
 = 
√wu£r
;

259  
u
;

260 
	}
}

267 
uri_auth
 *
	$°©s_add_sc›e
(
uri_auth
 **
roŸ
, *
sc›e
)

269 
uri_auth
 *
u
;

270 *
√w_«me
;

271 
°©_sc›e
 *
ﬁd_sc›e
, **
sc›e_li°
;

273 i‡((
u
 = 
	`°©s_check_öô_uri_auth
(
roŸ
)Ë=
NULL
)

274 
out
;

276 
sc›e_li°
 = &
u
->
sc›e
;

277 (
ﬁd_sc›e
 = *
sc›e_li°
)) {

278 i‡(!
	`°rcmp
(
ﬁd_sc›e
->
px_id
, 
sc›e
))

280 
sc›e_li°
 = &
ﬁd_sc›e
->
√xt
;

283 i‡(!
ﬁd_sc›e
) {

284 i‡((
√w_«me
 = 
	`°rdup
(
sc›e
)Ë=
NULL
)

285 
out_u
;

287 i‡((
ﬁd_sc›e
 = (
°©_sc›e
 *)
	`ˇŒoc
(1, (*ﬁd_sc›e))Ë=
NULL
)

288 
out_«me
;

290 
ﬁd_sc›e
->
px_id
 = 
√w_«me
;

291 
ﬁd_sc›e
->
px_Àn
 = 
	`°æí
(
√w_«me
);

292 *
sc›e_li°
 = 
ﬁd_sc›e
;

294  
u
;

296 
out_«me
:

297 
	`‰ì
(
√w_«me
);

298 
out_u
:

299 
	`‰ì
(
u
);

300 
out
:

301  
NULL
;

302 
	}
}

	@tests/filltab25.c

10 
	~<°dio.h
>

11 
	~<°dlib.h
>

12 
	~"eb32åì.h
"

14 
	s§v
 {

15 
eb32_node
 
	mnode
;

16 
eb_roŸ
 *
	måì
;

17 
	mnum
;

18 
	mw
;

19 
	m√xt
, 
	mœ°
;

20 
	mªm
;

21 } *
	g§v
;

24 
eb_roŸ
 
	gåì_0
 = 
EB_ROOT
;

25 
eb_roŸ
 
	gåì_1
 = 
EB_ROOT
;

26 
eb_roŸ
 
	gåì_2
 = 
EB_ROOT
;

28 
eb_roŸ
 *
	göô_åì
;

29 
eb_roŸ
 *
	g√xt_åì
;

31 
	gn§v
;

32 
	gnsw
, 
	gsw
;

33 
	gp
;

36 
	$queue_by_weight
(
eb_roŸ
 *
roŸ
, 
§v
 *
s
) {

37 
s
->
node
.
key
 = 255 - s->
w
;

38 
	`eb32_ö£π
(
roŸ
, &
s
->
node
);

39 
s
->
åì
 = 
roŸ
;

40 
	}
}

43 
	$queue_by_weight_0
(
eb_roŸ
 *
roŸ
, 
§v
 *
s
) {

44 i‡(
s
->
w
) {

45 
s
->
node
.
key
 = 255 - s->
w
;

46 
	`eb32_ö£π
(
roŸ
, &
s
->
node
);

47 
s
->
åì
 = 
roŸ
;

49 
s
->
åì
 = 
NULL
;

51 
	}
}

53 
ölöe
 
	$dequeue_§v
(
§v
 *
s
) {

54 
	`eb32_dñëe
(&
s
->
node
);

55 
	}
}

58 
	$put_§v
(
§v
 *
s
) {

59 i‡(
s
->
w
 <= 0 ||

60 
s
->
√xt
 >2*
sw
 ||

61 
s
->
√xt
 >
sw
+
nsw
) {

63 
s
->
√xt
 -
sw
;

64 
	`queue_by_weight_0
(
√xt_åì
, 
s
);

78 
s
->
node
.
key
 = 256 * s->
√xt
 + (16*255 + s->
ªm
 - s->
w
) / 16;

81 i‡(()
s
->
node
.
key
 < 0)

82 
	`¥ötf
(" OV: srv=%∞w=%dÑem=%dÇext=%d key=%d", 
s
, s->
w
, s->
ªm
, s->
√xt
, s->
node
.
key
);

83 
	`eb32_ö£π
(&
åì_0
, &
s
->
node
);

84 
s
->
åì
 = &
åì_0
;

86 
	}
}

89 
ölöe
 
	$gë_§v_öô
(
§v
 *
s
) {

90 
s
->
√xt
 = s->
ªm
 = 0;

91 
	}
}

94 
ölöe
 
	$gë_§v_√xt
(
§v
 *
s
) {

95 
s
->
√xt
 +
sw
;

96 
	}
}

99 
ölöe
 
	$gë_§v_down
(
§v
 *
s
) {

100 
s
->
√xt
 = 
p
;

101 
	}
}

104 
	$gë_§v
(
§v
 *
s
) {

105 i‡(
s
->
åì
 =
öô_åì
) {

106 
	`gë_§v_öô
(
s
);

108 i‡(
s
->
åì
 =
√xt_åì
) {

109 
	`gë_§v_√xt
(
s
);

111 i‡(
s
->
åì
 =
NULL
) {

112 
	`gë_§v_down
(
s
);

114 
	}
}

120 
§v
 *
	$gë_√xt_£rvî
() {

121 
eb32_node
 *
node
;

122 
§v
 *
s
;

124 
node
 = 
	`eb32_fú°
(&
åì_0
);

125 
s
 = 
	`eb32_íåy
(
node
, 
§v
,Çode);

127 i‡(!
node
 || 
s
->
√xt
 > 
p
) {

129 
eb32_node
 *
node2
;

130 
node2
 = 
	`eb32_fú°
(
öô_åì
);

131 i‡(
node2
) {

132 
node
 = 
node2
;

133 
s
 = 
	`eb32_íåy
(
node
, 
§v
,Çode);

134 
	`gë_§v_öô
(
s
);

135 i‡(
s
->
w
 == 0)

136 
node
 = 
NULL
;

137 
s
->
node
.
key
 = 0;

140 i‡(
node
)

141  
s
;

143  
NULL
;

144 
	}
}

146 
	$upd©e_posôi⁄
(
§v
 *
s
) {

148 i‡(!
s
->
√xt
) {

150 
s
->
œ°
 = 
p
;

151 
s
->
√xt
 = 
p
 + 
nsw
 / s->
w
;

152 
s
->
ªm
 +
nsw
 % s->
w
;

154 i‡(
s
->
ªm
 >s->
w
) {

155 
s
->
ªm
 -s->
w
;

156 
s
->
√xt
++;

159 
s
->
œ°
 = s->
√xt
;

162 
s
->
√xt
 +
nsw
 / s->
w
;

163 
s
->
ªm
 +
nsw
 % s->
w
;

165 i‡(
s
->
ªm
 >s->
w
) {

166 
s
->
ªm
 -s->
w
;

167 
s
->
√xt
++;

170 
	}
}

176 
	$swôch_åìs
() {

177 
eb_roŸ
 *
sw≠
;

178 
sw≠
 = 
öô_åì
;

179 
öô_åì
 = 
√xt_åì
;

180 
√xt_åì
 = 
sw≠
;

181 
sw
 = 
nsw
;

182 
p
 = 
sw
;

183 
	}
}

185 
	$maö
(
¨gc
, **
¨gv
) {

186 
c⁄ns
;

187 
i
;

189 
§v
 *
s
;

191 
¨gc
--; 
¨gv
++;

192 
n§v
 = 
¨gc
;

194 i‡(!
n§v
)

195 
	`exô
(1);

197 
§v
 = (§v *)
	`ˇŒoc
(
n§v
, (srv));

199 
sw
 = 0;

200 
i
 = 0; i < 
n§v
; i++) {

201 
s
 = &
§v
[
i
];

202 
s
->
num
 = 
i
;

203 
s
->
w
 = 
	`©ﬁ
(
¨gv
[
i
]);

204 
sw
 +
s
->
w
;

207 
nsw
 = 
sw
;

209 
öô_åì
 = &
åì_1
;

210 
√xt_åì
 = &
åì_2
;

216 
	`¥ötf
("---------------:");

217 
i
 = 0; i < 
n§v
; i++) {

218 
s
 = &
§v
[
i
];

219 
	`queue_by_weight_0
(
öô_åì
, 
s
);

220 
	`¥ötf
("%2d", 
s
->
w
);

222 
	`¥ötf
("\n");

224 
p
 = 
sw
;

225 
c⁄ns
 = 0;

227 
eb32_node
 *
node
;

229 
	`¥ötf
("%08d|%06d: ", 
c⁄ns
, 
p
);

234 i‡(!
sw
) {

235 i‡(
nsw
) {

236 
sw
 = 
nsw
;

237 
p
 = 
sw
;

245 
√xt_ôî©i⁄
;

248 
s
 = 
	`gë_√xt_£rvî
();

249 i‡(!
s
) {

250 
	`¥ötf
("----------- swôch (em±yË-- sw=%d -> %d ---------\n", 
sw
, 
nsw
);

251 
	`swôch_åìs
();

252 
s
 = 
	`gë_√xt_£rvî
();

253 
	`¥ötf
("%08d|%06d: ", 
c⁄ns
, 
p
);

255 i‡(!
s
)

256 
√xt_ôî©i⁄
;

258 i‡(
s
->
√xt
 >2*
sw
) {

259 
	`¥ötf
("ARGGGGG! s[%d].√xt=%d, max=%d\n", 
s
->
num
, s->
√xt
, 2*
sw
-1);

263 
i
 = 0; i < 
s
->
num
; i++) {

264 i‡(
§v
[
i
].
w
 > 0)

265 
	`¥ötf
(". ");

267 
	`¥ötf
("_ ");

269 
	`¥ötf
("# ");

270 
i
 = 
s
->
num
 + 1; i < 
n§v
; i++) {

271 i‡(
§v
[
i
].
w
 > 0)

272 
	`¥ötf
(". ");

274 
	`¥ötf
("_ ");

276 
	`¥ötf
(" : ");

278 
	`¥ötf
("s=%02d v=%04d w=%03dÇ=%03dÑ=%03d ",

279 
s
->
num
, s->
node
.
key
, s->
w
, s->
√xt
, s->
ªm
);

281 
	`upd©e_posôi⁄
(
s
);

282 
	`¥ötf
(" |Çext=%03d,Ñem=%03d ", 
s
->
√xt
, s->
ªm
);

284 i‡(
s
->
√xt
 >
sw
 * 2) {

285 
	`dequeue_§v
(
s
);

287 
	`put_§v
(
s
);

288 
	`¥ötf
(" =>Çexà(w=%d,Ç=%dË", 
s
->
w
, s->
√xt
);

291 
	`¥ötf
(" => curr ");

306 
	`dequeue_§v
(
s
);

307 
	`put_§v
(
s
);

312 
√xt_ôî©i⁄
:

313 
p
++;

314 
c⁄ns
++;

315 i‡– 
	`øndom
()%100 == 0 ) {

316 
w
 = 
	`øndom
()%4096 ;

317 
num
 = 
	`øndom
()%
n§v
 ;

318 
§v
 *
s
 = &§v[
num
];

320 
nsw
 =Çsw - 
s
->
w
 + w;

323 i‡(
s
->
åì
 =
öô_åì
) {

324 
	`¥ötf
(" -- chgwght1(%d): %d->%d,Ç=%d --", 
s
->
num
, s->
w
, w, s->
√xt
);

325 
	`¥ötf
("(init)");

326 
s
->
w
 = w;

327 
	`dequeue_§v
(
s
);

328 
	`queue_by_weight_0
(
s
->
åì
, s);

330 i‡(
s
->
åì
 =
NULL
) {

331 
	`¥ötf
(" -- chgwght2(%d): %d->%d,Ç=%d --", 
s
->
num
, s->
w
, w, s->
√xt
);

332 
	`¥ötf
("(down)");

333 
s
->
w
 = w;

334 
	`dequeue_§v
(
s
);

336 
	`gë_§v
(
s
);

337 
s
->
√xt
 = 
p
 + (
nsw
 + 
sw
 -ÖË/ s->
w
;

338 
	`put_§v
(
s
);

341 
ﬁd√xt
;

344 
	`gë_§v
(
s
);

345 
	`¥ötf
(" -- chgwght3(%d): %d->%d,Ç=%d, sw=%d,Çsw=%d --", 
s
->
num
, s->
w
, w, s->
√xt
, 
sw
, 
nsw
);

347 
ﬁd√xt
 = 
s
->
√xt
;

348 
s
->
w
 = w;

355 i‡(
s
->
w
 > 0) {

356 
°ï
 = (
nsw
 ) / 
s
->
w
;

357 
s
->
√xt
 = s->
œ°
 + 
°ï
;

358 
s
->
ªm
 = 0;

359 i‡(
s
->
√xt
 > 
ﬁd√xt
) {

360 
s
->
√xt
 = 
ﬁd√xt
;

361 
	`¥ötf
("áaaaaaa ");

364 i‡(
s
->
√xt
 < 
p
 + 2) {

365 
s
->
√xt
 = 
p
 + 
°ï
;

366 
	`¥ötf
(" bbbbbb ");

369 
	`¥ötf
("Öush -- ");

371 
s
->
w
 = 0;

372 
s
->
√xt
 = 
p
 + 
sw
;

376 
	`dequeue_§v
(
s
);

377 
	`¥ötf
("Ç=%d", 
s
->
√xt
);

378 
	`put_§v
(
s
);

382 
	`¥ötf
("\n");

384 i‡(0 && 
c⁄ns
 % 50000 == 0) {

385 
	`¥ötf
("-------- %-5d : ch™gögáŒ weight†----\n", 
c⁄ns
);

387 
i
 = 0; i < 
n§v
; i++) {

388 
w
 = 
i
 + 1;

389 
s
 = &
§v
[
i
];

390 
nsw
 =Çsw - 
s
->
w
 + w;

391 
s
->
w
 = w;

392 
	`dequeue_§v
(
s
);

393 
	`queue_by_weight_0
(
√xt_åì
, 
s
);

398 
	}
}

	@tests/ip-hash.c

11 
	~<°dio.h
>

12 
	~<°rög.h
>

13 
	~<¨∑/öë.h
>

14 
	~<m©h.h
>

16 
	#NSERV
 8

	)

17 
	#MAXLINE
 1000

	)

20 
	gcou¡s_id
[
NSERV
][NSERV];

21 
uöt32_t
 
	$hash_id
–
uöt32_t
 
a
)

23  
a
;

24 
	}
}

36 
	gcou¡s_tw1
[
NSERV
][NSERV];

37 
uöt32_t
 
	$hash_tw1
(
uöt32_t
 
a
)

39 
a
 += ~(a<<15);

40 
a
 ^= (a>>10);

41 
a
 += (a<<3);

42 
a
 ^= (a>>6);

43 
a
 += ~(a<<11);

44 
a
 ^= (a>>16);

45  
a
;

46 
	}
}

52 
	gcou¡s_tw2
[
NSERV
][NSERV];

53 
uöt32_t
 
	$hash_tw2
(
uöt32_t
 
a
)

55 
a
 = ~a + (a << 15);

56 
a
 =á ^ (a >> 12);

57 
a
 =á + (a << 2);

58 
a
 =á ^ (a >> 4);

59 
a
 =á * 2057;

60 
a
 =á ^ (a >> 16);

61  
a
;

62 
	}
}

69 
	gcou¡s_tw3
[
NSERV
][NSERV];

70 
uöt32_t
 
	$hash_tw3
(
uöt32_t
 
a
)

72 
a
 = (a ^ 61) ^ (a >> 16);

73 
a
 =á + (a << 3);

74 
a
 =á ^ (a >> 4);

75 
a
 =á * 0x27d4eb2d;

76 
a
 =á ^ (a >> 15);

77  
a
;

78 
	}
}

86 
	gcou¡s_bj6
[
NSERV
][NSERV];

87 
	gcou¡s_bj6x
[
NSERV
][NSERV];

88 
uöt32_t
 
	$hash_bj6
(
uöt32_t
 
a
)

90 
a
 = (a+0x7ed55d16) + (a<<12);

91 
a
 = (a^0xc761c23c) ^ (a>>19);

92 
a
 = (a+0x165667b1) + (a<<5);

93 
a
 = (a+0xd3a2646c) ^ (a<<9);

94 
a
 = (a+0xfd7046c5) + (a<<3);

95 
a
 = (a^0xb55a4f09) ^ (a>>16);

96  
a
;

97 
	}
}

103 
	gcou¡s_bj7
[
NSERV
][NSERV];

104 
	gcou¡s_bj7x
[
NSERV
][NSERV];

105 
uöt32_t
 
	$hash_bj7
(
uöt32_t
 
a
)

107 
a
 -= (a<<6);

108 
a
 ^= (a>>17);

109 
a
 -= (a<<9);

110 
a
 ^= (a<<4);

111 
a
 -= (a<<3);

112 
a
 ^= (a<<10);

113 
a
 ^= (a>>15);

114  
a
;

115 
	}
}

118 
	$cou¡_hash_ªsu…s
(
hash
, 
cou¡s
[
NSERV
][NSERV]) {

119 
§v
, 
n§v
;

121 
n§v
 = 0;Ç§v < 
NSERV
;Çsrv++) {

122 
§v
 = 
hash
 % (
n§v
 + 1);

123 
cou¡s
[
n§v
][
§v
]++;

125 
	}
}

127 
	$dump_hash_ªsu…s
(*
«me
, 
cou¡s
[
NSERV
][NSERV]) {

128 
§v
, 
n§v
;

129 
îr
, 
tŸÆ_îr
, 
max_îr
;

131 
	`¥ötf
("%s:\n", 
«me
);

132 
n§v
 = 0;Ç§v < 
NSERV
;Çsrv++) {

133 
tŸÆ_îr
 = 0.0;

134 
max_îr
 = 0.0;

135 
	`¥ötf
("%02d srv: ", 
n§v
+1);

136 
§v
 = 0; srv <
n§v
; srv++) {

137 
îr
 = 100.0*(
cou¡s
[
n§v
][
§v
] - ()counts[0][0]/(nsrv+1)) / ()counts[0][0];

139 
	`¥ötf
("% 3.1f%%%¯", 
îr
,

140 
cou¡s
[
n§v
][
§v
]?' ':'*');

141 
îr
 = 
	`Ábs
(err);

142 
tŸÆ_îr
 +
îr
;

143 i‡(
îr
 > 
max_îr
)

144 
max_îr
 = 
îr
;

146 
tŸÆ_îr
 /()(
n§v
+1);

147 
§v
 = 
n§v
+1; srv < 
NSERV
; srv++)

148 
	`¥ötf
(" ");

149 
	`¥ötf
("ávg_îr=%3.1f, max_îr=%3.1f\n", 
tŸÆ_îr
, 
max_îr
);

151 
	`¥ötf
("\n");

152 
	}
}

154 
	$maö
() {

155 
ƒ
;

156 
addªss
 = 0;

157 
mask
 = ~0;

159 
	`mem£t
(
cou¡s_id
, 0, (counts_id));

160 
	`mem£t
(
cou¡s_tw1
, 0, (counts_tw1));

161 
	`mem£t
(
cou¡s_tw2
, 0, (counts_tw2));

162 
	`mem£t
(
cou¡s_tw3
, 0, (counts_tw3));

163 
	`mem£t
(
cou¡s_bj6
, 0, (counts_bj6));

164 
	`mem£t
(
cou¡s_bj7
, 0, (counts_bj7));

166 
addªss
 = 0x10000000;

167 
mask
 = 0xffffff00;

168 
ƒ
 = 0;Çr < 0x10;Çr++) {

171 
addªss
 += 0x00000100;

179 
	`cou¡_hash_ªsu…s
(
	`hash_id
 (
addªss
 & 
mask
), 
cou¡s_id
);

180 
	`cou¡_hash_ªsu…s
(
	`hash_tw1
(
addªss
 & 
mask
), 
cou¡s_tw1
);

181 
	`cou¡_hash_ªsu…s
(
	`hash_tw2
(
addªss
 & 
mask
), 
cou¡s_tw2
);

182 
	`cou¡_hash_ªsu…s
(
	`hash_tw3
(
addªss
 & 
mask
), 
cou¡s_tw3
);

183 
	`cou¡_hash_ªsu…s
(
	`hash_bj6
(
addªss
 & 
mask
), 
cou¡s_bj6
);

184 
	`cou¡_hash_ªsu…s
(
	`hash_bj7
(
addªss
 & 
mask
), 
cou¡s_bj7
);

189 
	`cou¡_hash_ªsu…s
(
	`hash_bj6
(
addªss
 & 
mask
)+◊ddªss&mask), 
cou¡s_bj6x
);

190 
	`cou¡_hash_ªsu…s
(
	`hash_bj7
(
addªss
 & 
mask
)+◊ddªss&mask), 
cou¡s_bj7x
);

193 
	`dump_hash_ªsu…s
("hash_id", 
cou¡s_id
);

194 
	`dump_hash_ªsu…s
("hash_tw1", 
cou¡s_tw1
);

195 
	`dump_hash_ªsu…s
("hash_tw2", 
cou¡s_tw2
);

196 
	`dump_hash_ªsu…s
("hash_tw3", 
cou¡s_tw3
);

197 
	`dump_hash_ªsu…s
("hash_bj6", 
cou¡s_bj6
);

198 
	`dump_hash_ªsu…s
("hash_bj6x", 
cou¡s_bj6x
);

199 
	`dump_hash_ªsu…s
("hash_bj7", 
cou¡s_bj7
);

200 
	`dump_hash_ªsu…s
("hash_bj7x", 
cou¡s_bj7x
);

202 
	}
}

	@tests/reset.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<uni°d.h
>

5 
	~<√töë/ö.h
>

6 
	~<¨∑/öë.h
>

7 
	~<sys/ty≥s.h
>

8 
	~<sys/sockë.h
>

9 
	~<f˙é.h
>

11 
	$maö
(
¨gc
, **
¨gv
) {

12 *
addr
;

13 
p‹t
;

14 
sock
;

15 
sockaddr_ö
 
ßddr
;

16 c⁄° 
lögî
 
nﬁögî
 = { .
l_⁄off
 = 1, .
l_lögî
 = 0 };

18 i‡(
¨gc
 < 4) {

19 
	`Ârötf
(
°dîr
,

23 
¨gv
[0]);

24 
	`exô
(1);

27 
addr
 = 
¨gv
[1];

28 
p‹t
 = 
	`©oi
(
¨gv
[2]);

30 
sock
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

31 
	`bzîo
(&
ßddr
, (saddr));

32 
ßddr
.
sö_addr
.
s_addr
 = 
	`öë_addr
(
addr
);

33 
ßddr
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

34 
ßddr
.
sö_Ámûy
 = 
AF_INET
;

36 i‡(
	`c⁄√˘
(
sock
, (
sockaddr
 *)&
ßddr
, (saddr)) < 0) {

37 
	`≥º‹
("connect");

38 
	`exô
(1);

41 
	`£nd
(
sock
, 
¨gv
[3], 
	`°æí
◊rgv[3]), 
MSG_DONTWAIT
 | 
MSG_NOSIGNAL
);

42 
	`£tsock›t
(
sock
, 
SOL_SOCKET
, 
SO_LINGER
, (
lögî
 *Ë&
nﬁögî
, (linger));

43 
	`˛o£
(
sock
);

44 
	`exô
(0);

45 
	}
}

	@tests/sessionhash_test.c

1 
	~<°dio.h
>

2 
	~<comm⁄/£ssi⁄hash.h
>

4 
	$maö
(
¨gc
, *
¨gv
[])

6 
≠p£ss
 *
a
, *
b
, *
c
, *
d
, *
tmp
;

7 
≠p£ssi⁄_hash
 
h
;

8 
i
;

10 
a
 = 
	`mÆloc
((
≠p£ss
));

11 
b
 = 
	`mÆloc
((
≠p£ss
));

12 
c
 = 
	`mÆloc
((
≠p£ss
));

13 
d
 = 
	`mÆloc
((
≠p£ss
));

15 
a
->
£ssid
 = "abcdefg";

16 
b
->
£ssid
 = "2c";

17 
c
->
£ssid
 = "pe";

18 
d
->
£ssid
 = "abbbbbccccb";

20 
	`≠p£ssi⁄_hash_öô
(&
h
, ((*)())
‰ì
);

21 
	`≠p£ssi⁄_hash_dump
(&
h
);

22 
	`≠p£ssi⁄_hash_ö£π
(&
h
, 
a
);

23 
	`≠p£ssi⁄_hash_ö£π
(&
h
, 
b
);

24 
	`≠p£ssi⁄_hash_ö£π
(&
h
, 
c
);

25 
	`≠p£ssi⁄_hash_ö£π
(&
h
, 
d
);

27 
	`≠p£ssi⁄_hash_dump
(&
h
);

29 
	`¥ötf
("a: %p\n", 
a
);

30 
	`¥ötf
("b: %p\n", 
b
);

31 
	`¥ötf
("c: %p\n", 
c
);

32 
	`¥ötf
("d: %p\n", 
d
);

33 
	`¥ötf
("-------------\n");

34 
	`¥ötf
("a: %p\n", 
	`≠p£ssi⁄_hash_lookup
(&
h
, "abcdefg"));

35 
	`¥ötf
("b: %p\n", 
	`≠p£ssi⁄_hash_lookup
(&
h
, "2c"));

36 
	`¥ötf
("c: %p\n", 
	`≠p£ssi⁄_hash_lookup
(&
h
, "pe"));

37 
	`¥ötf
("d: %p\n", 
	`≠p£ssi⁄_hash_lookup
(&
h
, "abbbbbccccb"));

38 
	`¥ötf
("nuŒ: %p\n", 
	`≠p£ssi⁄_hash_lookup
(&
h
, "nonÉxistant"));

41 
	`≠p£ssi⁄_hash_ªmove
(&
h
, 
c
);

42 
	`≠p£ssi⁄_hash_ªmove
(&
h
, 
d
);

44 
	`≠p£ssi⁄_hash_dump
(&
h
);

46 
	`¥ötf
("--Ñemove c,d\n");

47 
	`¥ötf
("a: %p\n", 
	`≠p£ssi⁄_hash_lookup
(&
h
, "abcdefg"));

48 
	`¥ötf
("b: %p\n", 
	`≠p£ssi⁄_hash_lookup
(&
h
, "2c"));

49 
	`¥ötf
("c: %p\n", 
	`≠p£ssi⁄_hash_lookup
(&
h
, "pe"));

50 
	`¥ötf
("d: %p\n", 
	`≠p£ssi⁄_hash_lookup
(&
h
, "abbbbbccccb"));

51 
	`¥ötf
("nuŒ: %p\n", 
	`≠p£ssi⁄_hash_lookup
(&
h
, "nonÉxistant"));

53 
	`≠p£ssi⁄_hash_de°roy
(&
h
);

54 
	}
}

	@tests/test.c

1 
	$maö
() {

2 
	`wrôe
(1, "HTTP", 4);

3 
	`wrôe
(1, "/1.0", 4);

4 
	`wrôe
(1, " 200", 4);

5 
	`wrôe
(1, " OK\r\n", 5);

6 
	`wrôe
(1, "TOTO: 1\r\n", 9);

7 
	`wrôe
(1, "Hdr2: 2\r\n", 9);

8 
	`wrôe
(1, "Hdr3:", 5);

9 
	`wrôe
(1, " 2\r\n", 4);

10 
	`wrôe
(1, "\r\n\r\n", 4);

11 
	`wrôe
(1, "DATA\r\n", 6);

12 
	}
}

	@tests/test_hashes.c

8 
	~<sys/time.h
>

9 
	~<time.h
>

10 
	~<°dlib.h
>

11 
	~<°dboﬁ.h
>

12 
	~<°rög.h
>

13 
	~<°dio.h
>

17 
timevÆ
 
	$timevÆ_cuºít
()

19 
timevÆ
 
tv
;

20 
	`gëtimeofday
(&
tv
, 
NULL
);

21  
tv
;

22 
	}
}

24 
	$timevÆ_ñ≠£d
(
timevÆ
 *
tv
)

26 
timevÆ
 
tv2
 = 
	`timevÆ_cuºít
();

27  (
tv2
.
tv_£c
 - 
tv
->tv_sec) +

28 (
tv2
.
tv_u£c
 - 
tv
->tv_usec)*1.0e-6;

29 
	}
}

31 
	#HAPROXY_BACKENDS
 4

	)

33 
	$h≠roxy_uri_hash
(*
uri
, 
uri_Àn
){

35 
hash
 = 0;

36 
c
;

38 
uri_Àn
--) {

39 
c
 = *
uri
++;

40 i‡(
c
 == '?')

42 
hash
 = 
c
 + (hash << 6) + (hash << 16) - hash;

45  
hash
%
HAPROXY_BACKENDS
;

46 
	}
}

51 
	$ßx_hash
 ( *
key
, 
Àn
 )

53 *
p
 = 
key
;

54 
h
 = 0;

55 
i
;

57  
i
 = 0; i < 
Àn
; i++ )

58 
h
 ^–h << 5 ) + ( h >> 2 ) + 
p
[
i
];

60  
h
;

61 
	}
}

63 
	~<¨∑/öë.h
>

65 
	$h≠roxy_£rvî_hash
(c⁄° *
addr
, 
Àn
){

66 
h
, 
l
;

67 
l
 = 
h
 = 0;

69 (
l
 +  ()Ë<
Àn
) {

70 
h
 ^
	`¡ohl
(*(*)(&
addr
[
l
]));

71 
l
 +=  ();

73  
h
 %
HAPROXY_BACKENDS
;

74 
	}
}

77 
	$hashpjw
(c⁄° *
key
) {

79 c⁄° *
±r
;

80 
vÆ
;

87 
vÆ
 = 0;

88 
±r
 = 
key
;

90 *
±r
 != '\0') {

92 
tmp
;

94 
vÆ
 = (vÆ << 4Ë+ (*
±r
);

96 if((
tmp
 = (
vÆ
 & 0xf0000000))) {

97 
vÆ
 = vÆ ^ (
tmp
 >> 24);

98 
vÆ
 = vÆ ^ 
tmp
;

100 
±r
++;

103  
vÆ
;

104 
	}
}

107 
	$hash_djbx33
(

108 *
key
,

109 
size_t
 
Àn
)

111 
hash
 = 5381;

114 ; 
Àn
 >= 8;Üen -= 8) {

115 
hash
 = ((hash << 5Ë+ hashË+ *
key
++;

116 
hash
 = ((hash << 5Ë+ hashË+ *
key
++;

117 
hash
 = ((hash << 5Ë+ hashË+ *
key
++;

118 
hash
 = ((hash << 5Ë+ hashË+ *
key
++;

119 
hash
 = ((hash << 5Ë+ hashË+ *
key
++;

120 
hash
 = ((hash << 5Ë+ hashË+ *
key
++;

121 
hash
 = ((hash << 5Ë+ hashË+ *
key
++;

122 
hash
 = ((hash << 5Ë+ hashË+ *
key
++;

124 
Àn
) {

125 7: 
hash
 = ((hash << 5Ë+ hashË+ *
key
++;

126 6: 
hash
 = ((hash << 5Ë+ hashË+ *
key
++;

127 5: 
hash
 = ((hash << 5Ë+ hashË+ *
key
++;

128 4: 
hash
 = ((hash << 5Ë+ hashË+ *
key
++;

129 3: 
hash
 = ((hash << 5Ë+ hashË+ *
key
++;

130 2: 
hash
 = ((hash << 5Ë+ hashË+ *
key
++;

131 1: 
hash
 = ((hash << 5Ë+ hashË+ *
key
++; ;

134  
hash
;

135 
	}
}

137 
	tub4
;

138 
	tub1
;

140 
ub4
 
	$bîn°eö
(
ub1
 *
key
, 
ub4
 
Àn
, ub4 
Àvñ
){

141 
ub4
 
hash
 = 
Àvñ
;

142 
ub4
 
i
;

143 
i
=0; i<
Àn
; ++iË
hash
 = 33*hash + 
key
[i];

144  
hash
;

145 
	}
}

150 #unde‡
gë16bôs


151 #i‡(
deföed
(
__GNUC__
Ë&& deföed(
__i386__
)Ë|| deföed(
__WATCOMC__
) \

152 || 
deföed
(
_MSC_VER
Ë|| deföed (
__BORLANDC__
Ë|| 
	$deföed
 (
__TURBOC__
)

153 
	#gë16bôs
(
d
Ë(*((c⁄° 
uöt16_t
 *Ë(d)))

	)

156 #i‡!
	`deföed
 (
gë16bôs
)

157 
	#gë16bôs
(
d
Ë((((
uöt32_t
)(((c⁄° 
uöt8_t
 *)(d))[1])) << 8)\

158 +(
uöt32_t
)(((c⁄° 
uöt8_t
 *)(
d
))[0]Ë)

	)

161 
uöt32_t
 
	$Su≥rFa°Hash
 (c⁄° * 
d©a
, 
Àn
) {

162 
uöt32_t
 
hash
 = 
Àn
, 
tmp
;

163 
ªm
;

165 i‡(
Àn
 <0 || 
d©a
 =
NULL
)  0;

167 
ªm
 = 
Àn
 & 3;

168 
Àn
 >>= 2;

171 ;
Àn
 > 0;Üen--) {

172 
hash
 +
	`gë16bôs
 (
d©a
);

173 
tmp
 = (
	`gë16bôs
 (
d©a
+2Ë<< 11Ë^ 
hash
;

174 
hash
 = (hash << 16Ë^ 
tmp
;

175 
d©a
 +2* (
uöt16_t
);

176 
hash
 += hash >> 11;

180 
ªm
) {

181 3: 
hash
 +
	`gë16bôs
 (
d©a
);

182 
hash
 ^= hash << 16;

183 
hash
 ^
d©a
[ (
uöt16_t
)] << 18;

184 
hash
 += hash >> 11;

186 2: 
hash
 +
	`gë16bôs
 (
d©a
);

187 
hash
 ^= hash << 11;

188 
hash
 += hash >> 17;

190 1: 
hash
 +*
d©a
;

191 
hash
 ^= hash << 10;

192 
hash
 += hash >> 1;

196 
hash
 ^= hash << 3;

197 
hash
 += hash >> 5;

198 
hash
 ^= hash << 4;

199 
hash
 += hash >> 17;

200 
hash
 ^= hash << 25;

201 
hash
 += hash >> 6;

203  
hash
;

204 
	}
}

209 
uöt32_t
 
	$Su≥rFa°Hash2
 (c⁄° * 
d©a
, 
Àn
) {

210 
uöt32_t
 
hash
 = 
Àn
, 
tmp
;

211 
ªm
;

213 i‡(
Àn
 <0 || 
d©a
 =
NULL
)  0;

215 
ªm
 = 
Àn
 & 3;

216 
Àn
 >>= 2;

219 ;
Àn
 > 0;Üen--) {

220 
uöt32_t
 
√xt
;

221 
√xt
 = 
	`gë16bôs
(
d©a
+2);

222 
hash
 +
	`gë16bôs
(
d©a
);

223 
tmp
 = (
√xt
 << 11Ë^ 
hash
;

224 
hash
 = (hash << 16Ë^ 
tmp
;

225 
d©a
 +2* (
uöt16_t
);

226 
hash
 += hash >> 11;

230 
ªm
) {

231 3: 
hash
 +
	`gë16bôs
 (
d©a
);

232 
hash
 ^= hash << 16;

233 
hash
 ^
d©a
[ (
uöt16_t
)] << 18;

234 
hash
 += hash >> 11;

236 2: 
hash
 +
	`gë16bôs
 (
d©a
);

237 
hash
 ^= hash << 11;

238 
hash
 += hash >> 17;

240 1: 
hash
 +*
d©a
;

241 
hash
 ^= hash << 10;

242 
hash
 += hash >> 1;

246 
hash
 ^= hash << 3;

247 
hash
 += hash >> 5;

248 
hash
 ^= hash << 4;

249 
hash
 += hash >> 17;

250 
hash
 ^= hash << 25;

251 
hash
 += hash >> 6;

253  
hash
;

254 
	}
}

259 
	tFnv32_t
;

274 
Fnv32_t


275 
	$‚v_32a_°r
(*
°r
, 
Fnv32_t
 
hvÆ
)

277 *
s
 = (*)
°r
;

282 *
s
) {

285 
hvÆ
 ^(
Fnv32_t
)*
s
++;

289 #i‡
	`deföed
(
NO_FNV_GCC_OPTIMIZATION
)

293 
	#FNV_32_PRIME
 ((
Fnv32_t
)0x01000193)

	)

294 
hvÆ
 *
FNV_32_PRIME
;

296 
hvÆ
 += (hval<<1) + (hval<<4) + (hval<<7) + (hval<<8) + (hval<<24);

301  
hvÆ
;

302 
	}
}

308 
	#rŸ
(
x
,
k
Ë(((x)<<(k)Ë| ((x)>>(32-(k))))

	)

354 
	#mix
(
a
,
b
,
c
) \

356 
a
 -
c
;á ^
	`rŸ
(c, 4); c +
b
; \

357 
b
 -
a
; b ^
	`rŸ
◊, 6);á +
c
; \

358 
c
 -
b
; c ^
	`rŸ
(b, 8); b +
a
; \

359 
a
 -
c
;á ^
	`rŸ
(c,16); c +
b
; \

360 
b
 -
a
; b ^
	`rŸ
◊,19);á +
c
; \

361 
c
 -
b
; c ^
	`rŸ
(b, 4); b +
a
; \

362 }

	)

389 
	#föÆ
(
a
,
b
,
c
) \

391 
c
 ^
b
; c -
	`rŸ
(b,14); \

392 
a
 ^
c
;á -
	`rŸ
(c,11); \

393 
b
 ^
a
; b -
	`rŸ
(a,25); \

394 
c
 ^
b
; c -
	`rŸ
(b,16); \

395 
a
 ^
c
;á -
	`rŸ
(c,4); \

396 
b
 ^
a
; b -
	`rŸ
(a,14); \

397 
c
 ^
b
; c -
	`rŸ
(b,24); \

398 }

	)

413 
uöt32_t
 
	$hashw‹d
(

414 c⁄° 
uöt32_t
 *
k
,

415 
size_t
 
Àngth
,

416 
uöt32_t
 
öôvÆ
)

418 
uöt32_t
 
a
,
b
,
c
;

421 
a
 = 
b
 = 
c
 = 0xdódbì‡+ (((
uöt32_t
)
Àngth
)<<2Ë+ 
öôvÆ
;

424 
Àngth
 > 3)

426 
a
 +
k
[0];

427 
b
 +
k
[1];

428 
c
 +
k
[2];

429 
	`mix
(
a
,
b
,
c
);

430 
Àngth
 -= 3;

431 
k
 += 3;

435 
Àngth
)

437 3 : 
c
+=
k
[2];

438 2 : 
b
+=
k
[1];

439 1 : 
a
+=
k
[0];

440 
	`föÆ
(
a
,
b
,
c
);

445  
c
;

446 
	}
}

449 
	#HASHSIZE
 101

	)

451 
	$kr_hash
(*
s
){

452 
hashvÆ
;

454 
hashvÆ
 = 0; *
s
 != '\0';s++)

455 
hashvÆ
 = *
s
 + 31 * hashval;

457  
hashvÆ
 % 
HASHSIZE
;

459 
	}
}

461 
	$‚v_hash
 ( *
key
, 
Àn
 )

463 *
p
 = 
key
;

464 
h
 = 2166136261;

465 
i
;

467  
i
 = 0; i < 
Àn
; i++ )

468 
h
 = ( h * 16777619 ) ^ 
p
[
i
];

470  
h
;

471 
	}
}

473 
	$ﬂt_hash
 ( *
key
, 
Àn
 )

475 *
p
 = 
key
;

476 
h
 = 0;

477 
i
;

479  
i
 = 0; i < 
Àn
; i++ ) {

480 
h
 +
p
[
i
];

481 
h
 += ( h << 10 );

482 
h
 ^= ( h >> 6 );

485 
h
 += ( h << 3 );

486 
h
 ^= ( h >> 11 );

487 
h
 += ( h << 15 );

489  
h
;

490 
	}
}

492 
	$wt_hash
 ( *
key
, 
Àn
 )

494 *
p
 = 
key
;

495 
h
 = 0x783c965aUL;

496 
°ï
 = 16;

498 ; 
Àn
 > 0;Üen--) {

499 
h
 ^*
p
 * 9;

500 
p
++;

501 
h
 = (h << 
°ï
) | (h >> (32-step));

502 
°ï
 ^
h
;

503 
°ï
 &= 0x1F;

506  
h
;

507 
	}
}

510 
	#run_ã°
(
f˘
, 
¨gs
) { \

511 
lo›
, 
cou¡
; \

512 vﬁ©ûê
ªsu…
; \

513 
dñè
; \

514 
timevÆ
 
tv
; \

515 
	`Ârötf
(
°dîr
, "Starting %s\n", #fct); \

516 
tv
 = 
	`timevÆ_cuºít
(); \

517 
cou¡
 = 0; \

519 
dñè
 = 
	`timevÆ_ñ≠£d
(&
tv
); \

520 
lo›
 = 0;Üoop < 1000;Üoop++) { \

521 
ªsu…
 = 
f˘
 
¨gs
; \

522 
cou¡
++; \

524 } 
dñè
 < 1.0); \

525 
	`Ârötf
(
°dout
, "%-20†: %10.0‡run/£c\n", #f˘, 
cou¡
/
dñè
); \

526 
	`fÊush
(
°dout
); \

527 }

	)

529 
	$maö
(){

531 **
°¨t
;

532 
Àn
;

534 *
uæs
[] = {

536 
NULL


539 
°¨t
 = 
uæs
;

540 
Àn
 = 
	`°æí
(*
uæs
);

542 
	`run_ã°
(
wt_hash
, (*
uæs
, 
Àn
));

543 
	`run_ã°
(
Su≥rFa°Hash2
, (*
uæs
, 
Àn
));

544 
	`run_ã°
(
Su≥rFa°Hash
, (*
uæs
, 
Àn
));

545 
	`run_ã°
(
h≠roxy_uri_hash
, (*
uæs
, 
Àn
));

546 
	`run_ã°
(
h≠roxy_£rvî_hash
, (*
uæs
, 
Àn
));

547 
	`run_ã°
(
hashpjw
, (*
uæs
));

548 
	`run_ã°
(
hash_djbx33
, ((*)*
uæs
, 
Àn
));

549 
	`run_ã°
(
bîn°eö
, ((*)*
uæs
, 
Àn
, 4));

550 
	`run_ã°
(
‚v_32a_°r
, (*
uæs
, 0));

551 
	`run_ã°
(
hashw‹d
, ((c⁄° 
uöt32_t
 *)*
uæs
,
	`°æí
(*urls),0));

552 
	`run_ã°
(
kr_hash
, (*
uæs
));

553 
	`run_ã°
(
ßx_hash
, (*
uæs
, 
Àn
));

554 
	`run_ã°
(
‚v_hash
, (*
uæs
, 
Àn
));

555 
	`run_ã°
(
ﬂt_hash
, (*
uæs
, 
Àn
));

559 
	}
}

	@tests/test_pools.c

10 
	~<sys/time.h
>

11 
	~<time.h
>

12 
	~<°dlib.h
>

13 
	~<°dboﬁ.h
>

14 
	~<°rög.h
>

15 
	~<°dio.h
>

17 
timevÆ
 
	$timevÆ_cuºít
()

19 
timevÆ
 
tv
;

20 
	`gëtimeofday
(&
tv
, 
NULL
);

21  
tv
;

22 
	}
}

24 
	$timevÆ_ñ≠£d
(
timevÆ
 *
tv
)

26 
timevÆ
 
tv2
 = 
	`timevÆ_cuºít
();

27  (
tv2
.
tv_£c
 - 
tv
->tv_sec) +

28 (
tv2
.
tv_u£c
 - 
tv
->tv_usec)*1.0e-6;

29 
	}
}

31 
	#t‹tuª_as£π
(
ã°
, 
ex¥
, 
°r
) if (!(expr)) { \

32 
	`¥ötf
("failure: %s [\n%s: Expression %s failed: %s\n]\n", \

33 
ã°
, 
__loˇti⁄__
, #ex¥, 
°r
); \

34  
Ál£
; \

35 }

	)

37 
	#t‹tuª_as£π_°r_equÆ
(
ã°
, 
¨g1
, 
¨g2
, 
desc
) \

38 i‡(
	`°rcmp
(
¨g1
, 
¨g2
)) { \

39 
	`¥ötf
("failure: %s [\n%s: Expected %s, got %s: %s\n]\n", \

40 
ã°
, 
__loˇti⁄__
, 
¨g1
, 
¨g2
, 
desc
); \

41  
Ál£
; \

42 }

	)

45 
	~<°dlib.h
>

52 
	#poﬁ_Æloc_‰om
(
__poﬁ
, 
__Àn
) \

54 *
__p
; \

55 i‡((
__p
 = (
__poﬁ
)Ë=
NULL
) \

56 
__p
 = 
	`mÆloc
(((
__Àn
) >=  (*)) ? \

57 (
__Àn
) : (*)); \

59 
__poﬁ
 = *(**)(__pool); \

61 
__p
; \

62 })

	)

72 
	#poﬁ_‰ì_to
(
__poﬁ
, 
__±r
) \

74 *(**)(
__±r
Ë(*)(
__poﬁ
); \

75 
__poﬁ
 = (*)(
__±r
); \

76 })

	)

84 
	#poﬁ_Æloc
(
ty≥
) \

86 *
__p
; \

87 i‡((
__p
 = 
poﬁ_
##
ty≥
Ë=
NULL
) \

88 
__p
 = 
	`mÆloc
(
sizeof_
##
ty≥
); \

90 
poﬁ_
##
ty≥
 = *(**)pool_##type; \

92 
__p
; \

93 })

	)

103 
	#poﬁ_‰ì
(
ty≥
, 
±r
) \

105 *(**)
±r
 = (*)
poﬁ_
##
ty≥
; \

106 
poﬁ_
##
ty≥
 = (*)
±r
; \

107 })

	)

113 
ölöe
 
	$poﬁ_de°roy
(**
poﬁ
)

115 *
ãmp
, *
√xt
;

116 
√xt
 = 
poﬁ
;

117 
√xt
) {

118 
ãmp
 = 
√xt
;

119 
√xt
 = *(**)
ãmp
;

120 
	`‰ì
(
ãmp
);

122 
	}
}

124 
	#sizeof_èŒoc
 1000

	)

129 
boﬁ
 
	$ã°_•ìd1
()

131 **
poﬁ_èŒoc
 = 
NULL
;

132 *
˘x
 = 
	`poﬁ_Æloc
(
èŒoc
);

133 
cou¡
;

134 c⁄° 
lo›
 = 1000;

135 
i
;

136 
timevÆ
 
tv
;

138 
	`¥ötf
("test: speed [\nhaproxy-pool VS MALLOC SPEED 2\n]\n");

140 
tv
 = 
	`timevÆ_cuºít
();

141 
cou¡
 = 0;

143 *
p1
, *
p2
, *
p3
;

144 
i
=0;i<
lo›
;i++) {

145 
p1
 = 
	`poﬁ_Æloc_‰om
(
poﬁ_èŒoc
, 10 + 
lo›
 % 100);

146 
p2
 = 
	`poﬁ_Æloc_‰om
(
poﬁ_èŒoc
, 
	`°æí
("foo bar") + 1);

147 
	`°r˝y
(
p2
, "foo bar");

148 
p3
 = 
	`poﬁ_Æloc_‰om
(
poﬁ_èŒoc
, 300);

149 
	`poﬁ_‰ì_to
(
poﬁ_èŒoc
,
p1
);

150 
	`poﬁ_‰ì_to
(
poﬁ_èŒoc
,
p3
);

151 
	`poﬁ_‰ì_to
(
poﬁ_èŒoc
,
p2
);

153 
cou¡
 +3 * 
lo›
;

154 } 
	`timevÆ_ñ≠£d
(&
tv
) < 5.0);

156 
	`Ârötf
(
°dîr
, "h≠roxy : %10.0‡›s/£c\n", 
cou¡
/
	`timevÆ_ñ≠£d
(&
tv
));

158 
	`poﬁ_de°roy
(
poﬁ_èŒoc
);

160 
tv
 = 
	`timevÆ_cuºít
();

161 
cou¡
 = 0;

163 *
p1
, *
p2
, *
p3
;

164 
i
=0;i<
lo›
;i++) {

165 
p1
 = 
	`mÆloc
(10 + 
lo›
 % 100);

166 
p2
 = 
	`mÆloc
(
	`°æí
("foo bar") + 1);

167 
	`°r˝y
(
p2
, "foo bar");

168 
p3
 = 
	`mÆloc
(300);

169 
	`‰ì
(
p1
);

170 
	`‰ì
(
p2
);

171 
	`‰ì
(
p3
);

173 
cou¡
 +3 * 
lo›
;

174 } 
	`timevÆ_ñ≠£d
(&
tv
) < 5.0);

175 
	`Ârötf
(
°dîr
, "mÆlo¯ : %10.0‡›s/£c\n", 
cou¡
/
	`timevÆ_ñ≠£d
(&
tv
));

177 #ifde‡
USE_DLMALLOC


178 
tv
 = 
	`timevÆ_cuºít
();

179 
cou¡
 = 0;

181 *
p1
, *
p2
, *
p3
;

182 
i
=0;i<
lo›
;i++) {

183 
p1
 = 
	`dlmÆloc
(10 + 
lo›
 % 100);

184 
p2
 = 
	`dlmÆloc
(
	`°æí
("foo bar") + 1);

185 
	`°r˝y
(
p2
, "foo bar");

186 
p3
 = 
	`dlmÆloc
(300);

187 
	`dl‰ì
(
p1
);

188 
	`dl‰ì
(
p2
);

189 
	`dl‰ì
(
p3
);

191 
cou¡
 +3 * 
lo›
;

192 } 
	`timevÆ_ñ≠£d
(&
tv
) < 5.0);

193 
	`Ârötf
(
°dîr
, "dlmÆloc: %10.0‡›s/£c\n", 
cou¡
/
	`timevÆ_ñ≠£d
(&
tv
));

196 
	`¥ötf
("success: speed1\n");

198  
åue
;

199 
	}
}

201 
	$maö
()

203 
boﬁ
 
ªt
 = 
	`ã°_•ìd1
();

204 i‡(!
ªt
)

207 
	}
}

	@tests/testinet.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<uni°d.h
>

4 
	~<°rög.h
>

5 
	~<˘y≥.h
>

6 
	~<sys/time.h
>

7 
	~<sys/ty≥s.h
>

8 
	~<sys/sockë.h
>

9 
	~<√töë/t˝.h
>

10 
	~<√töë/ö.h
>

11 
	~<¨∑/öë.h
>

12 
	~<√tdb.h
>

13 
	~<f˙é.h
>

14 
	~<î∫o.h
>

15 
	~<sig«l.h
>

16 
	~<°d¨g.h
>

17 
	~<sys/ªsour˚.h
>

18 
	~<time.h
>

19 
	~<ªgex.h
>

20 
	~<sy¶og.h
>

23 
	$maö
() {

24 
	`¥ötf
("sizeo‡sockaddr=%d\n", (
sockaddr
));

25 
	`¥ötf
("sizeo‡sockaddr_ö=%d\n", (
sockaddr_ö
));

26 
	`¥ötf
("sizeo‡sockaddr_ö6=%d\n", (
sockaddr_ö6
));

27 
	}
}

	@tests/uri_hash.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

3 
	~<¨∑/öë.h
>

5 
	#NSERV
 10

	)

6 
	#MAXLINE
 1000

	)

8 
	glöe
[
MAXLINE
];

10 
	gcou¡s_gd1
[
NSERV
][NSERV];

11 
	$hash_gd1
(*
uri
)

13 
hash
 = 0;

14 
c
;

16 (
c
 = *
uri
++))

17 
hash
 = 
c
 + (hash << 6) + (hash << 16) - hash;

19  
hash
;

20 
	}
}

22 
	gcou¡s_gd2
[
NSERV
][NSERV];

23 
	$hash_gd2
(*
uri
)

25 
hash
 = 0;

26 
c
;

28 (
c
 = *
uri
++)) {

29 i‡(
c
 == '?' || c == '\n')

31 
hash
 = 
c
 + (hash << 6) + (hash << 16) - hash;

34  
hash
;

35 
	}
}

38 
	gcou¡s_gd3
[
NSERV
][NSERV];

39 
	$hash_gd3
(*
uri
)

41 
hash
 = 0;

42 
c
;

44 (
c
 = *
uri
++)) {

45 i‡(
c
 == '?' || c == '\n')

47 
hash
 = 
c
 - (hash << 3) + (hash << 15) - hash;

50  
hash
;

51 
	}
}

54 
	gcou¡s_gd4
[
NSERV
][NSERV];

55 
	$hash_gd4
(*
uri
)

57 
hash
 = 0;

58 
c
;

60 (
c
 = *
uri
++)) {

61 i‡(
c
 == '?' || c == '\n')

63 
hash
 = hash + (hash << 6Ë- (hash << 15Ë- 
c
;

66  
hash
;

67 
	}
}

70 
	gcou¡s_gd5
[
NSERV
][NSERV];

71 
	$hash_gd5
(*
uri
)

73 
hash
 = 0;

74 
c
;

76 (
c
 = *
uri
++)) {

77 i‡(
c
 == '?' || c == '\n')

79 
hash
 = hash + (hash << 2Ë- (hash << 19Ë- 
c
;

82  
hash
;

83 
	}
}

86 
	gcou¡s_gd6
[
NSERV
][NSERV];

87 
	$hash_gd6
(*
uri
)

89 
hash
 = 0;

90 
c
;

92 (
c
 = *
uri
++)) {

93 i‡(
c
 == '?' || c == '\n')

95 
hash
 = hash + (hash << 2Ë- (hash << 22Ë- 
c
;

98  
hash
;

99 
	}
}

102 
	gcou¡s_wt1
[
NSERV
][NSERV];

103 
	$hash_wt1
(
hsize
, *
°rög
) {

104 
bôs
;

105 
d©a
, 
vÆ
;

107 
bôs
 = 
vÆ
 = 
d©a
 = 0;

108 *
°rög
) {

109 i‡(*
°rög
 == '?' || *string == '\n')

111 
d©a
 |(()()*
°rög
Ë<< 
bôs
;

112 
bôs
 += 8;

113 
bôs
 >
hsize
) {

114 
vÆ
 ^
d©a
 - (vÆ >> 
hsize
);

115 
bôs
 -
hsize
;

116 
d©a
 >>
hsize
;

118 
°rög
++;

120 
vÆ
 ^
d©a
;

121 
vÆ
 > ((1 << 
hsize
) - 1)) {

122 
vÆ
 = (vÆ & ((1 << 
hsize
) - 1)) ^ (val >> hsize);

124  
vÆ
;

125 
	}
}

131 
	gcou¡s_wt2
[
NSERV
][NSERV];

132 
	tu_öt32_t
;

134 
ölöe
 
u_öt32_t
 
	$shl32
(
u_öt32_t
 
i
, 
cou¡
) {

135 i‡(
cou¡
 == 32)

137  
i
 << 
cou¡
;

138 
	}
}

140 
ölöe
 
u_öt32_t
 
	$shr32
(
u_öt32_t
 
i
, 
cou¡
) {

141 i‡(
cou¡
 == 32)

143  
i
 >> 
cou¡
;

144 
	}
}

146 
	$ªv32
(
c
) {

147 
c
 = ((c & 0x0000FFFF) << 16)| ((c & 0xFFFF0000) >> 16);

148 
c
 = ((c & 0x00FF00FF) << 8) | ((c & 0xFF00FF00) >> 8);

149 
c
 = ((c & 0x0F0F0F0F) << 4) | ((c & 0xF0F0F0F0) >> 4);

150 
c
 = ((c & 0x33333333) << 2) | ((c & 0xCCCCCCCC) >> 2);

151 
c
 = ((c & 0x55555555) << 1) | ((c & 0xAAAAAAAA) >> 1);

152  
c
;

153 
	}
}

155 
	$hash_wt2
(c⁄° *
§c
, 
Àn
) {

156 
i
 = 0x3C964BA5;

157 
j
;

158 
ih
, 
û
;

159 
bô
;

161 
Àn
--) {

162 
j
 = ()*
§c
++;

163 i‡(
j
 == '?' || j == '\n')

165 
bô
 = 
	`ªv32
(
j
 - 
i
);

166 
bô
 = bô - (bô >> 3Ë+ (bô >> 16Ë- 
j
;

168 
bô
 &= 0x1f;

169 
ih
 = 
	`shr32
(
i
, 
bô
);

170 
û
 = 
i
 & (
	`shl32
(1, 
bô
) - 1);

171 
i
 = 
	`shl32
(
û
, 32-
bô
Ë- 
ih
 - ~
j
;

173  
i
;

174 
	}
}

184 #unde‡
gë16bôs


185 #i‡(
deföed
(
__GNUC__
Ë&& deföed(
__i386__
)Ë|| deföed(
__WATCOMC__
) \

186 || 
deföed
(
_MSC_VER
Ë|| deföed (
__BORLANDC__
Ë|| 
	$deföed
 (
__TURBOC__
)

187 
	#gë16bôs
(
d
Ë(*((c⁄° 
uöt16_t
 *Ë(d)))

	)

190 #i‡!
	`deföed
 (
gë16bôs
)

191 
	#gë16bôs
(
d
Ë((((
uöt32_t
)(((c⁄° 
uöt8_t
 *)(d))[1])) << 8)\

192 +(
uöt32_t
)(((c⁄° 
uöt8_t
 *)(
d
))[0]Ë)

	)

199 
cou¡s_Su≥rFa°Hash
[
NSERV
][NSERV];

201 
uöt32_t
 
	$Su≥rFa°Hash
 (c⁄° * 
d©a
, 
Àn
) {

202 
uöt32_t
 
hash
 = 
Àn
, 
tmp
;

203 
ªm
;

205 i‡(
Àn
 <0 || 
d©a
 =
NULL
)  0;

207 
ªm
 = 
Àn
 & 3;

208 
Àn
 >>= 2;

211 ;
Àn
 > 0;Üen--) {

212 
hash
 +
	`gë16bôs
 (
d©a
);

213 
tmp
 = (
	`gë16bôs
 (
d©a
+2Ë<< 11Ë^ 
hash
;

214 
hash
 = (hash << 16Ë^ 
tmp
;

215 
d©a
 +2* (
uöt16_t
);

216 
hash
 += hash >> 11;

220 
ªm
) {

221 3: 
hash
 +
	`gë16bôs
 (
d©a
);

222 
hash
 ^= hash << 16;

223 
hash
 ^
d©a
[ (
uöt16_t
)] << 18;

224 
hash
 += hash >> 11;

226 2: 
hash
 +
	`gë16bôs
 (
d©a
);

227 
hash
 ^= hash << 11;

228 
hash
 += hash >> 17;

230 1: 
hash
 +*
d©a
;

231 
hash
 ^= hash << 10;

232 
hash
 += hash >> 1;

236 
hash
 ^= hash << 3;

237 
hash
 += hash >> 5;

238 
hash
 ^= hash << 4;

239 
hash
 += hash >> 17;

240 
hash
 ^= hash << 25;

241 
hash
 += hash >> 6;

243  
hash
;

244 
	}
}

249 
	gcou¡s_Su≥rFa°Hash2
[
NSERV
][NSERV];

250 
uöt32_t
 
	$Su≥rFa°Hash2
 (c⁄° * 
d©a
, 
Àn
) {

251 
uöt32_t
 
hash
 = 
Àn
, 
tmp
;

252 
ªm
;

254 i‡(
Àn
 <0 || 
d©a
 =
NULL
)  0;

256 
ªm
 = 
Àn
 & 3;

257 
Àn
 >>= 2;

260 ;
Àn
 > 0;Üen--) {

261 
uöt32_t
 
√xt
;

262 
√xt
 = 
	`gë16bôs
(
d©a
+2);

263 
hash
 +
	`gë16bôs
(
d©a
);

264 
tmp
 = ((
√xt
 << 11Ë| (√xà>> 21)Ë^ 
hash
;

265 
hash
 = (hash << 16Ë^ 
tmp
;

266 
d©a
 +2* (
uöt16_t
);

267 
hash
 += hash >> 11;

271 
ªm
) {

272 3: 
hash
 +
	`gë16bôs
 (
d©a
);

273 
hash
 ^= hash << 16;

274 
hash
 ^
d©a
[ (
uöt16_t
)] << 18;

275 
hash
 += hash >> 11;

277 2: 
hash
 +
	`gë16bôs
 (
d©a
);

278 
hash
 ^= hash << 11;

279 
hash
 += hash >> 17;

281 1: 
hash
 +*
d©a
;

282 
hash
 ^= hash << 10;

283 
hash
 += hash >> 1;

287 
hash
 ^= hash << 3;

288 
hash
 += hash >> 5;

289 
hash
 ^= hash << 4;

290 
hash
 += hash >> 17;

291 
hash
 ^= hash << 25;

292 
hash
 += hash >> 6;

294  
hash
;

295 
	}
}

298 
	gcou¡s_§v
[
NSERV
][NSERV];

299 
	$h≠roxy_£rvî_hash
(c⁄° *
addr
, 
Àn
){

300 
h
, 
l
;

301 
l
 = 
h
 = 0;

303 (
l
 +  ()Ë<
Àn
) {

304 
h
 ^
	`¡ohl
(*(*)(&
addr
[
l
]));

305 
l
 +=  ();

307  
h
;

308 
	}
}

312 
	$cou¡_hash_ªsu…s
(
hash
, 
cou¡s
[
NSERV
][NSERV]) {

313 
§v
, 
n§v
;

315 
n§v
 = 0;Ç§v < 
NSERV
;Çsrv++) {

316 
§v
 = 
hash
 % (
n§v
 + 1);

317 
cou¡s
[
n§v
][
§v
]++;

319 
	}
}

321 
	$dump_hash_ªsu…s
(*
«me
, 
cou¡s
[
NSERV
][NSERV]) {

322 
§v
, 
n§v
;

324 
	`¥ötf
("%s:\n", 
«me
);

325 
n§v
 = 0;Ç§v < 
NSERV
;Çsrv++) {

326 
	`¥ötf
("%02d srv: ", 
n§v
+1);

327 
§v
 = 0; srv <
n§v
; srv++) {

330 
	`¥ötf
("%3.1‡", 100.0*(
cou¡s
[
n§v
][
§v
] - ()counts[0][0]/(nsrv+1)) / ()counts[0][0]);

332 
	`¥ötf
("\n");

334 
	`¥ötf
("\n");

335 
	}
}

337 
	$maö
() {

338 
	`mem£t
(
cou¡s_gd1
, 0, (counts_gd1));

339 
	`mem£t
(
cou¡s_gd2
, 0, (counts_gd2));

340 
	`mem£t
(
cou¡s_gd3
, 0, (counts_gd3));

341 
	`mem£t
(
cou¡s_gd4
, 0, (counts_gd4));

342 
	`mem£t
(
cou¡s_gd5
, 0, (counts_gd5));

343 
	`mem£t
(
cou¡s_gd6
, 0, (counts_gd6));

344 
	`mem£t
(
cou¡s_wt1
, 0, (counts_wt1));

345 
	`mem£t
(
cou¡s_wt2
, 0, (counts_wt2));

346 
	`mem£t
(
cou¡s_§v
, 0, (counts_srv));

347 
	`mem£t
(
cou¡s_Su≥rFa°Hash
, 0, (counts_SuperFastHash));

348 
	`mem£t
(
cou¡s_Su≥rFa°Hash2
, 0, (counts_SuperFastHash2));

350 
	`fgës
(
löe
, 
MAXLINE
, 
°dö
Ë!
NULL
) {

351 
	`cou¡_hash_ªsu…s
(
	`hash_gd1
(
löe
), 
cou¡s_gd1
);

352 
	`cou¡_hash_ªsu…s
(
	`hash_gd2
(
löe
), 
cou¡s_gd2
);

353 
	`cou¡_hash_ªsu…s
(
	`hash_gd3
(
löe
), 
cou¡s_gd3
);

354 
	`cou¡_hash_ªsu…s
(
	`hash_gd4
(
löe
), 
cou¡s_gd4
);

355 
	`cou¡_hash_ªsu…s
(
	`hash_gd5
(
löe
), 
cou¡s_gd5
);

356 
	`cou¡_hash_ªsu…s
(
	`hash_gd6
(
löe
), 
cou¡s_gd6
);

357 
	`cou¡_hash_ªsu…s
(
	`hash_wt1
(31, 
löe
), 
cou¡s_wt1
);

358 
	`cou¡_hash_ªsu…s
(
	`hash_wt2
(
löe
, 
	`°æí
÷öe)), 
cou¡s_wt2
);

359 
	`cou¡_hash_ªsu…s
(
	`h≠roxy_£rvî_hash
(
löe
, 
	`°æí
÷öe)), 
cou¡s_§v
);

360 
	`cou¡_hash_ªsu…s
(
	`Su≥rFa°Hash
(
löe
, 
	`°æí
÷öe)), 
cou¡s_Su≥rFa°Hash
);

361 
	`cou¡_hash_ªsu…s
(
	`Su≥rFa°Hash2
(
löe
, 
	`°æí
÷öe)), 
cou¡s_Su≥rFa°Hash2
);

364 
	`dump_hash_ªsu…s
("hash_gd1", 
cou¡s_gd1
);

365 
	`dump_hash_ªsu…s
("hash_gd2", 
cou¡s_gd2
);

366 
	`dump_hash_ªsu…s
("hash_gd3", 
cou¡s_gd3
);

367 
	`dump_hash_ªsu…s
("hash_gd4", 
cou¡s_gd4
);

368 
	`dump_hash_ªsu…s
("hash_gd5", 
cou¡s_gd5
);

369 
	`dump_hash_ªsu…s
("hash_gd6", 
cou¡s_gd6
);

370 
	`dump_hash_ªsu…s
("hash_wt1", 
cou¡s_wt1
);

371 
	`dump_hash_ªsu…s
("hash_wt2", 
cou¡s_wt2
);

372 
	`dump_hash_ªsu…s
("h≠roxy_£rvî_hash", 
cou¡s_§v
);

373 
	`dump_hash_ªsu…s
("Su≥rFa°Hash", 
cou¡s_Su≥rFa°Hash
);

374 
	`dump_hash_ªsu…s
("Su≥rFa°Hash2", 
cou¡s_Su≥rFa°Hash2
);

377 
	}
}

	@/usr/include/arpa/inet.h

19 #i‚de‡
_ARPA_INET_H


20 
	#_ARPA_INET_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<√töë/ö.h
>

26 #i‚de‡
__sockÀn_t_deföed


27 
__sockÀn_t
 
	tsockÀn_t
;

28 
	#__sockÀn_t_deföed


	)

31 
__BEGIN_DECLS


35 
ö_addr_t
 
	$öë_addr
 (
__c⁄°
 *
__˝
Ë
__THROW
;

38 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

42 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

43 
__THROW
;

46 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

50 
ö_addr_t
 
	$öë_√tw‹k
 (
__c⁄°
 *
__˝
Ë
__THROW
;

54 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

59 
	$öë_±⁄
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

60 *
__ª°ri˘
 
__buf
Ë
__THROW
;

65 
__c⁄°
 *
	$öë_¡›
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

66 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

67 
__THROW
;

71 #ifde‡
__USE_MISC


74 
	$öë_©⁄
 (
__c⁄°
 *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

78 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

83 *
	$öë_√t_¡›
 (
__af
, 
__c⁄°
 *
__˝
, 
__bôs
,

84 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

89 
	$öë_√t_±⁄
 (
__af
, 
__c⁄°
 *
__˝
,

90 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

95 
	$öë_nßp_addr
 (
__c⁄°
 *
__˝
,

96 *
__buf
, 
__Àn
Ë
__THROW
;

100 *
	$öë_nßp_¡ﬂ
 (
__Àn
, 
__c⁄°
 *
__˝
,

101 *
__buf
Ë
__THROW
;

104 
__END_DECLS


	@/usr/include/assert.h

24 #ifdef 
_ASSERT_H


26 #unde‡
_ASSERT_H


27 #unde‡
as£π


28 #unde‡
__ASSERT_VOID_CAST


30 #ifdef 
__USE_GNU


31 #unde‡
as£π_≥º‹


36 
	#_ASSERT_H
 1

	)

37 
	~<„©uªs.h
>

39 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

40 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

42 
	#__ASSERT_VOID_CAST
 ()

	)

50 #ifdef 
NDEBUG


52 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

60 #ifdef 
__USE_GNU


61 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

66 #i‚de‡
_ASSERT_H_DECLS


67 
	#_ASSERT_H_DECLS


	)

68 
__BEGIN_DECLS


71 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

72 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

73 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

76 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

77 
__löe
,

78 
__c⁄°
 *
__fun˘i⁄
)

79 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

84 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

85 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

88 
__END_DECLS


91 
	#as£π
(
ex¥
) \

92 ((
ex¥
) \

93 ? 
	`__ASSERT_VOID_CAST
 (0) \

94 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

96 #ifdef 
__USE_GNU


97 
	#as£π_≥º‹
(
î∫um
) \

98 (!(
î∫um
) \

99 ? 
	`__ASSERT_VOID_CAST
 (0) \

100 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

108 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

109 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

111 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

112 
	#__ASSERT_FUNCTION
 
__func__


	)

114 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/crypt.h

25 #i‚de‡
_CRYPT_H


26 
	#_CRYPT_H
 1

	)

28 
	~<„©uªs.h
>

30 
__BEGIN_DECLS


33 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

34 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

37 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

41 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

43 #ifde‡
__USE_GNU


46 
	s¸y±_d©a


48 
keysched
[16 * 8];

49 
sb0
[32768];

50 
sb1
[32768];

51 
sb2
[32768];

52 
sb3
[32768];

54 
¸y±_3_buf
[14];

55 
cuºít_ß…
[2];

56 
cuºít_ß…bôs
;

57 
dúe˘i⁄
, 
öôülized
;

60 *
	$¸y±_r
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
,

61 
¸y±_d©a
 * 
__ª°ri˘
 
__d©a
)

62 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

64 
	$£tkey_r
 (
__c⁄°
 *
__key
,

65 
¸y±_d©a
 * 
__ª°ri˘
 
__d©a
)

66 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

68 
	$í¸y±_r
 (*
__block
, 
__edÊag
,

69 
¸y±_d©a
 * 
__ª°ri˘
 
__d©a
)

70 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

73 
__END_DECLS


	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_XOPEN2K8


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #ifde‡
__USE_XOPEN


38 
	~<sys/°©.h
>

41 #ifdef 
__USE_MISC


42 #i‚de‡
R_OK


45 
	#R_OK
 4

	)

46 
	#W_OK
 2

	)

47 
	#X_OK
 1

	)

48 
	#F_OK
 0

	)

53 #ifde‡
__USE_XOPEN


54 
	#SEEK_SET
 0

	)

55 
	#SEEK_CUR
 1

	)

56 
	#SEEK_END
 2

	)

64 
f˙é
 (
__fd
, 
__cmd
, ...);

72 #i‚de‡
__USE_FILE_OFFSET64


73 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

75 #ifde‡
__REDIRECT


76 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

77 
	`__n⁄nuŒ
 ((1));

79 
	#›í
 
›í64


	)

82 #ifde‡
__USE_LARGEFILE64


83 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

86 #ifde‡
__USE_ATFILE


96 #i‚de‡
__USE_FILE_OFFSET64


97 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

98 
	`__n⁄nuŒ
 ((2));

100 #ifde‡
__REDIRECT


101 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

102 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

104 
	#›í©
 
›í©64


	)

108 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

109 
	`__n⁄nuŒ
 ((2));

117 #i‚de‡
__USE_FILE_OFFSET64


118 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

120 #ifde‡
__REDIRECT


121 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

122 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

124 
	#¸ót
 
¸ót64


	)

127 #ifde‡
__USE_LARGEFILE64


128 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

131 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

132 && !
deföed
 
__USE_POSIX
))

141 
	#F_ULOCK
 0

	)

142 
	#F_LOCK
 1

	)

143 
	#F_TLOCK
 2

	)

144 
	#F_TEST
 3

	)

146 #i‚de‡
__USE_FILE_OFFSET64


147 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

149 #ifde‡
__REDIRECT


150 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

152 
	#lockf
 
lockf64


	)

155 #ifde‡
__USE_LARGEFILE64


156 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

160 #ifde‡
__USE_XOPEN2K


163 #i‚de‡
__USE_FILE_OFFSET64


164 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

165 
__advi£
Ë
__THROW
;

167 #ifde‡
__REDIRECT_NTH


168 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

169 
__off64_t
 
__Àn
, 
__advi£
),

170 
posix_Ádvi£64
);

172 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

175 #ifde‡
__USE_LARGEFILE64


176 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

177 
__advi£
Ë
__THROW
;

185 #i‚de‡
__USE_FILE_OFFSET64


186 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

188 #ifde‡
__REDIRECT


189 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

190 
__off64_t
 
__Àn
),

191 
posix_ÁŒoˇã64
);

193 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

196 #ifde‡
__USE_LARGEFILE64


197 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

203 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

204 && 
deföed
 
__va_¨g_∑ck_Àn


205 
	~<bôs/f˙é2.h
>

208 
__END_DECLS


	@/usr/include/grp.h

23 #i‚def 
_GRP_H


24 
	#_GRP_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 
	#__√ed_size_t


	)

33 
	~<°ddef.h
>

37 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
Ë&& !deföed 
__gid_t_deföed


38 
__gid_t
 
	tgid_t
;

39 
	#__gid_t_deföed


	)

43 
	sgroup


45 *
	mgr_«me
;

46 *
	mgr_∑sswd
;

47 
__gid_t
 
	mgr_gid
;

48 **
	mgr_mem
;

52 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_GNU


53 
	#__√ed_FILE


	)

54 
	~<°dio.h
>

58 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


63 
£tgª¡
 ();

69 
ídgª¡
 ();

75 
group
 *
gëgª¡
 ();

78 #ifdef 
__USE_SVID


85 
group
 *
fgëgª¡
 (
FILE
 *
__°ªam
);

88 #ifde‡
__USE_GNU


95 
putgª¡
 (
__c⁄°
 
group
 *
__ª°ri˘
 
__p
,

96 
FILE
 *
__ª°ri˘
 
__f
);

103 
group
 *
gëgrgid
 (
__gid_t
 
__gid
);

109 
group
 *
gëg∫am
 (
__c⁄°
 *
__«me
);

111 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


113 #ifde‡
__USE_MISC


116 
	#NSS_BUFLEN_GROUP
 1024

	)

132 #ifde‡
__USE_GNU


133 
gëgª¡_r
 (
group
 *
__ª°ri˘
 
__ªsu…buf
,

134 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

135 
group
 **
__ª°ri˘
 
__ªsu…
);

142 
gëgrgid_r
 (
__gid_t
 
__gid
, 
group
 *
__ª°ri˘
 
__ªsu…buf
,

143 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

144 
group
 **
__ª°ri˘
 
__ªsu…
);

150 
gëg∫am_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

151 
group
 *
__ª°ri˘
 
__ªsu…buf
,

152 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

153 
group
 **
__ª°ri˘
 
__ªsu…
);

155 #ifdef 
__USE_SVID


163 
fgëgª¡_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

164 
group
 *
__ª°ri˘
 
__ªsu…buf
,

165 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

166 
group
 **
__ª°ri˘
 
__ªsu…
);

172 #ifdef 
__USE_BSD


174 
	#__√ed_size_t


	)

175 
	~<°ddef.h
>

178 
	$£tgroups
 (
size_t
 
__n
, 
__c⁄°
 
__gid_t
 *
__groups
Ë
__THROW
;

188 
	`gëgrou∂i°
 (
__c⁄°
 *
__u£r
, 
__gid_t
 
__group
,

189 
__gid_t
 *
__groups
, *
__ngroups
);

199 
	`öôgroups
 (
__c⁄°
 *
__u£r
, 
__gid_t
 
__group
);

203 
__END_DECLS


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/linux/in.h

18 #i‚de‡
_LINUX_IN_H


19 
	#_LINUX_IN_H


	)

21 
	~<löux/ty≥s.h
>

22 
	~<löux/sockë.h
>

26 
	mIPPROTO_IP
 = 0,

27 
	mIPPROTO_ICMP
 = 1,

28 
	mIPPROTO_IGMP
 = 2,

29 
	mIPPROTO_IPIP
 = 4,

30 
	mIPPROTO_TCP
 = 6,

31 
	mIPPROTO_EGP
 = 8,

32 
	mIPPROTO_PUP
 = 12,

33 
	mIPPROTO_UDP
 = 17,

34 
	mIPPROTO_IDP
 = 22,

35 
	mIPPROTO_DCCP
 = 33,

36 
	mIPPROTO_RSVP
 = 46,

37 
	mIPPROTO_GRE
 = 47,

39 
	mIPPROTO_IPV6
 = 41,

41 
	mIPPROTO_ESP
 = 50,

42 
	mIPPROTO_AH
 = 51,

43 
	mIPPROTO_BEETPH
 = 94,

44 
	mIPPROTO_PIM
 = 103,

46 
	mIPPROTO_COMP
 = 108,

47 
	mIPPROTO_SCTP
 = 132,

48 
	mIPPROTO_UDPLITE
 = 136,

50 
	mIPPROTO_RAW
 = 255,

51 
	mIPPROTO_MAX


56 
	sö_addr
 {

57 
__be32
 
	ms_addr
;

60 
	#IP_TOS
 1

	)

61 
	#IP_TTL
 2

	)

62 
	#IP_HDRINCL
 3

	)

63 
	#IP_OPTIONS
 4

	)

64 
	#IP_ROUTER_ALERT
 5

	)

65 
	#IP_RECVOPTS
 6

	)

66 
	#IP_RETOPTS
 7

	)

67 
	#IP_PKTINFO
 8

	)

68 
	#IP_PKTOPTIONS
 9

	)

69 
	#IP_MTU_DISCOVER
 10

	)

70 
	#IP_RECVERR
 11

	)

71 
	#IP_RECVTTL
 12

	)

72 
	#IP_RECVTOS
 13

	)

73 
	#IP_MTU
 14

	)

74 
	#IP_FREEBIND
 15

	)

75 
	#IP_IPSEC_POLICY
 16

	)

76 
	#IP_XFRM_POLICY
 17

	)

77 
	#IP_PASSSEC
 18

	)

78 
	#IP_TRANSPARENT
 19

	)

81 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

84 
	#IP_ORIGDSTADDR
 20

	)

85 
	#IP_RECVORIGDSTADDR
 
IP_ORIGDSTADDR


	)

88 
	#IP_PMTUDISC_DONT
 0

	)

89 
	#IP_PMTUDISC_WANT
 1

	)

90 
	#IP_PMTUDISC_DO
 2

	)

91 
	#IP_PMTUDISC_PROBE
 3

	)

93 
	#IP_MULTICAST_IF
 32

	)

94 
	#IP_MULTICAST_TTL
 33

	)

95 
	#IP_MULTICAST_LOOP
 34

	)

96 
	#IP_ADD_MEMBERSHIP
 35

	)

97 
	#IP_DROP_MEMBERSHIP
 36

	)

98 
	#IP_UNBLOCK_SOURCE
 37

	)

99 
	#IP_BLOCK_SOURCE
 38

	)

100 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

101 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

102 
	#IP_MSFILTER
 41

	)

103 
	#MCAST_JOIN_GROUP
 42

	)

104 
	#MCAST_BLOCK_SOURCE
 43

	)

105 
	#MCAST_UNBLOCK_SOURCE
 44

	)

106 
	#MCAST_LEAVE_GROUP
 45

	)

107 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

108 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

109 
	#MCAST_MSFILTER
 48

	)

110 
	#IP_MULTICAST_ALL
 49

	)

112 
	#MCAST_EXCLUDE
 0

	)

113 
	#MCAST_INCLUDE
 1

	)

116 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

117 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

121 
	sù_mªq


123 
ö_addr
 
	mimr_mu…üddr
;

124 
ö_addr
 
	mimr_öãrÁ˚
;

127 
	sù_mªqn


129 
ö_addr
 
	mimr_mu…üddr
;

130 
ö_addr
 
	mimr_addªss
;

131 
	mimr_ifödex
;

134 
	sù_mªq_sour˚
 {

135 
__be32
 
	mimr_mu…üddr
;

136 
__be32
 
	mimr_öãrÁ˚
;

137 
__be32
 
	mimr_sour˚addr
;

140 
	sù_msfûãr
 {

141 
__be32
 
	mimsf_mu…üddr
;

142 
__be32
 
	mimsf_öãrÁ˚
;

143 
__u32
 
	mimsf_fmode
;

144 
__u32
 
	mimsf_num§c
;

145 
__be32
 
	mimsf_¶i°
[1];

148 
	#IP_MSFILTER_SIZE
(
num§c
) \

149 ((
ù_msfûãr
Ë- (
__u32
) \

150 + (
num§c
Ë* (
__u32
))

	)

152 
	sgroup_ªq


154 
__u32
 
	mgr_öãrÁ˚
;

155 
__kî√l_sockaddr_°‹age
 
	mgr_group
;

158 
	sgroup_sour˚_ªq


160 
__u32
 
	mg§_öãrÁ˚
;

161 
__kî√l_sockaddr_°‹age
 
	mg§_group
;

162 
__kî√l_sockaddr_°‹age
 
	mg§_sour˚
;

165 
	sgroup_fûãr


167 
__u32
 
	mgf_öãrÁ˚
;

168 
__kî√l_sockaddr_°‹age
 
	mgf_group
;

169 
__u32
 
	mgf_fmode
;

170 
__u32
 
	mgf_num§c
;

171 
__kî√l_sockaddr_°‹age
 
	mgf_¶i°
[1];

174 
	#GROUP_FILTER_SIZE
(
num§c
) \

175 ((
group_fûãr
Ë- (
__kî√l_sockaddr_°‹age
) \

176 + (
num§c
Ë* (
__kî√l_sockaddr_°‹age
))

	)

178 
	sö_pktöfo


180 
	mùi_ifödex
;

181 
ö_addr
 
	mùi_•ec_d°
;

182 
ö_addr
 
	mùi_addr
;

186 
	#__SOCK_SIZE__
 16

	)

187 
	ssockaddr_ö
 {

188 
ß_Ámûy_t
 
	msö_Ámûy
;

189 
__be16
 
	msö_p‹t
;

190 
ö_addr
 
	msö_addr
;

193 
	m__∑d
[
__SOCK_SIZE__
 - () -

194 (Ë- (
ö_addr
)];

196 
	#sö_zîo
 
__∑d


	)

204 
	#IN_CLASSA
(
a
Ë((((Ë◊)Ë& 0x80000000Ë=0)

	)

205 
	#IN_CLASSA_NET
 0xff000000

	)

206 
	#IN_CLASSA_NSHIFT
 24

	)

207 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

208 
	#IN_CLASSA_MAX
 128

	)

210 
	#IN_CLASSB
(
a
Ë((((Ë◊)Ë& 0xc0000000Ë=0x80000000)

	)

211 
	#IN_CLASSB_NET
 0xffff0000

	)

212 
	#IN_CLASSB_NSHIFT
 16

	)

213 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

214 
	#IN_CLASSB_MAX
 65536

	)

216 
	#IN_CLASSC
(
a
Ë((((Ë◊)Ë& 0xe0000000Ë=0xc0000000)

	)

217 
	#IN_CLASSC_NET
 0xffffff00

	)

218 
	#IN_CLASSC_NSHIFT
 8

	)

219 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

221 
	#IN_CLASSD
(
a
Ë((((Ë◊)Ë& 0xf0000000Ë=0xe0000000)

	)

222 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

223 
	#IN_MULTICAST_NET
 0xF0000000

	)

225 
	#IN_EXPERIMENTAL
(
a
Ë((((Ë◊)Ë& 0xf0000000Ë=0xf0000000)

	)

226 
	#IN_BADCLASS
(
a
Ë
	`IN_EXPERIMENTAL
(◊))

	)

229 
	#INADDR_ANY
 ((Ë0x00000000)

	)

232 
	#INADDR_BROADCAST
 ((Ë0xffffffff)

	)

235 
	#INADDR_NONE
 ((Ë0xffffffff)

	)

238 
	#IN_LOOPBACKNET
 127

	)

241 
	#INADDR_LOOPBACK
 0x7f000001

	)

242 
	#IN_LOOPBACK
(
a
Ë((((Ë◊)Ë& 0xff000000Ë=0x7f000000)

	)

245 
	#INADDR_UNSPEC_GROUP
 0xe0000000U

	)

246 
	#INADDR_ALLHOSTS_GROUP
 0xe0000001U

	)

247 
	#INADDR_ALLRTRS_GROUP
 0xe0000002U

	)

248 
	#INADDR_MAX_LOCAL_GROUP
 0xe00000ffU

	)

252 
	~<asm/byã‹dî.h
>

	@/usr/include/linux/netfilter_ipv4.h

1 #i‚de‡
__LINUX_IP_NETFILTER_H


2 
	#__LINUX_IP_NETFILTER_H


	)

8 
	~<löux/√tfûãr.h
>

13 
	#NFC_IP_SRC
 0x0001

	)

15 
	#NFC_IP_DST
 0x0002

	)

17 
	#NFC_IP_IF_IN
 0x0004

	)

19 
	#NFC_IP_IF_OUT
 0x0008

	)

21 
	#NFC_IP_TOS
 0x0010

	)

23 
	#NFC_IP_PROTO
 0x0020

	)

25 
	#NFC_IP_OPTIONS
 0x0040

	)

27 
	#NFC_IP_FRAG
 0x0080

	)

31 
	#NFC_IP_TCPFLAGS
 0x0100

	)

33 
	#NFC_IP_SRC_PT
 0x0200

	)

35 
	#NFC_IP_DST_PT
 0x0400

	)

37 
	#NFC_IP_PROTO_UNKNOWN
 0x2000

	)

41 
	#NF_IP_PRE_ROUTING
 0

	)

43 
	#NF_IP_LOCAL_IN
 1

	)

45 
	#NF_IP_FORWARD
 2

	)

47 
	#NF_IP_LOCAL_OUT
 3

	)

49 
	#NF_IP_POST_ROUTING
 4

	)

50 
	#NF_IP_NUMHOOKS
 5

	)

52 
	enf_ù_hook_¥i‹ôõs
 {

53 
	mNF_IP_PRI_FIRST
 = 
INT_MIN
,

54 
	mNF_IP_PRI_CONNTRACK_DEFRAG
 = -400,

55 
	mNF_IP_PRI_RAW
 = -300,

56 
	mNF_IP_PRI_SELINUX_FIRST
 = -225,

57 
	mNF_IP_PRI_CONNTRACK
 = -200,

58 
	mNF_IP_PRI_MANGLE
 = -150,

59 
	mNF_IP_PRI_NAT_DST
 = -100,

60 
	mNF_IP_PRI_FILTER
 = 0,

61 
	mNF_IP_PRI_SECURITY
 = 50,

62 
	mNF_IP_PRI_NAT_SRC
 = 100,

63 
	mNF_IP_PRI_SELINUX_LAST
 = 225,

64 
	mNF_IP_PRI_CONNTRACK_CONFIRM
 = 
INT_MAX
,

65 
	mNF_IP_PRI_LAST
 = 
INT_MAX
,

72 
	#SO_ORIGINAL_DST
 80

	)

	@/usr/include/linux/netfilter_ipv6.h

1 #i‚de‡
__LINUX_IP6_NETFILTER_H


2 
	#__LINUX_IP6_NETFILTER_H


	)

11 
	~<löux/√tfûãr.h
>

16 
	#NFC_IP6_SRC
 0x0001

	)

18 
	#NFC_IP6_DST
 0x0002

	)

20 
	#NFC_IP6_IF_IN
 0x0004

	)

22 
	#NFC_IP6_IF_OUT
 0x0008

	)

24 
	#NFC_IP6_TOS
 0x0010

	)

26 
	#NFC_IP6_PROTO
 0x0020

	)

28 
	#NFC_IP6_OPTIONS
 0x0040

	)

30 
	#NFC_IP6_FRAG
 0x0080

	)

35 
	#NFC_IP6_TCPFLAGS
 0x0100

	)

37 
	#NFC_IP6_SRC_PT
 0x0200

	)

39 
	#NFC_IP6_DST_PT
 0x0400

	)

41 
	#NFC_IP6_PROTO_UNKNOWN
 0x2000

	)

45 
	#NF_IP6_PRE_ROUTING
 0

	)

47 
	#NF_IP6_LOCAL_IN
 1

	)

49 
	#NF_IP6_FORWARD
 2

	)

51 
	#NF_IP6_LOCAL_OUT
 3

	)

53 
	#NF_IP6_POST_ROUTING
 4

	)

54 
	#NF_IP6_NUMHOOKS
 5

	)

57 
	enf_ù6_hook_¥i‹ôõs
 {

58 
	mNF_IP6_PRI_FIRST
 = 
INT_MIN
,

59 
	mNF_IP6_PRI_CONNTRACK_DEFRAG
 = -400,

60 
	mNF_IP6_PRI_SELINUX_FIRST
 = -225,

61 
	mNF_IP6_PRI_CONNTRACK
 = -200,

62 
	mNF_IP6_PRI_MANGLE
 = -150,

63 
	mNF_IP6_PRI_NAT_DST
 = -100,

64 
	mNF_IP6_PRI_FILTER
 = 0,

65 
	mNF_IP6_PRI_SECURITY
 = 50,

66 
	mNF_IP6_PRI_NAT_SRC
 = 100,

67 
	mNF_IP6_PRI_SELINUX_LAST
 = 225,

68 
	mNF_IP6_PRI_LAST
 = 
INT_MAX
,

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<asm/ty≥s.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	~<löux/posix_ty≥s.h
>

16 #ifde‡
__CHECKER__


17 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

19 
	#__bôwi£__


	)

21 #ifde‡
__CHECK_ENDIAN__


22 
	#__bôwi£
 
__bôwi£__


	)

24 
	#__bôwi£


	)

27 
__u16
 
	t__bôwi£
 
	t__À16
;

28 
__u16
 
	t__bôwi£
 
	t__be16
;

29 
__u32
 
	t__bôwi£
 
	t__À32
;

30 
__u32
 
	t__bôwi£
 
	t__be32
;

31 
__u64
 
	t__bôwi£
 
	t__À64
;

32 
__u64
 
	t__bôwi£
 
	t__be64
;

34 
__u16
 
	t__bôwi£
 
	t__sum16
;

35 
__u32
 
	t__bôwi£
 
	t__wsum
;

	@/usr/include/linux/unistd.h

1 #i‚de‡
_LINUX_UNISTD_H_


2 
	#_LINUX_UNISTD_H_


	)

7 
	~<asm/uni°d.h
>

	@/usr/include/math.h

25 #i‚def 
_MATH_H


26 
	#_MATH_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/huge_vÆ.h
>

35 #ifde‡
__USE_ISOC99


36 
	~<bôs/huge_vÆf.h
>

37 
	~<bôs/huge_vÆl.h
>

40 
	~<bôs/öf.h
>

43 
	~<bôs/«n.h
>

47 
	~<bôs/m©hdef.h
>

54 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

56 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

57 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

58 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

59 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

61 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

62 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

63 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

64 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

65 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

67 
	#_MdoubÀ_
 

	)

68 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

69 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

70 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

71 
	~<bôs/m©hˇŒs.h
>

72 #unde‡
_MdoubÀ_


73 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


74 #unde‡
_MdoubÀ_END_NAMESPACE


75 #unde‡
__MATH_PRECNAME


77 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


83 #i‚de‡
_MÊﬂt_


84 
	#_MÊﬂt_
 

	)

86 
	#_MdoubÀ_
 
_MÊﬂt_


	)

87 #ifde‡
__STDC__


88 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

90 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
f
 
	)
r

92 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

93 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

94 
	~<bôs/m©hˇŒs.h
>

95 #unde‡
_MdoubÀ_


96 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


97 #unde‡
_MdoubÀ_END_NAMESPACE


98 #unde‡
__MATH_PRECNAME


100 #i‡(
__STDC__
 - 0 || 
__GNUC__
 - 0) \

101 && (!
deföed
 
__NO_LONG_DOUBLE_MATH
 \

102 || 
deföed
 
__LDBL_COMPAT
 \

103 || !
deföed
 
_LIBC
)

104 #ifde‡
__LDBL_COMPAT


106 #ifde‡
__USE_ISOC99


107 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

108 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

109 #ifde‡
__REDIRECT_NTH


110 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

111 
__∆dbl_√xâow¨df
)

112 
	`__©åibuã__
 ((
__c⁄°__
));

113 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

114 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

115 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

116 (
__x
, 
__y
),

117 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

122 #i‡
deföed
 
__LDBL_COMPAT
 || deföed 
__NO_LONG_DOUBLE_MATH


124 #unde‡
__MATHDECL_1


125 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

126 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

127 
¨gs
, 
Æüs
)

	)

128 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

129 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

134 #i‚de‡
_Ml⁄g_doubÀ_


135 
	#_Ml⁄g_doubÀ_
 

	)

137 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

138 #ifde‡
__STDC__


139 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

141 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
l
 
	)
r

143 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

144 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

145 
	~<bôs/m©hˇŒs.h
>

146 #unde‡
_MdoubÀ_


147 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


148 #unde‡
_MdoubÀ_END_NAMESPACE


149 #unde‡
__MATH_PRECNAME


154 #unde‡
__MATHDECL_1


155 #unde‡
__MATHDECL


156 #unde‡
__MATHCALL


159 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


161 
signgam
;

166 #ifde‡
__USE_ISOC99


204 
FP_NAN
,

205 
	#FP_NAN
 
FP_NAN


	)

206 
FP_INFINITE
,

207 
	#FP_INFINITE
 
FP_INFINITE


	)

208 
FP_ZERO
,

209 
	#FP_ZERO
 
FP_ZERO


	)

210 
FP_SUBNORMAL
,

211 
	#FP_SUBNORMAL
 
FP_SUBNORMAL


	)

212 
FP_NORMAL


213 
	#FP_NORMAL
 
FP_NORMAL


	)

217 #ifde‡
__NO_LONG_DOUBLE_MATH


218 
	#Â˛assify
(
x
) \

219 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

221 
	#Â˛assify
(
x
) \

222 ( (
x
) ==  () \

223 ? 
	`__Â˛assifyf
 (
x
) \

224 :  (
x
) ==  () \

225 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

229 #ifde‡
__NO_LONG_DOUBLE_MATH


230 
	#signbô
(
x
) \

231 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

233 
	#signbô
(
x
) \

234 ( (
x
) ==  () \

235 ? 
	`__signbôf
 (
x
) \

236 :  (
x
) ==  () \

237 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

241 #ifde‡
__NO_LONG_DOUBLE_MATH


242 
	#isföôe
(
x
) \

243 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

245 
	#isföôe
(
x
) \

246 ( (
x
) ==  () \

247 ? 
	`__föôef
 (
x
) \

248 :  (
x
) ==  () \

249 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

253 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

257 #ifde‡
__NO_LONG_DOUBLE_MATH


258 
	#i¢™
(
x
) \

259 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

261 
	#i¢™
(
x
) \

262 ( (
x
) ==  () \

263 ? 
	`__i¢™f
 (
x
) \

264 :  (
x
) ==  () \

265 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

269 #ifde‡
__NO_LONG_DOUBLE_MATH


270 
	#isöf
(
x
) \

271 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

273 
	#isöf
(
x
) \

274 ( (
x
) ==  () \

275 ? 
	`__isöff
 (
x
) \

276 :  (
x
) ==  () \

277 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

281 
	#MATH_ERRNO
 1

	)

282 
	#MATH_ERREXCEPT
 2

	)

287 #i‚de‡
__FAST_MATH__


288 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

293 #ifdef 
__USE_MISC


297 
_IEEE_
 = -1,

298 
_SVID_
,

299 
_XOPEN_
,

300 
_POSIX_
,

301 
_ISOC_


302 } 
	t_LIB_VERSION_TYPE
;

307 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

311 #ifde‡
__USE_SVID


317 #ifde‡
__˝lu•lus


318 
__ex˚±i⁄


320 
ex˚±i⁄


323 
ty≥
;

324 *
«me
;

325 
¨g1
;

326 
¨g2
;

327 
ªtvÆ
;

328 
	}
};

330 #ifde‡
__˝lu•lus


331 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

333 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

336 
	#X_TLOSS
 1.41484755040568800000e+16

	)

339 
	#DOMAIN
 1

	)

340 
	#SING
 2

	)

341 
	#OVERFLOW
 3

	)

342 
	#UNDERFLOW
 4

	)

343 
	#TLOSS
 5

	)

344 
	#PLOSS
 6

	)

347 
	#HUGE
 3.40282347e+38F

	)

351 #ifde‡
__USE_XOPEN


353 
	#MAXFLOAT
 3.40282347e+38F

	)

360 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


361 
	#M_E
 2.7182818284590452354

	)

362 
	#M_LOG2E
 1.4426950408889634074

	)

363 
	#M_LOG10E
 0.43429448190325182765

	)

364 
	#M_LN2
 0.69314718055994530942

	)

365 
	#M_LN10
 2.30258509299404568402

	)

366 
	#M_PI
 3.14159265358979323846

	)

367 
	#M_PI_2
 1.57079632679489661923

	)

368 
	#M_PI_4
 0.78539816339744830962

	)

369 
	#M_1_PI
 0.31830988618379067154

	)

370 
	#M_2_PI
 0.63661977236758134308

	)

371 
	#M_2_SQRTPI
 1.12837916709551257390

	)

372 
	#M_SQRT2
 1.41421356237309504880

	)

373 
	#M_SQRT1_2
 0.70710678118654752440

	)

379 #ifde‡
__USE_GNU


380 
	#M_El
 2.7182818284590452353602874713526625L

	)

381 
	#M_LOG2El
 1.4426950408889634073599246810018921L

	)

382 
	#M_LOG10El
 0.4342944819032518276511289189166051L

	)

383 
	#M_LN2l
 0.6931471805599453094172321214581766L

	)

384 
	#M_LN10l
 2.3025850929940456840179914546843642L

	)

385 
	#M_PIl
 3.1415926535897932384626433832795029L

	)

386 
	#M_PI_2l
 1.5707963267948966192313216916397514L

	)

387 
	#M_PI_4l
 0.7853981633974483096156608458198757L

	)

388 
	#M_1_PIl
 0.3183098861837906715377675267450287L

	)

389 
	#M_2_PIl
 0.6366197723675813430755350534900574L

	)

390 
	#M_2_SQRTPIl
 1.1283791670955125738961589031215452L

	)

391 
	#M_SQRT2l
 1.4142135623730950488016887242096981L

	)

392 
	#M_SQRT1_2l
 0.7071067811865475244008443621048490L

	)

399 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


400 
	#__NO_MATH_INLINES
 1

	)

403 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

410 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

411 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

412 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

413 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

414 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

415 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

419 #ifde‡
__USE_EXTERN_INLINES


420 
	~<bôs/m©hölöe.h
>

423 #ifde‡
__USE_ISOC99


427 #i‚de‡
isgª©î


428 
	#isgª©î
(
x
, 
y
) \

429 (
__exãnsi⁄__
 \

430 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

431 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

435 #i‚de‡
isgª©îequÆ


436 
	#isgª©îequÆ
(
x
, 
y
) \

437 (
__exãnsi⁄__
 \

438 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

439 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

443 #i‚de‡
i¶ess


444 
	#i¶ess
(
x
, 
y
) \

445 (
__exãnsi⁄__
 \

446 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

447 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

451 #i‚de‡
i¶es£quÆ


452 
	#i¶es£quÆ
(
x
, 
y
) \

453 (
__exãnsi⁄__
 \

454 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

455 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

459 #i‚de‡
i¶essgª©î


460 
	#i¶essgª©î
(
x
, 
y
) \

461 (
__exãnsi⁄__
 \

462 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

463 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

467 #i‚de‡
isun‹dîed


468 
	#isun‹dîed
(
u
, 
v
) \

469 (
__exãnsi⁄__
 \

470 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

471 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

476 
	g__END_DECLS


	@/usr/include/netdb.h

23 #i‚def 
_NETDB_H


24 
	#_NETDB_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<√töë/ö.h
>

29 
	~<°döt.h
>

30 #ifde‡
__USE_MISC


33 
	~<Ωc/√tdb.h
>

36 #ifde‡
__USE_GNU


37 
	#__√ed_sigevít_t


	)

38 
	~<bôs/sigöfo.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

43 
	~<bôs/√tdb.h
>

46 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

47 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

48 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

49 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

50 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

51 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

54 
	g__BEGIN_DECLS


58 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

61 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

65 
	#HOST_NOT_FOUND
 1

	)

66 
	#TRY_AGAIN
 2

	)

68 
	#NO_RECOVERY
 3

	)

70 
	#NO_DATA
 4

	)

72 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


73 
	#NETDB_INTERNAL
 -1

	)

74 
	#NETDB_SUCCESS
 0

	)

75 
	#NO_ADDRESS
 
NO_DATA


	)

78 #ifde‡
__USE_XOPEN2K


80 
	#IPPORT_RESERVED
 1024

	)

83 #ifde‡
__USE_GNU


85 
	#SCOPE_DELIMITER
 '%'

	)

88 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


91 
	$hîr‹
 (
__c⁄°
 *
__°r
Ë
__THROW
;

94 
__c⁄°
 *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

99 
	sho°ít


101 *
h_«me
;

102 **
h_Æü£s
;

103 
h_addπy≥
;

104 
h_Àngth
;

105 **
h_addr_li°
;

106 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


107 
	#h_addr
 
h_addr_li°
[0]

	)

116 
	`£tho°ít
 (
__°ay_›í
);

122 
	`ídho°ít
 ();

129 
ho°ít
 *
	`gëho°ít
 ();

136 
ho°ít
 *
	`gëho°byaddr
 (
__c⁄°
 *
__addr
, 
__sockÀn_t
 
__Àn
,

137 
__ty≥
);

143 
ho°ít
 *
	`gëho°by«me
 (
__c⁄°
 *
__«me
);

145 #ifde‡
__USE_MISC


154 
ho°ít
 *
	`gëho°by«me2
 (
__c⁄°
 *
__«me
, 
__af
);

166 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

168 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

169 *
__ª°ri˘
 
__h_î∫›
);

171 
	`gëho°byaddr_r
 (
__c⁄°
 *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

172 
__ty≥
,

173 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

174 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

175 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

176 *
__ª°ri˘
 
__h_î∫›
);

178 
	`gëho°by«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

179 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

180 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

181 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

182 *
__ª°ri˘
 
__h_î∫›
);

184 
	`gëho°by«me2_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, 
__af
,

185 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

186 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

187 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

188 *
__ª°ri˘
 
__h_î∫›
);

197 
	`£äëít
 (
__°ay_›í
);

203 
	`íd√ã¡
 ();

210 
√ã¡
 *
	`gë√ã¡
 ();

217 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

223 
√ã¡
 *
	`gë√tby«me
 (
__c⁄°
 *
__«me
);

225 #ifdef 
__USE_MISC


236 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

237 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

238 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

239 *
__ª°ri˘
 
__h_î∫›
);

241 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

242 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

243 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

244 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

245 *
__ª°ri˘
 
__h_î∫›
);

247 
	`gë√tby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

248 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

249 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

250 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

251 *
__ª°ri˘
 
__h_î∫›
);

256 
	s£rvít


258 *
s_«me
;

259 **
s_Æü£s
;

260 
s_p‹t
;

261 *
s_¥Ÿo
;

269 
	`£t£rvít
 (
__°ay_›í
);

275 
	`íd£rvít
 ();

282 
£rvít
 *
	`gë£rvít
 ();

289 
£rvít
 *
	`gë£rvby«me
 (
__c⁄°
 *
__«me
,

290 
__c⁄°
 *
__¥Ÿo
);

297 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, 
__c⁄°
 *
__¥Ÿo
);

300 #ifdef 
__USE_MISC


308 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

309 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

310 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

312 
	`gë£rvby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

313 
__c⁄°
 *
__ª°ri˘
 
__¥Ÿo
,

314 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

315 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

316 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

318 
	`gë£rvbyp‹t_r
 (
__p‹t
, 
__c⁄°
 *
__ª°ri˘
 
__¥Ÿo
,

319 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

320 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

321 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

326 
	s¥Ÿ€¡


328 *
p_«me
;

329 **
p_Æü£s
;

330 
p_¥Ÿo
;

338 
	`£çrŸ€¡
 (
__°ay_›í
);

344 
	`íd¥Ÿ€¡
 ();

351 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

357 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (
__c⁄°
 *
__«me
);

363 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

366 #ifdef 
__USE_MISC


374 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

375 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

376 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

378 
	`gë¥Ÿoby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

379 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

380 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

381 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

383 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

384 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

385 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

386 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

395 
	`£äëgª¡
 (
__c⁄°
 *
__√tgroup
);

403 
	`íd√tgª¡
 ();

412 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

413 **
__ª°ri˘
 
__u£Ω
,

414 **
__ª°ri˘
 
__domaöp
);

423 
	`ö√tgr
 (
__c⁄°
 *
__√tgroup
, __c⁄° *
__ho°
,

424 
__c⁄°
 *
__u£r
, __c⁄° *
__domaö
);

432 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

433 **
__ª°ri˘
 
__u£Ω
,

434 **
__ª°ri˘
 
__domaöp
,

435 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

439 #ifde‡
__USE_BSD


451 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

452 
__c⁄°
 *
__ª°ri˘
 
__locu£r
,

453 
__c⁄°
 *
__ª°ri˘
 
__ªmu£r
,

454 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

463 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

464 
__c⁄°
 *
__ª°ri˘
 
__locu£r
,

465 
__c⁄°
 *
__ª°ri˘
 
__ªmu£r
,

466 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

467 
ß_Ámûy_t
 
__af
);

479 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

480 
__c⁄°
 *
__ª°ri˘
 
__«me
,

481 
__c⁄°
 *
__ª°ri˘
 
__∑ss
,

482 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

491 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

492 
__c⁄°
 *
__ª°ri˘
 
__«me
,

493 
__c⁄°
 *
__ª°ri˘
 
__∑ss
,

494 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

495 
ß_Ámûy_t
 
__af
);

505 
	`ru£rok
 (
__c⁄°
 *
__rho°
, 
__su£r
,

506 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
);

515 
	`ru£rok_af
 (
__c⁄°
 *
__rho°
, 
__su£r
,

516 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
,

517 
ß_Ámûy_t
 
__af
);

527 
	`ºesvp‹t
 (*
__Æp‹t
);

536 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

541 #ifdef 
__USE_POSIX


543 
	saddröfo


545 
ai_Êags
;

546 
ai_Ámûy
;

547 
ai_sockty≥
;

548 
ai_¥Ÿocﬁ
;

549 
sockÀn_t
 
ai_addæí
;

550 
sockaddr
 *
ai_addr
;

551 *
ai_ˇn⁄«me
;

552 
addröfo
 *
ai_√xt
;

555 #ifde‡
__USE_GNU


557 
	sgaicb


559 c⁄° *
¨_«me
;

560 c⁄° *
¨_£rvi˚
;

561 c⁄° 
addröfo
 *
¨_ªque°
;

562 
addröfo
 *
¨_ªsu…
;

564 
__ªtu∫
;

565 
__unu£d
[5];

569 
	#GAI_WAIT
 0

	)

570 
	#GAI_NOWAIT
 1

	)

574 
	#AI_PASSIVE
 0x0001

	)

575 
	#AI_CANONNAME
 0x0002

	)

576 
	#AI_NUMERICHOST
 0x0004

	)

577 
	#AI_V4MAPPED
 0x0008

	)

578 
	#AI_ALL
 0x0010

	)

579 
	#AI_ADDRCONFIG
 0x0020

	)

581 #ifde‡
__USE_GNU


582 
	#AI_IDN
 0x0040

	)

585 
	#AI_CANONIDN
 0x0080

	)

586 
	#AI_IDN_ALLOW_UNASSIGNED
 0x0100

	)

588 
	#AI_IDN_USE_STD3_ASCII_RULES
 0x0200

	)

591 
	#AI_NUMERICSERV
 0x0400

	)

594 
	#EAI_BADFLAGS
 -1

	)

595 
	#EAI_NONAME
 -2

	)

596 
	#EAI_AGAIN
 -3

	)

597 
	#EAI_FAIL
 -4

	)

598 
	#EAI_FAMILY
 -6

	)

599 
	#EAI_SOCKTYPE
 -7

	)

600 
	#EAI_SERVICE
 -8

	)

601 
	#EAI_MEMORY
 -10

	)

602 
	#EAI_SYSTEM
 -11

	)

603 
	#EAI_OVERFLOW
 -12

	)

604 #ifde‡
__USE_GNU


605 
	#EAI_NODATA
 -5

	)

606 
	#EAI_ADDRFAMILY
 -9

	)

607 
	#EAI_INPROGRESS
 -100

	)

608 
	#EAI_CANCELED
 -101

	)

609 
	#EAI_NOTCANCELED
 -102

	)

610 
	#EAI_ALLDONE
 -103

	)

611 
	#EAI_INTR
 -104

	)

612 
	#EAI_IDN_ENCODE
 -105

	)

615 #ifde‡
__USE_MISC


616 
	#NI_MAXHOST
 1025

	)

617 
	#NI_MAXSERV
 32

	)

620 
	#NI_NUMERICHOST
 1

	)

621 
	#NI_NUMERICSERV
 2

	)

622 
	#NI_NOFQDN
 4

	)

623 
	#NI_NAMEREQD
 8

	)

624 
	#NI_DGRAM
 16

	)

625 #ifde‡
__USE_GNU


626 
	#NI_IDN
 32

	)

627 
	#NI_IDN_ALLOW_UNASSIGNED
 64

	)

629 
	#NI_IDN_USE_STD3_ASCII_RULES
 128

	)

638 
	`gëaddröfo
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

639 
__c⁄°
 *
__ª°ri˘
 
__£rvi˚
,

640 
__c⁄°
 
addröfo
 *
__ª°ri˘
 
__ªq
,

641 
addröfo
 **
__ª°ri˘
 
__∑i
);

644 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

647 
__c⁄°
 *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

653 
	`gë«meöfo
 (
__c⁄°
 
sockaddr
 *
__ª°ri˘
 
__ß
,

654 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

655 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

656 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

659 #ifde‡
__USE_GNU


668 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

669 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

679 
	`gai_su•íd
 (
__c⁄°
 
gaicb
 *__c⁄° 
__li°
[], 
__ít
,

680 
__c⁄°
 
time•ec
 *
__timeout
);

683 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

686 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

689 
__END_DECLS


	@/usr/include/netinet/in.h

20 #i‚def 
_NETINET_IN_H


21 
	#_NETINET_IN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<°döt.h
>

25 
	~<sys/sockë.h
>

26 
	~<bôs/ty≥s.h
>

29 
__BEGIN_DECLS


34 
	mIPPROTO_IP
 = 0,

35 
	#IPPROTO_IP
 
IPPROTO_IP


	)

36 
	mIPPROTO_HOPOPTS
 = 0,

37 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

38 
	mIPPROTO_ICMP
 = 1,

39 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

40 
	mIPPROTO_IGMP
 = 2,

41 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

42 
	mIPPROTO_IPIP
 = 4,

43 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

44 
	mIPPROTO_TCP
 = 6,

45 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

46 
	mIPPROTO_EGP
 = 8,

47 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

48 
	mIPPROTO_PUP
 = 12,

49 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

50 
	mIPPROTO_UDP
 = 17,

51 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

52 
	mIPPROTO_IDP
 = 22,

53 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

54 
	mIPPROTO_TP
 = 29,

55 
	#IPPROTO_TP
 
IPPROTO_TP


	)

56 
	mIPPROTO_DCCP
 = 33,

57 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

58 
	mIPPROTO_IPV6
 = 41,

59 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

60 
	mIPPROTO_ROUTING
 = 43,

61 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

62 
	mIPPROTO_FRAGMENT
 = 44,

63 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

64 
	mIPPROTO_RSVP
 = 46,

65 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

66 
	mIPPROTO_GRE
 = 47,

67 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

68 
	mIPPROTO_ESP
 = 50,

69 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

70 
	mIPPROTO_AH
 = 51,

71 
	#IPPROTO_AH
 
IPPROTO_AH


	)

72 
	mIPPROTO_ICMPV6
 = 58,

73 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

74 
	mIPPROTO_NONE
 = 59,

75 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

76 
	mIPPROTO_DSTOPTS
 = 60,

77 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

78 
	mIPPROTO_MTP
 = 92,

79 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

80 
	mIPPROTO_ENCAP
 = 98,

81 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

82 
	mIPPROTO_PIM
 = 103,

83 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

84 
	mIPPROTO_COMP
 = 108,

85 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

86 
	mIPPROTO_SCTP
 = 132,

87 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

88 
	mIPPROTO_UDPLITE
 = 136,

89 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


97 
uöt16_t
 
	tö_p‹t_t
;

102 
	mIPPORT_ECHO
 = 7,

103 
	mIPPORT_DISCARD
 = 9,

104 
	mIPPORT_SYSTAT
 = 11,

105 
	mIPPORT_DAYTIME
 = 13,

106 
	mIPPORT_NETSTAT
 = 15,

107 
	mIPPORT_FTP
 = 21,

108 
	mIPPORT_TELNET
 = 23,

109 
	mIPPORT_SMTP
 = 25,

110 
	mIPPORT_TIMESERVER
 = 37,

111 
	mIPPORT_NAMESERVER
 = 42,

112 
	mIPPORT_WHOIS
 = 43,

113 
	mIPPORT_MTP
 = 57,

115 
	mIPPORT_TFTP
 = 69,

116 
	mIPPORT_RJE
 = 77,

117 
	mIPPORT_FINGER
 = 79,

118 
	mIPPORT_TTYLINK
 = 87,

119 
	mIPPORT_SUPDUP
 = 95,

122 
	mIPPORT_EXECSERVER
 = 512,

123 
	mIPPORT_LOGINSERVER
 = 513,

124 
	mIPPORT_CMDSERVER
 = 514,

125 
	mIPPORT_EFSSERVER
 = 520,

128 
	mIPPORT_BIFFUDP
 = 512,

129 
	mIPPORT_WHOSERVER
 = 513,

130 
	mIPPORT_ROUTESERVER
 = 520,

133 
	mIPPORT_RESERVED
 = 1024,

136 
	mIPPORT_USERRESERVED
 = 5000

141 
uöt32_t
 
	tö_addr_t
;

142 
	sö_addr


144 
ö_addr_t
 
	ms_addr
;

153 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

154 
	#IN_CLASSA_NET
 0xff000000

	)

155 
	#IN_CLASSA_NSHIFT
 24

	)

156 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

157 
	#IN_CLASSA_MAX
 128

	)

159 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

160 
	#IN_CLASSB_NET
 0xffff0000

	)

161 
	#IN_CLASSB_NSHIFT
 16

	)

162 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

163 
	#IN_CLASSB_MAX
 65536

	)

165 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

166 
	#IN_CLASSC_NET
 0xffffff00

	)

167 
	#IN_CLASSC_NSHIFT
 8

	)

168 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

170 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

171 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

173 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

174 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

177 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

179 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

181 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

184 
	#IN_LOOPBACKNET
 127

	)

186 #i‚de‡
INADDR_LOOPBACK


187 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

191 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

192 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

193 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

194 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

198 
	sö6_addr


202 
uöt8_t
 
	m__u6_addr8
[16];

203 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


204 
uöt16_t
 
	m__u6_addr16
[8];

205 
uöt32_t
 
	m__u6_addr32
[4];

207 } 
	m__ö6_u
;

208 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

209 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


210 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

211 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

215 c⁄° 
ö6_addr
 
ö6addr_™y
;

216 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

217 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

218 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

220 
	#INET_ADDRSTRLEN
 16

	)

221 
	#INET6_ADDRSTRLEN
 46

	)

225 
	ssockaddr_ö


227 
__SOCKADDR_COMMON
 (
sö_
);

228 
ö_p‹t_t
 
	msö_p‹t
;

229 
ö_addr
 
	msö_addr
;

232 
	msö_zîo
[ (
sockaddr
) -

233 
__SOCKADDR_COMMON_SIZE
 -

234  (
ö_p‹t_t
) -

235  (
ö_addr
)];

239 
	ssockaddr_ö6


241 
__SOCKADDR_COMMON
 (
sö6_
);

242 
ö_p‹t_t
 
	msö6_p‹t
;

243 
uöt32_t
 
	msö6_Êowöfo
;

244 
ö6_addr
 
	msö6_addr
;

245 
uöt32_t
 
	msö6_sc›e_id
;

249 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


251 
	sù_mªq


254 
ö_addr
 
	mimr_mu…üddr
;

257 
ö_addr
 
	mimr_öãrÁ˚
;

260 
	sù_mªq_sour˚


263 
ö_addr
 
	mimr_mu…üddr
;

266 
ö_addr
 
	mimr_öãrÁ˚
;

269 
ö_addr
 
	mimr_sour˚addr
;

275 
	sùv6_mªq


278 
ö6_addr
 
	mùv6mr_mu…üddr
;

281 
	mùv6mr_öãrÁ˚
;

285 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


287 
	sgroup_ªq


290 
uöt32_t
 
	mgr_öãrÁ˚
;

293 
sockaddr_°‹age
 
	mgr_group
;

296 
	sgroup_sour˚_ªq


299 
uöt32_t
 
	mg§_öãrÁ˚
;

302 
sockaddr_°‹age
 
	mg§_group
;

305 
sockaddr_°‹age
 
	mg§_sour˚
;

310 
	sù_msfûãr


313 
ö_addr
 
	mimsf_mu…üddr
;

316 
ö_addr
 
	mimsf_öãrÁ˚
;

319 
uöt32_t
 
	mimsf_fmode
;

322 
uöt32_t
 
	mimsf_num§c
;

324 
ö_addr
 
	mimsf_¶i°
[1];

327 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

328 -  (
ö_addr
) \

329 + (
num§c
Ë*  (
ö_addr
))

	)

331 
	sgroup_fûãr


334 
uöt32_t
 
	mgf_öãrÁ˚
;

337 
sockaddr_°‹age
 
	mgf_group
;

340 
uöt32_t
 
	mgf_fmode
;

343 
uöt32_t
 
	mgf_num§c
;

345 
sockaddr_°‹age
 
	mgf_¶i°
[1];

348 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

349 -  (
sockaddr_°‹age
) \

350 + ((
num§c
) \

351 *  (
sockaddr_°‹age
)))

	)

356 
	~<bôs/ö.h
>

365 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

366 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

367 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

368 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

369 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

370 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

371 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

373 
	~<ídün.h
>

376 
	~<bôs/byãsw≠.h
>

378 #ifde‡
__OPTIMIZE__


382 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


385 
	#¡ohl
(
x
Ë(x)

	)

386 
	#¡ohs
(
x
Ë(x)

	)

387 
	#ht⁄l
(
x
Ë(x)

	)

388 
	#ht⁄s
(
x
Ë(x)

	)

390 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


391 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

392 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

393 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

394 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

399 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

400 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

401 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

402 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

403 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =0)

	)

405 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

406 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

407 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

408 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

409 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

411 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((
__c⁄°
 
uöt8_t
 *Ë◊))[0] =0xff)

	)

413 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

414 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

415 =
	`ht⁄l
 (0x„800000))

	)

417 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

418 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

419 =
	`ht⁄l
 (0x„c00000))

	)

421 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

422 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

423 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

424 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

426 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

427 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

428 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

429 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0) \

430 && (
	`¡ohl
 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

432 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

433 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] =((__c⁄° uöt32_à*Ë(
b
))[0]) \

434 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] =((__c⁄° uöt32_à*Ë(
b
))[1]) \

435 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =((__c⁄° uöt32_à*Ë(
b
))[2]) \

436 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =((__c⁄° uöt32_à*Ë(
b
))[3]))

	)

438 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


440 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

443 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

444 
__THROW
;

448 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

449 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

450 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

452 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

453 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

454 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

456 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

457 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

458 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

460 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

461 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

462 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

464 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

465 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

466 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

469 #ifde‡
__USE_GNU


471 
	sö6_pktöfo


473 
ö6_addr
 
ùi6_addr
;

474 
ùi6_ifödex
;

478 
	sù6_mtuöfo


480 
sockaddr_ö6
 
ù6m_addr
;

481 
uöt32_t
 
ù6m_mtu
;

486 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

487 
__THROW
 
__©åibuã_dïªˇãd__
;

488 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

489 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

490 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

491 
__c⁄°
 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

492 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

493 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

494 
__mu…x
, 
__∂usy
)

495 
__THROW
 
__©åibuã_dïªˇãd__
;

496 
	$öë6_›ti⁄_√xt
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

497 
uöt8_t
 **
__çåp
)

498 
__THROW
 
__©åibuã_dïªˇãd__
;

499 
	$öë6_›ti⁄_föd
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

500 
uöt8_t
 **
__çåp
, 
__ty≥
)

501 
__THROW
 
__©åibuã_dïªˇãd__
;

505 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

506 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

507 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

508 **
__d©abuÂ
Ë
__THROW
;

509 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

510 
__THROW
;

511 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

512 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

513 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

514 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

515 **
__d©abuÂ
Ë
__THROW
;

516 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

517 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

518 **
__d©abuÂ
Ë
__THROW
;

519 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

520 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

524 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

525 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

526 
__£gmíts
Ë
__THROW
;

527 
	$öë6_πh_add
 (*
__bp
, 
__c⁄°
 
ö6_addr
 *
__addr
Ë
__THROW
;

528 
	$öë6_πh_ªvî£
 (
__c⁄°
 *
__ö
, *
__out
Ë
__THROW
;

529 
	$öë6_πh_£gmíts
 (
__c⁄°
 *
__bp
Ë
__THROW
;

530 
ö6_addr
 *
	$öë6_πh_gëaddr
 (
__c⁄°
 *
__bp
, 
__ödex
)

531 
__THROW
;

537 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

538 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

539 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

540 
__THROW
;

543 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

544 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

545 
uöt32_t
 
__num§c
,

546 
__c⁄°
 
ö_addr
 *
__¶i°
)

547 
__THROW
;

551 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

552 
__c⁄°
 
sockaddr
 *
__group
,

553 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

554 
uöt32_t
 *
__num§c
,

555 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

558 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

559 
__c⁄°
 
sockaddr
 *
__group
,

560 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

561 
uöt32_t
 
__num§c
,

562 
__c⁄°
 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

565 
__END_DECLS


	@/usr/include/netinet/tcp.h

32 #i‚de‡
_NETINET_TCP_H


33 
	#_NETINET_TCP_H
 1

	)

35 
	~<„©uªs.h
>

40 
	#TCP_NODELAY
 1

	)

41 
	#TCP_MAXSEG
 2

	)

42 
	#TCP_CORK
 3

	)

43 
	#TCP_KEEPIDLE
 4

	)

44 
	#TCP_KEEPINTVL
 5

	)

45 
	#TCP_KEEPCNT
 6

	)

46 
	#TCP_SYNCNT
 7

	)

47 
	#TCP_LINGER2
 8

	)

48 
	#TCP_DEFER_ACCEPT
 9

	)

49 
	#TCP_WINDOW_CLAMP
 10

	)

50 
	#TCP_INFO
 11

	)

51 
	#TCP_QUICKACK
 12

	)

52 
	#TCP_CONGESTION
 13

	)

53 
	#TCP_MD5SIG
 14

	)

55 #ifde‡
__USE_MISC


56 
	~<sys/ty≥s.h
>

57 
	~<sys/sockë.h
>

59 #ifde‡
__FAVOR_BSD


60 
u_öt32_t
 
	tt˝_£q
;

65 
	st˝hdr


67 
u_öt16_t
 
	mth_•‹t
;

68 
u_öt16_t
 
	mth_dp‹t
;

69 
t˝_£q
 
	mth_£q
;

70 
t˝_£q
 
	mth_ack
;

71 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


72 
u_öt8_t
 
	mth_x2
:4;

73 
u_öt8_t
 
	mth_off
:4;

75 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


76 
u_öt8_t
 
	mth_off
:4;

77 
u_öt8_t
 
	mth_x2
:4;

79 
u_öt8_t
 
	mth_Êags
;

80 
	#TH_FIN
 0x01

	)

81 
	#TH_SYN
 0x02

	)

82 
	#TH_RST
 0x04

	)

83 
	#TH_PUSH
 0x08

	)

84 
	#TH_ACK
 0x10

	)

85 
	#TH_URG
 0x20

	)

86 
u_öt16_t
 
	mth_wö
;

87 
u_öt16_t
 
	mth_sum
;

88 
u_öt16_t
 
	mth_uΩ
;

92 
	st˝hdr


94 
u_öt16_t
 
	msour˚
;

95 
u_öt16_t
 
	mde°
;

96 
u_öt32_t
 
	m£q
;

97 
u_öt32_t
 
	mack_£q
;

98 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


99 
u_öt16_t
 
	mªs1
:4;

100 
u_öt16_t
 
	mdoff
:4;

101 
u_öt16_t
 
	mfö
:1;

102 
u_öt16_t
 
	msyn
:1;

103 
u_öt16_t
 
	mr°
:1;

104 
u_öt16_t
 
	mpsh
:1;

105 
u_öt16_t
 
	mack
:1;

106 
u_öt16_t
 
	murg
:1;

107 
u_öt16_t
 
	mªs2
:2;

108 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


109 
u_öt16_t
 
	mdoff
:4;

110 
u_öt16_t
 
	mªs1
:4;

111 
u_öt16_t
 
	mªs2
:2;

112 
u_öt16_t
 
	murg
:1;

113 
u_öt16_t
 
	mack
:1;

114 
u_öt16_t
 
	mpsh
:1;

115 
u_öt16_t
 
	mr°
:1;

116 
u_öt16_t
 
	msyn
:1;

117 
u_öt16_t
 
	mfö
:1;

121 
u_öt16_t
 
	mwödow
;

122 
u_öt16_t
 
	mcheck
;

123 
u_öt16_t
 
	murg_±r
;

129 
	mTCP_ESTABLISHED
 = 1,

130 
	mTCP_SYN_SENT
,

131 
	mTCP_SYN_RECV
,

132 
	mTCP_FIN_WAIT1
,

133 
	mTCP_FIN_WAIT2
,

134 
	mTCP_TIME_WAIT
,

135 
	mTCP_CLOSE
,

136 
	mTCP_CLOSE_WAIT
,

137 
	mTCP_LAST_ACK
,

138 
	mTCP_LISTEN
,

139 
	mTCP_CLOSING


142 
	#TCPOPT_EOL
 0

	)

143 
	#TCPOPT_NOP
 1

	)

144 
	#TCPOPT_MAXSEG
 2

	)

145 
	#TCPOLEN_MAXSEG
 4

	)

146 
	#TCPOPT_WINDOW
 3

	)

147 
	#TCPOLEN_WINDOW
 3

	)

148 
	#TCPOPT_SACK_PERMITTED
 4

	)

149 
	#TCPOLEN_SACK_PERMITTED
 2

	)

150 
	#TCPOPT_SACK
 5

	)

151 
	#TCPOPT_TIMESTAMP
 8

	)

152 
	#TCPOLEN_TIMESTAMP
 10

	)

153 
	#TCPOLEN_TSTAMP_APPA
 (
TCPOLEN_TIMESTAMP
+2Ë

	)

155 
	#TCPOPT_TSTAMP_HDR
 \

156 (
TCPOPT_NOP
<<24|TCPOPT_NOP<<16|
TCPOPT_TIMESTAMP
<<8|
TCPOLEN_TIMESTAMP
)

	)

164 
	#TCP_MSS
 512

	)

166 
	#TCP_MAXWIN
 65535

	)

168 
	#TCP_MAX_WINSHIFT
 14

	)

170 
	#SOL_TCP
 6

	)

173 
	#TCPI_OPT_TIMESTAMPS
 1

	)

174 
	#TCPI_OPT_SACK
 2

	)

175 
	#TCPI_OPT_WSCALE
 4

	)

176 
	#TCPI_OPT_ECN
 8

	)

179 
	et˝_ˇ_°©e


181 
	mTCP_CA_O≥n
 = 0,

182 
	mTCP_CA_Dis‹dî
 = 1,

183 
	mTCP_CA_CWR
 = 2,

184 
	mTCP_CA_Recovîy
 = 3,

185 
	mTCP_CA_Loss
 = 4

188 
	st˝_öfo


190 
u_öt8_t
 
	mt˝i_°©e
;

191 
u_öt8_t
 
	mt˝i_ˇ_°©e
;

192 
u_öt8_t
 
	mt˝i_ªå™smôs
;

193 
u_öt8_t
 
	mt˝i_¥obes
;

194 
u_öt8_t
 
	mt˝i_backoff
;

195 
u_öt8_t
 
	mt˝i_›ti⁄s
;

196 
u_öt8_t
 
	mt˝i_¢d_wsˇÀ
 : 4, 
	mt˝i_rcv_wsˇÀ
 : 4;

198 
u_öt32_t
 
	mt˝i_πo
;

199 
u_öt32_t
 
	mt˝i_©o
;

200 
u_öt32_t
 
	mt˝i_¢d_mss
;

201 
u_öt32_t
 
	mt˝i_rcv_mss
;

203 
u_öt32_t
 
	mt˝i_u«cked
;

204 
u_öt32_t
 
	mt˝i_ßcked
;

205 
u_öt32_t
 
	mt˝i_lo°
;

206 
u_öt32_t
 
	mt˝i_ªå™s
;

207 
u_öt32_t
 
	mt˝i_Áckës
;

210 
u_öt32_t
 
	mt˝i_œ°_d©a_£¡
;

211 
u_öt32_t
 
	mt˝i_œ°_ack_£¡
;

212 
u_öt32_t
 
	mt˝i_œ°_d©a_ªcv
;

213 
u_öt32_t
 
	mt˝i_œ°_ack_ªcv
;

216 
u_öt32_t
 
	mt˝i_pmtu
;

217 
u_öt32_t
 
	mt˝i_rcv_s°hªsh
;

218 
u_öt32_t
 
	mt˝i_πt
;

219 
u_öt32_t
 
	mt˝i_πtv¨
;

220 
u_öt32_t
 
	mt˝i_¢d_s°hªsh
;

221 
u_öt32_t
 
	mt˝i_¢d_cwnd
;

222 
u_öt32_t
 
	mt˝i_advmss
;

223 
u_öt32_t
 
	mt˝i_ª‹dîög
;

225 
u_öt32_t
 
	mt˝i_rcv_πt
;

226 
u_öt32_t
 
	mt˝i_rcv_•a˚
;

228 
u_öt32_t
 
	mt˝i_tŸÆ_ªå™s
;

233 
	#TCP_MD5SIG_MAXKEYLEN
 80

	)

235 
	st˝_md5sig


237 
sockaddr_°‹age
 
	mt˝m_addr
;

238 
u_öt16_t
 
	m__t˝m_∑d1
;

239 
u_öt16_t
 
	mt˝m_keyÀn
;

240 
u_öt32_t
 
	m__t˝m_∑d2
;

241 
u_öt8_t
 
	mt˝m_key
[
TCP_MD5SIG_MAXKEYLEN
];

	@/usr/include/pwd.h

23 #i‚def 
_PWD_H


24 
	#_PWD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 
	#__√ed_size_t


	)

33 
	~<°ddef.h
>

35 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


38 #i‚de‡
__gid_t_deföed


39 
__gid_t
 
	tgid_t
;

40 
	#__gid_t_deföed


	)

43 #i‚de‡
__uid_t_deföed


44 
__uid_t
 
	tuid_t
;

45 
	#__uid_t_deföed


	)

50 
	s∑sswd


52 *
	mpw_«me
;

53 *
	mpw_∑sswd
;

54 
__uid_t
 
	mpw_uid
;

55 
__gid_t
 
	mpw_gid
;

56 *
	mpw_gecos
;

57 *
	mpw_dú
;

58 *
	mpw_shñl
;

62 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_GNU


63 
	#__√ed_FILE


	)

64 
	~<°dio.h
>

68 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


73 
£çwít
 ();

79 
ídpwít
 ();

85 
∑sswd
 *
gëpwít
 ();

88 #ifdef 
__USE_SVID


95 
∑sswd
 *
fgëpwít
 (
FILE
 *
__°ªam
);

103 
puçwít
 (
__c⁄°
 
∑sswd
 *
__ª°ri˘
 
__p
,

104 
FILE
 *
__ª°ri˘
 
__f
);

111 
∑sswd
 *
gëpwuid
 (
__uid_t
 
__uid
);

117 
∑sswd
 *
gëpw«m
 (
__c⁄°
 *
__«me
);

119 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


121 #ifde‡
__USE_MISC


124 
	#NSS_BUFLEN_PASSWD
 1024

	)

135 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


140 
gëpwít_r
 (
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

141 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

142 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

145 
gëpwuid_r
 (
__uid_t
 
__uid
,

146 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

147 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

148 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

150 
gëpw«m_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

151 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

152 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

153 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

156 #ifdef 
__USE_SVID


164 
fgëpwít_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

165 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

166 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

167 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

172 #ifde‡
__USE_GNU


181 
gëpw
 (
__uid_t
 
__uid
, *
__buf„r
);

184 
	g__END_DECLS


	@/usr/include/regex.h

22 #i‚de‡
_REGEX_H


23 
	#_REGEX_H
 1

	)

25 
	~<sys/ty≥s.h
>

26 
	~<gnu/›ti⁄-groups.h
>

29 #ifde‡
__˝lu•lus


37 
	ts_ªg_t
;

38 
	ta˘ive_ªg_t
;

45 
	tªg_sy¡ax_t
;

47 #ifde‡
__USE_GNU


50 
	#RE_BACKSLASH_ESCAPE_IN_LISTS
 ((Ë1)

	)

55 
	#RE_BK_PLUS_QM
 (
RE_BACKSLASH_ESCAPE_IN_LISTS
 << 1)

	)

61 
	#RE_CHAR_CLASSES
 (
RE_BK_PLUS_QM
 << 1)

	)

75 
	#RE_CONTEXT_INDEP_ANCHORS
 (
RE_CHAR_CLASSES
 << 1)

	)

83 
	#RE_CONTEXT_INDEP_OPS
 (
RE_CONTEXT_INDEP_ANCHORS
 << 1)

	)

87 
	#RE_CONTEXT_INVALID_OPS
 (
RE_CONTEXT_INDEP_OPS
 << 1)

	)

91 
	#RE_DOT_NEWLINE
 (
RE_CONTEXT_INVALID_OPS
 << 1)

	)

95 
	#RE_DOT_NOT_NULL
 (
RE_DOT_NEWLINE
 << 1)

	)

99 
	#RE_HAT_LISTS_NOT_NEWLINE
 (
RE_DOT_NOT_NULL
 << 1)

	)

104 
	#RE_INTERVALS
 (
RE_HAT_LISTS_NOT_NEWLINE
 << 1)

	)

108 
	#RE_LIMITED_OPS
 (
RE_INTERVALS
 << 1)

	)

112 
	#RE_NEWLINE_ALT
 (
RE_LIMITED_OPS
 << 1)

	)

117 
	#RE_NO_BK_BRACES
 (
RE_NEWLINE_ALT
 << 1)

	)

121 
	#RE_NO_BK_PARENS
 (
RE_NO_BK_BRACES
 << 1)

	)

125 
	#RE_NO_BK_REFS
 (
RE_NO_BK_PARENS
 << 1)

	)

129 
	#RE_NO_BK_VBAR
 (
RE_NO_BK_REFS
 << 1)

	)

135 
	#RE_NO_EMPTY_RANGES
 (
RE_NO_BK_VBAR
 << 1)

	)

139 
	#RE_UNMATCHED_RIGHT_PAREN_ORD
 (
RE_NO_EMPTY_RANGES
 << 1)

	)

143 
	#RE_NO_POSIX_BACKTRACKING
 (
RE_UNMATCHED_RIGHT_PAREN_ORD
 << 1)

	)

147 
	#RE_NO_GNU_OPS
 (
RE_NO_POSIX_BACKTRACKING
 << 1)

	)

155 
	#RE_DEBUG
 (
RE_NO_GNU_OPS
 << 1)

	)

160 
	#RE_INVALID_INTERVAL_ORD
 (
RE_DEBUG
 << 1)

	)

163 #ifde‡
__OPTION_POSIX_REGEXP_GLIBC


166 
	#RE_ICASE
 (
RE_INVALID_INTERVAL_ORD
 << 1)

	)

171 
	#RE_CARET_ANCHORS_HERE
 (
RE_ICASE
 << 1)

	)

175 
	#RE_CONTEXT_INVALID_DUP
 (
RE_CARET_ANCHORS_HERE
 << 1)

	)

179 
	#RE_NO_SUB
 (
RE_CONTEXT_INVALID_DUP
 << 1)

	)

187 
ªg_sy¡ax_t
 
ª_sy¡ax_›ti⁄s
;

189 #ifde‡
__USE_GNU


194 
	#RE_SYNTAX_EMACS
 0

	)

196 
	#RE_SYNTAX_AWK
 \

197 (
RE_BACKSLASH_ESCAPE_IN_LISTS
 | 
RE_DOT_NOT_NULL
 \

198 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_REFS
 \

199 | 
RE_NO_BK_VBAR
 | 
RE_NO_EMPTY_RANGES
 \

200 | 
RE_DOT_NEWLINE
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

201 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
 | 
RE_NO_GNU_OPS
)

	)

203 
	#RE_SYNTAX_GNU_AWK
 \

204 ((
RE_SYNTAX_POSIX_EXTENDED
 | 
RE_BACKSLASH_ESCAPE_IN_LISTS
 | 
RE_DEBUG
) \

205 & ~(
RE_DOT_NOT_NULL
 | 
RE_INTERVALS
 | 
RE_CONTEXT_INDEP_OPS
 \

206 | 
RE_CONTEXT_INVALID_OPS
 ))

	)

208 
	#RE_SYNTAX_POSIX_AWK
 \

209 (
RE_SYNTAX_POSIX_EXTENDED
 | 
RE_BACKSLASH_ESCAPE_IN_LISTS
 \

210 | 
RE_INTERVALS
 | 
RE_NO_GNU_OPS
)

	)

212 
	#RE_SYNTAX_GREP
 \

213 (
RE_BK_PLUS_QM
 | 
RE_CHAR_CLASSES
 \

214 | 
RE_HAT_LISTS_NOT_NEWLINE
 | 
RE_INTERVALS
 \

215 | 
RE_NEWLINE_ALT
)

	)

217 
	#RE_SYNTAX_EGREP
 \

218 (
RE_CHAR_CLASSES
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

219 | 
RE_CONTEXT_INDEP_OPS
 | 
RE_HAT_LISTS_NOT_NEWLINE
 \

220 | 
RE_NEWLINE_ALT
 | 
RE_NO_BK_PARENS
 \

221 | 
RE_NO_BK_VBAR
)

	)

223 
	#RE_SYNTAX_POSIX_EGREP
 \

224 (
RE_SYNTAX_EGREP
 | 
RE_INTERVALS
 | 
RE_NO_BK_BRACES
 \

225 | 
RE_INVALID_INTERVAL_ORD
)

	)

228 
	#RE_SYNTAX_ED
 
RE_SYNTAX_POSIX_BASIC


	)

230 
	#RE_SYNTAX_SED
 
RE_SYNTAX_POSIX_BASIC


	)

233 
	#_RE_SYNTAX_POSIX_COMMON
 \

234 (
RE_CHAR_CLASSES
 | 
RE_DOT_NEWLINE
 | 
RE_DOT_NOT_NULL
 \

235 | 
RE_INTERVALS
 | 
RE_NO_EMPTY_RANGES
)

	)

237 #ifde‡
__OPTION_POSIX_REGEXP_GLIBC


238 
	#RE_SYNTAX_POSIX_BASIC
 \

239 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_BK_PLUS_QM
 | 
RE_CONTEXT_INVALID_DUP
)

	)

241 
	#RE_SYNTAX_POSIX_BASIC
 \

242 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_BK_PLUS_QM
)

	)

248 
	#RE_SYNTAX_POSIX_MINIMAL_BASIC
 \

249 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_LIMITED_OPS
)

	)

251 
	#RE_SYNTAX_POSIX_EXTENDED
 \

252 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

253 | 
RE_CONTEXT_INDEP_OPS
 | 
RE_NO_BK_BRACES
 \

254 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_VBAR
 \

255 | 
RE_CONTEXT_INVALID_OPS
 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
)

	)

259 
	#RE_SYNTAX_POSIX_MINIMAL_EXTENDED
 \

260 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

261 | 
RE_CONTEXT_INVALID_OPS
 | 
RE_NO_BK_BRACES
 \

262 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_REFS
 \

263 | 
RE_NO_BK_VBAR
 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
)

	)

269 #ifde‡
RE_DUP_MAX


270 #unde‡
RE_DUP_MAX


273 
	#RE_DUP_MAX
 (0x7fff)

	)

281 
	#REG_EXTENDED
 1

	)

285 
	#REG_ICASE
 (
REG_EXTENDED
 << 1)

	)

290 
	#REG_NEWLINE
 (
REG_ICASE
 << 1)

	)

294 
	#REG_NOSUB
 (
REG_NEWLINE
 << 1)

	)

304 
	#REG_NOTBOL
 1

	)

307 
	#REG_NOTEOL
 (1 << 1)

	)

309 #ifde‡
__OPTION_POSIX_REGEXP_GLIBC


312 
	#REG_STARTEND
 (1 << 2)

	)

320 #i‡
deföed
 
_XOPEN_SOURCE
 || deföed 
__USE_XOPEN2K


321 
	gREG_ENOSYS
 = -1,

324 
	gREG_NOERROR
 = 0,

325 
	gREG_NOMATCH
,

329 
	gREG_BADPAT
,

330 
	gREG_ECOLLATE
,

331 
	gREG_ECTYPE
,

332 
	gREG_EESCAPE
,

333 
	gREG_ESUBREG
,

334 
	gREG_EBRACK
,

335 
	gREG_EPAREN
,

336 
	gREG_EBRACE
,

337 
	gREG_BADBR
,

338 
	gREG_ERANGE
,

339 
	gREG_ESPACE
,

340 
	gREG_BADRPT
,

343 
	gREG_EEND
,

344 
	gREG_ESIZE
,

345 
	gREG_ERPAREN


346 } 
	tªg_îrcode_t
;

354 #i‚de‡
RE_TRANSLATE_TYPE


355 
	#__RE_TRANSLATE_TYPE
 *

	)

356 #ifde‡
__USE_GNU


357 
	#RE_TRANSLATE_TYPE
 
__RE_TRANSLATE_TYPE


	)

361 #ifde‡
__USE_GNU


362 
	#__REPB_PREFIX
(
«me
Ë
	)
«me

364 
	#__REPB_PREFIX
(
«me
Ë
__
##
	)
«me

367 
	sª_∑âîn_buf„r


372 *
__REPB_PREFIX
(
buf„r
);

375 
__REPB_PREFIX
(
Æloˇãd
);

378 
__REPB_PREFIX
(
u£d
);

381 
ªg_sy¡ax_t
 
__REPB_PREFIX
(
sy¡ax
);

386 *
__REPB_PREFIX
(
Á°m≠
);

392 
__RE_TRANSLATE_TYPE
 
__REPB_PREFIX
(
å™¶©e
);

395 
size_t
 
	gª_nsub
;

401 
__REPB_PREFIX
(
ˇn_be_nuŒ
) : 1;

407 #ifde‡
__USE_GNU


408 
	#REGS_UNALLOCATED
 0

	)

409 
	#REGS_REALLOCATE
 1

	)

410 
	#REGS_FIXED
 2

	)

412 
__REPB_PREFIX
(
ªgs_Æloˇãd
) : 2;

416 
__REPB_PREFIX
(
Á°m≠_accuøã
) : 1;

420 
__REPB_PREFIX
(
no_sub
) : 1;

424 
__REPB_PREFIX
(
nŸ_bﬁ
) : 1;

427 
__REPB_PREFIX
(
nŸ_eﬁ
) : 1;

430 
__REPB_PREFIX
(
√wlöe_™ch‹
) : 1;

433 
ª_∑âîn_buf„r
 
	tªgex_t
;

436 
	tªgoff_t
;

439 #ifde‡
__USE_GNU


442 
	sª_ªgi°îs


444 
	gnum_ªgs
;

445 
ªgoff_t
 *
	g°¨t
;

446 
ªgoff_t
 *
	gíd
;

453 #i‚de‡
RE_NREGS


454 
	#RE_NREGS
 30

	)

464 
ªgoff_t
 
	grm_so
;

465 
ªgoff_t
 
	grm_eo
;

466 } 
	tªgm©ch_t
;

470 #ifde‡
__USE_GNU


473 
ªg_sy¡ax_t
 
ª_£t_sy¡ax
 (ªg_sy¡ax_à
__sy¡ax
);

478 c⁄° *
ª_compûe_∑âîn
 (c⁄° *
__∑âîn
, 
size_t
 
__Àngth
,

479 
ª_∑âîn_buf„r
 *
__buf„r
);

485 
ª_compûe_Á°m≠
 (
ª_∑âîn_buf„r
 *
__buf„r
);

493 
ª_£¨ch
 (
ª_∑âîn_buf„r
 *
__buf„r
, c⁄° *
__°rög
,

494 
__Àngth
, 
__°¨t
, 
__ønge
,

495 
ª_ªgi°îs
 *
__ªgs
);

500 
ª_£¨ch_2
 (
ª_∑âîn_buf„r
 *
__buf„r
,

501 c⁄° *
__°rög1
, 
__Àngth1
,

502 c⁄° *
__°rög2
, 
__Àngth2
, 
__°¨t
,

503 
__ønge
, 
ª_ªgi°îs
 *
__ªgs
, 
__°›
);

508 
ª_m©ch
 (
ª_∑âîn_buf„r
 *
__buf„r
, c⁄° *
__°rög
,

509 
__Àngth
, 
__°¨t
, 
ª_ªgi°îs
 *
__ªgs
);

513 
ª_m©ch_2
 (
ª_∑âîn_buf„r
 *
__buf„r
,

514 c⁄° *
__°rög1
, 
__Àngth1
,

515 c⁄° *
__°rög2
, 
__Àngth2
, 
__°¨t
,

516 
ª_ªgi°îs
 *
__ªgs
, 
__°›
);

531 
ª_£t_ªgi°îs
 (
ª_∑âîn_buf„r
 *
__buf„r
,

532 
ª_ªgi°îs
 *
__ªgs
,

533 
__num_ªgs
,

534 
ªgoff_t
 *
__°¨ts
,Ñegoff_à*
__íds
);

537 #i‡
deföed
 
_REGEX_RE_COMP
 || (deföed 
_LIBC
 && deföed 
__USE_BSD
)

538 #i‚de‡
_CRAY


540 *
ª_comp
 (const *);

541 
ª_exec
 (const *);

547 #i‚de‡
__ª°ri˘


548 #i‡! (2 < 
__GNUC__
 || (2 =__GNUC__ && 95 <
__GNUC_MINOR__
))

549 #i‡
deföed
 
ª°ri˘
 || 199901L <
__STDC_VERSION__


550 
	#__ª°ri˘
 
ª°ri˘


	)

552 
	#__ª°ri˘


	)

557 #i‚de‡
__ª°ri˘_¨r


558 #i‡(
__GNUC__
 > 3 || (__GNUC__ =3 && 
__GNUC_MINOR__
 >= 1)) \

559 && !
deföed
 
	g__GNUG__


560 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

562 
	#__ª°ri˘_¨r


	)

567 
ªgcomp
 (
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

568 c⁄° *
__ª°ri˘
 
__∑âîn
,

569 
__cÊags
);

571 
ªgexec
 (c⁄° 
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

572 c⁄° *
__ª°ri˘
 
__°rög
, 
size_t
 
__nm©ch
,

573 
ªgm©ch_t
 
__pm©ch
[
__ª°ri˘_¨r
],

574 
__eÊags
);

576 
size_t
 
ªgîr‹
 (
__îrcode
, c⁄° 
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

577 *
__ª°ri˘
 
__îrbuf
, 
size_t
 
__îrbuf_size
);

579 
ªg‰ì
 (
ªgex_t
 *
__¥eg
);

582 #ifde‡
__˝lu•lus


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

73 #ifde‡
__USE_POSIX199309


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

79 
	~<bôs/sigöfo.h
>

84 (*
	t__sigh™dÀr_t
) ();

89 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

90 
__THROW
;

91 #ifde‡
__USE_GNU


92 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

99 
__BEGIN_NAMESPACE_STD


100 #ifde‡
__USE_BSD


101 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

102 
__THROW
;

105 #ifde‡
__REDIRECT_NTH


106 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

107 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

108 
__sysv_sig«l
);

110 
	#sig«l
 
__sysv_sig«l


	)

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_XOPEN


118 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

119 
__THROW
;

125 #ifde‡
__USE_POSIX


126 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

129 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


133 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

136 
__BEGIN_NAMESPACE_STD


138 
	$øi£
 (
__sig
Ë
__THROW
;

139 
__END_NAMESPACE_STD


141 #ifde‡
__USE_SVID


143 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

144 
__THROW
;

145 
	$gsig«l
 (
__sig
Ë
__THROW
;

148 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


150 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 #ifde‡
__USE_XOPEN2K


155 
	`psigöfo
 (
__c⁄°
 
sigöfo_t
 *
__pöfo
, __c⁄° *
__s
);

168 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

170 #ifde‡
__FAVOR_BSD


173 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

175 #ifde‡
__USE_XOPEN


176 #ifde‡
__GNUC__


177 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

180 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

186 #ifde‡
__USE_BSD


193 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

196 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

202 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

206 #ifde‡
__USE_MISC


207 
	#NSIG
 
_NSIG


	)

210 #ifde‡
__USE_GNU


211 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

215 #ifde‡
__USE_BSD


216 
__sigh™dÀr_t
 
	tsig_t
;

219 #ifde‡
__USE_POSIX


222 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__USE_GNU


239 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

242 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

243 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

247 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

252 
	~<bôs/siga˘i⁄.h
>

255 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

256 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

263 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

266 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

267 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

270 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

278 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__USE_POSIX199309


285 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

286 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

293 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

294 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

295 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

296 
	`__n⁄nuŒ
 ((1));

300 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

301 
__THROW
;

306 #ifde‡
__USE_BSD


310 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

311 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

314 
	ssigvec


316 
__sigh™dÀr_t
 
sv_h™dÀr
;

317 
sv_mask
;

319 
sv_Êags
;

320 
	#sv_⁄°ack
 
sv_Êags


	)

324 
	#SV_ONSTACK
 (1 << 0)

	)

325 
	#SV_INTERRUPT
 (1 << 1)

	)

326 
	#SV_RESETHAND
 (1 << 2)

	)

334 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

335 
sigvec
 *
__ovec
Ë
__THROW
;

339 
	~<bôs/sigc⁄ãxt.h
>

342 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


348 
	#__√ed_size_t


	)

349 
	~<°ddef.h
>

354 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

356 
	~<bôs/sig°ack.h
>

357 #ifde‡
__USE_XOPEN


359 
	~<sys/uc⁄ãxt.h
>

365 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

366 
__THROW
 
__©åibuã_dïªˇãd__
;

370 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

371 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

375 #ifde‡
__USE_XOPEN_EXTENDED


379 
	$sighﬁd
 (
__sig
Ë
__THROW
;

382 
	$sigªl£
 (
__sig
Ë
__THROW
;

385 
	$sigign‹e
 (
__sig
Ë
__THROW
;

388 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


394 
	~<bôs/±hªadty≥s.h
>

395 
	~<bôs/sigthªad.h
>

402 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

404 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

408 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #ifde‡
__USE_XOPEN


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

89 
__BEGIN_NAMESPACE_STD


90 #i‚de‡
__USE_FILE_OFFSET64


91 
_G_Âos_t
 
	tÂos_t
;

93 
_G_Âos64_t
 
	tÂos_t
;

95 
__END_NAMESPACE_STD


96 #ifde‡
__USE_LARGEFILE64


97 
_G_Âos64_t
 
	tÂos64_t
;

101 
	#_IOFBF
 0

	)

102 
	#_IOLBF
 1

	)

103 
	#_IONBF
 2

	)

107 #i‚de‡
BUFSIZ


108 
	#BUFSIZ
 
_IO_BUFSIZ


	)

114 #i‚de‡
EOF


115 
	#EOF
 (-1)

	)

121 
	#SEEK_SET
 0

	)

122 
	#SEEK_CUR
 1

	)

123 
	#SEEK_END
 2

	)

126 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


128 
	#P_tmpdú
 "/tmp"

	)

141 
	~<bôs/°dio_lim.h
>

145 
_IO_FILE
 *
°dö
;

146 
_IO_FILE
 *
°dout
;

147 
_IO_FILE
 *
°dîr
;

149 
	#°dö
 
°dö


	)

150 
	#°dout
 
°dout


	)

151 
	#°dîr
 
°dîr


	)

153 
__BEGIN_NAMESPACE_STD


155 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

157 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

158 
__END_NAMESPACE_STD


160 #ifde‡
__USE_ATFILE


162 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

163 
__c⁄°
 *
__√w
Ë
__THROW
;

166 
__BEGIN_NAMESPACE_STD


171 #i‚de‡
__USE_FILE_OFFSET64


172 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

174 #ifde‡
__REDIRECT


175 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

177 
	#tmpfûe
 
tmpfûe64


	)

181 #ifde‡
__USE_LARGEFILE64


182 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

186 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

187 
__END_NAMESPACE_STD


189 #ifde‡
__USE_MISC


192 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

196 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


204 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

205 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

209 
__BEGIN_NAMESPACE_STD


214 
	`f˛o£
 (
FILE
 *
__°ªam
);

219 
	`fÊush
 (
FILE
 *
__°ªam
);

220 
__END_NAMESPACE_STD


222 #ifde‡
__USE_MISC


229 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

232 #ifde‡
__USE_GNU


239 
	`f˛o£Æl
 ();

243 
__BEGIN_NAMESPACE_STD


244 #i‚de‡
__USE_FILE_OFFSET64


249 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

250 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

255 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

256 
__c⁄°
 *
__ª°ri˘
 
__modes
,

257 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

259 #ifde‡
__REDIRECT


260 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

261 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

262 
__wur
;

263 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

264 
__c⁄°
 *
__ª°ri˘
 
__modes
,

265 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

266 
__wur
;

268 
	#f›í
 
f›í64


	)

269 
	#‰e›í
 
‰e›í64


	)

272 
__END_NAMESPACE_STD


273 #ifde‡
__USE_LARGEFILE64


274 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

275 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

276 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

277 
__c⁄°
 *
__ª°ri˘
 
__modes
,

278 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

281 #ifdef 
__USE_POSIX


283 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

286 #ifdef 
__USE_GNU


289 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

290 
__c⁄°
 *
__ª°ri˘
 
__modes
,

291 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

294 #ifde‡
__USE_XOPEN2K8


296 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

297 
__THROW
 
__wur
;

302 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

306 
__BEGIN_NAMESPACE_STD


309 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

313 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

314 
__modes
, 
size_t
 
__n
Ë
__THROW
;

315 
__END_NAMESPACE_STD


317 #ifdef 
__USE_BSD


320 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

321 
size_t
 
__size
Ë
__THROW
;

324 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

328 
__BEGIN_NAMESPACE_STD


333 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

334 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

339 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

341 
	$•rötf
 (*
__ª°ri˘
 
__s
,

342 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

348 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

349 
_G_va_li°
 
__¨g
);

354 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

356 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

357 
_G_va_li°
 
__¨g
Ë
__THROW
;

358 
__END_NAMESPACE_STD


360 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


361 
__BEGIN_NAMESPACE_C99


363 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

364 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

365 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

367 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

368 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

369 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

370 
__END_NAMESPACE_C99


373 #ifde‡
__USE_GNU


376 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

377 
_G_va_li°
 
__¨g
)

378 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

379 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

380 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

381 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

382 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

383 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

384 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

387 #ifde‡
__USE_XOPEN2K8


394 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

395 
_G_va_li°
 
__¨g
)

396 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

397 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

398 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

402 
__BEGIN_NAMESPACE_STD


407 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

408 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

413 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

415 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

416 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

418 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

419 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

420 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

421 #ifde‡
__REDIRECT


425 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

427 
__isoc99_fsˇnf
Ë
__wur
;

428 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

429 
__isoc99_sˇnf
Ë
__wur
;

430 
	`__REDIRECT
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

431 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

432 
__isoc99_ssˇnf
Ë
__THROW
;

434 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

435 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

436 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

438 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

439 
	#fsˇnf
 
__isoc99_fsˇnf


	)

440 
	#sˇnf
 
__isoc99_sˇnf


	)

441 
	#ssˇnf
 
__isoc99_ssˇnf


	)

445 
__END_NAMESPACE_STD


447 #ifdef 
__USE_ISOC99


448 
__BEGIN_NAMESPACE_C99


453 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

454 
_G_va_li°
 
__¨g
)

455 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

461 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

462 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

465 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

466 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

467 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

469 #i‡!
deföed
 
__USE_GNU
 \

470 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

471 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

472 #ifde‡
__REDIRECT


476 
	`__REDIRECT
 (
vfsˇnf
,

477 (
FILE
 *
__ª°ri˘
 
__s
,

478 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

479 
__isoc99_vfsˇnf
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

481 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

482 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

483 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

484 
	`__REDIRECT
 (
vssˇnf
,

485 (
__c⁄°
 *
__ª°ri˘
 
__s
,

486 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

487 
__isoc99_vssˇnf
)

488 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

490 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

491 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

492 
_G_va_li°
 
__¨g
Ë
__wur
;

493 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

494 
_G_va_li°
 
__¨g
Ë
__wur
;

495 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

496 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

497 
_G_va_li°
 
__¨g
Ë
__THROW
;

498 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

499 
	#vsˇnf
 
__isoc99_vsˇnf


	)

500 
	#vssˇnf
 
__isoc99_vssˇnf


	)

504 
__END_NAMESPACE_C99


508 
__BEGIN_NAMESPACE_STD


513 
	`fgëc
 (
FILE
 *
__°ªam
);

514 
	`gëc
 (
FILE
 *
__°ªam
);

520 
	`gëch¨
 ();

521 
__END_NAMESPACE_STD


525 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

527 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


532 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

533 
	`gëch¨_u∆ocked
 ();

536 #ifde‡
__USE_MISC


543 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

547 
__BEGIN_NAMESPACE_STD


555 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

556 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

562 
	`putch¨
 (
__c
);

563 
__END_NAMESPACE_STD


567 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

569 #ifde‡
__USE_MISC


576 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

579 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


584 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

585 
	`putch¨_u∆ocked
 (
__c
);

589 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

590 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

592 
	`gëw
 (
FILE
 *
__°ªam
);

595 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

599 
__BEGIN_NAMESPACE_STD


604 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

605 
__wur
;

612 *
	$gës
 (*
__s
Ë
__wur
;

613 
__END_NAMESPACE_STD


615 #ifde‡
__USE_GNU


622 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

623 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

627 #ifdef 
__USE_XOPEN2K8


638 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

639 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

640 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

641 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

642 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

643 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

652 
size_t
 *
__ª°ri˘
 
__n
,

653 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

657 
__BEGIN_NAMESPACE_STD


662 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

668 
	`puts
 (
__c⁄°
 *
__s
);

675 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

682 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

683 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

688 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

689 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

690 
__END_NAMESPACE_STD


692 #ifde‡
__USE_GNU


699 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

700 
FILE
 *
__ª°ri˘
 
__°ªam
);

703 #ifde‡
__USE_MISC


710 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

711 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

717 
__BEGIN_NAMESPACE_STD


722 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

727 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

732 
	`ªwöd
 (
FILE
 *
__°ªam
);

733 
__END_NAMESPACE_STD


740 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


741 #i‚de‡
__USE_FILE_OFFSET64


746 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

751 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

753 #ifde‡
__REDIRECT


754 
	`__REDIRECT
 (
f£eko
,

755 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

756 
f£eko64
);

757 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

759 
	#f£eko
 
f£eko64


	)

760 
	#·ñlo
 
·ñlo64


	)

765 
__BEGIN_NAMESPACE_STD


766 #i‚de‡
__USE_FILE_OFFSET64


771 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

776 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

778 #ifde‡
__REDIRECT


779 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

780 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

781 
	`__REDIRECT
 (
f£ços
,

782 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

784 
	#fgëpos
 
fgëpos64


	)

785 
	#f£ços
 
f£ços64


	)

788 
__END_NAMESPACE_STD


790 #ifde‡
__USE_LARGEFILE64


791 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

792 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

793 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

794 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

797 
__BEGIN_NAMESPACE_STD


799 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

801 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

803 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

804 
__END_NAMESPACE_STD


806 #ifde‡
__USE_MISC


808 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

809 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

810 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

814 
__BEGIN_NAMESPACE_STD


819 
	`≥º‹
 (
__c⁄°
 *
__s
);

820 
__END_NAMESPACE_STD


826 
	~<bôs/sys_îæi°.h
>

829 #ifdef 
__USE_POSIX


831 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 #ifde‡
__USE_MISC


836 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

840 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

841 
deföed
 
__USE_MISC
)

846 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

852 
	`p˛o£
 (
FILE
 *
__°ªam
);

856 #ifdef 
__USE_POSIX


858 *
	$˘îmid
 (*
__s
Ë
__THROW
;

862 #ifde‡
__USE_XOPEN


864 *
	`cu£rid
 (*
__s
);

868 #ifdef 
__USE_GNU


869 
ob°ack
;

872 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

873 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

874 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

875 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

876 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

877 
_G_va_li°
 
__¨gs
)

878 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

882 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


886 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

890 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

893 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

896 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


900 
	#__√ed_gë›t


	)

901 
	~<gë›t.h
>

906 #ifde‡
__USE_EXTERN_INLINES


907 
	~<bôs/°dio.h
>

909 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


910 
	~<bôs/°dio2.h
>

912 #ifde‡
__LDBL_COMPAT


913 
	~<bôs/°dio-ldbl.h
>

916 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


502 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

505 #ifde‡
__USE_XOPEN2K


507 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

508 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

511 
__BEGIN_NAMESPACE_STD


513 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

517 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

519 #ifde‡
__USE_GNU


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #ifde‡
__USE_GNU


551 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

553 
__END_NAMESPACE_STD


555 #ifde‡
__USE_ISOC99


556 
__BEGIN_NAMESPACE_C99


559 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

560 
__END_NAMESPACE_C99


564 
__BEGIN_NAMESPACE_STD


566 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

567 
__END_NAMESPACE_STD


571 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


604 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

614 #i‚de‡
__USE_FILE_OFFSET64


615 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

617 #ifde‡
__REDIRECT


618 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

619 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 
	#mk°emp
 
mk°emp64


	)

624 #ifde‡
__USE_LARGEFILE64


625 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

629 #ifde‡
__USE_MISC


636 #i‚de‡
__USE_FILE_OFFSET64


637 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

639 #ifde‡
__REDIRECT


640 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

641 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 
	#mk°emps
 
mk°emps64


	)

646 #ifde‡
__USE_LARGEFILE64


647 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

648 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

652 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


658 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

661 #ifde‡
__USE_GNU


668 #i‚de‡
__USE_FILE_OFFSET64


669 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

671 #ifde‡
__REDIRECT


672 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

673 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 
	#mko°emp
 
mko°emp64


	)

678 #ifde‡
__USE_LARGEFILE64


679 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

688 #i‚de‡
__USE_FILE_OFFSET64


689 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

690 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #ifde‡
__REDIRECT


693 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

694 
__Êags
), 
mko°emps64
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 
	#mko°emps
 
mko°emps64


	)

700 #ifde‡
__USE_LARGEFILE64


701 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

702 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

707 
__BEGIN_NAMESPACE_STD


712 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

713 
__END_NAMESPACE_STD


716 #ifdef 
__USE_GNU


719 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

720 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

723 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


729 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

730 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

735 #i‚de‡
__COMPAR_FN_T


736 
	#__COMPAR_FN_T


	)

737 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

739 #ifdef 
__USE_GNU


740 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

743 #ifde‡
__USE_GNU


744 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

747 
__BEGIN_NAMESPACE_STD


750 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

751 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

752 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

756 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

757 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

758 #ifde‡
__USE_GNU


759 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

760 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

761 
	`__n⁄nuŒ
 ((1, 4));

766 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

767 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

768 
__END_NAMESPACE_STD


770 #ifde‡
__USE_ISOC99


771 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

772 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__BEGIN_NAMESPACE_STD


780 
div_t
 
	$div
 (
__numî
, 
__díom
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

782 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

783 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__END_NAMESPACE_STD


786 #ifde‡
__USE_ISOC99


787 
__BEGIN_NAMESPACE_C99


788 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

789 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
__END_NAMESPACE_C99


795 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


802 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

803 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

808 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

815 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

818 #ifde‡
__USE_MISC


820 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

821 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

822 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

824 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

826 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

827 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

832 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

833 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

834 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

835 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

836 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

837 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

839 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

840 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

841 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

842 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

843 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

844 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

845 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

846 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

851 
__BEGIN_NAMESPACE_STD


854 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

857 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

858 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

861 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

865 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

866 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

868 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

869 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

870 
__THROW
;

871 
__END_NAMESPACE_STD


874 #ifde‡
__USE_SVID


879 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

883 #ifde‡
__USE_XOPEN_EXTENDED


890 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

891 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

892 **
__ª°ri˘
 
__vÆuï
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

897 #ifde‡
__USE_XOPEN


899 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

905 #ifde‡
__USE_XOPEN2K


907 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

910 #ifde‡
__USE_XOPEN


915 
	$gø¡±
 (
__fd
Ë
__THROW
;

919 
	$u∆ock±
 (
__fd
Ë
__THROW
;

924 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

927 #ifde‡
__USE_GNU


931 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

932 
__THROW
 
	`__n⁄nuŒ
 ((2));

935 
	`gë±
 ();

938 #ifde‡
__USE_BSD


942 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

943 
__THROW
 
	`__n⁄nuŒ
 ((1));

948 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


949 
	~<bôs/°dlib.h
>

951 #ifde‡
__LDBL_COMPAT


952 
	~<bôs/°dlib-ldbl.h
>

956 #unde‡
__√ed_mÆloc_™d_ˇŒoc


958 
__END_DECLS


	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

37 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

41 
__BEGIN_NAMESPACE_STD


43 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

44 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

45 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

49 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 
__END_NAMESPACE_STD


55 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


56 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
__c
, 
size_t
 
__n
)

58 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

62 
__BEGIN_NAMESPACE_STD


64 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

67 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

68 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

71 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


74 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

76 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

79 #ifde‡
__OPTIMIZE__


80 
__exã∫_Æways_ölöe
 *

81 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


83  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

86 
__exã∫_Æways_ölöe
 
__c⁄°
 *

87 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


89  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

92 
	}
}

94 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

95 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

97 
__END_NAMESPACE_STD


99 #ifde‡
__USE_GNU


102 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


103 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

105 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

108 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

109 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

113 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


114 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

116 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

119 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

120 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

125 
__BEGIN_NAMESPACE_STD


127 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

128 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

130 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

131 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

132 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

135 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

136 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

138 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

139 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

142 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

143 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

145 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

149 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

150 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

152 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

153 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((2));

155 
__END_NAMESPACE_STD


157 #ifde‡
__USE_XOPEN2K8


161 
	~<xloˇÀ.h
>

164 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

165 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

167 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

168 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

171 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


173 *
	$°rdup
 (
__c⁄°
 *
__s
)

174 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

180 #i‡
deföed
 
__USE_XOPEN2K8


181 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

182 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

185 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


187 
	#°rdu∑
(
s
) \

188 (
__exãnsi⁄__
 \

190 
__c⁄°
 *
__ﬁd
 = (
s
); \

191 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

192 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

193 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

194 
	}
}))

	)

197 
	#°∫du∑
(
s
, 
n
) \

198 (
__exãnsi⁄__
 \

200 
__c⁄°
 *
__ﬁd
 = (
s
); \

201 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

202 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

203 
__√w
[
__Àn
] = '\0'; \

204 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

205 }))

	)

208 
	g__BEGIN_NAMESPACE_STD


210 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


213 *
°rchr
 (*
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

215 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 #ifde‡
__OPTIMIZE__


219 
__exã∫_Æways_ölöe
 *

220 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


222  
__buûtö_°rchr
 (
__s
, 
__c
);

225 
__exã∫_Æways_ölöe
 
__c⁄°
 *

226 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


228  
__buûtö_°rchr
 (
__s
, 
__c
);

233 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

234 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


240 *
	`°ºchr
 (*
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

242 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 #ifde‡
__OPTIMIZE__


246 
__exã∫_Æways_ölöe
 *

247 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


249  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

252 
__exã∫_Æways_ölöe
 
__c⁄°
 *

253 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


255  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

258 
	}
}

260 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

261 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

263 
__END_NAMESPACE_STD


265 #ifde‡
__USE_GNU


268 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


269 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

271 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

275 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

279 
__BEGIN_NAMESPACE_STD


282 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

283 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

286 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


292 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

294 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 #ifde‡
__OPTIMIZE__


298 
__exã∫_Æways_ölöe
 *

299 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


301  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

304 
__exã∫_Æways_ölöe
 
__c⁄°
 *

305 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


307  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

310 
	}
}

312 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

313 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

316 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


319 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

321 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

322 
__c⁄°
 *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

325 #ifde‡
__OPTIMIZE__


326 
__exã∫_Æways_ölöe
 *

327 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


329  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

332 
__exã∫_Æways_ölöe
 
__c⁄°
 *

333 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


335  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

338 
	}
}

340 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

341 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

346 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

347 
__THROW
 
	`__n⁄nuŒ
 ((2));

348 
__END_NAMESPACE_STD


352 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

353 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

354 **
__ª°ri˘
 
__ßve_±r
)

355 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

356 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


357 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

358 **
__ª°ri˘
 
__ßve_±r
)

359 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

362 #ifde‡
__USE_GNU


364 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


365 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

367 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

368 
__c⁄°
 *
__√edÀ
)

369 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

371 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

372 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

376 #ifde‡
__USE_GNU


380 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

381 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

382 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

386 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

387 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

389 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

390 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

395 
__BEGIN_NAMESPACE_STD


397 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

398 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

399 
__END_NAMESPACE_STD


401 #ifdef 
__USE_XOPEN2K8


404 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

405 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

409 
__BEGIN_NAMESPACE_STD


411 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

412 
__END_NAMESPACE_STD


413 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


421 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


424 #ifde‡
__REDIRECT_NTH


425 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

426 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

427 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

429 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

430 
__THROW
 
	`__n⁄nuŒ
 ((2));

431 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

436 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

437 
__THROW
 
	`__n⁄nuŒ
 ((2));

441 #ifde‡
__USE_XOPEN2K8


443 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

449 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

451 #ifde‡
__USE_BSD


453 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

454 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

457 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

460 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

461 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

464 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


467 *
	`ödex
 (*
__s
, 
__c
)

468 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

472 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


473 
__exã∫_Æways_ölöe
 *

474 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


476  
	`__buûtö_ödex
 (
__s
, 
__c
);

479 
__exã∫_Æways_ölöe
 
__c⁄°
 *

480 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


482  
	`__buûtö_ödex
 (
__s
, 
__c
);

485 
	}
}

487 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

488 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

492 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


495 *
	`rödex
 (*
__s
, 
__c
)

496 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

500 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


501 
__exã∫_Æways_ölöe
 *

502 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


504  
	`__buûtö_rödex
 (
__s
, 
__c
);

507 
__exã∫_Æways_ölöe
 
__c⁄°
 *

508 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


510  
	`__buûtö_rödex
 (
__s
, 
__c
);

513 
	}
}

515 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

516 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

521 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

525 #ifdef 
__USE_GNU


526 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifde‡
__GNUC__


528 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

529 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/strings.h

19 #i‚def 
_STRINGS_H


20 
	#_STRINGS_H
 1

	)

25 #i‡!
deföed
 
_STRING_H
 || !deföed 
__USE_BSD


27 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

32 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

33 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

36 
__BEGIN_DECLS


39 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

40 
__THROW
 
__©åibuã_puª__
;

43 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

46 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

50 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((const));

53 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


56 *
	`ödex
 (*
__s
, 
__c
)

57 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

58 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

59 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

61 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


62 
__exã∫_Æways_ölöe
 *

63 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


65  
	`__buûtö_ödex
 (
__s
, 
__c
);

68 
__exã∫_Æways_ölöe
 
__c⁄°
 *

69 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


71  
	`__buûtö_ödex
 (
__s
, 
__c
);

74 
	}
}

76 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

77 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


84 *
	`rödex
 (*
__s
, 
__c
)

85 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

86 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

87 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

89 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


90 
__exã∫_Æways_ölöe
 *

91 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


93  
	`__buûtö_rödex
 (
__s
, 
__c
);

96 
__exã∫_Æways_ölöe
 
__c⁄°
 *

97 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


99  
	`__buûtö_rödex
 (
__s
, 
__c
);

102 
	}
}

104 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

110 
__THROW
 
__©åibuã_puª__
;

113 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

114 
__THROW
 
__©åibuã_puª__
;

116 #ifdef 
__USE_XOPEN2K8


120 
	~<xloˇÀ.h
>

124 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

125 
__loˇÀ_t
 
__loc
)

126 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

128 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

129 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

130 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

133 
__END_DECLS


	@/usr/include/sys/epoll.h

19 #i‚def 
_SYS_EPOLL_H


20 
	#_SYS_EPOLL_H
 1

	)

22 
	~<°döt.h
>

23 
	~<sys/ty≥s.h
>

26 
	~<bôs/sig£t.h
>

28 #i‚de‡
__sig£t_t_deföed


29 
	#__sig£t_t_deföed


	)

30 
__sig£t_t
 
	tsig£t_t
;

37 
	mEPOLL_CLOEXEC
 = 02000000,

38 
	#EPOLL_CLOEXEC
 
EPOLL_CLOEXEC


	)

39 
	mEPOLL_NONBLOCK
 = 04000

40 
	#EPOLL_NONBLOCK
 
EPOLL_NONBLOCK


	)

44 
	eEPOLL_EVENTS


46 
	mEPOLLIN
 = 0x001,

47 
	#EPOLLIN
 
EPOLLIN


	)

48 
	mEPOLLPRI
 = 0x002,

49 
	#EPOLLPRI
 
EPOLLPRI


	)

50 
	mEPOLLOUT
 = 0x004,

51 
	#EPOLLOUT
 
EPOLLOUT


	)

52 
	mEPOLLRDNORM
 = 0x040,

53 
	#EPOLLRDNORM
 
EPOLLRDNORM


	)

54 
	mEPOLLRDBAND
 = 0x080,

55 
	#EPOLLRDBAND
 
EPOLLRDBAND


	)

56 
	mEPOLLWRNORM
 = 0x100,

57 
	#EPOLLWRNORM
 
EPOLLWRNORM


	)

58 
	mEPOLLWRBAND
 = 0x200,

59 
	#EPOLLWRBAND
 
EPOLLWRBAND


	)

60 
	mEPOLLMSG
 = 0x400,

61 
	#EPOLLMSG
 
EPOLLMSG


	)

62 
	mEPOLLERR
 = 0x008,

63 
	#EPOLLERR
 
EPOLLERR


	)

64 
	mEPOLLHUP
 = 0x010,

65 
	#EPOLLHUP
 
EPOLLHUP


	)

66 
	mEPOLLRDHUP
 = 0x2000,

67 
	#EPOLLRDHUP
 
EPOLLRDHUP


	)

68 
	mEPOLLONESHOT
 = (1 << 30),

69 
	#EPOLLONESHOT
 
EPOLLONESHOT


	)

70 
	mEPOLLET
 = (1 << 31)

71 
	#EPOLLET
 
EPOLLET


	)

76 
	#EPOLL_CTL_ADD
 1

	)

77 
	#EPOLL_CTL_DEL
 2

	)

78 
	#EPOLL_CTL_MOD
 3

	)

81 
	uïﬁl_d©a


83 *
	m±r
;

84 
	mfd
;

85 
uöt32_t
 
	mu32
;

86 
uöt64_t
 
	mu64
;

87 } 
	tïﬁl_d©a_t
;

89 
	sïﬁl_evít


91 
uöt32_t
 
	mevíts
;

92 
ïﬁl_d©a_t
 
	md©a
;

93 } 
__©åibuã__
 ((
__∑cked__
));

96 
__BEGIN_DECLS


102 
	$ïﬁl_¸óã
 (
__size
Ë
__THROW
;

106 
	$ïﬁl_¸óã1
 (
__Êags
Ë
__THROW
;

115 
	$ïﬁl_˘l
 (
__ïfd
, 
__›
, 
__fd
,

116 
ïﬁl_evít
 *
__evít
Ë
__THROW
;

129 
	`ïﬁl_waô
 (
__ïfd
, 
ïﬁl_evít
 *
__evíts
,

130 
__maxevíts
, 
__timeout
);

138 
	`ïﬁl_pwaô
 (
__ïfd
, 
ïﬁl_evít
 *
__evíts
,

139 
__maxevíts
, 
__timeout
,

140 
__c⁄°
 
__sig£t_t
 *
__ss
);

142 
__END_DECLS


	@/usr/include/sys/param.h

19 #i‚de‡
_SYS_PARAM_H


20 
	#_SYS_PARAM_H
 1

	)

22 #i‚de‡
ARG_MAX


23 
	#__undef_ARG_MAX


	)

26 
	~<limôs.h
>

27 
	~<löux/limôs.h
>

28 
	~<löux/∑øm.h
>

31 #i‚de‡
__undef_ARG_MAX


32 #unde‡
ARG_MAX


33 #unde‡
__undef_ARG_MAX


38 
	#NBBY
 
CHAR_BIT


	)

39 #i‚def 
NGROUPS


40 
	#NGROUPS
 
NGROUPS_MAX


	)

42 
	#MAXSYMLINKS
 20

	)

43 
	#CANBSIZ
 
MAX_CANON


	)

44 
	#MAXPATHLEN
 
PATH_MAX


	)

48 
	#NOFILE
 256

	)

49 
	#NCARGS
 131072

	)

52 
	~<sys/ty≥s.h
>

55 
	#£tbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] |1<<((i)%NBBY))

	)

56 
	#˛rbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] &~(1<<((i)%NBBY)))

	)

57 
	#is£t
(
a
,
i
Ë(◊)[(i)/
NBBY
] & (1<<((i)%NBBY)))

	)

58 
	#is˛r
(
a
,
i
Ë((◊)[(i)/
NBBY
] & (1<<((i)%NBBY))Ë=0)

	)

61 #i‚de‡
howm™y


62 
	#howm™y
(
x
, 
y
Ë(((xË+ ((yË- 1)Ë/ (y))

	)

64 #ifde‡
__GNUC__


65 
	#roundup
(
x
, 
y
Ë(
	`__buûtö_c⁄°™t_p
 (yË&& 
	`powîof2
 (y) \

66 ? (((
x
Ë+ (
y
) - 1) & ~((y) - 1)) \

67 : ((((
x
Ë+ ((
y
Ë- 1)Ë/ (y)Ë* (y)))

	)

69 
	#roundup
(
x
, 
y
Ë((((xË+ ((yË- 1)Ë/ (y)Ë* (y))

	)

71 
	#powîof2
(
x
Ë((((xË- 1Ë& (x)Ë=0)

	)

74 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

75 
	#MAX
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

79 
	#DEV_BSIZE
 512

	)

	@/usr/include/sys/poll.h

20 #i‚def 
_SYS_POLL_H


21 
	#_SYS_POLL_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/pﬁl.h
>

27 #ifde‡
__USE_GNU


29 
	~<bôs/sig£t.h
>

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

37 
	tnfds_t
;

40 
	spﬁlfd


42 
	mfd
;

43 
	mevíts
;

44 
	mªvíts
;

48 
__BEGIN_DECLS


58 
pﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
, 
__timeout
);

60 #ifde‡
__USE_GNU


67 
µﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

68 
__c⁄°
 
time•ec
 *
__timeout
,

69 
__c⁄°
 
__sig£t_t
 *
__ss
);

72 
	g__END_DECLS


	@/usr/include/sys/resource.h

19 #i‚def 
_SYS_RESOURCE_H


20 
	#_SYS_RESOURCE_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ªsour˚.h
>

27 #i‚de‡
__id_t_deföed


28 
__id_t
 
	tid_t
;

29 
	#__id_t_deföed


	)

32 
	g__BEGIN_DECLS


38 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


39 
__æimô_ªsour˚
 
	t__æimô_ªsour˚_t
;

40 
__rußge_who
 
	t__rußge_who_t
;

41 
__¥i‹ôy_which
 
	t__¥i‹ôy_which_t
;

43 
	t__æimô_ªsour˚_t
;

44 
	t__rußge_who_t
;

45 
	t__¥i‹ôy_which_t
;

50 #i‚de‡
__USE_FILE_OFFSET64


51 
	$gëæimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

52 
æimô
 *
__æimôs
Ë
__THROW
;

54 #ifde‡
__REDIRECT_NTH


55 
	`__REDIRECT_NTH
 (
gëæimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

56 
æimô
 *
__æimôs
), 
gëæimô64
);

58 
	#gëæimô
 
gëæimô64


	)

61 #ifde‡
__USE_LARGEFILE64


62 
	$gëæimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

63 
æimô64
 *
__æimôs
Ë
__THROW
;

69 #i‚de‡
__USE_FILE_OFFSET64


70 
	$£ålimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

71 
__c⁄°
 
æimô
 *
__æimôs
Ë
__THROW
;

73 #ifde‡
__REDIRECT_NTH


74 
	`__REDIRECT_NTH
 (
£ålimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

75 
__c⁄°
 
æimô
 *
__æimôs
),

76 
£ålimô64
);

78 
	#£ålimô
 
£ålimô64


	)

81 #ifde‡
__USE_LARGEFILE64


82 
	$£ålimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

83 
__c⁄°
 
æimô64
 *
__æimôs
Ë
__THROW
;

88 
	$gërußge
 (
__rußge_who_t
 
__who
, 
rußge
 *
__ußge
Ë
__THROW
;

94 
	$gë¥i‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
Ë
__THROW
;

98 
	$£çri‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
, 
__¥io
)

99 
__THROW
;

101 
__END_DECLS


	@/usr/include/sys/socket.h

21 #i‚def 
_SYS_SOCKET_H


22 
	#_SYS_SOCKET_H
 1

	)

24 
	~<„©uªs.h
>

26 
	g__BEGIN_DECLS


28 
	~<sys/uio.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

31 #ifde‡
__USE_GNU


33 
	~<bôs/sig£t.h
>

40 
	~<bôs/sockë.h
>

42 #ifde‡
__USE_BSD


45 
	sosockaddr


47 
	mß_Ámûy
;

48 
	mß_d©a
[14];

56 
	mSHUT_RD
 = 0,

57 
	#SHUT_RD
 
SHUT_RD


	)

58 
	mSHUT_WR
,

59 
	#SHUT_WR
 
SHUT_WR


	)

60 
	mSHUT_RDWR


61 
	#SHUT_RDWR
 
SHUT_RDWR


	)

70 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


71 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

72 
	#__CONST_SOCKADDR_ARG
 
__c⁄°
 
sockaddr
 *

	)

76 
	#__SOCKADDR_ALLTYPES
 \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

85 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

86 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

87 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

88 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

89 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

91 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

92 uni⁄ { 
	m__SOCKADDR_ALLTYPES


93 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

94 #unde‡
__SOCKADDR_ONETYPE


95 
	#__SOCKADDR_ONETYPE
(
ty≥
Ë
__c⁄°
 ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

96 uni⁄ { 
	m__SOCKADDR_ALLTYPES


97 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

98 #unde‡
__SOCKADDR_ONETYPE


105 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

111 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

112 
__fds
[2]Ë
__THROW
;

115 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

116 
__THROW
;

119 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

120 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

129 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

133 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

134 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

141 
ssize_t
 
	`£nd
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
, 
__Êags
);

148 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

155 
ssize_t
 
	`£ndto
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

156 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

157 
sockÀn_t
 
__addr_Àn
);

166 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

167 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

168 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

176 
ssize_t
 
	`£ndmsg
 (
__fd
, 
__c⁄°
 
msghdr
 *
__mesßge
,

177 
__Êags
);

184 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

190 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

191 *
__ª°ri˘
 
__›tvÆ
,

192 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

197 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

198 
__c⁄°
 *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

204 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

214 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

215 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

217 #ifde‡
__USE_GNU


222 
	`ac˚±4
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

223 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
, 
__Êags
);

232 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

235 #ifde‡
__USE_XOPEN2K


237 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

241 #ifde‡
__USE_MISC


245 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

250 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


251 
	~<bôs/sockë2.h
>

254 
__END_DECLS


	@/usr/include/sys/stat.h

24 #i‚def 
_SYS_STAT_H


25 
	#_SYS_STAT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

32 || 
deföed
 
	g__USE_ATFILE


33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_time_t


	)

36 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


37 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


45 #i‚de‡
__dev_t_deföed


46 
__dev_t
 
	tdev_t
;

47 
	#__dev_t_deföed


	)

50 #i‚de‡
__gid_t_deföed


51 
__gid_t
 
	tgid_t
;

52 
	#__gid_t_deföed


	)

55 #i‚de‡
__öo_t_deföed


56 #i‚de‡
__USE_FILE_OFFSET64


57 
__öo_t
 
	töo_t
;

59 
__öo64_t
 
	töo_t
;

61 
	#__öo_t_deföed


	)

64 #i‚de‡
__mode_t_deföed


65 
__mode_t
 
	tmode_t
;

66 
	#__mode_t_deföed


	)

69 #i‚de‡
__∆ök_t_deföed


70 
__∆ök_t
 
	t∆ök_t
;

71 
	#__∆ök_t_deföed


	)

74 #i‚de‡
__off_t_deföed


75 #i‚de‡
__USE_FILE_OFFSET64


76 
__off_t
 
	toff_t
;

78 
__off64_t
 
	toff_t
;

80 
	#__off_t_deföed


	)

83 #i‚de‡
__uid_t_deföed


84 
__uid_t
 
	tuid_t
;

85 
	#__uid_t_deföed


	)

89 #ifde‡
__USE_UNIX98


90 #i‚de‡
__blk˙t_t_deföed


91 #i‚de‡
__USE_FILE_OFFSET64


92 
__blk˙t_t
 
	tblk˙t_t
;

94 
__blk˙t64_t
 
	tblk˙t_t
;

96 
	#__blk˙t_t_deföed


	)

99 #i‚de‡
__blksize_t_deföed


100 
__blksize_t
 
	tblksize_t
;

101 
	#__blksize_t_deföed


	)

105 
	g__BEGIN_DECLS


107 
	~<bôs/°©.h
>

109 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


110 
	#S_IFMT
 
__S_IFMT


	)

111 
	#S_IFDIR
 
__S_IFDIR


	)

112 
	#S_IFCHR
 
__S_IFCHR


	)

113 
	#S_IFBLK
 
__S_IFBLK


	)

114 
	#S_IFREG
 
__S_IFREG


	)

115 #ifde‡
__S_IFIFO


116 
	#S_IFIFO
 
__S_IFIFO


	)

118 #ifde‡
__S_IFLNK


119 
	#S_IFLNK
 
__S_IFLNK


	)

121 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

122 && 
deföed
 
	g__S_IFSOCK


123 
	#S_IFSOCK
 
__S_IFSOCK


	)

129 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

131 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

132 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

133 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

134 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

135 #ifde‡
__S_IFIFO


136 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

138 #ifde‡
__S_IFLNK


139 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

142 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


143 
	#S_ISLNK
(
mode
Ë0

	)

146 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

147 && 
deföed
 
	g__S_IFSOCK


148 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

155 #ifdef 
__USE_POSIX199309


156 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

157 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

158 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

164 
	#S_ISUID
 
__S_ISUID


	)

165 
	#S_ISGID
 
__S_ISGID


	)

167 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


169 
	#S_ISVTX
 
__S_ISVTX


	)

172 
	#S_IRUSR
 
__S_IREAD


	)

173 
	#S_IWUSR
 
__S_IWRITE


	)

174 
	#S_IXUSR
 
__S_IEXEC


	)

176 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

178 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


179 
	#S_IREAD
 
S_IRUSR


	)

180 
	#S_IWRITE
 
S_IWUSR


	)

181 
	#S_IEXEC
 
S_IXUSR


	)

184 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

185 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

186 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

188 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

190 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

191 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

192 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

194 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

197 #ifdef 
__USE_BSD


199 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

200 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

201 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

203 
	#S_BLKSIZE
 512

	)

207 #i‚de‡
__USE_FILE_OFFSET64


209 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

210 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

214 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

216 #ifde‡
__REDIRECT_NTH


217 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

218 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

219 
	`__n⁄nuŒ
 ((1, 2));

220 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

221 
	`__n⁄nuŒ
 ((2));

223 
	#°©
 
°©64


	)

224 
	#f°©
 
f°©64


	)

227 #ifde‡
__USE_LARGEFILE64


228 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

229 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

230 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

233 #ifde‡
__USE_ATFILE


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$f°©©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

239 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

240 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

242 #ifde‡
__REDIRECT_NTH


243 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

244 
°©
 *
__ª°ri˘
 
__buf
,

245 
__Êag
),

246 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

248 
	#f°©©
 
f°©©64


	)

252 #ifde‡
__USE_LARGEFILE64


253 
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

254 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

255 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

259 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


260 #i‚de‡
__USE_FILE_OFFSET64


263 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

264 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

266 #ifde‡
__REDIRECT_NTH


267 
	`__REDIRECT_NTH
 (
l°©
,

268 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

269 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

270 
	`__n⁄nuŒ
 ((1, 2));

272 
	#l°©
 
l°©64


	)

275 #ifde‡
__USE_LARGEFILE64


276 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

277 
°©64
 *
__ª°ri˘
 
__buf
)

278 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

284 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

285 
__THROW
 
	`__n⁄nuŒ
 ((1));

287 #ifde‡
__USE_BSD


291 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


297 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

300 #ifde‡
__USE_ATFILE


303 
	$fchmod©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
,

304 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

312 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

314 #ifdef 
__USE_GNU


317 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

321 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

322 
__THROW
 
	`__n⁄nuŒ
 ((1));

324 #ifde‡
__USE_ATFILE


328 
	$mkdú©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

329 
__THROW
 
	`__n⁄nuŒ
 ((2));

335 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


336 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

337 
__THROW
 
	`__n⁄nuŒ
 ((1));

339 #ifde‡
__USE_ATFILE


343 
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

344 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1));

353 #ifde‡
__USE_ATFILE


357 
	$mkfifﬂt
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

361 #ifde‡
__USE_ATFILE


364 
	$utimíßt
 (
__fd
, 
__c⁄°
 *
__∑th
,

365 
__c⁄°
 
time•ec
 
__times
[2],

366 
__Êags
)

367 
__THROW
 
	`__n⁄nuŒ
 ((2));

370 #ifde‡
__USE_XOPEN2K8


372 
	$futimís
 (
__fd
, 
__c⁄°
 
time•ec
 
__times
[2]Ë
__THROW
;

390 #i‚de‡
_STAT_VER


391 
	#_STAT_VER
 0

	)

393 #i‚de‡
_MKNOD_VER


394 
	#_MKNOD_VER
 0

	)

398 #i‚de‡
__USE_FILE_OFFSET64


399 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

400 
__THROW
 
	`__n⁄nuŒ
 ((3));

401 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

402 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

403 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

404 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

405 
	$__fx°©©
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

406 
°©
 *
__°©_buf
, 
__Êag
)

407 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

409 #ifde‡
__REDIRECT_NTH


410 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

411 
°©
 *
__°©_buf
), 
__fx°©64
)

412 
	`__n⁄nuŒ
 ((3));

413 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

414 
°©
 *
__°©_buf
), 
__x°©64
)

415 
	`__n⁄nuŒ
 ((2, 3));

416 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

417 
°©
 *
__°©_buf
), 
__lx°©64
)

418 
	`__n⁄nuŒ
 ((2, 3));

419 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

420 
__c⁄°
 *
__fûíame
,

421 
°©
 *
__°©_buf
, 
__Êag
),

422 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

425 
	#__fx°©
 
__fx°©64


	)

426 
	#__x°©
 
__x°©64


	)

427 
	#__lx°©
 
__lx°©64


	)

431 #ifde‡
__USE_LARGEFILE64


432 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

433 
__THROW
 
	`__n⁄nuŒ
 ((3));

434 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

435 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

436 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

437 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

438 
	$__fx°©©64
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

439 
°©64
 *
__°©_buf
, 
__Êag
)

440 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

442 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

443 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

445 
	$__xmknod©
 (
__vî
, 
__fd
, 
__c⁄°
 *
__∑th
,

446 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

447 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

449 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES_IN_LIBC


452 
__exã∫_ölöe
 

453 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

455  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

456 
	}
}

458 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


459 
__exã∫_ölöe
 

460 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

462  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

463 
	}
}

466 
__exã∫_ölöe
 

467 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

469  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

470 
	}
}

472 #ifde‡
__USE_ATFILE


473 
__exã∫_ölöe
 

474 
__NTH
 (
	$f°©©
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©
 *
__°©buf
,

475 
__Êag
))

477  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

478 
	}
}

481 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


482 
__exã∫_ölöe
 

483 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

485  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

486 
	}
}

489 #ifde‡
__USE_ATFILE


490 
__exã∫_ölöe
 

491 
__NTH
 (
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

492 
__dev_t
 
__dev
))

494  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

495 
	}
}

498 #i‡
deföed
 
__USE_LARGEFILE64
 \

499 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

500 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

501 
__exã∫_ölöe
 

502 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

504  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

505 
	}
}

507 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


508 
__exã∫_ölöe
 

509 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

511  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

512 
	}
}

515 
__exã∫_ölöe
 

516 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

518  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

519 
	}
}

521 #ifde‡
__USE_ATFILE


522 
__exã∫_ölöe
 

523 
__NTH
 (
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©64
 *
__°©buf
,

524 
__Êag
))

526  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

527 
	}
}

534 
	g__END_DECLS


	@/usr/include/sys/syscall.h

19 #i‚de‡
_SYSCALL_H


20 
	#_SYSCALL_H
 1

	)

25 
	~<asm/uni°d.h
>

27 #i‚de‡
_LIBC


32 
	~<bôs/sysˇŒ.h
>

	@/usr/include/sys/time.h

20 #i‚de‡
_SYS_TIME_H


21 
	#_SYS_TIME_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

26 
	#__√ed_time_t


	)

27 
	~<time.h
>

28 
	#__√ed_timevÆ


	)

29 
	~<bôs/time.h
>

31 
	~<sys/£À˘.h
>

33 #i‚de‡
__su£c⁄ds_t_deföed


34 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

35 
	#__su£c⁄ds_t_deföed


	)

39 
	g__BEGIN_DECLS


41 #ifde‡
__USE_GNU


43 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

44 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

45 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

46 }

	)

47 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

48 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

49 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

50 }

	)

54 #ifde‡
__USE_BSD


57 
	stimez⁄e


59 
	mtz_möuãswe°
;

60 
	mtz_d°time
;

63 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

65 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

73 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

74 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__USE_BSD


79 
	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

80 
__c⁄°
 
timez⁄e
 *
__tz
)

81 
__THROW
 
	`__n⁄nuŒ
 ((1));

87 
	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

88 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

93 
	e__ôimî_which


96 
ITIMER_REAL
 = 0,

97 
	#ITIMER_REAL
 
ITIMER_REAL


	)

99 
ITIMER_VIRTUAL
 = 1,

100 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

103 
ITIMER_PROF
 = 2

104 
	#ITIMER_PROF
 
ITIMER_PROF


	)

109 
	sôimîvÆ


112 
timevÆ
 
ô_öãrvÆ
;

114 
timevÆ
 
ô_vÆue
;

117 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


120 
__ôimî_which
 
	t__ôimî_which_t
;

122 
	t__ôimî_which_t
;

127 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

128 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

133 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

134 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

135 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

140 
	$utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #ifde‡
__USE_BSD


145 
	$lutimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	$futimes
 (
__fd
, 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

152 #ifde‡
__USE_GNU


156 
	$futimeßt
 (
__fd
, 
__c⁄°
 *
__fûe
,

157 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

161 #ifde‡
__USE_BSD


164 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

165 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

166 
	#timîcmp
(
a
, 
b
, 
CMP
) \

167 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

168 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

169 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

170 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

172 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

173 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

174 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

176 ++(
ªsu…
)->
tv_£c
; \

177 (
ªsu…
)->
tv_u£c
 -= 1000000; \

179 
	}
} 0)

	)

180 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

182 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

183 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

184 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

185 --(
ªsu…
)->
tv_£c
; \

186 (
ªsu…
)->
tv_u£c
 += 1000000; \

188 } 0)

	)

191 
	g__END_DECLS


	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/sys/un.h

19 #i‚def 
_SYS_UN_H


20 
	#_SYS_UN_H
 1

	)

22 
	~<sys/cdefs.h
>

25 
	~<bôs/sockaddr.h
>

27 
__BEGIN_DECLS


30 
	ssockaddr_un


32 
__SOCKADDR_COMMON
 (
sun_
);

33 
	msun_∑th
[108];

37 #ifde‡
__USE_MISC


38 
	~<°rög.h
>

41 
	#SUN_LEN
(
±r
Ë((
size_t
Ë(((
sockaddr_un
 *Ë0)->
sun_∑th
) \

42 + 
	`°æí
 ((
±r
)->
sun_∑th
))

	)

45 
	g__END_DECLS


	@/usr/include/syslog.h

1 
	~<sys/sy¶og.h
>

	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #ifde‡
__USE_UNIX98


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

317 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


319 
	#L_SET
 
SEEK_SET


	)

320 
	#L_INCR
 
SEEK_CUR


	)

321 
	#L_XTND
 
SEEK_END


	)

330 #i‚de‡
__USE_FILE_OFFSET64


331 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

333 #ifde‡
__REDIRECT_NTH


334 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

335 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

336 
l£ek64
);

338 
	#l£ek
 
l£ek64


	)

341 #ifde‡
__USE_LARGEFILE64


342 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

343 
__THROW
;

350 
	`˛o£
 (
__fd
);

357 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

363 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

365 #ifde‡
__USE_UNIX98


366 #i‚de‡
__USE_FILE_OFFSET64


373 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

374 
__off_t
 
__off£t
Ë
__wur
;

381 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

382 
__off_t
 
__off£t
Ë
__wur
;

384 #ifde‡
__REDIRECT


385 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

386 
__off64_t
 
__off£t
),

387 
¥ód64
Ë
__wur
;

388 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

389 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

390 
pwrôe64
Ë
__wur
;

392 
	#¥ód
 
¥ód64


	)

393 
	#pwrôe
 
pwrôe64


	)

397 #ifde‡
__USE_LARGEFILE64


401 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

402 
__off64_t
 
__off£t
Ë
__wur
;

405 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

406 
__off64_t
 
__off£t
Ë
__wur
;

414 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

416 #ifde‡
__USE_GNU


419 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

429 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

441 
	`¶ìp
 (
__£c⁄ds
);

443 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


448 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

449 
__THROW
;

456 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

465 
	`∑u£
 ();

469 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

470 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

472 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


474 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

479 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

480 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

484 #ifde‡
__USE_ATFILE


487 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

488 
__gid_t
 
__group
, 
__Êag
)

489 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

493 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

495 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


497 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

507 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

509 #ifdef 
__USE_GNU


513 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

516 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


520 *
	$gëwd
 (*
__buf
)

521 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

526 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

529 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

531 #ifde‡
__USE_GNU


534 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

538 **
__ívú⁄
;

539 #ifde‡
__USE_GNU


540 **
ívú⁄
;

546 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

547 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

549 #ifde‡
__USE_XOPEN2K8


552 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

553 
__THROW
;

558 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

559 
__THROW
 
	`__n⁄nuŒ
 ((1));

563 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

564 
__THROW
 
	`__n⁄nuŒ
 ((1));

568 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1));

573 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

574 
__THROW
 
	`__n⁄nuŒ
 ((1));

579 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

580 
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #ifde‡
__USE_GNU


585 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

586 *
__c⁄°
 
__ívp
[])

587 
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


593 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

598 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

604 
	~<bôs/c⁄‚ame.h
>

607 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

608 
__THROW
 
	`__n⁄nuŒ
 ((1));

611 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

614 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

616 #ifdef 
__USE_POSIX2


618 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

623 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

626 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

630 #i‚de‡
__FAVOR_BSD


631 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

633 #ifde‡
__REDIRECT_NTH


634 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

636 
	#gëpgΩ
 
__gëpgid


	)

641 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

642 #ifde‡
__USE_XOPEN_EXTENDED


643 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

650 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

652 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


663 #i‚de‡
__FAVOR_BSD


667 
	$£çgΩ
 (Ë
__THROW
;

672 #ifde‡
__REDIRECT_NTH


673 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

675 
	#£çgΩ
 
£çgid


	)

684 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

686 #ifde‡
__USE_XOPEN_EXTENDED


688 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

692 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

695 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

698 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

701 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

706 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

708 #ifdef 
__USE_GNU


710 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

717 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

719 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


727 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

734 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

736 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


739 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

742 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


744 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

747 #ifde‡
__USE_GNU


750 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

751 
__THROW
;

755 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

756 
__THROW
;

760 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

761 
__THROW
;

765 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

766 
__THROW
;

773 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

775 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


780 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

786 *
	$ây«me
 (
__fd
Ë
__THROW
;

790 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

791 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

795 
	$ißây
 (
__fd
Ë
__THROW
;

797 #i‡
deföed
 
__USE_BSD
 \

798 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

801 
	$ây¶Ÿ
 (Ë
__THROW
;

806 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

809 #ifde‡
__USE_ATFILE


812 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

813 
__c⁄°
 *
__to
, 
__Êags
)

814 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

817 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


819 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

820 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

825 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

826 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

827 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

830 #ifde‡
__USE_ATFILE


832 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

833 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

836 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

837 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

838 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

842 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_ATFILE


846 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

847 
__THROW
 
	`__n⁄nuŒ
 ((2));

851 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

855 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

858 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

865 *
	`gëlogö
 ();

866 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


873 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

876 #ifdef 
__USE_BSD


878 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

882 #ifdef 
__USE_POSIX2


886 
	#__√ed_gë›t


	)

887 
	~<gë›t.h
>

891 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


895 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

899 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

902 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

903 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

907 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

913 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

914 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

915 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

916 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

922 
	$vh™gup
 (Ë
__THROW
;

925 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

933 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

934 
size_t
 
__off£t
, 
__sˇÀ
)

935 
__THROW
 
	`__n⁄nuŒ
 ((1));

941 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

945 *
	$gëu£rshñl
 (Ë
__THROW
;

946 
	$ídu£rshñl
 (Ë
__THROW
;

947 
	$£tu£rshñl
 (Ë
__THROW
;

953 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

957 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

960 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

964 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

968 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


973 
	`fsync
 (
__fd
);

977 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


980 
	`gëho°id
 ();

983 
	$sync
 (Ë
__THROW
;

988 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

993 
	$gëdèbÀsize
 (Ë
__THROW
;

997 #i‚de‡
__USE_FILE_OFFSET64


998 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

999 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1001 #ifde‡
__REDIRECT_NTH


1002 
	`__REDIRECT_NTH
 (
åunˇã
,

1003 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1004 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1006 
	#åunˇã
 
åunˇã64


	)

1009 #ifde‡
__USE_LARGEFILE64


1010 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1011 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1016 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1019 #i‚de‡
__USE_FILE_OFFSET64


1020 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1022 #ifde‡
__REDIRECT_NTH


1023 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1024 
·runˇã64
Ë
__wur
;

1026 
	#·runˇã
 
·runˇã64


	)

1029 #ifde‡
__USE_LARGEFILE64


1030 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1036 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1040 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1046 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1050 #ifde‡
__USE_MISC


1061 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1066 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1078 
	#F_ULOCK
 0

	)

1079 
	#F_LOCK
 1

	)

1080 
	#F_TLOCK
 2

	)

1081 
	#F_TEST
 3

	)

1083 #i‚de‡
__USE_FILE_OFFSET64


1084 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1086 #ifde‡
__REDIRECT


1087 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1088 
lockf64
Ë
__wur
;

1090 
	#lockf
 
lockf64


	)

1093 #ifde‡
__USE_LARGEFILE64


1094 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1099 #ifde‡
__USE_GNU


1104 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1105 (
__exãnsi⁄__
 \

1106 ({ 
__ªsu…
; \

1107 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1108 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1109 
__ªsu…
; 
	}
}))

	)

1112 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1115 
fd©async
 (
__fûdes
);

1121 #ifdef 
__USE_XOPEN


1123 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1124 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1128 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1135 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1136 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1142 #ifde‡
__USE_XOPEN


1144 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1149 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1150 
	~<bôs/uni°d.h
>

1153 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/asm/byteorder.h

1 #i‚de‡
_ASM_X86_BYTEORDER_H


2 
	#_ASM_X86_BYTEORDER_H


	)

4 
	~<löux/byã‹dî/lôée_ídün.h
>

	@/usr/include/asm/types.h

1 #i‚de‡
_ASM_X86_TYPES_H


2 
	#_ASM_X86_TYPES_H


	)

4 
	#dma_addr_t
 
dma_addr_t


	)

6 
	~<asm-gíîic/ty≥s.h
>

	@/usr/include/asm/unistd.h

1 #ifde‡
__i386__


2 
	~"uni°d_32.h
"

4 
	~"uni°d_64.h
"

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_16
 (__x); }))

	)

55 
	#__bsw≠_c⁄°™t_32
(
x
) \

56 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

57 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

59 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

60 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

61 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

62 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

63 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

64 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

65 || 
deföed
 
	g__amdÁm10__
)

68 
	#__bsw≠_32
(
x
) \

69 (
__exãnsi⁄__
 \

70 ({ 
__v
, 
__x
 = (
x
); \

71 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

72 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

74 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

75 
__v
; }))

	)

77 
	#__bsw≠_32
(
x
) \

78 (
__exãnsi⁄__
 \

79 ({ 
__v
, 
__x
 = (
x
); \

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

81 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

83 
	`__asm__
 ("rorw $8, %w0;" \

86 : "Ù" (
__v
) \

87 : "0" (
__x
) \

89 
__v
; }))

	)

92 
	#__bsw≠_32
(
x
) \

93 (
__exãnsi⁄__
 \

94 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

98 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

100 
	#__bsw≠_c⁄°™t_64
(
x
) \

101 ((((
x
) & 0xff00000000000000ull) >> 56) \

102 | (((
x
) & 0x00ff000000000000ull) >> 40) \

103 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

104 | (((
x
) & 0x000000ff00000000ull) >> 8) \

105 | (((
x
) & 0x00000000ff000000ull) << 8) \

106 | (((
x
) & 0x0000000000ff0000ull) << 24) \

107 | (((
x
) & 0x000000000000ff00ull) << 40) \

108 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

110 #i‡
__WORDSIZE
 == 64

111 
	#__bsw≠_64
(
x
) \

112 (
__exãnsi⁄__
 \

113 ({ 
__v
, 
__x
 = (
x
); \

114 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

115 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

117 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

118 
__v
; }))

	)

120 
	#__bsw≠_64
(
x
) \

121 (
__exãnsi⁄__
 \

122 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

123 
__l
[2]; } 
__w
, 
__r
; \

124 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

125 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

128 
__w
.
__Œ
 = (
x
); \

129 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

130 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

132 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS
,

502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

504 
	m_SC_V7_ILP32_OFF32
,

505 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

506 
	m_SC_V7_ILP32_OFFBIG
,

507 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

508 
	m_SC_V7_LP64_OFF64
,

509 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

510 
	m_SC_V7_LPBIG_OFFBIG
,

511 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

513 
	m_SC_SS_REPL_MAX
,

514 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

516 
	m_SC_TRACE_EVENT_NAME_MAX
,

517 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

518 
	m_SC_TRACE_NAME_MAX
,

519 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

520 
	m_SC_TRACE_SYS_MAX
,

521 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

522 
	m_SC_TRACE_USER_EVENT_MAX
,

523 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

525 
	m_SC_XOPEN_STREAMS
,

526 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

528 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

529 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

530 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


531 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

537 
	m_CS_PATH
,

538 
	#_CS_PATH
 
_CS_PATH


	)

540 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

541 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

544 
	m_CS_GNU_LIBC_VERSION
,

545 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

546 
	m_CS_GNU_LIBPTHREAD_VERSION
,

547 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

549 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

550 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

553 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

554 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

557 
	m_CS_LFS_CFLAGS
 = 1000,

558 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

559 
	m_CS_LFS_LDFLAGS
,

560 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

561 
	m_CS_LFS_LIBS
,

562 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

563 
	m_CS_LFS_LINTFLAGS
,

564 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

565 
	m_CS_LFS64_CFLAGS
,

566 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

567 
	m_CS_LFS64_LDFLAGS
,

568 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

569 
	m_CS_LFS64_LIBS
,

570 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

571 
	m_CS_LFS64_LINTFLAGS
,

572 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

575 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

577 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

579 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

580 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

581 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

588 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

589 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

593 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

594 
	m_CS_XBS5_LP64_OFF64_LIBS
,

595 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

596 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

597 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

604 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

605 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

613 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

621 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

622 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

629 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

630 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

637 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

638 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

646 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

654 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

655 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

662 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

663 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

670 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


671 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

43 #i‡
__WORDSIZE
 == 64

57 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

58 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

59 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

62 
	#_POSIX_V7_LP64_OFF64
 1

	)

63 
	#_POSIX_V6_LP64_OFF64
 1

	)

64 
	#_XBS5_LP64_OFF64
 1

	)

70 
	#_POSIX_V7_ILP32_OFF32
 1

	)

71 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

72 
	#_POSIX_V6_ILP32_OFF32
 1

	)

73 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

74 
	#_XBS5_ILP32_OFF32
 1

	)

75 
	#_XBS5_ILP32_OFFBIG
 1

	)

92 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

93 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

94 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

95 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

96 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

97 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
__ASSEMBLER__


43 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

45 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


47 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

52 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


56 
	#EDOM
 33

	)

57 
	#EILSEQ
 84

	)

58 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

20 #i‚def 
_FCNTL_H


24 
	~<sys/ty≥s.h
>

25 
	~<bôs/w‹dsize.h
>

26 #ifde‡
__USE_GNU


27 
	~<bôs/uio.h
>

33 
	#O_ACCMODE
 0003

	)

34 
	#O_RDONLY
 00

	)

35 
	#O_WRONLY
 01

	)

36 
	#O_RDWR
 02

	)

37 
	#O_CREAT
 0100

	)

38 
	#O_EXCL
 0200

	)

39 
	#O_NOCTTY
 0400

	)

40 
	#O_TRUNC
 01000

	)

41 
	#O_APPEND
 02000

	)

42 
	#O_NONBLOCK
 04000

	)

43 
	#O_NDELAY
 
O_NONBLOCK


	)

44 
	#O_SYNC
 010000

	)

45 
	#O_FSYNC
 
O_SYNC


	)

46 
	#O_ASYNC
 020000

	)

48 #ifde‡
__USE_GNU


49 
	#O_DIRECT
 040000

	)

50 
	#O_DIRECTORY
 0200000

	)

51 
	#O_NOFOLLOW
 0400000

	)

52 
	#O_NOATIME
 01000000

	)

53 
	#O_CLOEXEC
 02000000

	)

59 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


60 
	#O_DSYNC
 
O_SYNC


	)

61 
	#O_RSYNC
 
O_SYNC


	)

64 #ifde‡
__USE_LARGEFILE64


65 #i‡
__WORDSIZE
 == 64

66 
	#O_LARGEFILE
 0

	)

68 
	#O_LARGEFILE
 0100000

	)

73 
	#F_DUPFD
 0

	)

74 
	#F_GETFD
 1

	)

75 
	#F_SETFD
 2

	)

76 
	#F_GETFL
 3

	)

77 
	#F_SETFL
 4

	)

78 #i‡
__WORDSIZE
 == 64

79 
	#F_GETLK
 5

	)

80 
	#F_SETLK
 6

	)

81 
	#F_SETLKW
 7

	)

83 
	#F_GETLK64
 5

	)

84 
	#F_SETLK64
 6

	)

85 
	#F_SETLKW64
 7

	)

87 #i‚de‡
__USE_FILE_OFFSET64


88 
	#F_GETLK
 5

	)

89 
	#F_SETLK
 6

	)

90 
	#F_SETLKW
 7

	)

92 
	#F_GETLK
 
F_GETLK64


	)

93 
	#F_SETLK
 
F_SETLK64


	)

94 
	#F_SETLKW
 
F_SETLKW64


	)

96 
	#F_GETLK64
 12

	)

97 
	#F_SETLK64
 13

	)

98 
	#F_SETLKW64
 14

	)

101 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


102 
	#F_SETOWN
 8

	)

103 
	#F_GETOWN
 9

	)

106 #ifde‡
__USE_GNU


107 
	#F_SETSIG
 10

	)

108 
	#F_GETSIG
 11

	)

109 
	#F_SETOWN_EX
 15

	)

110 
	#F_GETOWN_EX
 16

	)

113 #ifde‡
__USE_GNU


114 
	#F_SETLEASE
 1024

	)

115 
	#F_GETLEASE
 1025

	)

116 
	#F_NOTIFY
 1026

	)

117 
	#F_DUPFD_CLOEXEC
 1030

	)

122 
	#FD_CLOEXEC
 1

	)

125 
	#F_RDLCK
 0

	)

126 
	#F_WRLCK
 1

	)

127 
	#F_UNLCK
 2

	)

130 
	#F_EXLCK
 4

	)

131 
	#F_SHLCK
 8

	)

133 #ifde‡
__USE_BSD


135 
	#LOCK_SH
 1

	)

136 
	#LOCK_EX
 2

	)

137 
	#LOCK_NB
 4

	)

139 
	#LOCK_UN
 8

	)

142 #ifde‡
__USE_GNU


143 
	#LOCK_MAND
 32

	)

144 
	#LOCK_READ
 64

	)

145 
	#LOCK_WRITE
 128

	)

146 
	#LOCK_RW
 192

	)

149 #ifde‡
__USE_GNU


151 
	#DN_ACCESS
 0x00000001

	)

152 
	#DN_MODIFY
 0x00000002

	)

153 
	#DN_CREATE
 0x00000004

	)

154 
	#DN_DELETE
 0x00000008

	)

155 
	#DN_RENAME
 0x00000010

	)

156 
	#DN_ATTRIB
 0x00000020

	)

157 
	#DN_MULTISHOT
 0x80000000

	)

160 
	sÊock


162 
	ml_ty≥
;

163 
	ml_whí˚
;

164 #i‚de‡
__USE_FILE_OFFSET64


165 
__off_t
 
	ml_°¨t
;

166 
__off_t
 
	ml_Àn
;

168 
__off64_t
 
	ml_°¨t
;

169 
__off64_t
 
	ml_Àn
;

171 
__pid_t
 
	ml_pid
;

174 #ifde‡
__USE_LARGEFILE64


175 
	sÊock64


177 
	ml_ty≥
;

178 
	ml_whí˚
;

179 
__off64_t
 
	ml_°¨t
;

180 
__off64_t
 
	ml_Àn
;

181 
__pid_t
 
	ml_pid
;

185 #ifde‡
__USE_GNU


187 
	e__pid_ty≥


189 
	mF_OWNER_TID
 = 0,

190 
	mF_OWNER_PID
,

191 
	mF_OWNER_GID


195 
	sf_ow√r_ex


197 
__pid_ty≥
 
	mty≥
;

198 
__pid_t
 
	mpid
;

204 #ifdef 
__USE_BSD


205 
	#FAPPEND
 
O_APPEND


	)

206 
	#FFSYNC
 
O_FSYNC


	)

207 
	#FASYNC
 
O_ASYNC


	)

208 
	#FNONBLOCK
 
O_NONBLOCK


	)

209 
	#FNDELAY
 
O_NDELAY


	)

213 #ifde‡
__USE_XOPEN2K


214 
	#POSIX_FADV_NORMAL
 0

	)

215 
	#POSIX_FADV_RANDOM
 1

	)

216 
	#POSIX_FADV_SEQUENTIAL
 2

	)

217 
	#POSIX_FADV_WILLNEED
 3

	)

218 
	#POSIX_FADV_DONTNEED
 4

	)

219 
	#POSIX_FADV_NOREUSE
 5

	)

223 #ifde‡
__USE_GNU


225 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

228 
	#SYNC_FILE_RANGE_WRITE
 2

	)

231 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

236 
	#SPLICE_F_MOVE
 1

	)

237 
	#SPLICE_F_NONBLOCK
 2

	)

240 
	#SPLICE_F_MORE
 4

	)

241 
	#SPLICE_F_GIFT
 8

	)

245 #ifde‡
__USE_ATFILE


246 
	#AT_FDCWD
 -100

	)

249 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

250 
	#AT_REMOVEDIR
 0x200

	)

252 
	#AT_SYMLINK_FOLLOW
 0x400

	)

253 
	#AT_EACCESS
 0x200

	)

257 
	g__BEGIN_DECLS


259 #ifde‡
__USE_GNU


262 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

263 
__THROW
;

267 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__‰om
, __off64_à
__to
,

268 
__Êags
);

272 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

273 
size_t
 
__cou¡
, 
__Êags
);

276 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

277 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

278 
__Êags
);

281 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

282 
__Êags
);

285 #i‚de‡
__USE_FILE_OFFSET64


286 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

288 #ifde‡
__REDIRECT


289 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

290 
__off64_t
 
__Àn
),

291 
ÁŒoˇã64
);

293 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

296 #ifde‡
__USE_LARGEFILE64


297 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

298 
__off64_t
 
__Àn
);

302 
__END_DECLS


	@/usr/include/bits/fcntl2.h

20 #i‚def 
_FCNTL_H


26 #i‚de‡
__USE_FILE_OFFSET64


27 
	$__›í_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

28 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

29 
›í
Ë
	`__n⁄nuŒ
 ((1));

31 
	`__REDIRECT
 (
__›í_2
, (
__c⁄°
 *
__∑th
, 
__oÊag
),

32 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

33 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

34 
›í64
Ë
	`__n⁄nuŒ
 ((1));

36 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

38 
	`__îr‹de˛
 (
__›í_missög_mode
,

41 
__exã∫_Æways_ölöe
 

42 
	$›í
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

44 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

45 
	`__›í_too_m™y_¨gs
 ();

47 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

49 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

51 
	`__›í_missög_mode
 ();

52  
	`__›í_2
 (
__∑th
, 
__oÊag
);

54  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

57 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

58  
	`__›í_2
 (
__∑th
, 
__oÊag
);

60  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

61 
	}
}

64 #ifde‡
__USE_LARGEFILE64


65 
	$__›í64_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

66 
	`__REDIRECT
 (
__›í64_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
,

67 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

68 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

70 
	`__îr‹de˛
 (
__›í64_missög_mode
,

73 
__exã∫_Æways_ölöe
 

74 
	$›í64
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

76 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

77 
	`__›í64_too_m™y_¨gs
 ();

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

81 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

83 
	`__›í64_missög_mode
 ();

84  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

86  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

89 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

90  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

92  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

93 
	}
}

97 #ifde‡
__USE_ATFILE


98 #i‚de‡
__USE_FILE_OFFSET64


99 
	$__›í©_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

100 
	`__n⁄nuŒ
 ((2));

101 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

102 
__oÊag
, ...), 
›í©
)

103 
	`__n⁄nuŒ
 ((2));

105 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, 
__c⁄°
 *
__∑th
,

106 
__oÊag
), 
__›í©64_2
)

107 
	`__n⁄nuŒ
 ((2));

108 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

109 
__oÊag
, ...), 
›í©64
)

110 
	`__n⁄nuŒ
 ((2));

112 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

114 
	`__îr‹de˛
 (
__›í©_missög_mode
,

117 
__exã∫_Æways_ölöe
 

118 
	$›í©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

120 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

121 
	`__›í©_too_m™y_¨gs
 ();

123 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

125 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

127 
	`__›í©_missög_mode
 ();

128  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

130  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

133 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

134  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

136  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

137 
	}
}

140 #ifde‡
__USE_LARGEFILE64


141 
	$__›í©64_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

142 
	`__n⁄nuŒ
 ((2));

143 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

144 
__oÊag
, ...), 
›í©64
)

145 
	`__n⁄nuŒ
 ((2));

146 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

148 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

151 
__exã∫_Æways_ölöe
 

152 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

154 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

155 
	`__›í©64_too_m™y_¨gs
 ();

157 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

159 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

161 
	`__›í©64_missög_mode
 ();

162  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

164  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

167 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

168  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

170  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

171 
	}
}

	@/usr/include/bits/huge_val.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VAL
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

37 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

41 
	~<ídün.h
>

43 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

45 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


46 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

48 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


49 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

52 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

53 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VALF
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

37 { 
__l
: 0x7f800000UL }).
__d
)

	)

41 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

50 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

51 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

21 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

28 
	#HUGE_VALL
 ((Ë
HUGE_VAL
)

	)

	@/usr/include/bits/in.h

21 #i‚de‡
_NETINET_IN_H


28 
	#IP_OPTIONS
 4

	)

29 
	#IP_HDRINCL
 3

	)

30 
	#IP_TOS
 1

	)

31 
	#IP_TTL
 2

	)

32 
	#IP_RECVOPTS
 6

	)

34 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

35 
	#IP_RETOPTS
 7

	)

36 
	#IP_MULTICAST_IF
 32

	)

37 
	#IP_MULTICAST_TTL
 33

	)

38 
	#IP_MULTICAST_LOOP
 34

	)

39 
	#IP_ADD_MEMBERSHIP
 35

	)

40 
	#IP_DROP_MEMBERSHIP
 36

	)

41 
	#IP_UNBLOCK_SOURCE
 37

	)

42 
	#IP_BLOCK_SOURCE
 38

	)

43 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

44 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

45 
	#IP_MSFILTER
 41

	)

46 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


47 
	#MCAST_JOIN_GROUP
 42

	)

48 
	#MCAST_BLOCK_SOURCE
 43

	)

49 
	#MCAST_UNBLOCK_SOURCE
 44

	)

50 
	#MCAST_LEAVE_GROUP
 45

	)

51 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

52 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

53 
	#MCAST_MSFILTER
 48

	)

55 
	#MCAST_EXCLUDE
 0

	)

56 
	#MCAST_INCLUDE
 1

	)

59 
	#IP_ROUTER_ALERT
 5

	)

60 
	#IP_PKTINFO
 8

	)

61 
	#IP_PKTOPTIONS
 9

	)

62 
	#IP_PMTUDISC
 10

	)

63 
	#IP_MTU_DISCOVER
 10

	)

64 
	#IP_RECVERR
 11

	)

65 
	#IP_RECVTTL
 12

	)

66 
	#IP_RECVTOS
 13

	)

70 
	#IP_PMTUDISC_DONT
 0

	)

71 
	#IP_PMTUDISC_WANT
 1

	)

72 
	#IP_PMTUDISC_DO
 2

	)

73 
	#IP_PMTUDISC_PROBE
 3

	)

76 
	#SOL_IP
 0

	)

78 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

79 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

80 
	#IP_MAX_MEMBERSHIPS
 20

	)

82 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


86 
	sù_›ts


88 
ö_addr
 
	mù_d°
;

89 
	mù_›ts
[40];

93 
	sù_mªqn


95 
ö_addr
 
	mimr_mu…üddr
;

96 
ö_addr
 
	mimr_addªss
;

97 
	mimr_ifödex
;

101 
	sö_pktöfo


103 
	mùi_ifödex
;

104 
ö_addr
 
	mùi_•ec_d°
;

105 
ö_addr
 
	mùi_addr
;

112 
	#IPV6_ADDRFORM
 1

	)

113 
	#IPV6_2292PKTINFO
 2

	)

114 
	#IPV6_2292HOPOPTS
 3

	)

115 
	#IPV6_2292DSTOPTS
 4

	)

116 
	#IPV6_2292RTHDR
 5

	)

117 
	#IPV6_2292PKTOPTIONS
 6

	)

118 
	#IPV6_CHECKSUM
 7

	)

119 
	#IPV6_2292HOPLIMIT
 8

	)

121 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

123 
	#IPV6_NEXTHOP
 9

	)

124 
	#IPV6_AUTHHDR
 10

	)

125 
	#IPV6_UNICAST_HOPS
 16

	)

126 
	#IPV6_MULTICAST_IF
 17

	)

127 
	#IPV6_MULTICAST_HOPS
 18

	)

128 
	#IPV6_MULTICAST_LOOP
 19

	)

129 
	#IPV6_JOIN_GROUP
 20

	)

130 
	#IPV6_LEAVE_GROUP
 21

	)

131 
	#IPV6_ROUTER_ALERT
 22

	)

132 
	#IPV6_MTU_DISCOVER
 23

	)

133 
	#IPV6_MTU
 24

	)

134 
	#IPV6_RECVERR
 25

	)

135 
	#IPV6_V6ONLY
 26

	)

136 
	#IPV6_JOIN_ANYCAST
 27

	)

137 
	#IPV6_LEAVE_ANYCAST
 28

	)

138 
	#IPV6_IPSEC_POLICY
 34

	)

139 
	#IPV6_XFRM_POLICY
 35

	)

141 
	#IPV6_RECVPKTINFO
 49

	)

142 
	#IPV6_PKTINFO
 50

	)

143 
	#IPV6_RECVHOPLIMIT
 51

	)

144 
	#IPV6_HOPLIMIT
 52

	)

145 
	#IPV6_RECVHOPOPTS
 53

	)

146 
	#IPV6_HOPOPTS
 54

	)

147 
	#IPV6_RTHDRDSTOPTS
 55

	)

148 
	#IPV6_RECVRTHDR
 56

	)

149 
	#IPV6_RTHDR
 57

	)

150 
	#IPV6_RECVDSTOPTS
 58

	)

151 
	#IPV6_DSTOPTS
 59

	)

153 
	#IPV6_RECVTCLASS
 66

	)

154 
	#IPV6_TCLASS
 67

	)

157 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

158 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

159 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

160 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

163 
	#IPV6_PMTUDISC_DONT
 0

	)

164 
	#IPV6_PMTUDISC_WANT
 1

	)

165 
	#IPV6_PMTUDISC_DO
 2

	)

166 
	#IPV6_PMTUDISC_PROBE
 3

	)

169 
	#SOL_IPV6
 41

	)

170 
	#SOL_ICMPV6
 58

	)

173 
	#IPV6_RTHDR_LOOSE
 0

	)

174 
	#IPV6_RTHDR_STRICT
 1

	)

176 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/inf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#INFINITY
 (
	`__buûtö_öff
())

	)

29 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/mathcalls.h

46 #i‚de‡
_MATH_H


53 
_MdoubÀ_BEGIN_NAMESPACE


55 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

57 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

59 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

61 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

64 
__MATHCALL
 (
cos
,, (
_MdoubÀ_
 
__x
));

66 
__MATHCALL
 (
sö
,, (
_MdoubÀ_
 
__x
));

68 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

73 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

75 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

77 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

78 
	g_MdoubÀ_END_NAMESPACE


80 #ifde‡
__USE_GNU


82 
__MATHDECL
 (,
söcos
,,

83 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

86 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


87 
__BEGIN_NAMESPACE_C99


89 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

91 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

93 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

94 
	g__END_NAMESPACE_C99


99 
_MdoubÀ_BEGIN_NAMESPACE


101 
__MATHCALL
 (
exp
,, (
_MdoubÀ_
 
__x
));

104 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

107 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

110 
__MATHCALL
 (
log
,, (
_MdoubÀ_
 
__x
));

113 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

116 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
));

117 
	g_MdoubÀ_END_NAMESPACE


119 #ifde‡
__USE_GNU


121 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

123 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

126 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


127 
__BEGIN_NAMESPACE_C99


129 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

132 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

135 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

136 
	g__END_NAMESPACE_C99


139 #ifde‡
__USE_ISOC99


140 
__BEGIN_NAMESPACE_C99


142 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

145 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

146 
	g__END_NAMESPACE_C99


152 
_MdoubÀ_BEGIN_NAMESPACE


154 
__MATHCALL
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

157 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

158 
	g_MdoubÀ_END_NAMESPACE


160 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


161 
__BEGIN_NAMESPACE_C99


163 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

164 
	g__END_NAMESPACE_C99


167 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


168 
__BEGIN_NAMESPACE_C99


170 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

171 
	g__END_NAMESPACE_C99


177 
_MdoubÀ_BEGIN_NAMESPACE


179 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

182 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

185 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

188 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

193 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

197 
	g_MdoubÀ_END_NAMESPACE


199 #ifde‡
__USE_MISC


202 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

205 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

208 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

212 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

215 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


216 
__BEGIN_NAMESPACE_C99


218 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

219 
	g__END_NAMESPACE_C99


222 #ifde‡
__USE_ISOC99


223 
__BEGIN_NAMESPACE_C99


225 
__MATHCALLX
 (
«n
,, (
__c⁄°
 *
__ègb
), (
__c⁄°__
));

226 
	g__END_NAMESPACE_C99


231 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

233 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

238 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

239 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

240 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

241 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

242 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

243 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

247 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


248 
__BEGIN_NAMESPACE_C99


250 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

252 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

253 
	g__END_NAMESPACE_C99


256 #ifde‡
__USE_ISOC99


257 
__BEGIN_NAMESPACE_C99


259 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

260 
	g__END_NAMESPACE_C99


263 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


265 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

268 #ifde‡
__USE_MISC


272 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

276 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


277 
__BEGIN_NAMESPACE_C99


280 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

283 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

284 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


285 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

289 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

291 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


293 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

297 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

300 #ifde‡
__USE_ISOC99


302 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

306 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

310 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

314 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

319 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

326 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

327 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

331 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

332 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

336 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

339 
__MATHCALL
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

342 
__MATHCALL
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

346 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

347 
__©åibuã__
 ((
__c⁄°__
));

350 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

351 
__©åibuã__
 ((
__c⁄°__
));

355 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

358 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


359 
	g__END_NAMESPACE_C99


362 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


364 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

19 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


23 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


24 
	#_MATH_H_MATHDEF
 1

	)

26 
	~<bôs/w‹dsize.h
>

28 #i‡
__WORDSIZE
 =64 || (
deföed
 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

31 
	tÊﬂt_t
;

32 
	tdoubÀ_t
;

38 
	tÊﬂt_t
;

40 
	tdoubÀ_t
;

45 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

46 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

	@/usr/include/bits/mathinline.h

21 #i‚de‡
_MATH_H


25 
	~<bôs/w‹dsize.h
>

27 #i‚de‡
__exã∫_ölöe


28 
	#__MATH_INLINE
 
__ölöe


	)

30 
	#__MATH_INLINE
 
__exã∫_ölöe


	)

34 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

37 
__MATH_INLINE
 

38 
__NTH
 (
	$__signbôf
 (
__x
))

40 #i‡
__WORDSIZE
 == 32

41 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

42  
__u
.
__i
 < 0;

44 
__m
;

45 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

46  
__m
 & 0x8;

48 
	}
}

49 
__MATH_INLINE
 

50 
__NTH
 (
	$__signbô
 (
__x
))

52 #i‡
__WORDSIZE
 == 32

53 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

54  
__u
.
__i
[1] < 0;

56 
__m
;

57 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

58  
__m
 & 0x80;

60 
	}
}

61 
__MATH_INLINE
 

62 
__NTH
 (
	$__signbôl
 (
__x
))

64 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

65  (
__u
.
__i
[2] & 0x8000) != 0;

66 
	}
}

	@/usr/include/bits/nan.h

20 #i‚de‡
_MATH_H


27 #i‡
__GNUC_PREREQ
(3,3)

29 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

31 #ñi‡
deföed
 
__GNUC__


33 
	#NAN
 \

34 (
__exãnsi⁄__
 \

35 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

36 { 
__l
: 0x7fc00000UL }).
__d
)

	)

40 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#__«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

45 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


46 
	#__«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

49 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__«n_uni⁄


50 
	g__©åibuã_u£d__
 = { 
__«n_byãs
 };

51 
	#NAN
 (
__«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/netdb.h

19 #i‚de‡
_NETDB_H


27 
	s√ã¡


29 *
	mn_«me
;

30 **
	mn_Æü£s
;

31 
	mn_addπy≥
;

32 
uöt32_t
 
	mn_√t
;

	@/usr/include/bits/poll.h

19 #i‚de‡
_SYS_POLL_H


26 
	#POLLIN
 0x001

	)

27 
	#POLLPRI
 0x002

	)

28 
	#POLLOUT
 0x004

	)

30 #ifde‡
__USE_XOPEN


32 
	#POLLRDNORM
 0x040

	)

33 
	#POLLRDBAND
 0x080

	)

34 
	#POLLWRNORM
 0x100

	)

35 
	#POLLWRBAND
 0x200

	)

38 #ifde‡
__USE_GNU


40 
	#POLLMSG
 0x400

	)

41 
	#POLLREMOVE
 0x1000

	)

42 
	#POLLRDHUP
 0x2000

	)

48 
	#POLLERR
 0x008

	)

49 
	#POLLHUP
 0x010

	)

50 
	#POLLNVAL
 0x020

	)

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 
	#_POSIX_TZNAME_MAX
 6

	)

140 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


142 
	#_POSIX_QLIMIT
 1

	)

146 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

149 
	#_POSIX_UIO_MAXIOV
 16

	)

153 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

157 
	~<bôs/loˇl_lim.h
>

160 #i‚def 
SSIZE_MAX


161 
	#SSIZE_MAX
 
LONG_MAX


	)

168 #i‚def 
NGROUPS_MAX


169 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_BITS_POSIX_OPT_H


21 
	#_BITS_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

36 
	#_POSIX_FSYNC
 200809L

	)

39 
	#_POSIX_MAPPED_FILES
 200809L

	)

42 
	#_POSIX_MEMLOCK
 200809L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200809L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

92 #ifde‡
__USE_XOPEN2K8


94 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

97 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

101 
	#_POSIX_SEMAPHORES
 200809L

	)

104 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

107 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

108 
	#_POSIX_ASYNC_IO
 1

	)

110 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

112 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

115 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

118 
	#_LFS_LARGEFILE
 1

	)

119 
	#_LFS64_LARGEFILE
 1

	)

120 
	#_LFS64_STDIO
 1

	)

123 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

126 
	#_POSIX_CPUTIME
 0

	)

129 
	#_POSIX_THREAD_CPUTIME
 0

	)

132 
	#_POSIX_REGEXP
 1

	)

135 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

138 
	#_POSIX_SHELL
 1

	)

141 
	#_POSIX_TIMEOUTS
 200809L

	)

144 
	#_POSIX_SPIN_LOCKS
 200809L

	)

147 
	#_POSIX_SPAWN
 200809L

	)

150 
	#_POSIX_TIMERS
 200809L

	)

153 
	#_POSIX_BARRIERS
 200809L

	)

156 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

159 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

162 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

165 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

168 
	#_POSIX_ADVISORY_INFO
 200809L

	)

171 
	#_POSIX_IPV6
 200809L

	)

174 
	#_POSIX_RAW_SOCKETS
 200809L

	)

177 
	#_POSIX2_CHAR_TERM
 200809L

	)

180 
	#_POSIX_SPORADIC_SERVER
 -1

	)

181 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

184 
	#_POSIX_TRACE
 -1

	)

185 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

186 
	#_POSIX_TRACE_INHERIT
 -1

	)

187 
	#_POSIX_TRACE_LOG
 -1

	)

190 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/resource.h

21 #i‚de‡
_SYS_RESOURCE_H


25 
	~<bôs/ty≥s.h
>

33 
	e__æimô_ªsour˚


36 
	mRLIMIT_CPU
 = 0,

37 
	#RLIMIT_CPU
 
RLIMIT_CPU


	)

40 
	mRLIMIT_FSIZE
 = 1,

41 
	#RLIMIT_FSIZE
 
RLIMIT_FSIZE


	)

44 
	mRLIMIT_DATA
 = 2,

45 
	#RLIMIT_DATA
 
RLIMIT_DATA


	)

48 
	mRLIMIT_STACK
 = 3,

49 
	#RLIMIT_STACK
 
RLIMIT_STACK


	)

52 
	mRLIMIT_CORE
 = 4,

53 
	#RLIMIT_CORE
 
RLIMIT_CORE


	)

59 
	m__RLIMIT_RSS
 = 5,

60 
	#RLIMIT_RSS
 
__RLIMIT_RSS


	)

63 
	mRLIMIT_NOFILE
 = 7,

64 
	m__RLIMIT_OFILE
 = 
RLIMIT_NOFILE
,

65 
	#RLIMIT_NOFILE
 
RLIMIT_NOFILE


	)

66 
	#RLIMIT_OFILE
 
__RLIMIT_OFILE


	)

69 
	mRLIMIT_AS
 = 9,

70 
	#RLIMIT_AS
 
RLIMIT_AS


	)

73 
	m__RLIMIT_NPROC
 = 6,

74 
	#RLIMIT_NPROC
 
__RLIMIT_NPROC


	)

77 
	m__RLIMIT_MEMLOCK
 = 8,

78 
	#RLIMIT_MEMLOCK
 
__RLIMIT_MEMLOCK


	)

81 
	m__RLIMIT_LOCKS
 = 10,

82 
	#RLIMIT_LOCKS
 
__RLIMIT_LOCKS


	)

85 
	m__RLIMIT_SIGPENDING
 = 11,

86 
	#RLIMIT_SIGPENDING
 
__RLIMIT_SIGPENDING


	)

89 
	m__RLIMIT_MSGQUEUE
 = 12,

90 
	#RLIMIT_MSGQUEUE
 
__RLIMIT_MSGQUEUE


	)

95 
	m__RLIMIT_NICE
 = 13,

96 
	#RLIMIT_NICE
 
__RLIMIT_NICE


	)

100 
	m__RLIMIT_RTPRIO
 = 14,

101 
	#RLIMIT_RTPRIO
 
__RLIMIT_RTPRIO


	)

103 
	m__RLIMIT_NLIMITS
 = 15,

104 
	m__RLIM_NLIMITS
 = 
__RLIMIT_NLIMITS


105 
	#RLIMIT_NLIMITS
 
__RLIMIT_NLIMITS


	)

106 
	#RLIM_NLIMITS
 
__RLIM_NLIMITS


	)

110 #i‚de‡
__USE_FILE_OFFSET64


111 
	#RLIM_INFINITY
 (()(~0UL))

	)

113 
	#RLIM_INFINITY
 0xffffffffffffffffuLL

	)

116 #ifde‡
__USE_LARGEFILE64


117 
	#RLIM64_INFINITY
 0xffffffffffffffffuLL

	)

121 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

122 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

126 #i‚de‡
__USE_FILE_OFFSET64


127 
__æim_t
 
	tæim_t
;

129 
__æim64_t
 
	tæim_t
;

131 #ifde‡
__USE_LARGEFILE64


132 
__æim64_t
 
	tæim64_t
;

135 
	sæimô


138 
æim_t
 
	mæim_cur
;

140 
æim_t
 
	mæim_max
;

143 #ifde‡
__USE_LARGEFILE64


144 
	sæimô64


147 
æim64_t
 
	mæim_cur
;

149 
æim64_t
 
	mæim_max
;

154 
	e__rußge_who


157 
	mRUSAGE_SELF
 = 0,

158 
	#RUSAGE_SELF
 
RUSAGE_SELF


	)

161 
	mRUSAGE_CHILDREN
 = -1

162 
	#RUSAGE_CHILDREN
 
RUSAGE_CHILDREN


	)

164 #ifde‡
__USE_GNU


167 
	mRUSAGE_THREAD
 = 1

168 
	#RUSAGE_THREAD
 
RUSAGE_THREAD


	)

170 
	#RUSAGE_LWP
 
RUSAGE_THREAD


	)

174 
	#__√ed_timevÆ


	)

175 
	~<bôs/time.h
>

178 
	srußge


181 
timevÆ
 
	mru_utime
;

183 
timevÆ
 
	mru_°ime
;

185 
	mru_maxrss
;

188 
	mru_ixrss
;

190 
	mru_idrss
;

192 
	mru_i§ss
;

195 
	mru_möÊt
;

197 
	mru_majÊt
;

199 
	mru_nsw≠
;

202 
	mru_öblock
;

204 
	mru_oublock
;

206 
	mru_msg¢d
;

208 
	mru_msgrcv
;

210 
	mru_nsig«ls
;

214 
	mru_nvcsw
;

217 
	mru_nivcsw
;

221 
	#PRIO_MIN
 -20

	)

222 
	#PRIO_MAX
 20

	)

226 
	e__¥i‹ôy_which


228 
	mPRIO_PROCESS
 = 0,

229 
	#PRIO_PROCESS
 
PRIO_PROCESS


	)

230 
	mPRIO_PGRP
 = 1,

231 
	#PRIO_PGRP
 
PRIO_PGRP


	)

232 
	mPRIO_USER
 = 2

233 
	#PRIO_USER
 
PRIO_USER


	)

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‚de‡
_BITS_SIGCONTEXT_H


20 
	#_BITS_SIGCONTEXT_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


26 
	~<bôs/w‹dsize.h
>

28 
	s_Âªg


30 
	msignifiˇnd
[4];

31 
	mexp⁄ít
;

34 
	s_Âxªg


36 
	msignifiˇnd
[4];

37 
	mexp⁄ít
;

38 
	m∑ddög
[3];

41 
	s_xmmªg


43 
__uöt32_t
 
	mñemít
[4];

48 #i‡
__WORDSIZE
 == 32

50 
	s_Â°©e


53 
__uöt32_t
 
	mcw
;

54 
__uöt32_t
 
	msw
;

55 
__uöt32_t
 
	mèg
;

56 
__uöt32_t
 
	mùoff
;

57 
__uöt32_t
 
	mcs£l
;

58 
__uöt32_t
 
	md©aoff
;

59 
__uöt32_t
 
	md©a£l
;

60 
_Âªg
 
	m_°
[8];

61 
	m°©us
;

62 
	mmagic
;

65 
__uöt32_t
 
	m_fx§_ív
[6];

66 
__uöt32_t
 
	mmxc§
;

67 
__uöt32_t
 
	mª£rved
;

68 
_Âxªg
 
	m_fx§_°
[8];

69 
_xmmªg
 
	m_xmm
[8];

70 
__uöt32_t
 
	m∑ddög
[56];

73 #i‚de‡
sigc⁄ãxt_°ru˘


78 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

81 
	ssigc⁄ãxt


83 
	mgs
, 
	m__gsh
;

84 
	mfs
, 
	m__fsh
;

85 
	mes
, 
	m__esh
;

86 
	mds
, 
	m__dsh
;

87 
	medi
;

88 
	mesi
;

89 
	mebp
;

90 
	me•
;

91 
	mebx
;

92 
	medx
;

93 
	mecx
;

94 
	móx
;

95 
	må≠no
;

96 
	mîr
;

97 
	meù
;

98 
	mcs
, 
	m__csh
;

99 
	meÊags
;

100 
	me•_©_sig«l
;

101 
	mss
, 
	m__ssh
;

102 
_Â°©e
 * 
	mÂ°©e
;

103 
	mﬁdmask
;

104 
	m¸2
;

109 
	s_Â°©e


112 
__uöt16_t
 
	mcwd
;

113 
__uöt16_t
 
	mswd
;

114 
__uöt16_t
 
	m·w
;

115 
__uöt16_t
 
	mf›
;

116 
__uöt64_t
 
	mrù
;

117 
__uöt64_t
 
	mrdp
;

118 
__uöt32_t
 
	mmxc§
;

119 
__uöt32_t
 
	mmx¸_mask
;

120 
_Âxªg
 
	m_°
[8];

121 
_xmmªg
 
	m_xmm
[16];

122 
__uöt32_t
 
	m∑ddög
[24];

125 
	ssigc⁄ãxt


127 
	mr8
;

128 
	mr9
;

129 
	mr10
;

130 
	mr11
;

131 
	mr12
;

132 
	mr13
;

133 
	mr14
;

134 
	mr15
;

135 
	mrdi
;

136 
	mrsi
;

137 
	mrbp
;

138 
	mrbx
;

139 
	mrdx
;

140 
	møx
;

141 
	mrcx
;

142 
	mr•
;

143 
	mrù
;

144 
	meÊags
;

145 
	mcs
;

146 
	mgs
;

147 
	mfs
;

148 
	m__∑d0
;

149 
	mîr
;

150 
	må≠no
;

151 
	mﬁdmask
;

152 
	m¸2
;

153 
_Â°©e
 * 
	mÂ°©e
;

154 
	m__ª£rved1
 [8];

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

38 #ifde‡
__USE_GNU


40 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

41 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/sockaddr.h

24 #i‚de‡
_BITS_SOCKADDR_H


25 
	#_BITS_SOCKADDR_H
 1

	)

29 
	tß_Ámûy_t
;

35 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

36 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

38 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/bits/socket.h

21 #i‚de‡
__BITS_SOCKET_H


22 
	#__BITS_SOCKET_H


	)

24 #i‚de‡
_SYS_SOCKET_H


28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	~<sys/ty≥s.h
>

34 #i‚de‡
__sockÀn_t_deföed


35 
__sockÀn_t
 
	tsockÀn_t
;

36 
	#__sockÀn_t_deföed


	)

40 
	e__sockë_ty≥


42 
	mSOCK_STREAM
 = 1,

44 
	#SOCK_STREAM
 
SOCK_STREAM


	)

45 
	mSOCK_DGRAM
 = 2,

47 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

48 
	mSOCK_RAW
 = 3,

49 
	#SOCK_RAW
 
SOCK_RAW


	)

50 
	mSOCK_RDM
 = 4,

51 
	#SOCK_RDM
 
SOCK_RDM


	)

52 
	mSOCK_SEQPACKET
 = 5,

54 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

55 
	mSOCK_DCCP
 = 6,

56 
	#SOCK_DCCP
 
SOCK_DCCP


	)

57 
	mSOCK_PACKET
 = 10,

60 
	#SOCK_PACKET
 
SOCK_PACKET


	)

65 
	mSOCK_CLOEXEC
 = 02000000,

67 
	#SOCK_CLOEXEC
 
SOCK_CLOEXEC


	)

68 
	mSOCK_NONBLOCK
 = 04000

70 
	#SOCK_NONBLOCK
 
SOCK_NONBLOCK


	)

74 
	#PF_UNSPEC
 0

	)

75 
	#PF_LOCAL
 1

	)

76 
	#PF_UNIX
 
PF_LOCAL


	)

77 
	#PF_FILE
 
PF_LOCAL


	)

78 
	#PF_INET
 2

	)

79 
	#PF_AX25
 3

	)

80 
	#PF_IPX
 4

	)

81 
	#PF_APPLETALK
 5

	)

82 
	#PF_NETROM
 6

	)

83 
	#PF_BRIDGE
 7

	)

84 
	#PF_ATMPVC
 8

	)

85 
	#PF_X25
 9

	)

86 
	#PF_INET6
 10

	)

87 
	#PF_ROSE
 11

	)

88 
	#PF_DEC√t
 12

	)

89 
	#PF_NETBEUI
 13

	)

90 
	#PF_SECURITY
 14

	)

91 
	#PF_KEY
 15

	)

92 
	#PF_NETLINK
 16

	)

93 
	#PF_ROUTE
 
PF_NETLINK


	)

94 
	#PF_PACKET
 17

	)

95 
	#PF_ASH
 18

	)

96 
	#PF_ECONET
 19

	)

97 
	#PF_ATMSVC
 20

	)

98 
	#PF_RDS
 21

	)

99 
	#PF_SNA
 22

	)

100 
	#PF_IRDA
 23

	)

101 
	#PF_PPPOX
 24

	)

102 
	#PF_WANPIPE
 25

	)

103 
	#PF_LLC
 26

	)

104 
	#PF_CAN
 29

	)

105 
	#PF_TIPC
 30

	)

106 
	#PF_BLUETOOTH
 31

	)

107 
	#PF_IUCV
 32

	)

108 
	#PF_RXRPC
 33

	)

109 
	#PF_ISDN
 34

	)

110 
	#PF_PHONET
 35

	)

111 
	#PF_IEEE802154
 36

	)

112 
	#PF_MAX
 37

	)

115 
	#AF_UNSPEC
 
PF_UNSPEC


	)

116 
	#AF_LOCAL
 
PF_LOCAL


	)

117 
	#AF_UNIX
 
PF_UNIX


	)

118 
	#AF_FILE
 
PF_FILE


	)

119 
	#AF_INET
 
PF_INET


	)

120 
	#AF_AX25
 
PF_AX25


	)

121 
	#AF_IPX
 
PF_IPX


	)

122 
	#AF_APPLETALK
 
PF_APPLETALK


	)

123 
	#AF_NETROM
 
PF_NETROM


	)

124 
	#AF_BRIDGE
 
PF_BRIDGE


	)

125 
	#AF_ATMPVC
 
PF_ATMPVC


	)

126 
	#AF_X25
 
PF_X25


	)

127 
	#AF_INET6
 
PF_INET6


	)

128 
	#AF_ROSE
 
PF_ROSE


	)

129 
	#AF_DEC√t
 
PF_DEC√t


	)

130 
	#AF_NETBEUI
 
PF_NETBEUI


	)

131 
	#AF_SECURITY
 
PF_SECURITY


	)

132 
	#AF_KEY
 
PF_KEY


	)

133 
	#AF_NETLINK
 
PF_NETLINK


	)

134 
	#AF_ROUTE
 
PF_ROUTE


	)

135 
	#AF_PACKET
 
PF_PACKET


	)

136 
	#AF_ASH
 
PF_ASH


	)

137 
	#AF_ECONET
 
PF_ECONET


	)

138 
	#AF_ATMSVC
 
PF_ATMSVC


	)

139 
	#AF_RDS
 
PF_RDS


	)

140 
	#AF_SNA
 
PF_SNA


	)

141 
	#AF_IRDA
 
PF_IRDA


	)

142 
	#AF_PPPOX
 
PF_PPPOX


	)

143 
	#AF_WANPIPE
 
PF_WANPIPE


	)

144 
	#AF_LLC
 
PF_LLC


	)

145 
	#AF_CAN
 
PF_CAN


	)

146 
	#AF_TIPC
 
PF_TIPC


	)

147 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

148 
	#AF_IUCV
 
PF_IUCV


	)

149 
	#AF_RXRPC
 
PF_RXRPC


	)

150 
	#AF_ISDN
 
PF_ISDN


	)

151 
	#AF_PHONET
 
PF_PHONET


	)

152 
	#AF_IEEE802154
 
PF_IEEE802154


	)

153 
	#AF_MAX
 
PF_MAX


	)

159 
	#SOL_RAW
 255

	)

160 
	#SOL_DECNET
 261

	)

161 
	#SOL_X25
 262

	)

162 
	#SOL_PACKET
 263

	)

163 
	#SOL_ATM
 264

	)

164 
	#SOL_AAL
 265

	)

165 
	#SOL_IRDA
 266

	)

168 
	#SOMAXCONN
 128

	)

171 
	~<bôs/sockaddr.h
>

174 
	ssockaddr


176 
__SOCKADDR_COMMON
 (
ß_
);

177 
	mß_d©a
[14];

183 
	#__ss_Æig¡y≥
 

	)

184 
	#_SS_SIZE
 128

	)

185 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

187 
	ssockaddr_°‹age


189 
__SOCKADDR_COMMON
 (
ss_
);

190 
__ss_Æig¡y≥
 
	m__ss_Æign
;

191 
	m__ss_∑ddög
[
_SS_PADSIZE
];

198 
	mMSG_OOB
 = 0x01,

199 
	#MSG_OOB
 
MSG_OOB


	)

200 
	mMSG_PEEK
 = 0x02,

201 
	#MSG_PEEK
 
MSG_PEEK


	)

202 
	mMSG_DONTROUTE
 = 0x04,

203 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

204 #ifde‡
__USE_GNU


206 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

207 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

209 
	mMSG_CTRUNC
 = 0x08,

210 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

211 
	mMSG_PROXY
 = 0x10,

212 
	#MSG_PROXY
 
MSG_PROXY


	)

213 
	mMSG_TRUNC
 = 0x20,

214 
	#MSG_TRUNC
 
MSG_TRUNC


	)

215 
	mMSG_DONTWAIT
 = 0x40,

216 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

217 
	mMSG_EOR
 = 0x80,

218 
	#MSG_EOR
 
MSG_EOR


	)

219 
	mMSG_WAITALL
 = 0x100,

220 
	#MSG_WAITALL
 
MSG_WAITALL


	)

221 
	mMSG_FIN
 = 0x200,

222 
	#MSG_FIN
 
MSG_FIN


	)

223 
	mMSG_SYN
 = 0x400,

224 
	#MSG_SYN
 
MSG_SYN


	)

225 
	mMSG_CONFIRM
 = 0x800,

226 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

227 
	mMSG_RST
 = 0x1000,

228 
	#MSG_RST
 
MSG_RST


	)

229 
	mMSG_ERRQUEUE
 = 0x2000,

230 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

231 
	mMSG_NOSIGNAL
 = 0x4000,

232 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

233 
	mMSG_MORE
 = 0x8000,

234 
	#MSG_MORE
 
MSG_MORE


	)

236 
	mMSG_CMSG_CLOEXEC
 = 0x40000000

239 
	#MSG_CMSG_CLOEXEC
 
MSG_CMSG_CLOEXEC


	)

245 
	smsghdr


247 *
	mmsg_«me
;

248 
sockÀn_t
 
	mmsg_«mñí
;

250 
iovec
 *
	mmsg_iov
;

251 
size_t
 
	mmsg_iovÀn
;

253 *
	mmsg_c⁄åﬁ
;

254 
size_t
 
	mmsg_c⁄åﬁÀn
;

259 
	mmsg_Êags
;

263 
	scmsghdr


265 
size_t
 
	mcmsg_Àn
;

270 
	mcmsg_Àvñ
;

271 
	mcmsg_ty≥
;

272 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

273 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

278 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

279 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

281 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

283 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

284 
	#CMSG_FIRSTHDR
(
mhdr
) \

285 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

286 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë0)

	)

287 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

288 & (
size_t
Ë~( (size_tË- 1))

	)

289 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

290 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

291 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

293 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

294 
cmsghdr
 *
__cmsg
Ë
__THROW
;

295 #ifde‡
__USE_EXTERN_INLINES


296 #i‚de‡
_EXTERN_INLINE


297 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

299 
_EXTERN_INLINE
 
cmsghdr
 *

300 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

302 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

306 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

307 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

308 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


309 + 
__mhdr
->
msg_c⁄åﬁÀn
)

310 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

311 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

314  
__cmsg
;

315 
	}
}

322 
	mSCM_RIGHTS
 = 0x01

323 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

324 #ifde‡
__USE_GNU


325 , 
	mSCM_CREDENTIALS
 = 0x02

326 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

330 #ifde‡
__USE_GNU


332 
	su¸ed


334 
pid_t
 
	mpid
;

335 
uid_t
 
	muid
;

336 
gid_t
 
	mgid
;

341 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


342 #i‚de‡
FIOGETOWN


343 
	#__SYS_SOCKET_H_undef_FIOGETOWN


	)

345 #i‚de‡
FIOSETOWN


346 
	#__SYS_SOCKET_H_undef_FIOSETOWN


	)

348 #i‚de‡
SIOCATMARK


349 
	#__SYS_SOCKET_H_undef_SIOCATMARK


	)

351 #i‚de‡
SIOCGPGRP


352 
	#__SYS_SOCKET_H_undef_SIOCGPGRP


	)

354 #i‚de‡
SIOCGSTAMP


355 
	#__SYS_SOCKET_H_undef_SIOCGSTAMP


	)

357 #i‚de‡
SIOCGSTAMPNS


358 
	#__SYS_SOCKET_H_undef_SIOCGSTAMPNS


	)

360 #i‚de‡
SIOCSPGRP


361 
	#__SYS_SOCKET_H_undef_SIOCSPGRP


	)

366 
	~<asm/sockë.h
>

368 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


369 #ifde‡
__SYS_SOCKET_H_undef_FIOGETOWN


370 #unde‡
__SYS_SOCKET_H_undef_FIOGETOWN


371 #unde‡
FIOGETOWN


373 #ifde‡
__SYS_SOCKET_H_undef_FIOSETOWN


374 #unde‡
__SYS_SOCKET_H_undef_FIOSETOWN


375 #unde‡
FIOSETOWN


377 #ifde‡
__SYS_SOCKET_H_undef_SIOCATMARK


378 #unde‡
__SYS_SOCKET_H_undef_SIOCATMARK


379 #unde‡
SIOCATMARK


381 #ifde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


382 #unde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


383 #unde‡
SIOCGPGRP


385 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


386 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


387 #unde‡
SIOCGSTAMP


389 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


390 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


391 #unde‡
SIOCGSTAMPNS


393 #ifde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


394 #unde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


395 #unde‡
SIOCSPGRP


400 
	slögî


402 
	ml_⁄off
;

403 
	ml_lögî
;

	@/usr/include/bits/socket2.h

20 #i‚de‡
_SYS_SOCKET_H


24 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

25 
__Êags
);

26 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

27 
__Êags
), 
ªcv
);

28 
ssize_t
 
__REDIRECT
 (
__ªcv_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

30 
__Êags
), 
__ªcv_chk
)

31 
__w¨«âr
 ("recv called with biggerÜengthÅhan size of destination "

34 
__exã∫_Æways_ölöe
 
ssize_t


35 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

40  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

42 i‡(
__n
 > 
	`__bos0
 (
__buf
))

43  
	`__ªcv_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

45  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

46 
	}
}

48 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

49 
size_t
 
__buÊí
, 
__Êags
,

50 
__SOCKADDR_ARG
 
__addr
,

51 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

52 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

53 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

54 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

55 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

56 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_chk_w¨n
,

57 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

58 
size_t
 
__buÊí
, 
__Êags
,

59 
__SOCKADDR_ARG
 
__addr
,

60 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
__ªcv‰om_chk
)

61 
__w¨«âr
 ("recvfrom called with biggerÜengthÅhan size of "

64 
__exã∫_Æways_ölöe
 
ssize_t


65 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

66 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

68 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

70 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

71  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

72 
__addr
, 
__addr_Àn
);

73 i‡(
__n
 > 
	`__bos0
 (
__buf
))

74  
	`__ªcv‰om_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

75 
__addr
, 
__addr_Àn
);

77  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

78 
	}
}

	@/usr/include/bits/stat.h

19 #i‚de‡
_SYS_STAT_H


24 
	#_STAT_VER_KERNEL
 0

	)

26 #i‡
__WORDSIZE
 == 32

27 
	#_STAT_VER_SVR4
 2

	)

28 
	#_STAT_VER_LINUX
 3

	)

31 
	#_MKNOD_VER_LINUX
 1

	)

32 
	#_MKNOD_VER_SVR4
 2

	)

33 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

35 
	#_STAT_VER_LINUX
 1

	)

38 
	#_MKNOD_VER_LINUX
 0

	)

41 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

43 
	s°©


45 
__dev_t
 
	m°_dev
;

46 #i‡
__WORDSIZE
 == 32

47 
	m__∑d1
;

49 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


50 
__öo_t
 
	m°_öo
;

52 
__öo_t
 
	m__°_öo
;

54 #i‡
__WORDSIZE
 == 32

55 
__mode_t
 
	m°_mode
;

56 
__∆ök_t
 
	m°_∆ök
;

58 
__∆ök_t
 
	m°_∆ök
;

59 
__mode_t
 
	m°_mode
;

61 
__uid_t
 
	m°_uid
;

62 
__gid_t
 
	m°_gid
;

63 #i‡
__WORDSIZE
 == 64

64 
	m__∑d0
;

66 
__dev_t
 
	m°_rdev
;

67 #i‡
__WORDSIZE
 == 32

68 
	m__∑d2
;

70 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


71 
__off_t
 
	m°_size
;

73 
__off64_t
 
	m°_size
;

75 
__blksize_t
 
	m°_blksize
;

76 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


77 
__blk˙t_t
 
	m°_blocks
;

79 
__blk˙t64_t
 
	m°_blocks
;

81 #ifde‡
__USE_MISC


88 
time•ec
 
	m°_©im
;

89 
time•ec
 
	m°_mtim
;

90 
time•ec
 
	m°_˘im
;

91 
	#°_©ime
 
°_©im
.
tv_£c


	)

92 
	#°_mtime
 
°_mtim
.
tv_£c


	)

93 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

95 
__time_t
 
	m°_©ime
;

96 
	m°_©imí£c
;

97 
__time_t
 
	m°_mtime
;

98 
	m°_mtimí£c
;

99 
__time_t
 
	m°_˘ime
;

100 
	m°_˘imí£c
;

102 #i‡
__WORDSIZE
 == 64

103 
	m__unu£d
[3];

105 #i‚de‡
__USE_FILE_OFFSET64


106 
	m__unu£d4
;

107 
	m__unu£d5
;

109 
__öo64_t
 
	m°_öo
;

114 #ifde‡
__USE_LARGEFILE64


116 
	s°©64


118 
__dev_t
 
	m°_dev
;

119 #i‡
__WORDSIZE
 == 64

120 
__öo64_t
 
	m°_öo
;

121 
__∆ök_t
 
	m°_∆ök
;

122 
__mode_t
 
	m°_mode
;

124 
	m__∑d1
;

125 
__öo_t
 
	m__°_öo
;

126 
__mode_t
 
	m°_mode
;

127 
__∆ök_t
 
	m°_∆ök
;

129 
__uid_t
 
	m°_uid
;

130 
__gid_t
 
	m°_gid
;

131 #i‡
__WORDSIZE
 == 64

132 
	m__∑d0
;

133 
__dev_t
 
	m°_rdev
;

134 
__off_t
 
	m°_size
;

136 
__dev_t
 
	m°_rdev
;

137 
	m__∑d2
;

138 
__off64_t
 
	m°_size
;

140 
__blksize_t
 
	m°_blksize
;

141 
__blk˙t64_t
 
	m°_blocks
;

142 #ifde‡
__USE_MISC


149 
time•ec
 
	m°_©im
;

150 
time•ec
 
	m°_mtim
;

151 
time•ec
 
	m°_˘im
;

152 
	#°_©ime
 
°_©im
.
tv_£c


	)

153 
	#°_mtime
 
°_mtim
.
tv_£c


	)

154 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

156 
__time_t
 
	m°_©ime
;

157 
	m°_©imí£c
;

158 
__time_t
 
	m°_mtime
;

159 
	m°_mtimí£c
;

160 
__time_t
 
	m°_˘ime
;

161 
	m°_˘imí£c
;

163 #i‡
__WORDSIZE
 == 64

164 
	m__unu£d
[3];

166 
__öo64_t
 
	m°_öo
;

172 
	#_STATBUF_ST_BLKSIZE


	)

173 
	#_STATBUF_ST_RDEV


	)

175 
	#_STATBUF_ST_NSEC


	)

179 
	#__S_IFMT
 0170000

	)

182 
	#__S_IFDIR
 0040000

	)

183 
	#__S_IFCHR
 0020000

	)

184 
	#__S_IFBLK
 0060000

	)

185 
	#__S_IFREG
 0100000

	)

186 
	#__S_IFIFO
 0010000

	)

187 
	#__S_IFLNK
 0120000

	)

188 
	#__S_IFSOCK
 0140000

	)

192 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

193 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

194 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

198 
	#__S_ISUID
 04000

	)

199 
	#__S_ISGID
 02000

	)

200 
	#__S_ISVTX
 01000

	)

201 
	#__S_IREAD
 0400

	)

202 
	#__S_IWRITE
 0200

	)

203 
	#__S_IEXEC
 0100

	)

205 #ifde‡
__USE_ATFILE


206 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

207 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__exã∫_Æways_ölöe
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__exã∫_Æways_ölöe
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

81 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

83 
	`__w¨n_mem£t_zîo_Àn
 ();

84  
__de°
;

86  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

87 
	}
}

89 #ifde‡
__USE_BSD


90 
__exã∫_Æways_ölöe
 

91 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__ª°ri˘
 
__§c
, *__ª°ri˘ 
__de°
,

92 
size_t
 
__Àn
))

94 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

95 
	}
}

97 
__exã∫_Æways_ölöe
 

98 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

100 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

101 
	}
}

104 
__exã∫_Æways_ölöe
 *

105 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

107  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

108 
	}
}

110 #ifde‡
__USE_GNU


111 
__exã∫_Æways_ölöe
 *

112 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

114  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

115 
	}
}

119 
__exã∫_Æways_ölöe
 *

120 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

121 
size_t
 
__Àn
))

123  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

124 
	}
}

127 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

128 
size_t
 
__de°Àn
Ë
__THROW
;

129 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

130 
__c⁄°
 *
__§c
,

131 
size_t
 
__n
), 
°≤˝y
);

133 
__exã∫_Æways_ölöe
 *

134 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

136 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

137 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

138  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

139  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

140 
	}
}

143 
__exã∫_Æways_ölöe
 *

144 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

146  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

147 
	}
}

150 
__exã∫_Æways_ölöe
 *

151 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

152 
size_t
 
__Àn
))

154  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

155 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/syscall.h

3 #i‚de‡
_SYSCALL_H


7 
	~<bôs/w‹dsize.h
>

9 
	#SYS__sys˘l
 
__NR__sys˘l


	)

10 
	#SYS_ac˚ss
 
__NR_ac˚ss


	)

11 
	#SYS_ac˘
 
__NR_ac˘


	)

12 
	#SYS_add_key
 
__NR_add_key


	)

13 
	#SYS_adjtimex
 
__NR_adjtimex


	)

14 
	#SYS_afs_sysˇŒ
 
__NR_afs_sysˇŒ


	)

15 
	#SYS_Æ¨m
 
__NR_Æ¨m


	)

16 
	#SYS_brk
 
__NR_brk


	)

17 
	#SYS_ˇpgë
 
__NR_ˇpgë


	)

18 
	#SYS_ˇp£t
 
__NR_ˇp£t


	)

19 
	#SYS_chdú
 
__NR_chdú


	)

20 
	#SYS_chmod
 
__NR_chmod


	)

21 
	#SYS_chown
 
__NR_chown


	)

22 
	#SYS_chroŸ
 
__NR_chroŸ


	)

23 
	#SYS_˛ock_gëªs
 
__NR_˛ock_gëªs


	)

24 
	#SYS_˛ock_gëtime
 
__NR_˛ock_gëtime


	)

25 
	#SYS_˛ock_«no¶ìp
 
__NR_˛ock_«no¶ìp


	)

26 
	#SYS_˛ock_£âime
 
__NR_˛ock_£âime


	)

27 
	#SYS_˛⁄e
 
__NR_˛⁄e


	)

28 
	#SYS_˛o£
 
__NR_˛o£


	)

29 
	#SYS_¸ót
 
__NR_¸ót


	)

30 
	#SYS_¸óã_moduÀ
 
__NR_¸óã_moduÀ


	)

31 
	#SYS_dñëe_moduÀ
 
__NR_dñëe_moduÀ


	)

32 
	#SYS_dup
 
__NR_dup


	)

33 
	#SYS_dup2
 
__NR_dup2


	)

34 
	#SYS_dup3
 
__NR_dup3


	)

35 
	#SYS_ïﬁl_¸óã
 
__NR_ïﬁl_¸óã


	)

36 
	#SYS_ïﬁl_¸óã1
 
__NR_ïﬁl_¸óã1


	)

37 
	#SYS_ïﬁl_˘l
 
__NR_ïﬁl_˘l


	)

38 
	#SYS_ïﬁl_pwaô
 
__NR_ïﬁl_pwaô


	)

39 
	#SYS_ïﬁl_waô
 
__NR_ïﬁl_waô


	)

40 
	#SYS_evítfd
 
__NR_evítfd


	)

41 
	#SYS_evítfd2
 
__NR_evítfd2


	)

42 
	#SYS_execve
 
__NR_execve


	)

43 
	#SYS_exô
 
__NR_exô


	)

44 
	#SYS_exô_group
 
__NR_exô_group


	)

45 
	#SYS_Ác˚sßt
 
__NR_Ác˚sßt


	)

46 
	#SYS_Ádvi£64
 
__NR_Ádvi£64


	)

47 
	#SYS_ÁŒoˇã
 
__NR_ÁŒoˇã


	)

48 
	#SYS_fchdú
 
__NR_fchdú


	)

49 
	#SYS_fchmod
 
__NR_fchmod


	)

50 
	#SYS_fchmod©
 
__NR_fchmod©


	)

51 
	#SYS_fchown
 
__NR_fchown


	)

52 
	#SYS_fchow«t
 
__NR_fchow«t


	)

53 
	#SYS_f˙é
 
__NR_f˙é


	)

54 
	#SYS_fd©async
 
__NR_fd©async


	)

55 
	#SYS_fgëx©å
 
__NR_fgëx©å


	)

56 
	#SYS_Êi°x©å
 
__NR_Êi°x©å


	)

57 
	#SYS_Êock
 
__NR_Êock


	)

58 
	#SYS_f‹k
 
__NR_f‹k


	)

59 
	#SYS_‰emovex©å
 
__NR_‰emovex©å


	)

60 
	#SYS_f£tx©å
 
__NR_f£tx©å


	)

61 
	#SYS_f°©
 
__NR_f°©


	)

62 
	#SYS_f°©fs
 
__NR_f°©fs


	)

63 
	#SYS_fsync
 
__NR_fsync


	)

64 
	#SYS_·runˇã
 
__NR_·runˇã


	)

65 
	#SYS_fuãx
 
__NR_fuãx


	)

66 
	#SYS_futimeßt
 
__NR_futimeßt


	)

67 
	#SYS_gë_kî√l_syms
 
__NR_gë_kî√l_syms


	)

68 
	#SYS_gë_mempﬁicy
 
__NR_gë_mempﬁicy


	)

69 
	#SYS_gë_robu°_li°
 
__NR_gë_robu°_li°


	)

70 
	#SYS_gë_thªad_¨ó
 
__NR_gë_thªad_¨ó


	)

71 
	#SYS_gëcwd
 
__NR_gëcwd


	)

72 
	#SYS_gëdíts
 
__NR_gëdíts


	)

73 
	#SYS_gëdíts64
 
__NR_gëdíts64


	)

74 
	#SYS_gëegid
 
__NR_gëegid


	)

75 
	#SYS_gëeuid
 
__NR_gëeuid


	)

76 
	#SYS_gëgid
 
__NR_gëgid


	)

77 
	#SYS_gëgroups
 
__NR_gëgroups


	)

78 
	#SYS_gëôimî
 
__NR_gëôimî


	)

79 
	#SYS_gëpgid
 
__NR_gëpgid


	)

80 
	#SYS_gëpgΩ
 
__NR_gëpgΩ


	)

81 
	#SYS_gëpid
 
__NR_gëpid


	)

82 
	#SYS_gëpmsg
 
__NR_gëpmsg


	)

83 
	#SYS_gëµid
 
__NR_gëµid


	)

84 
	#SYS_gë¥i‹ôy
 
__NR_gë¥i‹ôy


	)

85 
	#SYS_gëªsgid
 
__NR_gëªsgid


	)

86 
	#SYS_gëªsuid
 
__NR_gëªsuid


	)

87 
	#SYS_gëæimô
 
__NR_gëæimô


	)

88 
	#SYS_gërußge
 
__NR_gërußge


	)

89 
	#SYS_gësid
 
__NR_gësid


	)

90 
	#SYS_gëtid
 
__NR_gëtid


	)

91 
	#SYS_gëtimeofday
 
__NR_gëtimeofday


	)

92 
	#SYS_gëuid
 
__NR_gëuid


	)

93 
	#SYS_gëx©å
 
__NR_gëx©å


	)

94 
	#SYS_öô_moduÀ
 
__NR_öô_moduÀ


	)

95 
	#SYS_öŸify_add_w©ch
 
__NR_öŸify_add_w©ch


	)

96 
	#SYS_öŸify_öô
 
__NR_öŸify_öô


	)

97 
	#SYS_öŸify_öô1
 
__NR_öŸify_öô1


	)

98 
	#SYS_öŸify_rm_w©ch
 
__NR_öŸify_rm_w©ch


	)

99 
	#SYS_io_ˇn˚l
 
__NR_io_ˇn˚l


	)

100 
	#SYS_io_de°roy
 
__NR_io_de°roy


	)

101 
	#SYS_io_gëevíts
 
__NR_io_gëevíts


	)

102 
	#SYS_io_£tup
 
__NR_io_£tup


	)

103 
	#SYS_io_submô
 
__NR_io_submô


	)

104 
	#SYS_io˘l
 
__NR_io˘l


	)

105 
	#SYS_i›îm
 
__NR_i›îm


	)

106 
	#SYS_i›l
 
__NR_i›l


	)

107 
	#SYS_i›rio_gë
 
__NR_i›rio_gë


	)

108 
	#SYS_i›rio_£t
 
__NR_i›rio_£t


	)

109 
	#SYS_kexec_lﬂd
 
__NR_kexec_lﬂd


	)

110 
	#SYS_key˘l
 
__NR_key˘l


	)

111 
	#SYS_kûl
 
__NR_kûl


	)

112 
	#SYS_lchown
 
__NR_lchown


	)

113 
	#SYS_lgëx©å
 
__NR_lgëx©å


	)

114 
	#SYS_lök
 
__NR_lök


	)

115 
	#SYS_lök©
 
__NR_lök©


	)

116 
	#SYS_li°x©å
 
__NR_li°x©å


	)

117 
	#SYS_Œi°x©å
 
__NR_Œi°x©å


	)

118 
	#SYS_lookup_dcookõ
 
__NR_lookup_dcookõ


	)

119 
	#SYS_Ãemovex©å
 
__NR_Ãemovex©å


	)

120 
	#SYS_l£ek
 
__NR_l£ek


	)

121 
	#SYS_l£tx©å
 
__NR_l£tx©å


	)

122 
	#SYS_l°©
 
__NR_l°©


	)

123 
	#SYS_madvi£
 
__NR_madvi£


	)

124 
	#SYS_mböd
 
__NR_mböd


	)

125 
	#SYS_migøã_∑ges
 
__NR_migøã_∑ges


	)

126 
	#SYS_möc‹e
 
__NR_möc‹e


	)

127 
	#SYS_mkdú
 
__NR_mkdú


	)

128 
	#SYS_mkdú©
 
__NR_mkdú©


	)

129 
	#SYS_mknod
 
__NR_mknod


	)

130 
	#SYS_mknod©
 
__NR_mknod©


	)

131 
	#SYS_mlock
 
__NR_mlock


	)

132 
	#SYS_mlockÆl
 
__NR_mlockÆl


	)

133 
	#SYS_mm≠
 
__NR_mm≠


	)

134 
	#SYS_modify_ldt
 
__NR_modify_ldt


	)

135 
	#SYS_mou¡
 
__NR_mou¡


	)

136 
	#SYS_move_∑ges
 
__NR_move_∑ges


	)

137 
	#SYS_m¥Ÿe˘
 
__NR_m¥Ÿe˘


	)

138 
	#SYS_mq_gë£èâr
 
__NR_mq_gë£èâr


	)

139 
	#SYS_mq_nŸify
 
__NR_mq_nŸify


	)

140 
	#SYS_mq_›í
 
__NR_mq_›í


	)

141 
	#SYS_mq_timedª˚ive
 
__NR_mq_timedª˚ive


	)

142 
	#SYS_mq_timed£nd
 
__NR_mq_timed£nd


	)

143 
	#SYS_mq_u∆ök
 
__NR_mq_u∆ök


	)

144 
	#SYS_mªm≠
 
__NR_mªm≠


	)

145 
	#SYS_msync
 
__NR_msync


	)

146 
	#SYS_mu∆ock
 
__NR_mu∆ock


	)

147 
	#SYS_mu∆ockÆl
 
__NR_mu∆ockÆl


	)

148 
	#SYS_munm≠
 
__NR_munm≠


	)

149 
	#SYS_«no¶ìp
 
__NR_«no¶ìp


	)

150 
	#SYS_nfs£rv˘l
 
__NR_nfs£rv˘l


	)

151 
	#SYS_›í
 
__NR_›í


	)

152 
	#SYS_›í©
 
__NR_›í©


	)

153 
	#SYS_∑u£
 
__NR_∑u£


	)

154 
	#SYS_≥rf_evít_›í
 
__NR_≥rf_evít_›í


	)

155 
	#SYS_≥rs⁄Æôy
 
__NR_≥rs⁄Æôy


	)

156 
	#SYS_pùe
 
__NR_pùe


	)

157 
	#SYS_pùe2
 
__NR_pùe2


	)

158 
	#SYS_pivŸ_roŸ
 
__NR_pivŸ_roŸ


	)

159 
	#SYS_pﬁl
 
__NR_pﬁl


	)

160 
	#SYS_µﬁl
 
__NR_µﬁl


	)

161 
	#SYS_¥˘l
 
__NR_¥˘l


	)

162 
	#SYS_¥ód64
 
__NR_¥ód64


	)

163 
	#SYS_¥ódv
 
__NR_¥ódv


	)

164 
	#SYS_p£À˘6
 
__NR_p£À˘6


	)

165 
	#SYS_±ø˚
 
__NR_±ø˚


	)

166 
	#SYS_puçmsg
 
__NR_puçmsg


	)

167 
	#SYS_pwrôe64
 
__NR_pwrôe64


	)

168 
	#SYS_pwrôev
 
__NR_pwrôev


	)

169 
	#SYS_quîy_moduÀ
 
__NR_quîy_moduÀ


	)

170 
	#SYS_quŸa˘l
 
__NR_quŸa˘l


	)

171 
	#SYS_ªad
 
__NR_ªad


	)

172 
	#SYS_ªadahód
 
__NR_ªadahód


	)

173 
	#SYS_ªadlök
 
__NR_ªadlök


	)

174 
	#SYS_ªadlök©
 
__NR_ªadlök©


	)

175 
	#SYS_ªadv
 
__NR_ªadv


	)

176 
	#SYS_ªboŸ
 
__NR_ªboŸ


	)

177 
	#SYS_ªm≠_fûe_∑ges
 
__NR_ªm≠_fûe_∑ges


	)

178 
	#SYS_ªmovex©å
 
__NR_ªmovex©å


	)

179 
	#SYS_ª«me
 
__NR_ª«me


	)

180 
	#SYS_ª«mót
 
__NR_ª«mót


	)

181 
	#SYS_ªque°_key
 
__NR_ªque°_key


	)

182 
	#SYS_ª°¨t_sysˇŒ
 
__NR_ª°¨t_sysˇŒ


	)

183 
	#SYS_rmdú
 
__NR_rmdú


	)

184 
	#SYS_π_siga˘i⁄
 
__NR_π_siga˘i⁄


	)

185 
	#SYS_π_sig≥ndög
 
__NR_π_sig≥ndög


	)

186 
	#SYS_π_sig¥ocmask
 
__NR_π_sig¥ocmask


	)

187 
	#SYS_π_sigqueueöfo
 
__NR_π_sigqueueöfo


	)

188 
	#SYS_π_sigªtu∫
 
__NR_π_sigªtu∫


	)

189 
	#SYS_π_sigsu•íd
 
__NR_π_sigsu•íd


	)

190 
	#SYS_π_sigtimedwaô
 
__NR_π_sigtimedwaô


	)

191 
	#SYS_π_tgsigqueueöfo
 
__NR_π_tgsigqueueöfo


	)

192 
	#SYS_sched_gë_¥i‹ôy_max
 
__NR_sched_gë_¥i‹ôy_max


	)

193 
	#SYS_sched_gë_¥i‹ôy_mö
 
__NR_sched_gë_¥i‹ôy_mö


	)

194 
	#SYS_sched_gëafföôy
 
__NR_sched_gëafföôy


	)

195 
	#SYS_sched_gë∑øm
 
__NR_sched_gë∑øm


	)

196 
	#SYS_sched_gëscheduÀr
 
__NR_sched_gëscheduÀr


	)

197 
	#SYS_sched_º_gë_öãrvÆ
 
__NR_sched_º_gë_öãrvÆ


	)

198 
	#SYS_sched_£èfföôy
 
__NR_sched_£èfföôy


	)

199 
	#SYS_sched_£ç¨am
 
__NR_sched_£ç¨am


	)

200 
	#SYS_sched_£tscheduÀr
 
__NR_sched_£tscheduÀr


	)

201 
	#SYS_sched_yõld
 
__NR_sched_yõld


	)

202 
	#SYS_£À˘
 
__NR_£À˘


	)

203 
	#SYS_£ndfûe
 
__NR_£ndfûe


	)

204 
	#SYS_£t_mempﬁicy
 
__NR_£t_mempﬁicy


	)

205 
	#SYS_£t_robu°_li°
 
__NR_£t_robu°_li°


	)

206 
	#SYS_£t_thªad_¨ó
 
__NR_£t_thªad_¨ó


	)

207 
	#SYS_£t_tid_addªss
 
__NR_£t_tid_addªss


	)

208 
	#SYS_£tdomaö«me
 
__NR_£tdomaö«me


	)

209 
	#SYS_£tfsgid
 
__NR_£tfsgid


	)

210 
	#SYS_£tfsuid
 
__NR_£tfsuid


	)

211 
	#SYS_£tgid
 
__NR_£tgid


	)

212 
	#SYS_£tgroups
 
__NR_£tgroups


	)

213 
	#SYS_£tho°«me
 
__NR_£tho°«me


	)

214 
	#SYS_£tôimî
 
__NR_£tôimî


	)

215 
	#SYS_£çgid
 
__NR_£çgid


	)

216 
	#SYS_£çri‹ôy
 
__NR_£çri‹ôy


	)

217 
	#SYS_£åegid
 
__NR_£åegid


	)

218 
	#SYS_£åesgid
 
__NR_£åesgid


	)

219 
	#SYS_£åesuid
 
__NR_£åesuid


	)

220 
	#SYS_£åeuid
 
__NR_£åeuid


	)

221 
	#SYS_£ålimô
 
__NR_£ålimô


	)

222 
	#SYS_£tsid
 
__NR_£tsid


	)

223 
	#SYS_£âimeofday
 
__NR_£âimeofday


	)

224 
	#SYS_£tuid
 
__NR_£tuid


	)

225 
	#SYS_£tx©å
 
__NR_£tx©å


	)

226 
	#SYS_sigÆt°ack
 
__NR_sigÆt°ack


	)

227 
	#SYS_sig«lfd
 
__NR_sig«lfd


	)

228 
	#SYS_sig«lfd4
 
__NR_sig«lfd4


	)

229 
	#SYS_•li˚
 
__NR_•li˚


	)

230 
	#SYS_°©
 
__NR_°©


	)

231 
	#SYS_°©fs
 
__NR_°©fs


	)

232 
	#SYS_sw≠off
 
__NR_sw≠off


	)

233 
	#SYS_sw≠⁄
 
__NR_sw≠⁄


	)

234 
	#SYS_symlök
 
__NR_symlök


	)

235 
	#SYS_symlök©
 
__NR_symlök©


	)

236 
	#SYS_sync
 
__NR_sync


	)

237 
	#SYS_sync_fûe_ønge
 
__NR_sync_fûe_ønge


	)

238 
	#SYS_sysfs
 
__NR_sysfs


	)

239 
	#SYS_sysöfo
 
__NR_sysöfo


	)

240 
	#SYS_sy¶og
 
__NR_sy¶og


	)

241 
	#SYS_ãe
 
__NR_ãe


	)

242 
	#SYS_tgkûl
 
__NR_tgkûl


	)

243 
	#SYS_time
 
__NR_time


	)

244 
	#SYS_timî_¸óã
 
__NR_timî_¸óã


	)

245 
	#SYS_timî_dñëe
 
__NR_timî_dñëe


	)

246 
	#SYS_timî_gëovîrun
 
__NR_timî_gëovîrun


	)

247 
	#SYS_timî_gëtime
 
__NR_timî_gëtime


	)

248 
	#SYS_timî_£âime
 
__NR_timî_£âime


	)

249 
	#SYS_timîfd_¸óã
 
__NR_timîfd_¸óã


	)

250 
	#SYS_timîfd_gëtime
 
__NR_timîfd_gëtime


	)

251 
	#SYS_timîfd_£âime
 
__NR_timîfd_£âime


	)

252 
	#SYS_times
 
__NR_times


	)

253 
	#SYS_tkûl
 
__NR_tkûl


	)

254 
	#SYS_åunˇã
 
__NR_åunˇã


	)

255 
	#SYS_umask
 
__NR_umask


	)

256 
	#SYS_umou¡2
 
__NR_umou¡2


	)

257 
	#SYS_u«me
 
__NR_u«me


	)

258 
	#SYS_u∆ök
 
__NR_u∆ök


	)

259 
	#SYS_u∆ök©
 
__NR_u∆ök©


	)

260 
	#SYS_unsh¨e
 
__NR_unsh¨e


	)

261 
	#SYS_u£lib
 
__NR_u£lib


	)

262 
	#SYS_u°©
 
__NR_u°©


	)

263 
	#SYS_utime
 
__NR_utime


	)

264 
	#SYS_utimíßt
 
__NR_utimíßt


	)

265 
	#SYS_utimes
 
__NR_utimes


	)

266 
	#SYS_vf‹k
 
__NR_vf‹k


	)

267 
	#SYS_vh™gup
 
__NR_vh™gup


	)

268 
	#SYS_vm•li˚
 
__NR_vm•li˚


	)

269 
	#SYS_v£rvî
 
__NR_v£rvî


	)

270 
	#SYS_waô4
 
__NR_waô4


	)

271 
	#SYS_waôid
 
__NR_waôid


	)

272 
	#SYS_wrôe
 
__NR_wrôe


	)

273 
	#SYS_wrôev
 
__NR_wrôev


	)

274 #i‡
__WORDSIZE
 == 64

275 
	#SYS_ac˚±
 
__NR_ac˚±


	)

276 
	#SYS_ac˚±4
 
__NR_ac˚±4


	)

277 
	#SYS_¨ch_¥˘l
 
__NR_¨ch_¥˘l


	)

278 
	#SYS_böd
 
__NR_böd


	)

279 
	#SYS_c⁄√˘
 
__NR_c⁄√˘


	)

280 
	#SYS_ïﬁl_˘l_ﬁd
 
__NR_ïﬁl_˘l_ﬁd


	)

281 
	#SYS_ïﬁl_waô_ﬁd
 
__NR_ïﬁl_waô_ﬁd


	)

282 
	#SYS_gë≥î«me
 
__NR_gë≥î«me


	)

283 
	#SYS_gësock«me
 
__NR_gësock«me


	)

284 
	#SYS_gësock›t
 
__NR_gësock›t


	)

285 
	#SYS_li°í
 
__NR_li°í


	)

286 
	#SYS_msg˘l
 
__NR_msg˘l


	)

287 
	#SYS_msggë
 
__NR_msggë


	)

288 
	#SYS_msgrcv
 
__NR_msgrcv


	)

289 
	#SYS_msg¢d
 
__NR_msg¢d


	)

290 
	#SYS_√wf°©©
 
__NR_√wf°©©


	)

291 
	#SYS_ªcv‰om
 
__NR_ªcv‰om


	)

292 
	#SYS_ªcvmsg
 
__NR_ªcvmsg


	)

293 
	#SYS_£curôy
 
__NR_£curôy


	)

294 
	#SYS_£m˘l
 
__NR_£m˘l


	)

295 
	#SYS_£mgë
 
__NR_£mgë


	)

296 
	#SYS_£m›
 
__NR_£m›


	)

297 
	#SYS_£mtimed›
 
__NR_£mtimed›


	)

298 
	#SYS_£ndmsg
 
__NR_£ndmsg


	)

299 
	#SYS_£ndto
 
__NR_£ndto


	)

300 
	#SYS_£tsock›t
 
__NR_£tsock›t


	)

301 
	#SYS_shm©
 
__NR_shm©


	)

302 
	#SYS_shm˘l
 
__NR_shm˘l


	)

303 
	#SYS_shmdt
 
__NR_shmdt


	)

304 
	#SYS_shmgë
 
__NR_shmgë


	)

305 
	#SYS_shutdown
 
__NR_shutdown


	)

306 
	#SYS_sockë
 
__NR_sockë


	)

307 
	#SYS_sockë∑ú
 
__NR_sockë∑ú


	)

308 
	#SYS_tuxˇŒ
 
__NR_tuxˇŒ


	)

310 
	#SYS__Œ£ek
 
__NR__Œ£ek


	)

311 
	#SYS__√w£À˘
 
__NR__√w£À˘


	)

312 
	#SYS_bdÊush
 
__NR_bdÊush


	)

313 
	#SYS_bªak
 
__NR_bªak


	)

314 
	#SYS_chown32
 
__NR_chown32


	)

315 
	#SYS_Ádvi£64_64
 
__NR_Ádvi£64_64


	)

316 
	#SYS_fchown32
 
__NR_fchown32


	)

317 
	#SYS_f˙é64
 
__NR_f˙é64


	)

318 
	#SYS_f°©64
 
__NR_f°©64


	)

319 
	#SYS_f°©©64
 
__NR_f°©©64


	)

320 
	#SYS_f°©fs64
 
__NR_f°©fs64


	)

321 
	#SYS_·ime
 
__NR_·ime


	)

322 
	#SYS_·runˇã64
 
__NR_·runˇã64


	)

323 
	#SYS_gë˝u
 
__NR_gë˝u


	)

324 
	#SYS_gëegid32
 
__NR_gëegid32


	)

325 
	#SYS_gëeuid32
 
__NR_gëeuid32


	)

326 
	#SYS_gëgid32
 
__NR_gëgid32


	)

327 
	#SYS_gëgroups32
 
__NR_gëgroups32


	)

328 
	#SYS_gëªsgid32
 
__NR_gëªsgid32


	)

329 
	#SYS_gëªsuid32
 
__NR_gëªsuid32


	)

330 
	#SYS_gëuid32
 
__NR_gëuid32


	)

331 
	#SYS_gây
 
__NR_gây


	)

332 
	#SYS_idÀ
 
__NR_idÀ


	)

333 
	#SYS_ùc
 
__NR_ùc


	)

334 
	#SYS_lchown32
 
__NR_lchown32


	)

335 
	#SYS_lock
 
__NR_lock


	)

336 
	#SYS_l°©64
 
__NR_l°©64


	)

337 
	#SYS_madvi£1
 
__NR_madvi£1


	)

338 
	#SYS_mm≠2
 
__NR_mm≠2


	)

339 
	#SYS_mpx
 
__NR_mpx


	)

340 
	#SYS_ni˚
 
__NR_ni˚


	)

341 
	#SYS_ﬁdf°©
 
__NR_ﬁdf°©


	)

342 
	#SYS_ﬁdl°©
 
__NR_ﬁdl°©


	)

343 
	#SYS_ﬁdﬁdu«me
 
__NR_ﬁdﬁdu«me


	)

344 
	#SYS_ﬁd°©
 
__NR_ﬁd°©


	)

345 
	#SYS_ﬁdu«me
 
__NR_ﬁdu«me


	)

346 
	#SYS_¥of
 
__NR_¥of


	)

347 
	#SYS_¥ofû
 
__NR_¥ofû


	)

348 
	#SYS_ªaddú
 
__NR_ªaddú


	)

349 
	#SYS_£ndfûe64
 
__NR_£ndfûe64


	)

350 
	#SYS_£tfsgid32
 
__NR_£tfsgid32


	)

351 
	#SYS_£tfsuid32
 
__NR_£tfsuid32


	)

352 
	#SYS_£tgid32
 
__NR_£tgid32


	)

353 
	#SYS_£tgroups32
 
__NR_£tgroups32


	)

354 
	#SYS_£åegid32
 
__NR_£åegid32


	)

355 
	#SYS_£åesgid32
 
__NR_£åesgid32


	)

356 
	#SYS_£åesuid32
 
__NR_£åesuid32


	)

357 
	#SYS_£åeuid32
 
__NR_£åeuid32


	)

358 
	#SYS_£tuid32
 
__NR_£tuid32


	)

359 
	#SYS_sgëmask
 
__NR_sgëmask


	)

360 
	#SYS_siga˘i⁄
 
__NR_siga˘i⁄


	)

361 
	#SYS_sig«l
 
__NR_sig«l


	)

362 
	#SYS_sig≥ndög
 
__NR_sig≥ndög


	)

363 
	#SYS_sig¥ocmask
 
__NR_sig¥ocmask


	)

364 
	#SYS_sigªtu∫
 
__NR_sigªtu∫


	)

365 
	#SYS_sigsu•íd
 
__NR_sigsu•íd


	)

366 
	#SYS_sockëˇŒ
 
__NR_sockëˇŒ


	)

367 
	#SYS_s£tmask
 
__NR_s£tmask


	)

368 
	#SYS_°©64
 
__NR_°©64


	)

369 
	#SYS_°©fs64
 
__NR_°©fs64


	)

370 
	#SYS_°ime
 
__NR_°ime


	)

371 
	#SYS_°ty
 
__NR_°ty


	)

372 
	#SYS_åunˇã64
 
__NR_åunˇã64


	)

373 
	#SYS_ugëæimô
 
__NR_ugëæimô


	)

374 
	#SYS_ulimô
 
__NR_ulimô


	)

375 
	#SYS_umou¡
 
__NR_umou¡


	)

376 
	#SYS_vm86
 
__NR_vm86


	)

377 
	#SYS_vm86ﬁd
 
__NR_vm86ﬁd


	)

378 
	#SYS_waôpid
 
__NR_waôpid


	)

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

95 #unde‡
__USE_ISOC99


96 #unde‡
__USE_ISOC95


97 #unde‡
__USE_POSIX


98 #unde‡
__USE_POSIX2


99 #unde‡
__USE_POSIX199309


100 #unde‡
__USE_POSIX199506


101 #unde‡
__USE_XOPEN


102 #unde‡
__USE_XOPEN_EXTENDED


103 #unde‡
__USE_UNIX98


104 #unde‡
__USE_XOPEN2K


105 #unde‡
__USE_XOPEN2K8


106 #unde‡
__USE_LARGEFILE


107 #unde‡
__USE_LARGEFILE64


108 #unde‡
__USE_FILE_OFFSET64


109 #unde‡
__USE_BSD


110 #unde‡
__USE_SVID


111 #unde‡
__USE_MISC


112 #unde‡
__USE_ATFILE


113 #unde‡
__USE_GNU


114 #unde‡
__USE_REENTRANT


115 #unde‡
__USE_FORTIFY_LEVEL


116 #unde‡
__FAVOR_BSD


117 #unde‡
__KERNEL_STRICT_NAMES


121 #i‚de‡
_LOOSE_KERNEL_NAMES


122 
	#__KERNEL_STRICT_NAMES


	)

126 
	#__USE_ANSI
 1

	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

144 #i‡
deföed
 
_BSD_SOURCE
 && \

145 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

146 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

147 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

148 
	#__FAVOR_BSD
 1

	)

152 #ifde‡
_GNU_SOURCE


153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_POSIX_SOURCE


156 
	#_POSIX_SOURCE
 1

	)

157 #unde‡
_POSIX_C_SOURCE


158 
	#_POSIX_C_SOURCE
 200809L

	)

159 #unde‡
_XOPEN_SOURCE


160 
	#_XOPEN_SOURCE
 700

	)

161 #unde‡
_XOPEN_SOURCE_EXTENDED


162 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

163 #unde‡
_LARGEFILE64_SOURCE


164 
	#_LARGEFILE64_SOURCE
 1

	)

165 #unde‡
_BSD_SOURCE


166 
	#_BSD_SOURCE
 1

	)

167 #unde‡
_SVID_SOURCE


168 
	#_SVID_SOURCE
 1

	)

169 #unde‡
_ATFILE_SOURCE


170 
	#_ATFILE_SOURCE
 1

	)

175 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

176 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

177 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

178 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

179 
	#_BSD_SOURCE
 1

	)

180 
	#_SVID_SOURCE
 1

	)

187 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

188 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

189 
	#__USE_ISOC99
 1

	)

193 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

194 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

195 
	#__USE_ISOC95
 1

	)

200 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

201 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

202 
	#_POSIX_SOURCE
 1

	)

203 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

204 
	#_POSIX_C_SOURCE
 2

	)

205 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

206 
	#_POSIX_C_SOURCE
 199506L

	)

207 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

208 
	#_POSIX_C_SOURCE
 200112L

	)

210 
	#_POSIX_C_SOURCE
 200809L

	)

212 
	#__USE_POSIX_IMPLICITLY
 1

	)

215 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


216 
	#__USE_POSIX
 1

	)

219 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


220 
	#__USE_POSIX2
 1

	)

223 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

224 
	#__USE_POSIX199309
 1

	)

227 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

228 
	#__USE_POSIX199506
 1

	)

231 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

232 
	#__USE_XOPEN2K
 1

	)

233 #unde‡
__USE_ISOC99


234 
	#__USE_ISOC99
 1

	)

237 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

238 
	#__USE_XOPEN2K8
 1

	)

239 #unde‡
_ATFILE_SOURCE


240 
	#_ATFILE_SOURCE
 1

	)

243 #ifdef 
_XOPEN_SOURCE


244 
	#__USE_XOPEN
 1

	)

245 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

246 
	#__USE_XOPEN_EXTENDED
 1

	)

247 
	#__USE_UNIX98
 1

	)

248 #unde‡
_LARGEFILE_SOURCE


249 
	#_LARGEFILE_SOURCE
 1

	)

250 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

251 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

252 
	#__USE_XOPEN2K8
 1

	)

254 
	#__USE_XOPEN2K
 1

	)

255 #unde‡
__USE_ISOC99


256 
	#__USE_ISOC99
 1

	)

259 #ifde‡
_XOPEN_SOURCE_EXTENDED


260 
	#__USE_XOPEN_EXTENDED
 1

	)

265 #ifde‡
_LARGEFILE_SOURCE


266 
	#__USE_LARGEFILE
 1

	)

269 #ifde‡
_LARGEFILE64_SOURCE


270 
	#__USE_LARGEFILE64
 1

	)

273 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

274 
	#__USE_FILE_OFFSET64
 1

	)

277 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


278 
	#__USE_MISC
 1

	)

281 #ifdef 
_BSD_SOURCE


282 
	#__USE_BSD
 1

	)

285 #ifdef 
_SVID_SOURCE


286 
	#__USE_SVID
 1

	)

289 #ifdef 
_ATFILE_SOURCE


290 
	#__USE_ATFILE
 1

	)

293 #ifdef 
_GNU_SOURCE


294 
	#__USE_GNU
 1

	)

297 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


298 
	#__USE_REENTRANT
 1

	)

301 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

302 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

303 #i‡
_FORTIFY_SOURCE
 > 1

304 
	#__USE_FORTIFY_LEVEL
 2

	)

306 
	#__USE_FORTIFY_LEVEL
 1

	)

309 
	#__USE_FORTIFY_LEVEL
 0

	)

313 
	~<bôs/¥edefs.h
>

316 
	#__STDC_ISO_10646__
 200009L

	)

324 #unde‡
__GNU_LIBRARY__


325 
	#__GNU_LIBRARY__
 6

	)

329 
	#__GLIBC__
 2

	)

330 
	#__GLIBC_MINOR__
 11

	)

332 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

333 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

336 #i‡
deföed
 
__GNUC__
 \

337 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

338 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

339 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

340 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

344 #i‚de‡
__ASSEMBLER__


345 #i‚de‡
_SYS_CDEFS_H


346 
	~<sys/cdefs.h
>

351 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


352 
	#__USE_LARGEFILE
 1

	)

353 
	#__USE_LARGEFILE64
 1

	)

359 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

360 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

361 && 
deföed
 
	g__exã∫_ölöe


362 
	#__USE_EXTERN_INLINES
 1

	)

367 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

368 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

369 && 
deföed
 
	g__exã∫_ölöe


370 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

378 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
Ë
__THROW
;

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/gnu/option-groups.h

10 #i‚de‡
__GNU_OPTION_GROUPS_H


11 
	#__GNU_OPTION_GROUPS_H


	)

13 
	#__OPTION_EGLIBC_ADVANCED_INET6
 1

	)

14 
	#__OPTION_EGLIBC_BACKTRACE
 1

	)

15 
	#__OPTION_EGLIBC_BIG_MACROS
 1

	)

16 
	#__OPTION_EGLIBC_BSD
 1

	)

17 
	#__OPTION_EGLIBC_CATGETS
 1

	)

18 
	#__OPTION_EGLIBC_CHARSETS
 1

	)

19 
	#__OPTION_EGLIBC_CXX_TESTS
 1

	)

20 
	#__OPTION_EGLIBC_DB_ALIASES
 1

	)

21 
	#__OPTION_EGLIBC_ENVZ
 1

	)

22 
	#__OPTION_EGLIBC_FCVT
 1

	)

23 
	#__OPTION_EGLIBC_FMTMSG
 1

	)

24 
	#__OPTION_EGLIBC_FSTAB
 1

	)

25 
	#__OPTION_EGLIBC_FTRAVERSE
 1

	)

26 
	#__OPTION_EGLIBC_GETLOGIN
 1

	)

27 
	#__OPTION_EGLIBC_INET
 1

	)

28 
	#__OPTION_EGLIBC_LIBM
 1

	)

29 
	#__OPTION_EGLIBC_LOCALES
 1

	)

30 
	#__OPTION_EGLIBC_LOCALE_CODE
 1

	)

31 
	#__OPTION_EGLIBC_MEMUSAGE
 1

	)

32 
	#__OPTION_EGLIBC_NIS
 1

	)

33 
	#__OPTION_EGLIBC_NSSWITCH
 1

	)

34 
	#__OPTION_EGLIBC_RCMD
 1

	)

35 
	#__OPTION_EGLIBC_SPAWN
 1

	)

36 
	#__OPTION_EGLIBC_STREAMS
 1

	)

37 
	#__OPTION_EGLIBC_SUNRPC
 1

	)

38 
	#__OPTION_EGLIBC_UTMP
 1

	)

39 
	#__OPTION_EGLIBC_UTMPX
 1

	)

40 
	#__OPTION_EGLIBC_WORDEXP
 1

	)

41 
	#__OPTION_POSIX_C_LANG_WIDE_CHAR
 1

	)

42 
	#__OPTION_POSIX_REGEXP
 1

	)

43 
	#__OPTION_POSIX_REGEXP_GLIBC
 1

	)

44 
	#__OPTION_POSIX_WIDE_CHAR_DEVICE_IO
 1

	)

	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

446 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

447 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

448 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

449 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

450 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

451 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

452 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

453 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

454 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

457 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

458 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

460 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

461 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

462 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

468 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

469 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

471 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

472 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 #ifde‡
_IO_MTSAFE_IO


476 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

477 
	#_IO_Êockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

479 
	#_IO_fu∆ockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

482 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

483 
	#_IO_Êockfûe
(
_Â
Ë

	)

484 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

485 
	#_IO_·rylockfûe
(
_Â
Ë

	)

486 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

487 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

490 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

491 
_IO_va_li°
, *
__ª°ri˘
);

492 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

493 
_IO_va_li°
);

494 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

495 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

497 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

498 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

500 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

502 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


503 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

504 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

505 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

506 #i‡
__GNUC__
 >= 2

509 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


510 
	~<shlib-com∑t.h
>

511 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

512 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

513 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

514 c⁄° 
_IO_°dö_u£d
;

515 
wók_exã∫
 (
_IO_°dö_u£d
);

518 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


519 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

523 
	#_IO_fwide
(
__Â
, 
__mode
) \

524 ({ 
__ªsu…
 = (
__mode
); \

525 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

527 i‡((
__Â
)->
_mode
 == 0) \

529 (
__Â
)->
_mode
 = -1; \

530 
__ªsu…
 = (
__Â
)->
_mode
; \

532 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

533 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

535 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

536 
__ªsu…
; })

	)

539 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

540 
_IO_va_li°
, *
__ª°ri˘
);

541 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

542 
_IO_va_li°
);

543 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

544 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

547 #ifde‡
__LDBL_COMPAT


548 
	~<bôs/libio-ldbl.h
>

551 #ifde‡
__˝lu•lus


	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/netfilter.h

1 #i‚de‡
__LINUX_NETFILTER_H


2 
	#__LINUX_NETFILTER_H


	)

4 
	~<löux/ty≥s.h
>

8 
	#NF_DROP
 0

	)

9 
	#NF_ACCEPT
 1

	)

10 
	#NF_STOLEN
 2

	)

11 
	#NF_QUEUE
 3

	)

12 
	#NF_REPEAT
 4

	)

13 
	#NF_STOP
 5

	)

14 
	#NF_MAX_VERDICT
 
NF_STOP


	)

18 
	#NF_VERDICT_MASK
 0x0000ffff

	)

19 
	#NF_VERDICT_BITS
 16

	)

21 
	#NF_VERDICT_QMASK
 0xffff0000

	)

22 
	#NF_VERDICT_QBITS
 16

	)

24 
	#NF_QUEUE_NR
(
x
Ë((((xË<< 
NF_VERDICT_BITS
Ë& 
NF_VERDICT_QMASK
Ë| 
NF_QUEUE
)

	)

29 
	#NFC_UNKNOWN
 0x4000

	)

30 
	#NFC_ALTERED
 0x8000

	)

32 
	enf_öë_hooks
 {

33 
	mNF_INET_PRE_ROUTING
,

34 
	mNF_INET_LOCAL_IN
,

35 
	mNF_INET_FORWARD
,

36 
	mNF_INET_LOCAL_OUT
,

37 
	mNF_INET_POST_ROUTING
,

38 
	mNF_INET_NUMHOOKS


42 
	mNFPROTO_UNSPEC
 = 0,

43 
	mNFPROTO_IPV4
 = 2,

44 
	mNFPROTO_ARP
 = 3,

45 
	mNFPROTO_BRIDGE
 = 7,

46 
	mNFPROTO_IPV6
 = 10,

47 
	mNFPROTO_DECNET
 = 12,

48 
	mNFPROTO_NUMPROTO
,

51 
	unf_öë_addr
 {

52 
__u32
 
	mÆl
[4];

53 
__be32
 
	mù
;

54 
__be32
 
	mù6
[4];

55 
ö_addr
 
	mö
;

56 
ö6_addr
 
	mö6
;

	@/usr/include/linux/param.h

1 #i‚de‡
_LINUX_PARAM_H


2 
	#_LINUX_PARAM_H


	)

4 
	~<asm/∑øm.h
>

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__NFDBITS


22 
	#__NFDBITS
 (8 * ())

	)

24 #unde‡
__FD_SETSIZE


25 
	#__FD_SETSIZE
 1024

	)

27 #unde‡
__FDSET_LONGS


28 
	#__FDSET_LONGS
 (
__FD_SETSIZE
/
__NFDBITS
)

	)

30 #unde‡
__FDELT


31 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

33 #unde‡
__FDMASK


34 
	#__FDMASK
(
d
Ë(1UL << ((dË% 
__NFDBITS
))

	)

37 
	mfds_bôs
 [
__FDSET_LONGS
];

38 } 
	t__kî√l_fd_£t
;

41 (*
	t__kî√l_sigh™dÀr_t
)();

44 
	t__kî√l_key_t
;

45 
	t__kî√l_mqd_t
;

47 
	~<asm/posix_ty≥s.h
>

	@/usr/include/linux/socket.h

1 #i‚de‡
_LINUX_SOCKET_H


2 
	#_LINUX_SOCKET_H


	)

7 
	#_K_SS_MAXSIZE
 128

	)

8 
	#_K_SS_ALIGNSIZE
 (
	`__Æignof__
 (
sockaddr
 *))

	)

11 
	s__kî√l_sockaddr_°‹age
 {

12 
	mss_Ámûy
;

14 
	m__d©a
[
_K_SS_MAXSIZE
 - ()];

17 } 
__©åibuã__
 ((
Æig√d
(
_K_SS_ALIGNSIZE
)));

	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (
__c⁄°
 *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (
__c⁄°
 *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
f˘

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
f˘

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
f˘

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
¨gs

75 
	#__PMT
(
¨gs
Ë
	)
¨gs

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

185 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

186 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
˙ame

199 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

200 
	#__©åibuã__
(
xyz
Ë

	)

206 #i‡
__GNUC_PREREQ
 (2,96)

207 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

209 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (2,96)

216 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

218 
	#__©åibuã_puª__


	)

224 #i‡
__GNUC_PREREQ
 (3,1)

225 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

226 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

229 
	#__©åibuã_noölöe__


	)

233 #i‡
__GNUC_PREREQ
 (3,2)

234 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

236 
	#__©åibuã_dïªˇãd__


	)

245 #i‡
__GNUC_PREREQ
 (2,8)

246 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

248 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

255 #i‡
__GNUC_PREREQ
 (2,97)

256 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

257 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

264 #i‡
__GNUC_PREREQ
 (3,3)

265 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

267 
	#__n⁄nuŒ
(
∑øms
)

	)

272 #i‡
__GNUC_PREREQ
 (3,4)

273 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

274 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

275 #i‡
__USE_FORTIFY_LEVEL
 > 0

276 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

279 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

281 #i‚de‡
__wur


282 
	#__wur


	)

286 #i‡
__GNUC_PREREQ
 (3,2)

287 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

289 
	#__Æways_ölöe
 
__ölöe


	)

294 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

295 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


296 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

297 #i‡
__GNUC_PREREQ
 (4,3)

298 
	#__exã∫_Æways_ölöe
 \

299 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

301 
	#__exã∫_Æways_ölöe
 \

302 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

305 
	#__exã∫_ölöe
 
__ölöe


	)

306 #i‡
__GNUC_PREREQ
 (4,3)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

317 #i‡
__GNUC_PREREQ
 (4,3)

318 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

319 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

326 #i‡!
__GNUC_PREREQ
 (2,8)

327 
	#__exãnsi⁄__


	)

331 #i‡!
__GNUC_PREREQ
 (2,92)

332 
	#__ª°ri˘


	)

338 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


339 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

341 #ifde‡
__GNUC__


342 
	#__ª°ri˘_¨r


	)

344 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

345 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

348 
	#__ª°ri˘_¨r


	)

353 
	~<bôs/w‹dsize.h
>

355 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


356 
	#__LDBL_COMPAT
 1

	)

357 #ifde‡
__REDIRECT


358 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

359 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

360 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

361 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

362 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

363 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

364 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

365 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

366 
	#__LDBL_REDIR_DECL
(
«me
) \

367 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

368 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

369 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

370 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

371 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

374 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


375 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
¥Ÿo

376 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
¥Ÿo

377 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

378 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

379 
	#__LDBL_REDIR_DECL
(
«me
)

	)

380 #ifde‡
__REDIRECT


381 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

382 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

383 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/syslog.h

32 #i‚de‡
_SYS_SYSLOG_H


33 
	#_SYS_SYSLOG_H
 1

	)

35 
	~<„©uªs.h
>

36 
	#__√ed___va_li°


	)

37 
	~<°d¨g.h
>

40 
	~<bôs/sy¶og-∑th.h
>

51 
	#LOG_EMERG
 0

	)

52 
	#LOG_ALERT
 1

	)

53 
	#LOG_CRIT
 2

	)

54 
	#LOG_ERR
 3

	)

55 
	#LOG_WARNING
 4

	)

56 
	#LOG_NOTICE
 5

	)

57 
	#LOG_INFO
 6

	)

58 
	#LOG_DEBUG
 7

	)

60 
	#LOG_PRIMASK
 0x07

	)

62 
	#LOG_PRI
(
p
Ë(’Ë& 
LOG_PRIMASK
)

	)

63 
	#LOG_MAKEPRI
(
Ác
, 
¥i
Ë(((ÁcË<< 3Ë| (¥i))

	)

65 #ifde‡
SYSLOG_NAMES


66 
	#INTERNAL_NOPRI
 0x10

	)

68 
	#INTERNAL_MARK
 
	`LOG_MAKEPRI
(
LOG_NFACILITIES
, 0)

	)

69 
	s_code
 {

70 *
	mc_«me
;

71 
	mc_vÆ
;

72 } 
	tCODE
;

74 
CODE
 
	g¥i‹ôy«mes
[] =

76 { "Æît", 
LOG_ALERT
 },

77 { "¸ô", 
LOG_CRIT
 },

78 { "debug", 
LOG_DEBUG
 },

79 { "emîg", 
LOG_EMERG
 },

80 { "îr", 
LOG_ERR
 },

81 { "îr‹", 
LOG_ERR
 },

82 { "öfo", 
LOG_INFO
 },

83 { "n⁄e", 
INTERNAL_NOPRI
 },

84 { "nŸi˚", 
LOG_NOTICE
 },

85 { "∑nic", 
LOG_EMERG
 },

86 { "w¨n", 
LOG_WARNING
 },

87 { "w¨nög", 
LOG_WARNING
 },

88 { 
NULL
, -1 }

93 
	#LOG_KERN
 (0<<3Ë

	)

94 
	#LOG_USER
 (1<<3Ë

	)

95 
	#LOG_MAIL
 (2<<3Ë

	)

96 
	#LOG_DAEMON
 (3<<3Ë

	)

97 
	#LOG_AUTH
 (4<<3Ë

	)

98 
	#LOG_SYSLOG
 (5<<3Ë

	)

99 
	#LOG_LPR
 (6<<3Ë

	)

100 
	#LOG_NEWS
 (7<<3Ë

	)

101 
	#LOG_UUCP
 (8<<3Ë

	)

102 
	#LOG_CRON
 (9<<3Ë

	)

103 
	#LOG_AUTHPRIV
 (10<<3Ë

	)

104 
	#LOG_FTP
 (11<<3Ë

	)

107 
	#LOG_LOCAL0
 (16<<3Ë

	)

108 
	#LOG_LOCAL1
 (17<<3Ë

	)

109 
	#LOG_LOCAL2
 (18<<3Ë

	)

110 
	#LOG_LOCAL3
 (19<<3Ë

	)

111 
	#LOG_LOCAL4
 (20<<3Ë

	)

112 
	#LOG_LOCAL5
 (21<<3Ë

	)

113 
	#LOG_LOCAL6
 (22<<3Ë

	)

114 
	#LOG_LOCAL7
 (23<<3Ë

	)

116 
	#LOG_NFACILITIES
 24

	)

117 
	#LOG_FACMASK
 0x03f8

	)

119 
	#LOG_FAC
(
p
Ë((’Ë& 
LOG_FACMASK
Ë>> 3)

	)

121 #ifde‡
SYSLOG_NAMES


122 
CODE
 
	gÁcûôy«mes
[] =

124 { "auth", 
LOG_AUTH
 },

125 { "auth¥iv", 
LOG_AUTHPRIV
 },

126 { "¸⁄", 
LOG_CRON
 },

127 { "d´m⁄", 
LOG_DAEMON
 },

128 { "·p", 
LOG_FTP
 },

129 { "kîn", 
LOG_KERN
 },

130 { "Õr", 
LOG_LPR
 },

131 { "maû", 
LOG_MAIL
 },

132 { "m¨k", 
INTERNAL_MARK
 },

133 { "√ws", 
LOG_NEWS
 },

134 { "£curôy", 
LOG_AUTH
 },

135 { "sy¶og", 
LOG_SYSLOG
 },

136 { "u£r", 
LOG_USER
 },

137 { "uu˝", 
LOG_UUCP
 },

138 { "loˇl0", 
LOG_LOCAL0
 },

139 { "loˇl1", 
LOG_LOCAL1
 },

140 { "loˇl2", 
LOG_LOCAL2
 },

141 { "loˇl3", 
LOG_LOCAL3
 },

142 { "loˇl4", 
LOG_LOCAL4
 },

143 { "loˇl5", 
LOG_LOCAL5
 },

144 { "loˇl6", 
LOG_LOCAL6
 },

145 { "loˇl7", 
LOG_LOCAL7
 },

146 { 
NULL
, -1 }

153 
	#LOG_MASK
(
¥i
Ë(1 << (¥i)Ë

	)

154 
	#LOG_UPTO
(
¥i
Ë((1 << (’ri)+1)Ë- 1Ë

	)

162 
	#LOG_PID
 0x01

	)

163 
	#LOG_CONS
 0x02

	)

164 
	#LOG_ODELAY
 0x04

	)

165 
	#LOG_NDELAY
 0x08

	)

166 
	#LOG_NOWAIT
 0x10

	)

167 
	#LOG_PERROR
 0x20

	)

169 
__BEGIN_DECLS


175 
˛o£log
 ();

181 
›ílog
 (
__c⁄°
 *
__idít
, 
__›ti⁄
, 
__Ácûôy
);

184 
	$£éogmask
 (
__mask
Ë
__THROW
;

190 
	$sy¶og
 (
__¥i
, 
__c⁄°
 *
__fmt
, ...)

191 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

193 #ifde‡
__USE_BSD


200 
	$vsy¶og
 (
__¥i
, 
__c⁄°
 *
__fmt
, 
__gnuc_va_li°
 
__≠
)

201 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

206 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


207 
	~<bôs/sy¶og.h
>

209 #ifde‡
__LDBL_COMPAT


210 
	~<bôs/sy¶og-ldbl.h
>

213 
__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

24 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 #i‡
__WORDSIZE
 == 64

33 
	tgªg_t
;

36 
	#NGREG
 23

	)

39 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 #ifde‡
__USE_GNU


45 
	mREG_R8
 = 0,

46 
	#REG_R8
 
REG_R8


	)

47 
	mREG_R9
,

48 
	#REG_R9
 
REG_R9


	)

49 
	mREG_R10
,

50 
	#REG_R10
 
REG_R10


	)

51 
	mREG_R11
,

52 
	#REG_R11
 
REG_R11


	)

53 
	mREG_R12
,

54 
	#REG_R12
 
REG_R12


	)

55 
	mREG_R13
,

56 
	#REG_R13
 
REG_R13


	)

57 
	mREG_R14
,

58 
	#REG_R14
 
REG_R14


	)

59 
	mREG_R15
,

60 
	#REG_R15
 
REG_R15


	)

61 
	mREG_RDI
,

62 
	#REG_RDI
 
REG_RDI


	)

63 
	mREG_RSI
,

64 
	#REG_RSI
 
REG_RSI


	)

65 
	mREG_RBP
,

66 
	#REG_RBP
 
REG_RBP


	)

67 
	mREG_RBX
,

68 
	#REG_RBX
 
REG_RBX


	)

69 
	mREG_RDX
,

70 
	#REG_RDX
 
REG_RDX


	)

71 
	mREG_RAX
,

72 
	#REG_RAX
 
REG_RAX


	)

73 
	mREG_RCX
,

74 
	#REG_RCX
 
REG_RCX


	)

75 
	mREG_RSP
,

76 
	#REG_RSP
 
REG_RSP


	)

77 
	mREG_RIP
,

78 
	#REG_RIP
 
REG_RIP


	)

79 
	mREG_EFL
,

80 
	#REG_EFL
 
REG_EFL


	)

81 
	mREG_CSGSFS
,

82 
	#REG_CSGSFS
 
REG_CSGSFS


	)

83 
	mREG_ERR
,

84 
	#REG_ERR
 
REG_ERR


	)

85 
	mREG_TRAPNO
,

86 
	#REG_TRAPNO
 
REG_TRAPNO


	)

87 
	mREG_OLDMASK
,

88 
	#REG_OLDMASK
 
REG_OLDMASK


	)

89 
	mREG_CR2


90 
	#REG_CR2
 
REG_CR2


	)

94 
	s_libc_Âxªg


96 
	msignifiˇnd
[4];

97 
	mexp⁄ít
;

98 
	m∑ddög
[3];

101 
	s_libc_xmmªg


103 
__uöt32_t
 
	mñemít
[4];

106 
	s_libc_Â°©e


109 
__uöt16_t
 
	mcwd
;

110 
__uöt16_t
 
	mswd
;

111 
__uöt16_t
 
	m·w
;

112 
__uöt16_t
 
	mf›
;

113 
__uöt64_t
 
	mrù
;

114 
__uöt64_t
 
	mrdp
;

115 
__uöt32_t
 
	mmxc§
;

116 
__uöt32_t
 
	mmx¸_mask
;

117 
_libc_Âxªg
 
	m_°
[8];

118 
_libc_xmmªg
 
	m_xmm
[16];

119 
__uöt32_t
 
	m∑ddög
[24];

123 
_libc_Â°©e
 *
	tÂªg£t_t
;

128 
gªg£t_t
 
	mgªgs
;

130 
Âªg£t_t
 
	mÂªgs
;

131 
	m__ª£rved1
 [8];

132 } 
	tmc⁄ãxt_t
;

135 
	suc⁄ãxt


137 
	muc_Êags
;

138 
uc⁄ãxt
 *
	muc_lök
;

139 
°ack_t
 
	muc_°ack
;

140 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

141 
__sig£t_t
 
	muc_sigmask
;

142 
_libc_Â°©e
 
	m__Âªgs_mem
;

143 } 
	tuc⁄ãxt_t
;

148 
	tgªg_t
;

151 
	#NGREG
 19

	)

154 
gªg_t
 
	tgªg£t_t
[
NGREG
];

156 #ifde‡
__USE_GNU


160 
	mREG_GS
 = 0,

161 
	#REG_GS
 
REG_GS


	)

162 
	mREG_FS
,

163 
	#REG_FS
 
REG_FS


	)

164 
	mREG_ES
,

165 
	#REG_ES
 
REG_ES


	)

166 
	mREG_DS
,

167 
	#REG_DS
 
REG_DS


	)

168 
	mREG_EDI
,

169 
	#REG_EDI
 
REG_EDI


	)

170 
	mREG_ESI
,

171 
	#REG_ESI
 
REG_ESI


	)

172 
	mREG_EBP
,

173 
	#REG_EBP
 
REG_EBP


	)

174 
	mREG_ESP
,

175 
	#REG_ESP
 
REG_ESP


	)

176 
	mREG_EBX
,

177 
	#REG_EBX
 
REG_EBX


	)

178 
	mREG_EDX
,

179 
	#REG_EDX
 
REG_EDX


	)

180 
	mREG_ECX
,

181 
	#REG_ECX
 
REG_ECX


	)

182 
	mREG_EAX
,

183 
	#REG_EAX
 
REG_EAX


	)

184 
	mREG_TRAPNO
,

185 
	#REG_TRAPNO
 
REG_TRAPNO


	)

186 
	mREG_ERR
,

187 
	#REG_ERR
 
REG_ERR


	)

188 
	mREG_EIP
,

189 
	#REG_EIP
 
REG_EIP


	)

190 
	mREG_CS
,

191 
	#REG_CS
 
REG_CS


	)

192 
	mREG_EFL
,

193 
	#REG_EFL
 
REG_EFL


	)

194 
	mREG_UESP
,

195 
	#REG_UESP
 
REG_UESP


	)

196 
	mREG_SS


197 
	#REG_SS
 
REG_SS


	)

202 
	s_libc_Âªg


204 
	msignifiˇnd
[4];

205 
	mexp⁄ít
;

208 
	s_libc_Â°©e


210 
	mcw
;

211 
	msw
;

212 
	mèg
;

213 
	mùoff
;

214 
	mcs£l
;

215 
	md©aoff
;

216 
	md©a£l
;

217 
_libc_Âªg
 
	m_°
[8];

218 
	m°©us
;

222 
_libc_Â°©e
 *
	tÂªg£t_t
;

227 
gªg£t_t
 
	mgªgs
;

230 
Âªg£t_t
 
	mÂªgs
;

231 
	mﬁdmask
;

232 
	m¸2
;

233 } 
	tmc⁄ãxt_t
;

236 
	suc⁄ãxt


238 
	muc_Êags
;

239 
uc⁄ãxt
 *
	muc_lök
;

240 
°ack_t
 
	muc_°ack
;

241 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

242 
__sig£t_t
 
	muc_sigmask
;

243 
_libc_Â°©e
 
	m__Âªgs_mem
;

244 } 
	tuc⁄ãxt_t
;

	@/usr/include/sys/uio.h

19 #i‚de‡
_SYS_UIO_H


20 
	#_SYS_UIO_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/ty≥s.h
>

26 
	g__BEGIN_DECLS


29 
	~<bôs/uio.h
>

40 
ssize_t
 
	$ªadv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
)

41 
__wur
;

51 
ssize_t
 
	$wrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
)

52 
__wur
;

55 #ifde‡
__USE_BSD


56 #i‚de‡
__USE_FILE_OFFSET64


66 
ssize_t
 
	$¥ódv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

67 
__off_t
 
__off£t
Ë
__wur
;

78 
ssize_t
 
	$pwrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

79 
__off_t
 
__off£t
Ë
__wur
;

81 #ifde‡
__REDIRECT


82 
ssize_t
 
	`__REDIRECT
 (
¥ódv
, (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
,

83 
__cou¡
, 
__off64_t
 
__off£t
),

84 
¥ódv64
Ë
__wur
;

85 
ssize_t
 
	`__REDIRECT
 (
pwrôev
, (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
,

86 
__cou¡
, 
__off64_t
 
__off£t
),

87 
pwrôev64
Ë
__wur
;

89 
	#¥ódv
 
¥ódv64


	)

90 
	#pwrôev
 
pwrôev64


	)

94 #ifde‡
__USE_LARGEFILE64


104 
ssize_t
 
	$¥ódv64
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

105 
__off64_t
 
__off£t
Ë
__wur
;

116 
ssize_t
 
	$pwrôev64
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

117 
__off64_t
 
__off£t
Ë
__wur
;

121 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm-generic/types.h

1 #i‚de‡
_ASM_GENERIC_TYPES_H


2 
	#_ASM_GENERIC_TYPES_H


	)

7 
	~<asm-gíîic/öt-Œ64.h
>

9 #i‚de‡
__ASSEMBLY__


11 
	tumode_t
;

	@/usr/include/asm/param.h

1 
	~<asm-gíîic/∑øm.h
>

	@/usr/include/asm/posix_types.h

1 #ifde‡
__i386__


2 
	~"posix_ty≥s_32.h
"

4 
	~"posix_ty≥s_64.h
"

	@/usr/include/asm/socket.h

1 
	~<asm-gíîic/sockë.h
>

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

34 #i‚de‡
ARG_MAX


35 
	#__undef_ARG_MAX


	)

39 
	~<löux/limôs.h
>

42 #ifde‡
__undef_NR_OPEN


43 #unde‡
NR_OPEN


44 #unde‡
__undef_NR_OPEN


47 #ifde‡
__undef_LINK_MAX


48 #unde‡
LINK_MAX


49 #unde‡
__undef_LINK_MAX


52 #ifde‡
__undef_OPEN_MAX


53 #unde‡
OPEN_MAX


54 #unde‡
__undef_OPEN_MAX


57 #ifde‡
__undef_ARG_MAX


58 #unde‡
ARG_MAX


59 #unde‡
__undef_ARG_MAX


63 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

65 
	#PTHREAD_KEYS_MAX
 1024

	)

68 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

70 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

73 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

75 #unde‡
PTHREAD_THREADS_MAX


79 
	#AIO_PRIO_DELTA_MAX
 20

	)

82 
	#PTHREAD_STACK_MIN
 16384

	)

85 
	#DELAYTIMER_MAX
 2147483647

	)

88 
	#TTY_NAME_MAX
 32

	)

91 
	#LOGIN_NAME_MAX
 256

	)

94 
	#HOST_NAME_MAX
 64

	)

97 
	#MQ_PRIO_MAX
 32768

	)

100 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/predefs.h

19 #i‚de‡
_FEATURES_H


23 #i‚de‡
_PREDEFS_H


24 
	#_PREDEFS_H


	)

27 
	#__STDC_IEC_559__
 1

	)

28 
	#__STDC_IEC_559_COMPLEX__
 1

	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

31 
	#__FD_ZERO_STOS
 "°o¶"

	)

34 
	#__FD_ZERO
(
fd•
) \

36 
__d0
, 
__d1
; \

37 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

38 : "=c" (
__d0
), "=D" (
__d1
) \

39 : "a" (0), "0" ( (
fd_£t
) \

40 /  (
__fd_mask
)), \

41 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

43 } 0)

	)

49 
	#__FD_ZERO
(
£t
) \

51 
__i
; \

52 
fd_£t
 *
__¨r
 = (
£t
); \

53 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

54 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

55 } 0)

	)

59 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

60 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

61 
	#__FD_ISSET
(
d
, 
£t
) \

62 ((
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] & 
	`__FDMASK
 (d)Ë!0)

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

97 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

99 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

100 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

101 (
_Â
); \

102 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

104 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

105 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

107 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/syslog-ldbl.h

20 #i‚de‡
_SYS_SYSLOG_H


24 
	$__LDBL_REDIR_DECL
 (
sy¶og
)

26 #ifde‡
__USE_BSD


27 
	$__LDBL_REDIR_DECL
 (
vsy¶og
)

30 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


31 
	$__LDBL_REDIR_DECL
 (
__sy¶og_chk
)

33 #ifde‡
__USE_BSD


34 
	$__LDBL_REDIR_DECL
 (
__vsy¶og_chk
)

	@/usr/include/bits/syslog-path.h

20 #i‚de‡
_SYS_SYSLOG_H


24 #i‚de‡
_BITS_SYSLOG_PATH_H


25 
	#_BITS_SYSLOG_PATH_H
 1

	)

27 
	#_PATH_LOG
 "/dev/log"

	)

	@/usr/include/bits/syslog.h

20 #i‚de‡
_SYS_SYSLOG_H


25 
	$__sy¶og_chk
 (
__¥i
, 
__Êag
, 
__c⁄°
 *
__fmt
, ...)

26 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

28 #ifde‡
__va_¨g_∑ck


29 
__exã∫_Æways_ölöe
 

30 
	$sy¶og
 (
__¥i
, 
__c⁄°
 *
__fmt
, ...)

32  
	`__sy¶og_chk
 (
__¥i
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

33 
	}
}

34 #ñi‡!
deföed
 
__˝lu•lus


35 
	#sy¶og
(
¥i
, ...) \

36 
	`__sy¶og_chk
 (
¥i
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

40 #ifde‡
__USE_BSD


41 
	$__vsy¶og_chk
 (
__¥i
, 
__Êag
, 
__c⁄°
 *
__fmt
,

42 
__gnuc_va_li°
 
__≠
)

43 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

45 
__exã∫_Æways_ölöe
 

46 
	$vsy¶og
 (
__¥i
, 
__c⁄°
 *
__fmt
, 
__gnuc_va_li°
 
__≠
)

48  
	`__vsy¶og_chk
 (
__¥i
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

49 
	}
}

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

24 #ifde‡
__WCHAR_MAX__


25 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

27 
	#__WCHAR_MAX
 (2147483647)

	)

32 #ifde‡
__WCHAR_UNSIGNED__


33 
	#__WCHAR_MIN
 
L
'\0'

	)

37 #ñi‡
L
'\0' - 1 > 0

38 
	#__WCHAR_MIN
 
L
'\0'

	)

40 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/linux/byteorder/little_endian.h

1 #i‚de‡
_LINUX_BYTEORDER_LITTLE_ENDIAN_H


2 
	#_LINUX_BYTEORDER_LITTLE_ENDIAN_H


	)

4 #i‚de‡
__LITTLE_ENDIAN


5 
	#__LITTLE_ENDIAN
 1234

	)

7 #i‚de‡
__LITTLE_ENDIAN_BITFIELD


8 
	#__LITTLE_ENDIAN_BITFIELD


	)

11 
	~<löux/ty≥s.h
>

12 
	~<löux/swab.h
>

14 
	#__c⁄°™t_ht⁄l
(
x
Ë((
__be32
)
	`___c⁄°™t_swab32
((x)))

	)

15 
	#__c⁄°™t_¡ohl
(
x
Ë
	`___c⁄°™t_swab32
((
__be32
)(x))

	)

16 
	#__c⁄°™t_ht⁄s
(
x
Ë((
__be16
)
	`___c⁄°™t_swab16
((x)))

	)

17 
	#__c⁄°™t_¡ohs
(
x
Ë
	`___c⁄°™t_swab16
((
__be16
)(x))

	)

18 
	#__c⁄°™t_˝u_to_À64
(
x
Ë((
__À64
)(
__u64
)(x))

	)

19 
	#__c⁄°™t_À64_to_˝u
(
x
Ë((
__u64
)(
__À64
)(x))

	)

20 
	#__c⁄°™t_˝u_to_À32
(
x
Ë((
__À32
)(
__u32
)(x))

	)

21 
	#__c⁄°™t_À32_to_˝u
(
x
Ë((
__u32
)(
__À32
)(x))

	)

22 
	#__c⁄°™t_˝u_to_À16
(
x
Ë((
__À16
)(
__u16
)(x))

	)

23 
	#__c⁄°™t_À16_to_˝u
(
x
Ë((
__u16
)(
__À16
)(x))

	)

24 
	#__c⁄°™t_˝u_to_be64
(
x
Ë((
__be64
)
	`___c⁄°™t_swab64
((x)))

	)

25 
	#__c⁄°™t_be64_to_˝u
(
x
Ë
	`___c⁄°™t_swab64
((
__u64
)(
__be64
)(x))

	)

26 
	#__c⁄°™t_˝u_to_be32
(
x
Ë((
__be32
)
	`___c⁄°™t_swab32
((x)))

	)

27 
	#__c⁄°™t_be32_to_˝u
(
x
Ë
	`___c⁄°™t_swab32
((
__u32
)(
__be32
)(x))

	)

28 
	#__c⁄°™t_˝u_to_be16
(
x
Ë((
__be16
)
	`___c⁄°™t_swab16
((x)))

	)

29 
	#__c⁄°™t_be16_to_˝u
(
x
Ë
	`___c⁄°™t_swab16
((
__u16
)(
__be16
)(x))

	)

30 
	#__˝u_to_À64
(
x
Ë((
__À64
)(
__u64
)(x))

	)

31 
	#__À64_to_˝u
(
x
Ë((
__u64
)(
__À64
)(x))

	)

32 
	#__˝u_to_À32
(
x
Ë((
__À32
)(
__u32
)(x))

	)

33 
	#__À32_to_˝u
(
x
Ë((
__u32
)(
__À32
)(x))

	)

34 
	#__˝u_to_À16
(
x
Ë((
__À16
)(
__u16
)(x))

	)

35 
	#__À16_to_˝u
(
x
Ë((
__u16
)(
__À16
)(x))

	)

36 
	#__˝u_to_be64
(
x
Ë((
__be64
)
	`__swab64
((x)))

	)

37 
	#__be64_to_˝u
(
x
Ë
	`__swab64
((
__u64
)(
__be64
)(x))

	)

38 
	#__˝u_to_be32
(
x
Ë((
__be32
)
	`__swab32
((x)))

	)

39 
	#__be32_to_˝u
(
x
Ë
	`__swab32
((
__u32
)(
__be32
)(x))

	)

40 
	#__˝u_to_be16
(
x
Ë((
__be16
)
	`__swab16
((x)))

	)

41 
	#__be16_to_˝u
(
x
Ë
	`__swab16
((
__u16
)(
__be16
)(x))

	)

43 
__ölöe__
 
__À64
 
	$__˝u_to_À64p
(c⁄° 
__u64
 *
p
)

45  (
__À64
)*
p
;

46 
	}
}

47 
__ölöe__
 
__u64
 
	$__À64_to_˝up
(c⁄° 
__À64
 *
p
)

49  (
__u64
)*
p
;

50 
	}
}

51 
__ölöe__
 
__À32
 
	$__˝u_to_À32p
(c⁄° 
__u32
 *
p
)

53  (
__À32
)*
p
;

54 
	}
}

55 
__ölöe__
 
__u32
 
	$__À32_to_˝up
(c⁄° 
__À32
 *
p
)

57  (
__u32
)*
p
;

58 
	}
}

59 
__ölöe__
 
__À16
 
	$__˝u_to_À16p
(c⁄° 
__u16
 *
p
)

61  (
__À16
)*
p
;

62 
	}
}

63 
__ölöe__
 
__u16
 
	$__À16_to_˝up
(c⁄° 
__À16
 *
p
)

65  (
__u16
)*
p
;

66 
	}
}

67 
__ölöe__
 
__be64
 
	$__˝u_to_be64p
(c⁄° 
__u64
 *
p
)

69  (
__be64
)
	`__swab64p
(
p
);

70 
	}
}

71 
__ölöe__
 
__u64
 
	$__be64_to_˝up
(c⁄° 
__be64
 *
p
)

73  
	`__swab64p
((
__u64
 *)
p
);

74 
	}
}

75 
__ölöe__
 
__be32
 
	$__˝u_to_be32p
(c⁄° 
__u32
 *
p
)

77  (
__be32
)
	`__swab32p
(
p
);

78 
	}
}

79 
__ölöe__
 
__u32
 
	$__be32_to_˝up
(c⁄° 
__be32
 *
p
)

81  
	`__swab32p
((
__u32
 *)
p
);

82 
	}
}

83 
__ölöe__
 
__be16
 
	$__˝u_to_be16p
(c⁄° 
__u16
 *
p
)

85  (
__be16
)
	`__swab16p
(
p
);

86 
	}
}

87 
__ölöe__
 
__u16
 
	$__be16_to_˝up
(c⁄° 
__be16
 *
p
)

89  
	`__swab16p
((
__u16
 *)
p
);

90 
	}
}

91 
	#__˝u_to_À64s
(
x
Ëdÿ{ ()(x); } 0)

	)

92 
	#__À64_to_˝us
(
x
Ëdÿ{ ()(x); } 0)

	)

93 
	#__˝u_to_À32s
(
x
Ëdÿ{ ()(x); } 0)

	)

94 
	#__À32_to_˝us
(
x
Ëdÿ{ ()(x); } 0)

	)

95 
	#__˝u_to_À16s
(
x
Ëdÿ{ ()(x); } 0)

	)

96 
	#__À16_to_˝us
(
x
Ëdÿ{ ()(x); } 0)

	)

97 
	#__˝u_to_be64s
(
x
Ë
	`__swab64s
((x))

	)

98 
	#__be64_to_˝us
(
x
Ë
	`__swab64s
((x))

	)

99 
	#__˝u_to_be32s
(
x
Ë
	`__swab32s
((x))

	)

100 
	#__be32_to_˝us
(
x
Ë
	`__swab32s
((x))

	)

101 
	#__˝u_to_be16s
(
x
Ë
	`__swab16s
((x))

	)

102 
	#__be16_to_˝us
(
x
Ë
	`__swab16s
((x))

	)

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/linux/stddef.h

1 #i‚de‡
_LINUX_STDDEF_H


2 
	#_LINUX_STDDEF_H


	)

6 #unde‡
NULL


7 #i‡
deföed
(
__˝lu•lus
)

8 
	#NULL
 0

	)

10 
	#NULL
 ((*)0)

	)

	@/usr/include/asm-generic/int-ll64.h

8 #i‚de‡
_ASM_GENERIC_INT_LL64_H


9 
	#_ASM_GENERIC_INT_LL64_H


	)

11 
	~<asm/bô•îl⁄g.h
>

13 #i‚de‡
__ASSEMBLY__


19 
__sig√d__
 
	t__s8
;

20 
	t__u8
;

22 
__sig√d__
 
	t__s16
;

23 
	t__u16
;

25 
__sig√d__
 
	t__s32
;

26 
	t__u32
;

28 #ifde‡
__GNUC__


29 
__exãnsi⁄__
 
__sig√d__
 
	t__s64
;

30 
__exãnsi⁄__
 
	t__u64
;

32 
__sig√d__
 
	t__s64
;

33 
	t__u64
;

	@/usr/include/asm-generic/param.h

1 #i‚de‡
__ASM_GENERIC_PARAM_H


2 
	#__ASM_GENERIC_PARAM_H


	)

5 #i‚de‡
HZ


6 
	#HZ
 100

	)

9 #i‚de‡
EXEC_PAGESIZE


10 
	#EXEC_PAGESIZE
 4096

	)

13 #i‚de‡
NOGROUP


14 
	#NOGROUP
 (-1)

	)

17 
	#MAXHOSTNAMELEN
 64

	)

	@/usr/include/asm-generic/socket.h

1 #i‚de‡
__ASM_GENERIC_SOCKET_H


2 
	#__ASM_GENERIC_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

27 #i‚de‡
SO_PASSCRED


28 
	#SO_PASSCRED
 16

	)

29 
	#SO_PEERCRED
 17

	)

30 
	#SO_RCVLOWAT
 18

	)

31 
	#SO_SNDLOWAT
 19

	)

32 
	#SO_RCVTIMEO
 20

	)

33 
	#SO_SNDTIMEO
 21

	)

37 
	#SO_SECURITY_AUTHENTICATION
 22

	)

38 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

39 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

41 
	#SO_BINDTODEVICE
 25

	)

44 
	#SO_ATTACH_FILTER
 26

	)

45 
	#SO_DETACH_FILTER
 27

	)

47 
	#SO_PEERNAME
 28

	)

48 
	#SO_TIMESTAMP
 29

	)

49 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

51 
	#SO_ACCEPTCONN
 30

	)

53 
	#SO_PEERSEC
 31

	)

54 
	#SO_PASSSEC
 34

	)

55 
	#SO_TIMESTAMPNS
 35

	)

56 
	#SCM_TIMESTAMPNS
 
SO_TIMESTAMPNS


	)

58 
	#SO_MARK
 36

	)

60 
	#SO_TIMESTAMPING
 37

	)

61 
	#SCM_TIMESTAMPING
 
SO_TIMESTAMPING


	)

63 
	#SO_PROTOCOL
 38

	)

64 
	#SO_DOMAIN
 39

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

38 
	~<î∫o.h
>

39 
	~<gnu/›ti⁄-groups.h
>

43 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


44 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


45 
±hªad_muãx_t
 
	t__libc_lock_t
;

46 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

48 
	t__libc_lock_t
;

49 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

51 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

52 #ifde‡
__USE_UNIX98


53 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

55 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

58 
__libc_lock_›aque__
 
	t__libc_lock_t
;

59 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

60 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

64 
±hªad_key_t
 
	t__libc_key_t
;

73 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_lock_t
 
NAME
;

	)

75 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

77 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

79 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

80 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

91 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

92 #i‡
LLL_LOCK_INITIALIZER
 == 0

93 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

94 
CLASS
 
__libc_lock_t
 
NAME
;

	)

96 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

97 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

100 #i‡
__LT_SPINLOCK_INIT
 == 0

101 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

102 
CLASS
 
__libc_lock_t
 
NAME
;

	)

104 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

105 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

109 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

110 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

114 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

115 #i‡
LLL_LOCK_INITIALIZER
 == 0

116 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

117 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

119 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

120 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

122 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

123 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

125 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

126 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

127 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

128 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

131 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

132 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

133 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

134 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

136 
	#__πld_lock_öôülize
(
NAME
) \

137 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

144 #ifde‡
__PIC__


145 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

146 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

147 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

149 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

150 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

154 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


155 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

156 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

157 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

158 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

159 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

161 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

162 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

163 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

164 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

165 
FUNC
 
ARGS


	)

171 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

172 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

174 
	#__libc_lock_öô
(
NAME
) \

175 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

177 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


180 
	#__libc_rwlock_öô
(
NAME
) \

181 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

183 
	#__libc_rwlock_öô
(
NAME
) \

184 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

188 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

189 
	#__libc_lock_öô_ªcursive
(
NAME
) \

190 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

192 
	#__libc_lock_öô_ªcursive
(
NAME
) \

194 i‡(
__±hªad_muãx_öô
 !
NULL
) \

196 
±hªad_muãx©å_t
 
__©å
; \

197 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

198 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

199 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

200 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

202 } 0)

	)

205 
	#__πld_lock_öô_ªcursive
(
NAME
) \

207 i‡(
__±hªad_muãx_öô
 !
NULL
) \

209 
±hªad_muãx©å_t
 
__©å
; \

210 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

211 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

212 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

213 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

215 } 0)

	)

220 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

221 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

223 
	#__libc_lock_föi
(
NAME
) \

224 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

226 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


227 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

229 
	#__libc_rwlock_föi
(
NAME
) \

230 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

234 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

235 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

237 
	#__libc_lock_föi_ªcursive
(
NAME
) \

238 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

242 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

243 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

247 
__libc_lock_lock_‚
 (
__libc_lock_t
 *);

248 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_‚
);

250 #i‡
__OPTION_EGLIBC_BIG_MACROS


251 
	#__libc_lock_lock
(
NAME
) \

252 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

254 
	#__libc_lock_lock
(
NAME
) \

255 
	`__libc_lock_lock_‚
 (&(
NAME
))

	)

258 
	#__libc_lock_lock
(
NAME
) \

259 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

261 
	#__libc_rwlock_rdlock
(
NAME
) \

262 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

263 
	#__libc_rwlock_wæock
(
NAME
) \

264 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

267 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

268 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

272 
__libc_lock_lock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

273 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_ªcursive_‚
);

275 #i‡
__OPTION_EGLIBC_BIG_MACROS


276 
	#__libc_lock_lock_ªcursive
(
NAME
) \

278 *
£lf
 = 
THREAD_SELF
; \

279 i‡((
NAME
).
ow√r
 !
£lf
) \

281 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

282 (
NAME
).
ow√r
 = 
£lf
; \

284 ++(
NAME
).
˙t
; \

285 } 0)

	)

287 
	#__libc_lock_lock_ªcursive
(
NAME
) \

288 
	`__libc_lock_lock_ªcursive_‚
 (&(
NAME
))

	)

291 
	#__libc_lock_lock_ªcursive
(
NAME
) \

292 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

296 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

297 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

301 
__libc_lock_åylock_‚
 (
__libc_lock_t
 *);

302 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_‚
);

304 #i‡
__OPTION_EGLIBC_BIG_MACROS


305 
	#__libc_lock_åylock
(
NAME
) \

306 
	`Œl_åylock
 (
NAME
)

	)

308 
	#__libc_lock_åylock
(
NAME
) \

309 
	`__libc_lock_åylock_‚
 (&(
NAME
))

	)

312 
	#__libc_lock_åylock
(
NAME
) \

313 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

315 
	#__libc_rwlock_åyrdlock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

317 
	#__libc_rwlock_åywæock
(
NAME
) \

318 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

321 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

322 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

326 
__libc_lock_åylock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

327 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_ªcursive_‚
);

329 #i‡
__OPTION_EGLIBC_BIG_MACROS


330 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

332 
ªsu…
 = 0; \

333 *
£lf
 = 
THREAD_SELF
; \

334 i‡((
NAME
).
ow√r
 !
£lf
) \

336 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

338 (
NAME
).
ow√r
 = 
£lf
; \

339 (
NAME
).
˙t
 = 1; \

342 
ªsu…
 = 
EBUSY
; \

345 ++(
NAME
).
˙t
; \

346 
ªsu…
; \

347 })

	)

349 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

350 
	`__libc_lock_åylock_ªcursive_‚
 (&(
NAME
))

	)

353 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

357 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

358 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

361 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

362 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

366 
__libc_lock_u∆ock_‚
 (
__libc_lock_t
 *);

367 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_‚
);

369 #i‡
__OPTION_EGLIBC_BIG_MACROS


370 
	#__libc_lock_u∆ock
(
NAME
) \

371 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

373 
	#__libc_lock_u∆ock
(
NAME
) \

374 
	`__libc_lock_u∆ock_‚
 (&(
NAME
))

	)

377 
	#__libc_lock_u∆ock
(
NAME
) \

378 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

380 
	#__libc_rwlock_u∆ock
(
NAME
) \

381 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

384 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

385 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

389 
__libc_lock_u∆ock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

390 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_ªcursive_‚
);

392 #i‡
__OPTION_EGLIBC_BIG_MACROS


394 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

396 i‡(--(
NAME
).
˙t
 == 0) \

398 (
NAME
).
ow√r
 = 
NULL
; \

399 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

401 } 0)

	)

403 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

404 
	`__libc_lock_u∆ock_ªcursive_‚
 (&(
NAME
))

	)

407 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

408 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

411 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


412 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

413 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

415 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

416 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

418 
	#__πld_lock_lock_ªcursive
(
NAME
) \

419 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

421 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

422 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

424 
	#__πld_lock_lock_ªcursive
(
NAME
) \

425 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

427 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

428 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

432 #i‡
PTHREAD_ONCE_INIT
 == 0

435 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

436 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

438 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

439 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

443 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

445 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

446 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

447 
INIT_FUNCTION
)); \

448 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

449 
	`INIT_FUNCTION
 (); \

450 (
ONCE_CONTROL
) |= 2; \

452 } 0)

	)

459 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

460 (*
routöe
Ë(*), *
¨g
);

461 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

462 
execuã
);

463 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

464 (*
routöe
Ë(*), *
¨g
);

465 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

466 
execuã
);

469 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

470 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

471 
_avaû
; \

472 i‡(
DOIT
) { \

473 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

474 i‡(
_avaû
) { \

475 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

476 
ARG
)); \

478 
_buf„r
.
__routöe
 = (
FCT
); \

479 
_buf„r
.
__¨g
 = (
ARG
); \

482 
_avaû
 = 0; \

483 }

	)

486 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

487 i‡(
_avaû
) { \

488 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

489 } i‡(
DOIT
) \

490 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

491 
	}

	)
}

494 
	#__libc_˛ónup_íd
(
DOIT
) \

495 i‡(
_avaû
) { \

496 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

497 } i‡(
DOIT
) \

498 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

502 
__exã∫_ölöe
 

503 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

505 i‡(
f
->
__do_ô
)

506 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

507 
	}
}

509 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

511 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

512 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

513 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

514 .
__do_ô
 = 1 };

	)

516 
	#__libc_˛ónup_p›
(
execuã
) \

517 
__˛‰ame
.
__do_ô
 = (
execuã
); \

518 } 0)

	)

522 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

523 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

526 
	#__libc_gë•ecific
(
KEY
) \

527 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

530 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

531 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

537 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

538 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

539 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

540 (*
__∑ª¡
) (),

541 (*
__chûd
) (),

542 *
__dso_h™dÀ
);

547 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

548 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

550 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

552 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

554 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

556 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

558 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

560 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

562 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

563 
__köd
);

565 #ifde‡
__USE_UNIX98


566 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

567 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

569 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

571 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

573 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

575 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

577 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

579 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

582 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

583 (*
__de°r_fun˘i⁄
) (*));

585 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

586 
__c⁄°
 *
__poöãr
);

588 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

590 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

591 (*
__öô_routöe
) ());

593 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

594 (*
__∑ª¡
) (),

595 (*
__chûd
) ());

601 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


602 #ifde‡
wók_exã∫


603 #i‡
_LIBC


604 
	~<bp-sym.h
>

606 
	#BP_SYM
(
sym
Ë
	)
sym

608 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

609 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

610 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

611 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

612 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

613 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

614 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

615 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

616 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

617 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

618 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

619 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

620 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

621 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

622 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

623 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

624 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

625 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

626 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

627 
	$wók_exã∫
 (
__±hªad_öôülize
)

628 
	$wók_exã∫
 (
__±hªad_©f‹k
)

629 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

630 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

631 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

633 #¥agm®
wók
 
__±hªad_muãx_öô


634 #¥agm®
wók
 
__±hªad_muãx_de°roy


635 #¥agm®
wók
 
__±hªad_muãx_lock


636 #¥agm®
wók
 
__±hªad_muãx_åylock


637 #¥agm®
wók
 
__±hªad_muãx_u∆ock


638 #¥agm®
wók
 
__±hªad_muãx©å_öô


639 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


640 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


641 #¥agm®
wók
 
__±hªad_rwlock_de°roy


642 #¥agm®
wók
 
__±hªad_rwlock_rdlock


643 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


644 #¥agm®
wók
 
__±hªad_rwlock_wæock


645 #¥agm®
wók
 
__±hªad_rwlock_åywæock


646 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


647 #¥agm®
wók
 
__±hªad_key_¸óã


648 #¥agm®
wók
 
__±hªad_£t•ecific


649 #¥agm®
wók
 
__±hªad_gë•ecific


650 #¥agm®
wók
 
__±hªad_⁄˚


651 #¥agm®
wók
 
__±hªad_öôülize


652 #¥agm®
wók
 
__±hªad_©f‹k


653 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


654 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


655 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/linux/swab.h

1 #i‚de‡
_LINUX_SWAB_H


2 
	#_LINUX_SWAB_H


	)

4 
	~<löux/ty≥s.h
>

6 
	~<asm/swab.h
>

12 
	#___c⁄°™t_swab16
(
x
Ë((
__u16
)( \

13 (((
__u16
)(
x
) & (__u16)0x00ffU) << 8) | \

14 (((
__u16
)(
x
Ë& (__u16)0xff00UË>> 8)))

	)

16 
	#___c⁄°™t_swab32
(
x
Ë((
__u32
)( \

17 (((
__u32
)(
x
) & (__u32)0x000000ffUL) << 24) | \

18 (((
__u32
)(
x
) & (__u32)0x0000ff00UL) << 8) | \

19 (((
__u32
)(
x
) & (__u32)0x00ff0000UL) >> 8) | \

20 (((
__u32
)(
x
Ë& (__u32)0xff000000ULË>> 24)))

	)

22 
	#___c⁄°™t_swab64
(
x
Ë((
__u64
)( \

23 (((
__u64
)(
x
) & (__u64)0x00000000000000ffULL) << 56) | \

24 (((
__u64
)(
x
) & (__u64)0x000000000000ff00ULL) << 40) | \

25 (((
__u64
)(
x
) & (__u64)0x0000000000ff0000ULL) << 24) | \

26 (((
__u64
)(
x
) & (__u64)0x00000000ff000000ULL) << 8) | \

27 (((
__u64
)(
x
) & (__u64)0x000000ff00000000ULL) >> 8) | \

28 (((
__u64
)(
x
) & (__u64)0x0000ff0000000000ULL) >> 24) | \

29 (((
__u64
)(
x
) & (__u64)0x00ff000000000000ULL) >> 40) | \

30 (((
__u64
)(
x
Ë& (__u64)0xff00000000000000ULLË>> 56)))

	)

32 
	#___c⁄°™t_swahw32
(
x
Ë((
__u32
)( \

33 (((
__u32
)(
x
) & (__u32)0x0000ffffUL) << 16) | \

34 (((
__u32
)(
x
Ë& (__u32)0xffff0000ULË>> 16)))

	)

36 
	#___c⁄°™t_swahb32
(
x
Ë((
__u32
)( \

37 (((
__u32
)(
x
) & (__u32)0x00ff00ffUL) << 8) | \

38 (((
__u32
)(
x
Ë& (__u32)0xff00ff00ULË>> 8)))

	)

46 
__ölöe__
 
__u16
 
	$__fswab16
(
__u16
 
vÆ
)

48 #ifde‡
__¨ch_swab16


49  
	`__¨ch_swab16
(
vÆ
);

51  
	`___c⁄°™t_swab16
(
vÆ
);

53 
	}
}

55 
__ölöe__
 
__u32
 
	$__fswab32
(
__u32
 
vÆ
)

57 #ifde‡
__¨ch_swab32


58  
	`__¨ch_swab32
(
vÆ
);

60  
	`___c⁄°™t_swab32
(
vÆ
);

62 
	}
}

64 
__ölöe__
 
__u64
 
	$__fswab64
(
__u64
 
vÆ
)

66 #ifde‡
__¨ch_swab64


67  
	`__¨ch_swab64
(
vÆ
);

68 #ñi‡
	`deföed
(
__SWAB_64_THRU_32__
)

69 
__u32
 
h
 = 
vÆ
 >> 32;

70 
__u32
 
l
 = 
vÆ
 & ((1ULL << 32) - 1);

71  (((
__u64
)
	`__fswab32
(
l
)Ë<< 32Ë| ((__u64)(__fswab32(
h
)));

73  
	`___c⁄°™t_swab64
(
vÆ
);

75 
	}
}

77 
__ölöe__
 
__u32
 
	$__fswahw32
(
__u32
 
vÆ
)

79 #ifde‡
__¨ch_swahw32


80  
	`__¨ch_swahw32
(
vÆ
);

82  
	`___c⁄°™t_swahw32
(
vÆ
);

84 
	}
}

86 
__ölöe__
 
__u32
 
	$__fswahb32
(
__u32
 
vÆ
)

88 #ifde‡
__¨ch_swahb32


89  
	`__¨ch_swahb32
(
vÆ
);

91  
	`___c⁄°™t_swahb32
(
vÆ
);

93 
	}
}

99 
	#__swab16
(
x
) \

100 (
	`__buûtö_c⁄°™t_p
((
__u16
)(
x
)) ? \

101 
	`___c⁄°™t_swab16
(
x
) : \

102 
	`__fswab16
(
x
))

	)

108 
	#__swab32
(
x
) \

109 (
	`__buûtö_c⁄°™t_p
((
__u32
)(
x
)) ? \

110 
	`___c⁄°™t_swab32
(
x
) : \

111 
	`__fswab32
(
x
))

	)

117 
	#__swab64
(
x
) \

118 (
	`__buûtö_c⁄°™t_p
((
__u64
)(
x
)) ? \

119 
	`___c⁄°™t_swab64
(
x
) : \

120 
	`__fswab64
(
x
))

	)

128 
	#__swahw32
(
x
) \

129 (
	`__buûtö_c⁄°™t_p
((
__u32
)(
x
)) ? \

130 
	`___c⁄°™t_swahw32
(
x
) : \

131 
	`__fswahw32
(
x
))

	)

139 
	#__swahb32
(
x
) \

140 (
	`__buûtö_c⁄°™t_p
((
__u32
)(
x
)) ? \

141 
	`___c⁄°™t_swahb32
(
x
) : \

142 
	`__fswahb32
(
x
))

	)

148 
__ölöe__
 
__u16
 
	$__swab16p
(c⁄° 
__u16
 *
p
)

150 #ifde‡
__¨ch_swab16p


151  
	`__¨ch_swab16p
(
p
);

153  
	`__swab16
(*
p
);

155 
	}
}

161 
__ölöe__
 
__u32
 
	$__swab32p
(c⁄° 
__u32
 *
p
)

163 #ifde‡
__¨ch_swab32p


164  
	`__¨ch_swab32p
(
p
);

166  
	`__swab32
(*
p
);

168 
	}
}

174 
__ölöe__
 
__u64
 
	$__swab64p
(c⁄° 
__u64
 *
p
)

176 #ifde‡
__¨ch_swab64p


177  
	`__¨ch_swab64p
(
p
);

179  
	`__swab64
(*
p
);

181 
	}
}

189 
__ölöe__
 
__u32
 
	$__swahw32p
(c⁄° 
__u32
 *
p
)

191 #ifde‡
__¨ch_swahw32p


192  
	`__¨ch_swahw32p
(
p
);

194  
	`__swahw32
(*
p
);

196 
	}
}

204 
__ölöe__
 
__u32
 
	$__swahb32p
(c⁄° 
__u32
 *
p
)

206 #ifde‡
__¨ch_swahb32p


207  
	`__¨ch_swahb32p
(
p
);

209  
	`__swahb32
(*
p
);

211 
	}
}

217 
__ölöe__
 
	$__swab16s
(
__u16
 *
p
)

219 #ifde‡
__¨ch_swab16s


220 
	`__¨ch_swab16s
(
p
);

222 *
p
 = 
	`__swab16p
(p);

224 
	}
}

229 
__ölöe__
 
	$__swab32s
(
__u32
 *
p
)

231 #ifde‡
__¨ch_swab32s


232 
	`__¨ch_swab32s
(
p
);

234 *
p
 = 
	`__swab32p
(p);

236 
	}
}

242 
__ölöe__
 
	$__swab64s
(
__u64
 *
p
)

244 #ifde‡
__¨ch_swab64s


245 
	`__¨ch_swab64s
(
p
);

247 *
p
 = 
	`__swab64p
(p);

249 
	}
}

257 
__ölöe__
 
	$__swahw32s
(
__u32
 *
p
)

259 #ifde‡
__¨ch_swahw32s


260 
	`__¨ch_swahw32s
(
p
);

262 *
p
 = 
	`__swahw32p
(p);

264 
	}
}

272 
__ölöe__
 
	$__swahb32s
(
__u32
 *
p
)

274 #ifde‡
__¨ch_swahb32s


275 
	`__¨ch_swahb32s
(
p
);

277 *
p
 = 
	`__swahb32p
(p);

279 
	}
}

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

55 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

56 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

61 #i‚de‡
_WINT_T


66 
	#_WINT_T


	)

67 
	twöt_t
;

71 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

72 && 
deföed
 
__WINT_TYPE__


73 
__BEGIN_NAMESPACE_STD


74 
__WINT_TYPE__
 
	twöt_t
;

75 
	g__END_NAMESPACE_STD


80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

323 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

327 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

328 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

332 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

333 
__THROW
;

336 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifde‡
__USE_GNU


342 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

343 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

344 
__THROW
;

348 
__BEGIN_NAMESPACE_STD


351 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

355 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

359 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

363 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

364 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

365 
mb°©e_t
 *
__p
Ë
__THROW
;

368 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

369 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

372 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

373 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
__END_NAMESPACE_STD


378 #ifde‡
__USE_EXTERN_INLINES


384 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

385 
__exã∫_ölöe
 
wöt_t


386 
	`__NTH
 (
	$btowc
 (
__c
))

387 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

388 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

390 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

391 
__exã∫_ölöe
 

392 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

393 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

394 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

396 
__exã∫_ölöe
 
size_t


397 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

398 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

399 {  (
__ps
 !
NULL


400 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

403 
__BEGIN_NAMESPACE_STD


406 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

407 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

408 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

412 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

413 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

414 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

415 
__END_NAMESPACE_STD


418 #ifdef 
__USE_XOPEN2K8


421 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

422 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

423 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

427 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

428 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

429 
size_t
 
__nwc
, size_à
__Àn
,

430 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

435 #ifde‡
__USE_XOPEN


437 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

441 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

445 
__BEGIN_NAMESPACE_STD


448 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

449 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

450 
__END_NAMESPACE_STD


452 #ifde‡
__USE_ISOC99


453 
__BEGIN_NAMESPACE_C99


455 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

456 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

457 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
__END_NAMESPACE_C99


463 
__BEGIN_NAMESPACE_STD


466 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

467 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

471 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

473 
__THROW
;

474 
__END_NAMESPACE_STD


476 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

477 
__BEGIN_NAMESPACE_C99


480 
__exãnsi⁄__


481 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

483 
__THROW
;

487 
__exãnsi⁄__


488 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

489 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

490 
__ba£
Ë
__THROW
;

491 
__END_NAMESPACE_C99


494 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


497 
__exãnsi⁄__


498 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

499 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

500 
__THROW
;

504 
__exãnsi⁄__


505 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

507 
__ba£
Ë
__THROW
;

510 #ifde‡
__USE_GNU


524 
	~<xloˇÀ.h
>

528 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

529 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

530 
__loˇÀ_t
 
__loc
Ë
__THROW
;

532 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

534 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

536 
__exãnsi⁄__


537 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
)

545 
__THROW
;

547 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
;

551 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

552 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
;

555 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

556 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

557 
__loˇÀ_t
 
__loc
Ë
__THROW
;

561 #ifdef 
__USE_XOPEN2K8


564 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

569 
__THROW
;

575 #ifdef 
__USE_XOPEN2K8


578 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

581 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


582 
__BEGIN_NAMESPACE_STD


585 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

592 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

599 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

602 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

603 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
__THROW
 ;

610 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

612 
__gnuc_va_li°
 
__¨g
)

618 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

619 
__gnuc_va_li°
 
__¨g
)

623 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

624 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

625 
__gnuc_va_li°
 
__¨g
)

626 
__THROW
 ;

633 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

634 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

640 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

643 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

644 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
__THROW
 ;

647 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

648 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

649 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

650 #ifde‡
__REDIRECT


654 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

655 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

656 
__isoc99_fwsˇnf
)

658 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

659 
__isoc99_wsˇnf
)

661 
	`__REDIRECT
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

662 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

663 
__isoc99_swsˇnf
)

664 
__THROW
 ;

666 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

667 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

669 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

671 
__THROW
;

672 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

673 
	#wsˇnf
 
__isoc99_wsˇnf


	)

674 
	#swsˇnf
 
__isoc99_swsˇnf


	)

678 
__END_NAMESPACE_STD


681 #ifde‡
__USE_ISOC99


682 
__BEGIN_NAMESPACE_C99


687 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

688 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

689 
__gnuc_va_li°
 
__¨g
)

695 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

696 
__gnuc_va_li°
 
__¨g
)

699 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

700 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

702 
__THROW
 ;

704 #i‡!
deföed
 
__USE_GNU
 \

705 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

706 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

707 #ifde‡
__REDIRECT


708 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

709 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

710 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

712 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

713 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

715 
	`__REDIRECT
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

716 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

717 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

718 
__THROW
 ;

720 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

721 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
);

723 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

726 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

728 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

729 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

730 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

734 
__END_NAMESPACE_C99


738 
__BEGIN_NAMESPACE_STD


743 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

744 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

750 
wöt_t
 
	`gëwch¨
 ();

757 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

758 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

764 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

772 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

773 
__FILE
 *
__ª°ri˘
 
__°ªam
);

779 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

780 
__FILE
 *
__ª°ri˘
 
__°ªam
);

787 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

788 
__END_NAMESPACE_STD


791 #ifde‡
__USE_GNU


799 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

800 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

808 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

816 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

826 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

835 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

836 
__FILE
 *
__ª°ri˘
 
__°ªam
);

844 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

845 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
__BEGIN_NAMESPACE_C99


853 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

854 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

855 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

856 
__END_NAMESPACE_C99


858 #ifde‡
__USE_GNU


859 
	~<xloˇÀ.h
>

863 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

864 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

865 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

866 
__loˇÀ_t
 
__loc
Ë
__THROW
;

875 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


876 
	#__√ed_iswxxx


	)

877 
	~<w˘y≥.h
>

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/wch¨2.h
>

885 #ifde‡
__LDBL_COMPAT


886 
	~<bôs/wch¨-ldbl.h
>

889 
__END_DECLS


897 #unde‡
__√ed_mb°©e_t


898 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

	@/usr/include/asm/bitsperlong.h

1 #i‚de‡
__ASM_X86_BITSPERLONG_H


2 
	#__ASM_X86_BITSPERLONG_H


	)

4 #ifde‡
__x86_64__


5 
	#__BITS_PER_LONG
 64

	)

7 
	#__BITS_PER_LONG
 32

	)

10 
	~<asm-gíîic/bô•îl⁄g.h
>

	@/usr/include/asm/sockios.h

1 
	~<asm-gíîic/sockios.h
>

	@/usr/include/asm/swab.h

1 #i‚de‡
_ASM_X86_SWAB_H


2 
	#_ASM_X86_SWAB_H


	)

4 
	~<löux/ty≥s.h
>

7 
__ölöe__
 
__u32
 
	$__¨ch_swab32
(
__u32
 
vÆ
)

9 #ifde‡
__i386__


10 #ifde‡
CONFIG_X86_BSWAP


11 
	`__asm__
("bsw≠ %0" : "Ù" (
vÆ
) : "0" (val));

13 
	`__asm__
("xchgb %b0,%h0\n\t"

16 : "=q" (
vÆ
)

17 : "0" (
vÆ
));

21 
	`__asm__
("bswapl %0"

22 : "Ù" (
vÆ
)

23 : "0" (
vÆ
));

25  
vÆ
;

26 
	}
}

27 
	#__¨ch_swab32
 
__¨ch_swab32


	)

29 
__ölöe__
 
__u64
 
	$__¨ch_swab64
(
__u64
 
vÆ
)

31 #ifde‡
__i386__


34 
__u32
 
a
;

35 
__u32
 
b
;

36 } 
s
;

37 
__u64
 
u
;

38 } 
v
;

39 
v
.
u
 = 
vÆ
;

40 #ifde‡
CONFIG_X86_BSWAP


41 
	`__asm__
("bswapl %0 ; bswapl %1 ; xchgl %0,%1"

42 : "Ù" (
v
.
s
.
a
), "Ù" (v.s.
b
)

43 : "0" (
v
.
s
.
a
), "1" (v.s.
b
));

45 
v
.
s
.
a
 = 
	`__¨ch_swab32
(v.s.a);

46 
v
.
s
.
b
 = 
	`__¨ch_swab32
(v.s.b);

47 
	`__asm__
("xchgl %0,%1"

48 : "Ù" (
v
.
s
.
a
), "Ù" (v.s.
b
)

49 : "0" (
v
.
s
.
a
), "1" (v.s.
b
));

51  
v
.
u
;

53 
	`__asm__
("bswapq %0"

54 : "Ù" (
vÆ
)

55 : "0" (
vÆ
));

56  
vÆ
;

58 
	}
}

59 
	#__¨ch_swab64
 
__¨ch_swab64


	)

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

64 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

65 
size_t
 
__ns1
), 
__wmemmove_chk
)

66 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

69 
__exã∫_Æways_ölöe
 
wch¨_t
 *

70 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

71 
size_t
 
__n
))

73 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

75 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

76  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

77 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

79 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

80  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

81 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

83  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

84 
	}
}

87 #ifde‡
__USE_GNU


88 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

89 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

90 
size_t
 
__ns1
Ë
__THROW
;

91 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

92 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

93 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

94 
size_t
 
__n
), 
wmemp˝y
);

95 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

96 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

97 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

98 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

99 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

102 
__exã∫_Æways_ölöe
 
wch¨_t
 *

103 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

104 
size_t
 
__n
))

106 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

108 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

109  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

110 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

112 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

113  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

114 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

116  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

117 
	}
}

121 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

122 
size_t
 
__ns
Ë
__THROW
;

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

124 
size_t
 
__n
), 
wmem£t
);

125 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

126 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

127 
size_t
 
__ns
), 
__wmem£t_chk
)

128 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

131 
__exã∫_Æways_ölöe
 
wch¨_t
 *

132 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__ª°ri˘
 
__s
, wch¨_à
__c
, 
size_t
 
__n
))

134 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

136 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

137  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

139 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

140  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

141 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

143  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

144 
	}
}

147 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

149 
size_t
 
__n
Ë
__THROW
;

150 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

151 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

152 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

154 
__exã∫_Æways_ölöe
 
wch¨_t
 *

155 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

157 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

158  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

159  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

160 
	}
}

163 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
,

164 
size_t
 
__de°Àn
Ë
__THROW
;

165 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
, (wch¨_à*
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__§c
),

167 
w˝˝y
);

169 
__exã∫_Æways_ölöe
 
wch¨_t
 *

170 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

172 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

173  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

174  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

175 
	}
}

178 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

179 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

180 
size_t
 
__de°Àn
Ë
__THROW
;

181 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

182 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

184 
size_t
 
__n
), 
wc¢˝y
);

185 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

186 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

187 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

188 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

189 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

192 
__exã∫_Æways_ölöe
 
wch¨_t
 *

193 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__exã∫_Æways_ölöe
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__exã∫_Æways_ölöe
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

265 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

266  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

267 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

268  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

269 
	}
}

272 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

273 
__Êag
, 
size_t
 
__s_Àn
,

274 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

275 
__THROW
 ;

277 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

278 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

279 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

280 
sw¥ötf
);

282 #ifde‡
__va_¨g_∑ck


283 
__exã∫_Æways_ölöe
 

284 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

285 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

287 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

288  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

289 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

290 
__fmt
, 
	`__va_¨g_∑ck
 ());

291  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

292 
	}
}

293 #ñi‡!
deföed
 
__˝lu•lus


295 
	#sw¥ötf
(
s
, 
n
, ...) \

296 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

297 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

298 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

299 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

302 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

303 
__Êag
, 
size_t
 
__s_Àn
,

304 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

305 
__gnuc_va_li°
 
__¨g
)

306 
__THROW
 ;

308 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

309 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

310 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

311 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

313 
__exã∫_Æways_ölöe
 

314 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

315 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

317 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

318  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

319 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

320  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

321 
	}
}

324 #i‡
__USE_FORTIFY_LEVEL
 > 1

326 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

328 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

330 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

331 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__gnuc_va_li°
 
__≠
);

333 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

336 #ifde‡
__va_¨g_∑ck


337 
__exã∫_Æways_ölöe
 

338 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

340  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

341 
	}
}

343 
__exã∫_Æways_ölöe
 

344 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

346  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

347 
	`__va_¨g_∑ck
 ());

348 
	}
}

349 #ñi‡!
deföed
 
__˝lu•lus


350 
	#w¥ötf
(...) \

351 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

352 
	#fw¥ötf
(
°ªam
, ...) \

353 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

356 
__exã∫_Æways_ölöe
 

357 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

359  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

360 
	}
}

362 
__exã∫_Æways_ölöe
 

363 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

364 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

366  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

367 
	}
}

371 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

372 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

373 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

374 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

375 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

376 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

377 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

378 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

379 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

382 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

383 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

385 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

387 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

388  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

389 
__n
, 
__°ªam
);

391 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

392  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

393 
__n
, 
__°ªam
);

395  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

396 
	}
}

398 #ifde‡
__USE_GNU


399 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

400 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

401 
__wur
;

402 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

403 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

404 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

405 
__wur
;

406 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

407 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

408 
__FILE
 *
__ª°ri˘
 
__°ªam
),

409 
__fgëws_u∆ocked_chk
)

410 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

413 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

414 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

416 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

418 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

419  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

420 
__n
, 
__°ªam
);

422 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

423  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

424 
__n
, 
__°ªam
);

426  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

427 
	}
}

431 
size_t
 
	$__w¸tomb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__p
,

432 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

433 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

434 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

437 
__exã∫_Æways_ölöe
 
__wur
 
size_t


438 
	`__NTH
 (
	$w¸tomb
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__ps
))

443 
	#__WCHAR_MB_LEN_MAX
 16

	)

444 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


447 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

448  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

449  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

450 
	}
}

453 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

454 
__c⁄°
 **
__ª°ri˘
 
__§c
,

455 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

456 
size_t
 
__d°Àn
Ë
__THROW
;

457 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

458 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

459 
__c⁄°
 **
__ª°ri˘
 
__§c
,

460 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

461 
mb§towcs
);

462 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

463 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

464 
__c⁄°
 **
__ª°ri˘
 
__§c
,

465 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

466 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

467 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

470 
__exã∫_Æways_ölöe
 
size_t


471 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

472 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

474 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

476 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

477  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

478 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

480 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

481  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

485 
	}
}

488 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

489 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

490 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

491 
size_t
 
__d°Àn
Ë
__THROW
;

492 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

493 (*
__ª°ri˘
 
__d°
,

494 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

495 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

496 
wc§tombs
);

497 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

498 (*
__ª°ri˘
 
__d°
,

499 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

500 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

501 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

502 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

504 
__exã∫_Æways_ölöe
 
size_t


505 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

506 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

508 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

510 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

511  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

513 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

514  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

517 
	}
}

520 #ifde‡
__USE_GNU


521 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

522 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

523 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

524 
size_t
 
__d°Àn
Ë
__THROW
;

525 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

526 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

527 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

528 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

529 
mb¢πowcs
);

530 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

531 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

532 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

533 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

534 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

535 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

538 
__exã∫_Æways_ölöe
 
size_t


539 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

540 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

542 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

544 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

545  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

546 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

548 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

549  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

553 
	}
}

556 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

557 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

558 
size_t
 
__nwc
, size_à
__Àn
,

559 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

560 
__THROW
;

561 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

562 (*
__ª°ri˘
 
__d°
,

563 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

564 
size_t
 
__nwc
, size_à
__Àn
,

565 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

566 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

567 (*
__ª°ri˘
 
__d°
,

568 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

569 
size_t
 
__nwc
, size_à
__Àn
,

570 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

571 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

572 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

574 
__exã∫_Æways_ölöe
 
size_t


575 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

576 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

578 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

580 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

581  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

582 
	`__bos
 (
__d°
));

584 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

585  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

589 
	}
}

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	#__√ed_sig£t_t


	)

29 
	~<sig«l.h
>

30 
	~<bôs/±hªadty≥s.h
>

31 
	~<bôs/£tjmp.h
>

32 
	~<bôs/w‹dsize.h
>

38 
	mPTHREAD_CREATE_JOINABLE
,

39 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

40 
	mPTHREAD_CREATE_DETACHED


41 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

48 
	mPTHREAD_MUTEX_TIMED_NP
,

49 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

50 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

51 
	mPTHREAD_MUTEX_ADAPTIVE_NP


52 #ifde‡
__USE_UNIX98


54 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

55 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

56 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

57 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


59 #ifde‡
__USE_GNU


61 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


66 #ifde‡
__USE_XOPEN2K


70 
	mPTHREAD_MUTEX_STALLED
,

71 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

72 
	mPTHREAD_MUTEX_ROBUST
,

73 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


78 #ifde‡
__USE_UNIX98


82 
	mPTHREAD_PRIO_NONE
,

83 
	mPTHREAD_PRIO_INHERIT
,

84 
	mPTHREAD_PRIO_PROTECT


90 #i‡
__WORDSIZE
 == 64

91 
	#PTHREAD_MUTEX_INITIALIZER
 \

92 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

93 #ifde‡
__USE_GNU


94 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

98 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

99 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

102 
	#PTHREAD_MUTEX_INITIALIZER
 \

103 { { 0, 0, 0, 0, 0, { 0 } } }

	)

104 #ifde‡
__USE_GNU


105 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

109 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

110 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

116 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


119 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

120 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

121 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

122 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


126 
	#PTHREAD_RWLOCK_INITIALIZER
 \

127 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

128 #ifde‡
__USE_GNU


129 #i‡
__WORDSIZE
 == 64

130 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

132 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

134 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


135 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

136 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

137 0, 0, 0, 0 } }

	)

139 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

140 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

141 0 } }

	)

151 
	mPTHREAD_INHERIT_SCHED
,

152 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

153 
	mPTHREAD_EXPLICIT_SCHED


154 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

161 
	mPTHREAD_SCOPE_SYSTEM
,

162 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

163 
	mPTHREAD_SCOPE_PROCESS


164 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

171 
	mPTHREAD_PROCESS_PRIVATE
,

172 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

173 
	mPTHREAD_PROCESS_SHARED


174 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

180 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

184 
	s_±hªad_˛ónup_buf„r


186 (*
	m__routöe
) (*);

187 *
	m__¨g
;

188 
	m__ˇn˚…y≥
;

189 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

195 
	mPTHREAD_CANCEL_ENABLE
,

196 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

197 
	mPTHREAD_CANCEL_DISABLE


198 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

202 
	mPTHREAD_CANCEL_DEFERRED
,

203 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

204 
	mPTHREAD_CANCEL_ASYNCHRONOUS


205 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

207 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

211 
	#PTHREAD_ONCE_INIT
 0

	)

214 #ifde‡
__USE_XOPEN2K


218 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

222 
__BEGIN_DECLS


227 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

228 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

229 *(*
__°¨t_routöe
) (*),

230 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

236 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

244 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

246 #ifde‡
__USE_GNU


249 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

257 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

258 
__c⁄°
 
time•ec
 *
__ab°ime
);

265 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

269 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

272 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

280 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

283 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

284 
__THROW
 
	`__n⁄nuŒ
 ((1));

287 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

288 *
__dëach°©e
)

289 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

292 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

293 
__dëach°©e
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

298 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

299 
size_t
 *
__gu¨dsize
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

303 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

304 
size_t
 
__gu¨dsize
)

305 
__THROW
 
	`__n⁄nuŒ
 ((1));

309 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


310 
__©å
,

311 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

315 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

316 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


317 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

320 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


321 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

322 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

325 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

326 
__THROW
 
	`__n⁄nuŒ
 ((1));

329 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


330 
__©å
, *
__ª°ri˘
 
__öhîô
)

331 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

334 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

335 
__öhîô
)

336 
__THROW
 
	`__n⁄nuŒ
 ((1));

340 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

341 *
__ª°ri˘
 
__sc›e
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

345 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

346 
__THROW
 
	`__n⁄nuŒ
 ((1));

349 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


350 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

357 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

358 *
__°ackaddr
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

362 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


363 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

364 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

369 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

370 
size_t
 
__°acksize
)

371 
__THROW
 
	`__n⁄nuŒ
 ((1));

373 #ifde‡
__USE_XOPEN2K


375 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

376 **
__ª°ri˘
 
__°ackaddr
,

377 
size_t
 *
__ª°ri˘
 
__°acksize
)

378 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

383 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

384 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

387 #ifde‡
__USE_GNU


390 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

391 
size_t
 
__˝u£tsize
,

392 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

397 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

398 
size_t
 
__˝u£tsize
,

399 
˝u_£t_t
 *
__˝u£t
)

400 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

406 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

407 
__THROW
 
	`__n⁄nuŒ
 ((2));

415 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

416 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

417 
__THROW
 
	`__n⁄nuŒ
 ((3));

420 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

421 *
__ª°ri˘
 
__pﬁicy
,

422 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

423 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

426 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

427 
__THROW
;

430 #ifde‡
__USE_UNIX98


432 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

435 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

438 #ifde‡
__USE_GNU


443 
	$±hªad_yõld
 (Ë
__THROW
;

448 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

449 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

450 
__THROW
 
	`__n⁄nuŒ
 ((3));

453 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

454 
˝u_£t_t
 *
__˝u£t
)

455 
__THROW
 
	`__n⁄nuŒ
 ((3));

468 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

469 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

480 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

484 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

487 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

492 
	`±hªad_ã°ˇn˚l
 ();

501 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

502 
__mask_was_ßved
;

503 } 
__ˇn˚l_jmp_buf
[1];

504 *
__∑d
[4];

505 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

508 #i‚de‡
__˛ónup_f˘_©åibuã


509 
	#__˛ónup_f˘_©åibuã


	)

514 
	s__±hªad_˛ónup_‰ame


516 (*
__ˇn˚l_routöe
) (*);

517 *
__ˇn˚l_¨g
;

518 
__do_ô
;

519 
__ˇn˚l_ty≥
;

522 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


523 #ifde‡
__˝lu•lus


525 ˛as†
	c__±hªad_˛ónup_˛ass


527 (*
__ˇn˚l_routöe
) (*);

528 *
__ˇn˚l_¨g
;

529 
__do_ô
;

530 
__ˇn˚l_ty≥
;

532 
public
:

533 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

534 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

535 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

536 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

537 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

538 &
__ˇn˚l_ty≥
); 
	}
}

539 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

549 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

551 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

555 
	#±hªad_˛ónup_p›
(
execuã
) \

556 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

557 } 0)

	)

559 #ifde‡
__USE_GNU


563 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

565 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

566 
__˛‰ame
.
	`__de„r
 ()

	)

571 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

572 
__˛‰ame
.
	`__ª°‹e
 (); \

573 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

574 } 0)

	)

581 
__exã∫_ölöe
 

582 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

584 i‡(
__‰ame
->
__do_ô
)

585 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

586 
	}
}

595 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

597 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

598 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

599 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

600 .
__do_ô
 = 1 };

	)

604 
	#±hªad_˛ónup_p›
(
execuã
) \

605 
__˛‰ame
.
__do_ô
 = (
execuã
); \

606 } 0)

	)

608 #ifde‡
__USE_GNU


612 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

614 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

615 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

616 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

617 .
__do_ô
 = 1 }; \

618 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

619 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

624 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

625 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

626 
__˛‰ame
.
__do_ô
 = (
execuã
); \

627 } 0)

	)

638 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

640 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

641 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

642 *
__ˇn˚l_¨g
 = (
¨g
); \

643 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

644 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

645 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

647 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

648 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

652 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

653 dÿ{

	)

654 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

655 
__˛ónup_f˘_©åibuã
;

659 
	#±hªad_˛ónup_p›
(
execuã
) \

662 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 i‡(
execuã
) \

664 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

665 } 0)

	)

666 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

667 
__˛ónup_f˘_©åibuã
;

669 #ifde‡
__USE_GNU


673 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

675 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

676 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

677 *
__ˇn˚l_¨g
 = (
¨g
); \

678 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

679 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

680 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

682 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

683 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

687 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

688 dÿ{

	)

689 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

690 
__˛ónup_f˘_©åibuã
;

695 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

698 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

699 i‡(
execuã
) \

700 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

701 
	}
} 0)

	)

702 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

703 
__˛ónup_f˘_©åibuã
;

707 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

708 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

709 #i‚de‡
SHARED


710 
	`__©åibuã__
 ((
__wók__
))

716 
__jmp_buf_èg
;

717 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

723 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

724 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1));

728 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

729 
__THROW
 
	`__n⁄nuŒ
 ((1));

732 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

733 
__THROW
 
	`__n⁄nuŒ
 ((1));

736 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

737 
__THROW
 
	`__n⁄nuŒ
 ((1));

739 #ifde‡
__USE_XOPEN2K


741 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

742 
__c⁄°
 
time•ec
 *
__ª°ri˘


743 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

747 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

748 
__THROW
 
	`__n⁄nuŒ
 ((1));

751 #ifde‡
__USE_UNIX98


753 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

754 
__ª°ri˘
 
__muãx
,

755 *
__ª°ri˘
 
__¥io˚ûög
)

756 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

760 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

761 
__¥io˚ûög
,

762 *
__ª°ri˘
 
__ﬁd_˚ûög
)

763 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

767 #ifde‡
__USE_XOPEN2K8


769 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

770 
__THROW
 
	`__n⁄nuŒ
 ((1));

771 #ifde‡
__USE_GNU


772 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

773 
__THROW
 
	`__n⁄nuŒ
 ((1));

782 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

783 
__THROW
 
	`__n⁄nuŒ
 ((1));

786 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

787 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

791 
__ª°ri˘
 
__©å
,

792 *
__ª°ri˘
 
__psh¨ed
)

793 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

796 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

797 
__psh¨ed
)

798 
__THROW
 
	`__n⁄nuŒ
 ((1));

800 #ifde‡
__USE_UNIX98


802 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


803 
__©å
, *
__ª°ri˘
 
__köd
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

809 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1));

813 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

814 
__ª°ri˘
 
__©å
,

815 *
__ª°ri˘
 
__¥Ÿocﬁ
)

816 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

820 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

821 
__¥Ÿocﬁ
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

825 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

826 
__ª°ri˘
 
__©å
,

827 *
__ª°ri˘
 
__¥io˚ûög
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__¥io˚ûög
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

836 #ifde‡
__USE_XOPEN2K


838 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

839 *
__robu°√ss
)

840 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

841 #ifde‡
__USE_GNU


842 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

843 *
__robu°√ss
)

844 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

848 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

849 
__robu°√ss
)

850 
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_GNU


852 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

853 
__robu°√ss
)

854 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


864 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

865 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


866 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

869 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

870 
__THROW
 
	`__n⁄nuŒ
 ((1));

873 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

874 
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

880 #ifde‡
__USE_XOPEN2K


882 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

883 
__c⁄°
 
time•ec
 *
__ª°ri˘


884 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

888 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

892 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1));

895 #ifde‡
__USE_XOPEN2K


897 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

898 
__c⁄°
 
time•ec
 *
__ª°ri˘


899 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

903 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

904 
__THROW
 
	`__n⁄nuŒ
 ((1));

910 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

911 
__THROW
 
	`__n⁄nuŒ
 ((1));

914 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

915 
__THROW
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

919 
__ª°ri˘
 
__©å
,

920 *
__ª°ri˘
 
__psh¨ed
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

924 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

925 
__psh¨ed
)

926 
__THROW
 
	`__n⁄nuŒ
 ((1));

929 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

930 
__ª°ri˘
 
__©å
,

931 *
__ª°ri˘
 
__¥ef
)

932 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

935 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

936 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

945 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


946 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

954 
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

966 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

967 
	`__n⁄nuŒ
 ((1, 2));

976 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

977 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

978 
__c⁄°
 
time•ec
 *
__ª°ri˘


979 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

984 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

985 
__THROW
 
	`__n⁄nuŒ
 ((1));

988 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

989 
__THROW
 
	`__n⁄nuŒ
 ((1));

992 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

993 
__ª°ri˘
 
__©å
,

994 *
__ª°ri˘
 
__psh¨ed
)

995 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

998 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

999 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1001 #ifde‡
__USE_XOPEN2K


1003 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1004 
__ª°ri˘
 
__©å
,

1005 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1009 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1010 
__˛ockid_t
 
__˛ock_id
)

1011 
__THROW
 
	`__n⁄nuŒ
 ((1));

1015 #ifde‡
__USE_XOPEN2K


1020 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1021 
__THROW
 
	`__n⁄nuŒ
 ((1));

1024 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1025 
__THROW
 
	`__n⁄nuŒ
 ((1));

1028 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1045 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1046 
__©å
, 
__cou¡
)

1047 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1051 
__THROW
 
	`__n⁄nuŒ
 ((1));

1054 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1060 
__THROW
 
	`__n⁄nuŒ
 ((1));

1063 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1064 
__THROW
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1068 
__ª°ri˘
 
__©å
,

1069 *
__ª°ri˘
 
__psh¨ed
)

1070 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1073 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1074 
__psh¨ed
)

1075 
__THROW
 
	`__n⁄nuŒ
 ((1));

1087 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1088 (*
__de°r_fun˘i⁄
) (*))

1089 
__THROW
 
	`__n⁄nuŒ
 ((1));

1092 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1095 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1098 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1099 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1102 #ifde‡
__USE_XOPEN2K


1104 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1105 
__˛ockid_t
 *
__˛ock_id
)

1106 
__THROW
 
	`__n⁄nuŒ
 ((2));

1121 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1122 (*
__∑ª¡
) (),

1123 (*
__chûd
Ë()Ë
__THROW
;

1126 #ifde‡
__USE_EXTERN_INLINES


1128 
__exã∫_ölöe
 

1129 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1131  
__thªad1
 =
__thªad2
;

1132 
	}
}

1135 
	g__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<°ddef.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/asm-generic/bitsperlong.h

1 #i‚de‡
__ASM_GENERIC_BITS_PER_LONG


2 
	#__ASM_GENERIC_BITS_PER_LONG


	)

11 #i‚de‡
__BITS_PER_LONG


12 
	#__BITS_PER_LONG
 32

	)

	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/asm-generic/sockios.h

1 #i‚de‡
__ASM_GENERIC_SOCKIOS_H


2 
	#__ASM_GENERIC_SOCKIOS_H


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

11 
	#SIOCGSTAMPNS
 0x8907

	)

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

35 
	~<bôs/sched.h
>

37 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

40 
__BEGIN_DECLS


43 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

44 
__THROW
;

47 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

50 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

51 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

54 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

57 
	$sched_yõld
 (Ë
__THROW
;

60 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

63 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

66 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

69 #ifde‡
__USE_GNU


71 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

72 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

73 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

74 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

75 
˝u£ç
)

	)

76 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

77 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

80 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

81 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

82 
˝u£ç
)

	)

83 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

84 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

86 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

87 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

88 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

89 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

91 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

92 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

93 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

94 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

95 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

96 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

97 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

104 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

105 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

106 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

110 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

111 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

114 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

115 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

118 
__END_DECLS


	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

37 #ifde‡
__USE_MISC


39 
	#CSIGNAL
 0x000000f‡

	)

40 
	#CLONE_VM
 0x00000100

	)

41 
	#CLONE_FS
 0x00000200

	)

42 
	#CLONE_FILES
 0x00000400

	)

43 
	#CLONE_SIGHAND
 0x00000800

	)

44 
	#CLONE_PTRACE
 0x00002000

	)

45 
	#CLONE_VFORK
 0x00004000

	)

47 
	#CLONE_PARENT
 0x00008000

	)

49 
	#CLONE_THREAD
 0x00010000

	)

50 
	#CLONE_NEWNS
 0x00020000

	)

51 
	#CLONE_SYSVSEM
 0x00040000

	)

52 
	#CLONE_SETTLS
 0x00080000

	)

53 
	#CLONE_PARENT_SETTID
 0x00100000

	)

55 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

57 
	#CLONE_DETACHED
 0x00400000

	)

58 
	#CLONE_UNTRACED
 0x00800000

	)

60 
	#CLONE_CHILD_SETTID
 0x01000000

	)

62 
	#CLONE_NEWUTS
 0x04000000

	)

63 
	#CLONE_NEWIPC
 0x08000000

	)

64 
	#CLONE_NEWUSER
 0x10000000

	)

65 
	#CLONE_NEWPID
 0x20000000

	)

66 
	#CLONE_NEWNET
 0x40000000

	)

67 
	#CLONE_IO
 0x80000000

	)

71 
	ssched_∑øm


73 
	m__sched_¥i‹ôy
;

76 
	g__BEGIN_DECLS


78 #ifde‡
__USE_MISC


80 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

81 
__Êags
, *
__¨g
, ...Ë
__THROW
;

84 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

87 
	$sched_gë˝u
 (Ë
__THROW
;

90 
__END_DECLS


94 #i‡!
deföed
 
__deföed_sched∑øm
 \

95 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

96 
	#__deföed_sched∑øm
 1

	)

98 
	s__sched_∑øm


100 
__sched_¥i‹ôy
;

102 #unde‡
__√ed_sched∑øm


106 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


107 
	#__˝u_£t_t_deföed


	)

109 
	#__CPU_SETSIZE
 1024

	)

110 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

113 
	t__˝u_mask
;

116 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

117 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

122 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

123 } 
	t˝u_£t_t
;

126 #i‡
	`__GNUC_PREREQ
 (2, 91)

127 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

128 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

130 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

132 
size_t
 
__i
; \

133 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

134 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

135 
__i
 = 0; __ò< 
__imax
; ++__i) \

136 
__bôs
[
__i
] = 0; \

137 
	}
} 0)

	)

139 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

140 (
__exãnsi⁄__
 \

141 ({ 
size_t
 
__˝u
 = (
˝u
); \

142 
__˝u
 < 8 * (
£tsize
) \

143 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

144 |
	`__CPUMASK
 (
__˝u
)) \

145 : 0; }))

	)

146 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

147 (
__exãnsi⁄__
 \

148 ({ 
size_t
 
__˝u
 = (
˝u
); \

149 
__˝u
 < 8 * (
£tsize
) \

150 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

151 &~
	`__CPUMASK
 (
__˝u
)) \

152 : 0; }))

	)

153 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

154 (
__exãnsi⁄__
 \

155 ({ 
size_t
 
__˝u
 = (
˝u
); \

156 
__˝u
 < 8 * (
£tsize
) \

157 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

158 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

159 : 0; }))

	)

161 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

162 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

164 #i‡
__GNUC_PREREQ
 (2, 91)

165 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

166 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

168 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

169 (
__exãnsi⁄__
 \

170 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

171 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

172 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

173 
size_t
 
__i
; \

174 
__i
 = 0; __ò< 
__imax
; ++__i) \

175 i‡(
__bôs
[
__i
] != __bits[__i]) \

177 
__i
 =
__imax
; }))

	)

180 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

181 (
__exãnsi⁄__
 \

182 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

183 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

184 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

185 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

186 
size_t
 
__i
; \

187 
__i
 = 0; __ò< 
__imax
; ++__i) \

188 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

189 
__de°
; }))

	)

191 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

192 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

193 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

194 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

196 
__BEGIN_DECLS


198 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

199 
__THROW
;

200 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

201 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

203 
__END_DECLS


	@
1
.
1
/usr/include
321
7586
contrib/base64/base64rev-gen.c
contrib/halog/fgets2-64.c
contrib/halog/fgets2.c
contrib/halog/halog.c
ebtree/compiler.h
ebtree/eb32tree.c
ebtree/eb32tree.h
ebtree/eb64tree.c
ebtree/eb64tree.h
ebtree/ebimtree.c
ebtree/ebimtree.h
ebtree/ebistree.c
ebtree/ebistree.h
ebtree/ebmbtree.c
ebtree/ebmbtree.h
ebtree/ebpttree.c
ebtree/ebpttree.h
ebtree/ebsttree.c
ebtree/ebsttree.h
ebtree/ebtree.c
ebtree/ebtree.h
include/common/appsession.h
include/common/base64.h
include/common/cfgparse.h
include/common/compat.h
include/common/compiler.h
include/common/config.h
include/common/debug.h
include/common/defaults.h
include/common/epoll.h
include/common/errors.h
include/common/memory.h
include/common/mini-clist.h
include/common/rbtree.h
include/common/regex.h
include/common/sessionhash.h
include/common/standard.h
include/common/template.h
include/common/ticks.h
include/common/time.h
include/common/tools.h
include/common/uri_auth.h
include/common/version.h
include/import/ip_tproxy.h
include/proto/acl.h
include/proto/auth.h
include/proto/backend.h
include/proto/buffers.h
include/proto/checks.h
include/proto/client.h
include/proto/cttproxy.h
include/proto/dumpstats.h
include/proto/fd.h
include/proto/freq_ctr.h
include/proto/hdr_idx.h
include/proto/httperr.h
include/proto/lb_chash.h
include/proto/lb_fwlc.h
include/proto/lb_fwrr.h
include/proto/lb_map.h
include/proto/log.h
include/proto/pattern.h
include/proto/pipe.h
include/proto/port_range.h
include/proto/proto_http.h
include/proto/proto_tcp.h
include/proto/proto_uxst.h
include/proto/protocols.h
include/proto/proxy.h
include/proto/queue.h
include/proto/server.h
include/proto/session.h
include/proto/signal.h
include/proto/stick_table.h
include/proto/stream_interface.h
include/proto/stream_sock.h
include/proto/task.h
include/proto/template.h
include/types/acl.h
include/types/auth.h
include/types/backend.h
include/types/buffers.h
include/types/capture.h
include/types/checks.h
include/types/counters.h
include/types/fd.h
include/types/freq_ctr.h
include/types/global.h
include/types/hdr_idx.h
include/types/httperr.h
include/types/lb_chash.h
include/types/lb_fwlc.h
include/types/lb_fwrr.h
include/types/lb_map.h
include/types/log.h
include/types/pattern.h
include/types/pipe.h
include/types/port_range.h
include/types/proto_http.h
include/types/proto_tcp.h
include/types/protocols.h
include/types/proxy.h
include/types/queue.h
include/types/server.h
include/types/session.h
include/types/signal.h
include/types/stick_table.h
include/types/stream_interface.h
include/types/task.h
include/types/template.h
src/acl.c
src/appsession.c
src/auth.c
src/backend.c
src/base64.c
src/buffers.c
src/cfgparse.c
src/checks.c
src/client.c
src/cttproxy.c
src/dumpstats.c
src/ev_epoll.c
src/ev_kqueue.c
src/ev_poll.c
src/ev_select.c
src/ev_sepoll.c
src/fd.c
src/freq_ctr.c
src/haproxy.c
src/hdr_idx.c
src/lb_chash.c
src/lb_fwlc.c
src/lb_fwrr.c
src/lb_map.c
src/log.c
src/memory.c
src/pattern.c
src/pipe.c
src/proto_http.c
src/proto_tcp.c
src/proto_uxst.c
src/protocols.c
src/proxy.c
src/queue.c
src/rbtree.c
src/regex.c
src/server.c
src/session.c
src/sessionhash.c
src/signal.c
src/standard.c
src/stick_table.c
src/stream_interface.c
src/stream_sock.c
src/task.c
src/time.c
src/uri_auth.c
tests/filltab25.c
tests/ip-hash.c
tests/reset.c
tests/sessionhash_test.c
tests/test.c
tests/test_hashes.c
tests/test_pools.c
tests/testinet.c
tests/uri_hash.c
/usr/include/arpa/inet.h
/usr/include/assert.h
/usr/include/crypt.h
/usr/include/ctype.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/grp.h
/usr/include/limits.h
/usr/include/linux/in.h
/usr/include/linux/netfilter_ipv4.h
/usr/include/linux/netfilter_ipv6.h
/usr/include/linux/types.h
/usr/include/linux/unistd.h
/usr/include/math.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/netinet/tcp.h
/usr/include/pwd.h
/usr/include/regex.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/sys/epoll.h
/usr/include/sys/param.h
/usr/include/sys/poll.h
/usr/include/sys/resource.h
/usr/include/sys/socket.h
/usr/include/sys/stat.h
/usr/include/sys/syscall.h
/usr/include/sys/time.h
/usr/include/sys/types.h
/usr/include/sys/un.h
/usr/include/syslog.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/asm/byteorder.h
/usr/include/asm/types.h
/usr/include/asm/unistd.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/in.h
/usr/include/bits/inf.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/nan.h
/usr/include/bits/netdb.h
/usr/include/bits/poll.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/resource.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/sockaddr.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/syscall.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/gnu/option-groups.h
/usr/include/libio.h
/usr/include/linux/limits.h
/usr/include/linux/netfilter.h
/usr/include/linux/param.h
/usr/include/linux/posix_types.h
/usr/include/linux/socket.h
/usr/include/rpc/netdb.h
/usr/include/stdint.h
/usr/include/sys/cdefs.h
/usr/include/sys/select.h
/usr/include/sys/syslog.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ucontext.h
/usr/include/sys/uio.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm-generic/types.h
/usr/include/asm/param.h
/usr/include/asm/posix_types.h
/usr/include/asm/socket.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/predefs.h
/usr/include/bits/select.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/syslog-ldbl.h
/usr/include/bits/syslog-path.h
/usr/include/bits/syslog.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/bits/wchar.h
/usr/include/gnu/stubs.h
/usr/include/linux/byteorder/little_endian.h
/usr/include/linux/errno.h
/usr/include/linux/stddef.h
/usr/include/asm-generic/int-ll64.h
/usr/include/asm-generic/param.h
/usr/include/asm-generic/socket.h
/usr/include/asm/errno.h
/usr/include/bits/libc-lock.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/linux/swab.h
/usr/include/wchar.h
/usr/include/asm-generic/errno.h
/usr/include/asm/bitsperlong.h
/usr/include/asm/sockios.h
/usr/include/asm/swab.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/asm-generic/bitsperlong.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm-generic/sockios.h
/usr/include/bits/setjmp.h
/usr/include/sched.h
/usr/include/bits/sched.h
